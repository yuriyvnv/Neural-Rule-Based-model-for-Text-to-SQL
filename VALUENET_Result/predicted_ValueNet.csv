SQL
SELECT count( *) FROM Person        
SELECT business.name FROM business JOIN category ON business.business_id = category.business_id WHERE business.rating > 1 and category.category_name = '1'       
SELECT river.traverse FROM river WHERE river.river_name = '1'       
SELECT count( *) FROM circuits        
SELECT ref_hotel_star_ratings.star_rating_description FROM Ref_Hotel_Star_Ratings JOIN Hotels ON ref_hotel_star_ratings.star_rating_code = hotels.star_rating_code WHERE hotels.price_range > 10000       
SELECT person.name FROM Person     ORDER BY person.age DESC   
"SELECT list.FirstName, list.LastName FROM list JOIN teachers WHERE teachers.FirstName = 'MARROTTE' and teachers.LastName = 'KIRK'       "
SELECT artist.Name FROM Artist JOIN Album ON artist.ArtistId = album.ArtistId WHERE album.Title = 'Balls to the Wall'       
SELECT files.f_id FROM files WHERE files.formats = 'mp4'      UNION SELECT song.f_id FROM song WHERE song.resolution > 720        
SELECT count( *) FROM venue        
"SELECT staff.staff_name, staff.staff_id FROM Staff JOIN Fault_Log ON staff.staff_id = T2.recorded_by_staff_id        EXCEPT SELECT staff.staff_name, staff.staff_id FROM Staff JOIN Engineer_Visits ON staff.staff_id = T4.contact_staff_id        "
"SELECT accounts.Statement_ID, statements.Statement_Details FROM Accounts JOIN Statements ON accounts.Statement_ID = statements.Statement_ID  GROUP BY accounts.Statement_ID  ORDER BY count( *) DESC LIMIT 1    "
SELECT count( *) FROM gymnast        
SELECT customers.customer_name FROM Customers JOIN Customer_Orders ON customers.customer_id = customer_orders.customer_id WHERE customer_orders.shipping_method_code = 'FedEx' and customer_orders.order_status_code = 'Paid'       
SELECT sum( salary.salary) FROM salary JOIN player WHERE player.name_first = 'Len' and player.name_last = 'Barker' and salary.year between 1985 AND 1990       
SELECT documents.document_type_code FROM Documents  GROUP BY documents.document_type_code HAVING count( *) > 4     
"SELECT student.Major, avg( student.Age), min( student.Age), max( student.Age) FROM Student  GROUP BY student.Major      "
SELECT courses.course_name FROM Courses JOIN Course_Authors_and_Tutors ON courses.author_id = course_authors_and_tutors.author_id WHERE course_authors_and_tutors.personal_name = 'Julio'       
SELECT airports.name FROM airports WHERE airports.elevation between -50 AND 50       
"SELECT player_attributes.preferred_foot, count( *) FROM Player_Attributes JOIN Player ON player_attributes.player_api_id = player.player_api_id WHERE player_attributes.overall_rating > 80 GROUP BY player_attributes.preferred_foot      "
"SELECT customers.customer_name, customers.payment_method FROM Customers JOIN Mailshot_Customers ON customers.customer_id = mailshot_customers.customer_id WHERE mailshot_customers.outcome_code = 'Order'     INTERSECT SELECT customers.customer_name, customers.payment_method FROM Customers JOIN Mailshot_Customers ON customers.customer_id = mailshot_customers.customer_id WHERE mailshot_customers.outcome_code = 'No Response'         "
SELECT count( *) FROM perpetrator        
SELECT school.School_name FROM School JOIN endowment ON school.School_id = endowment.School_id WHERE endowment.amount > 8.5 GROUP BY school.School_name HAVING count( *) > 1     
SELECT state.state_name FROM state WHERE state.density = (SELECT max( state.density) FROM state        )       
SELECT documents.Document_ID FROM Documents JOIN Documents_with_Expenses ON documents.Document_ID = T2.Document_ID WHERE documents.Document_Name like '%s%'       
SELECT count( *) FROM venue        
"SELECT customers_cards.customer_id, customers.customer_first_name, customers.customer_last_name FROM Customers JOIN Customers_Cards  GROUP BY customers.customer_id HAVING count( *) >= 2     "
SELECT match_season.Position FROM match_season JOIN team ON match_season.Team = team.Team_id  GROUP BY match_season.Position  ORDER BY count( *) DESC LIMIT 1    
"SELECT airports.name, airports.city, routes.dst_apid FROM airports JOIN routes ON airports.apid = routes.src_apid  GROUP BY routes.src_apid  ORDER BY count( *) DESC LIMIT 1    "
SELECT count( *) FROM Department_Stores JOIN Department_Store_Chain ON department_stores.dept_store_chain_id = department_store_chain.dept_store_chain_id WHERE department_store_chain.dept_store_chain_name = 'South'       
SELECT DISTINCT paper_key_phrase.paperId FROM paperKeyphrase JOIN keyphrase ON paper_key_phrase.keyphraseId = key_phrase.keyphraseId JOIN paperDataset JOIN dataset WHERE dataset.datasetName = 'YAGO' and key_phrase.keyphraseName = 'Semantic Data'       
SELECT count( *) FROM Customers        
"SELECT building.Name, building.Street_address, building.Floors FROM building     ORDER BY building.Floors ASC   "
SELECT DISTINCT order_items.product_id FROM Order_Items JOIN Orders ON order_items.order_id = orders.order_id WHERE orders.date_order_placed >= '1975-01-01' and orders.date_order_placed <= '1976-01-01'       
SELECT course.title FROM course WHERE course.dept_name = 'Statistics'     INTERSECT SELECT course.title FROM course WHERE course.dept_name = 'Psychology'         
SELECT sum( checkin.count) FROM checkin JOIN business ON checkin.business_id = business.business_id JOIN category ON business.business_id = category.business_id WHERE business.city = '1' and category.category_name = '1' and category.category_name = '1' and checkin.day = '1'       
"SELECT instructor.name, instructor.salary FROM instructor JOIN department ON instructor.dept_name = department.dept_name JOIN student ON department.dept_name = student.dept_name WHERE student.dept_name = 'History'       "
SELECT student.Major FROM Student WHERE student.Sex = 'M'       
SELECT DISTINCT count(DISTINCT songs.Title) FROM Songs JOIN Vocals ON songs.SongId = vocals.SongId WHERE vocals.Type = '1'       
"SELECT band.Firstname, band.Lastname FROM Band JOIN Performance ON band.Id = performance.Bandmate JOIN Songs ON performance.SongId = songs.SongId WHERE songs.Title = '1' and performance.StagePosition = '1'       "
"SELECT physician.Name, physician.Position FROM Physician JOIN Department ON physician.EmployeeID = department.Head  GROUP BY department.Head  ORDER BY count( department.DepartmentID) ASC LIMIT 1    "
SELECT DISTINCT weather.zip_code FROM weather        EXCEPT SELECT DISTINCT weather.zip_code FROM weather WHERE weather.max_dew_point_f >= 70       
SELECT count( *) FROM COURSE JOIN DEPARTMENT ON course.DEPT_CODE = department.DEPT_CODE WHERE department.DEPT_NAME = '1'       
SELECT airport.name FROM airport WHERE airport.name like '%international%'       
SELECT representative.Lifespan FROM representative JOIN election ON representative.Representative_ID = election.Representative_ID     ORDER BY election.Vote_Percent DESC   
"SELECT movie.title, avg( rating.stars) FROM Movie JOIN Rating ON movie.mID = rating.mID  GROUP BY movie.title  ORDER BY avg( rating.stars) ASC LIMIT 1    "
SELECT DISTINCT count(DISTINCT writes.paperId) FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
SELECT orders.order_id FROM Orders    ORDER BY orders.date_order_placed DESC LIMIT 1    
SELECT student.Fname FROM Student WHERE student.city_code = 'PHL' and student.Age between 20 AND 25       
SELECT river.traverse FROM river WHERE river.river_name = '1'       
SELECT course.course_id FROM course        EXCEPT SELECT prerequisite.course_id FROM prereq        
SELECT has_allergy.StuID FROM Has_Allergy JOIN Student ON has_allergy.StuID = student.StuID  GROUP BY has_allergy.StuID HAVING count( *) >= 2     
SELECT people.Party FROM people    ORDER BY people.Age ASC LIMIT 1    
SELECT count( *) FROM Student JOIN Visits_Restaurant ON student.StuID = Visits_Restaurant.StuID JOIN Restaurant ON Visits_Restaurant.ResID = restaurant.ResID WHERE student.Fname = 'Linda' and student.LName = 'Smith' and restaurant.ResName = 'Subway'       
SELECT country.Official_native_language FROM country WHERE country.Official_native_language like '%English%'       
SELECT railway.Builder FROM railway  GROUP BY railway.Builder  ORDER BY count( *) DESC LIMIT 1    
SELECT count( *) FROM Club WHERE club.ClubLocation = 'HHH'       
"SELECT avg( wine.Price), avg( wine.Cases) FROM wine WHERE wine.Year = 2009 and wine.Grape = 'Zinfandel'       "
"SELECT medicine.name, medicine.Trade_Name FROM medicine JOIN medicine_enzyme_interaction ON medicine.id = medicine_enzyme_interaction.medicine_id WHERE medicine_enzyme_interaction.interaction_type = 'inhibitor'     INTERSECT SELECT medicine.name, medicine.Trade_Name FROM medicine JOIN medicine_enzyme_interaction ON medicine.id = medicine_enzyme_interaction.medicine_id WHERE medicine_enzyme_interaction.interaction_type = 'activitor'         "
"SELECT college.name_full, college.college_id FROM college JOIN player_college ON college.college_id = T3.college_id  GROUP BY T3.college_id  ORDER BY count( *) DESC LIMIT 1    "
"SELECT jobs.JOB_TITLE, jobs.MAX_SALARY FROM jobs WHERE jobs.MAX_SALARY between 12000 AND 18000       "
SELECT hosting_city.Year FROM hosting_city JOIN city ON hosting_city.Host_City = city.City_ID WHERE city.City = 'Taizhou ( Zhejiang )'       
SELECT count( *) FROM storm WHERE storm.Number_Deaths > 1       
"SELECT flight.flno, flight.origin, flight.destination FROM flight     ORDER BY flight.origin ASC   "
SELECT sum( order_items.Order_Quantity) FROM Order_Items JOIN Products ON order_items.Product_ID = products.Product_ID WHERE products.Product_Name = 'photo'       
"SELECT documents.Document_Name, documents.Document_ID FROM Documents WHERE documents.Document_Type_Code = 'BK'       "
SELECT region.Region_name FROM region JOIN affected_region ON region.Region_id = T2.Region_id  GROUP BY region.Region_name HAVING count( *) >= 2     
SELECT DISTINCT count(DISTINCT movie.title) FROM movie JOIN keyword JOIN tags WHERE keyword.keyword = '1' and movie.release_year = 1       
SELECT apartment_facilities.facility_code FROM Apartment_Facilities JOIN Apartments ON apartment_facilities.apt_id = apartments.apt_id WHERE apartments.bedroom_count > 4       
SELECT albums.title FROM albums JOIN artists ON albums.artist_id = sqlite_sequence.id WHERE sqlite_sequence.name = 'Aerosmith'       
SELECT weather.cloud_cover FROM weather WHERE weather.zip_code = 94107 GROUP BY weather.cloud_cover  ORDER BY count( *) DESC LIMIT 1    
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
SELECT city.City FROM city JOIN temperature ON city.City_ID = temperature.City_ID WHERE temperature.Mar < 1     INTERSECT SELECT city.City FROM city JOIN hosting_city ON city.City_ID = T4.Host_City          
SELECT DISTINCT count(DISTINCT project_staff.role_code) FROM Project_Staff        
"SELECT products.product_type_code, max( products.product_price), min( products.product_price) FROM Products  GROUP BY products.product_type_code      "
SELECT election.Committee FROM election JOIN party ON election.Party = party.Party_ID WHERE party.Party = 'Democratic'       
SELECT city.GDP FROM city    ORDER BY city.Regional_Population DESC LIMIT 1    
SELECT river.traverse FROM river WHERE river.river_name = '1'       
"SELECT DISTINCT count(DISTINCT paper.paperId), writes.authorId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' and paper.year > 1 GROUP BY writes.authorId   ORDER BY count( paper.paperId) DESC   "
SELECT student_course_registrations.student_id FROM Student_Course_Registrations       UNION SELECT student_course_attendance.student_id FROM Student_Course_Attendance         
SELECT avg( bank.no_of_customers) FROM bank WHERE bank.state = 'Utah'       
SELECT aircraft.Fleet_Series FROM aircraft JOIN pilot_record ON aircraft.Aircraft_ID = pilot_record.Aircraft_ID JOIN pilot ON pilot_record.Pilot_ID = pilot.Pilot_ID WHERE pilot.Age < 34       
SELECT customers.Customer_Details FROM Customers     ORDER BY customers.Customer_Details ASC   
"SELECT projects.project_details, projects.project_id FROM Projects JOIN Project_Outcomes ON projects.project_id = T2.project_id  GROUP BY T2.project_id  ORDER BY count( *) DESC LIMIT 1    "
"SELECT club.Club_ID, club.Club_name, count( *) FROM club JOIN coach ON club.Club_ID = coach.Club_ID  GROUP BY coach.Club_ID      "
SELECT undergoes.Patient FROM Undergoes    ORDER BY undergoes.DateUndergoes ASC LIMIT 1    
SELECT shop.Shop_Name FROM shop    ORDER BY shop.Open_Year DESC LIMIT 1    
"SELECT video_games.GType, count( *) FROM Video_Games  GROUP BY video_games.GType      "
"SELECT min( instructor.salary), instructor.dept_name FROM instructor  GROUP BY instructor.dept_name HAVING avg( instructor.salary) > (SELECT avg( instructor.salary) FROM instructor        )     "
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper        
"SELECT student.Fname, student.LName FROM Student WHERE student.Age < (SELECT avg( student.Age) FROM Student        )       "
SELECT documents.response_received_date FROM Documents JOIN Document_Types ON documents.document_type_code = document_types.document_type_code JOIN Grants ON documents.grant_id = grants.grant_id WHERE document_types.document_description = 'Regular' or grants.grant_amount > 100       
SELECT person.age FROM Person JOIN PersonFriend ON person.name = person_friend.friend WHERE person_friend.name = 'Zach' and person_friend.year = (SELECT max( person_friend.year) FROM PersonFriend WHERE person_friend.name = 'Zach'       )       
SELECT scientists.Name FROM Scientists     ORDER BY scientists.Name ASC   
SELECT list.Classroom FROM list  GROUP BY list.Classroom  ORDER BY count( *) DESC LIMIT 1    
"SELECT party.Party_Theme, host.Name FROM party JOIN party_host ON party.Party_ID = party_host.Party_ID JOIN host ON party_host.Host_ID = host.Host_ID        "
SELECT avg( journalist.Years_working) FROM journalist        
SELECT person_friend.friend FROM PersonFriend JOIN Person ON person_friend.friend = person.name WHERE person_friend.name = 'Alice' and person.gender = 'female'       
"SELECT DISTINCT author.authorId, paper.paperId FROM author JOIN writes ON author.authorId = writes.authorId JOIN paper ON writes.paperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE author.authorName = '1' and key_phrase.keyphraseName = '1'       "
SELECT count( *) FROM Roles        
"SELECT count( *), scientists.Name FROM Projects JOIN AssignedTo ON projects.Code = AssignedTo.Project JOIN Scientists ON AssignedTo.Scientist = scientists.SSN  GROUP BY scientists.Name      "
SELECT business.name FROM business JOIN category ON business.business_id = category.business_id WHERE business.city = '1' and business.state = '1' and category.category_name = '1' and category.category_name = '1'       
"SELECT avg( wine.Price), wine.Year FROM wine  GROUP BY wine.Year      "
SELECT DISTINCT products.product_size FROM Products        
SELECT city.population FROM city WHERE city.city_name = '1'       
SELECT count( *) FROM venue        
"SELECT aircraft.name, aircraft.distance FROM aircraft WHERE aircraft.aid = 12       "
"SELECT sum( storm.Number_Deaths), sum( storm.Damage_millions_USD) FROM storm WHERE storm.Max_speed > (SELECT avg( storm.Max_speed) FROM storm        )       "
SELECT shipments.order_id FROM Shipments WHERE shipments.shipment_date > '2000-01-01'       
SELECT DISTINCT paper_key_phrase.keyphraseId FROM paperKeyphrase JOIN paper ON paper_key_phrase.paperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Christof Dallermassl' and paper.year = 2000       
SELECT project_staff.role_code FROM Project_Staff  GROUP BY project_staff.role_code  ORDER BY count( *) DESC LIMIT 1    
SELECT documents.document_name FROM Documents WHERE documents.document_code NOT IN (SELECT document_sections.document_code FROM Document_Sections        )       
SELECT useracct.name FROM useracct WHERE useracct.u_id NOT IN (SELECT review.u_id FROM review        )       
SELECT count( *) FROM Customers_Cards WHERE customers_cards.card_type_code = 'Debit'       
"SELECT player.name_first, player.name_last FROM player JOIN all_star ON player.player_id = all_star.player_id WHERE all_star.year = 1998       "
SELECT count( *) FROM CLASS JOIN EMPLOYEE ON class.PROF_NUM = employee.EMP_NUM WHERE employee.EMP_LNAME = 'Graztevski'       
SELECT count( *) FROM Invoices        
SELECT payment.payment_date FROM payment    ORDER BY payment.payment_date ASC LIMIT 1    
SELECT DISTINCT track.Location FROM track        
SELECT count( *) FROM CLASS        
SELECT director.name FROM director JOIN directed_by ON director.did = T3.did JOIN movie WHERE movie.title = 'James Bond'       
"SELECT count( *), employee.Sex FROM employee WHERE employee.Salary < 50000 GROUP BY employee.Sex      "
"SELECT weather.zip_code, avg( weather.mean_temperature_f) FROM weather WHERE weather.date like '%1%' GROUP BY weather.zip_code      "
"SELECT DISTINCT cite.citedPaperId, count(DISTINCT cite.citedPaperId) FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' GROUP BY cite.citedPaperId   ORDER BY count( cite.citedPaperId) DESC   "
SELECT publication.title FROM publication JOIN conference ON publication.cid = conference.cid WHERE conference.name = 'VLDB' and publication.year > 2000   ORDER BY publication.citation_num DESC LIMIT 1    
SELECT customers.customer_id FROM Customers JOIN Orders ON customers.customer_id = orders.customer_id  GROUP BY customers.customer_id  ORDER BY count( *) DESC LIMIT 1    
SELECT count( *) FROM CLASS        
SELECT papers.title FROM Papers JOIN Authorship ON papers.paperID = authorship_count.paperID JOIN Inst ON authorship_count.instID = institution.instID JOIN Authors ON authorship_count.authID = authors.authID WHERE institution.country = 'Japan' and authorship_count.authOrder = 1 and authors.lname = 'Ohori'       
SELECT problem_log.problem_log_id FROM Problem_Log    ORDER BY problem_log.log_entry_date DESC LIMIT 1    
"SELECT max( club_rank.Silver), min( club_rank.Silver) FROM club_rank        "
SELECT order_items.Other_Item_Details FROM Order_Items JOIN Products ON order_items.Product_ID = products.Product_ID WHERE products.Product_Price > 2000       
SELECT DISTINCT paper.year FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'    ORDER BY paper.year ASC   
"SELECT DISTINCT paper.paperId, paper.year FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1'    ORDER BY paper.year DESC   "
SELECT companies.Industry FROM Companies  GROUP BY companies.Industry   ORDER BY count( *) DESC   
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId JOIN venue ON paper.venueId = venue.venueId WHERE author.authorName = '1' and venue.venueName = '1'       
SELECT avg( products.Price) FROM Products        
"SELECT count( *), manufacturers.Name FROM Products JOIN Manufacturers ON products.Manufacturer = manufacturers.Code  GROUP BY manufacturers.Name      "
SELECT count( *) FROM player WHERE player.birth_country = 'USA' and player.bats = 'R'       
"SELECT journalist.Name, event.Date FROM journalist JOIN news_report ON journalist.journalist_ID = news_report.journalist_ID JOIN event ON news_report.Event_ID = event.Event_ID        "
SELECT courses.course_name FROM Courses JOIN Student_Course_Registrations ON courses.course_id = T3.course_id JOIN Students ON T3.student_id = students.student_id  GROUP BY courses.course_name  ORDER BY count( *) DESC LIMIT 1    
SELECT election.Committee FROM election JOIN party ON election.Party = party.Party_ID WHERE party.Party = 'Democratic'       
SELECT flight.origin FROM flight WHERE flight.destination = 'Honolulu'       
SELECT tip.text FROM tip JOIN business ON tip.business_id = business.business_id WHERE business.name = 'Vintner Grill' and tip.likes > 9       
SELECT DISTINCT count(DISTINCT writes.paperId) FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
SELECT river.traverse FROM river WHERE river.river_name = '1'       
SELECT city.Status FROM city WHERE city.Population > 1500     INTERSECT SELECT city.Status FROM city WHERE city.Population < 500         
SELECT individuals.individual_last_name FROM Individuals JOIN Organization_Contact_Individuals ON individuals.individual_id = organization_contact_individuals.individual_id JOIN Organizations ON organization_contact_individuals.organization_id = organizations.organization_id WHERE organizations.uk_vat_number = (SELECT max( organizations.uk_vat_number) FROM Organizations        )   ORDER BY organization_contact_individuals.date_contact_to ASC LIMIT 1    
SELECT degrees.Campus FROM degrees  GROUP BY degrees.Campus  ORDER BY sum( degrees.Degrees) DESC LIMIT 1    
SELECT tourist_attractions.Name FROM Tourist_Attractions JOIN Locations ON tourist_attractions.Location_ID = locations.Location_ID WHERE locations.Address = '660 Shea Crescent' or tourist_attractions.How_to_Get_There = 'walk'       
SELECT DISTINCT bank.bname FROM bank JOIN loan ON bank.branch_ID = T2.branch_ID        
SELECT products.Product_Name FROM Products    ORDER BY products.Product_Price DESC LIMIT 1    
SELECT club.name FROM club WHERE club.Club_ID NOT IN (SELECT player.Club_ID FROM player        )       
SELECT river.traverse FROM river WHERE river.length = (SELECT max( river.length) FROM river WHERE river.traverse = '1'       )       
SELECT music_festival.Date_of_ceremony FROM music_festival WHERE music_festival.Category = 'Best Song' and music_festival.Result = 'Awarded'       
"SELECT companies.name, buildings.name FROM Companies JOIN Office_locations ON companies.id = Office_locations.company_id JOIN buildings ON Office_locations.building_id = buildings.id        "
"SELECT student.Fname, student.LName, student.Age FROM Student WHERE student.Sex = 'F'       "
SELECT tracks.name FROM tracks JOIN playlist_tracks ON tracks.id = playlist_tracks.track_id JOIN playlists ON playlist_tracks.playlist_id = playlists.id WHERE playlists.name = 'Movies'       EXCEPT SELECT tracks.name FROM tracks JOIN playlist_tracks ON tracks.id = playlist_tracks.track_id JOIN playlists ON playlist_tracks.playlist_id = playlists.id WHERE playlists.name = 'Music'       
SELECT sum( invoices.total) FROM invoices WHERE invoices.billing_city = 'Chicago' and invoices.billing_state = 'IL'       
SELECT city.City FROM city JOIN temperature ON city.City_ID = temperature.City_ID WHERE temperature.Mar < 1       EXCEPT SELECT city.City FROM city JOIN hosting_city ON city.City_ID = T4.Host_City        
SELECT border_info.border FROM border_info WHERE border_info.state_name = '1'       
"SELECT wrestler.Name, elimination.Elimination_Move FROM wrestler JOIN Elimination ON wrestler.Wrestler_ID = elimination.Wrestler_ID        "
SELECT DISTINCT count(DISTINCT actor.name) FROM actor WHERE actor.birth_city = 'Los Angeles' and actor.birth_year > 2000       
SELECT person.name FROM Person     ORDER BY person.age DESC   
"SELECT catalog_structure.catalog_level_name, catalog_structure.catalog_level_number FROM Catalog_Structure WHERE catalog_structure.catalog_level_number between 5 AND 10       "
SELECT drama_workshop_groups.Store_Name FROM Drama_Workshop_Groups JOIN Bookings ON drama_workshop_groups.Workshop_Group_ID = bookings.Workshop_Group_ID WHERE bookings.Status_Code = 'stop'       
"SELECT employees.FIRST_NAME, employees.JOB_ID FROM employees JOIN departments ON employees.DEPARTMENT_ID = departments.DEPARTMENT_ID WHERE departments.DEPARTMENT_NAME = 'Finance'       "
SELECT border_info.border FROM border_info WHERE border_info.state_name = (SELECT state.state_name FROM state WHERE state.population = (SELECT max( state.population) FROM state        )       )       
SELECT employee.eid FROM employee WHERE employee.salary > 100000       
"SELECT DISTINCT count(DISTINCT paper.paperId), paper.year FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1' GROUP BY paper.year      "
SELECT assets.asset_acquired_date FROM Assets    ORDER BY assets.asset_acquired_date ASC LIMIT 1    
SELECT DISTINCT maintenance_engineers.last_name FROM Maintenance_Engineers        
SELECT customers.Customer_Details FROM Customers JOIN Policies ON customers.Customer_ID = Policies.Customer_ID JOIN Claim_Headers ON Policies.Policy_ID = claim_headers.Policy_ID WHERE claim_headers.Amount_Piad = (SELECT min( claim_headers.Amount_Piad) FROM Claim_Headers        )       
SELECT campuses.Campus FROM Campuses JOIN enrollments ON campuses.Id = enrollments.Campus WHERE enrollments.Year = 1956 and enrollments.TotalEnrollment_AY > 400 and enrollments.FTE_AY > 200       
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = 'Question Answering'       
SELECT count( *) FROM state        
"SELECT max( results.fastestLapSpeed), races.name, races.year FROM results JOIN races ON results.raceId = races.raceId WHERE races.year > 1 GROUP BY results.raceId   ORDER BY races.year ASC   "
"SELECT avg( review.rating), max( review.rating) FROM review        "
SELECT address.address FROM address JOIN staff ON address.address_id = staff.address_id WHERE staff.first_name = 'Elsa'       
SELECT ship.Name FROM ship WHERE ship.Ship_ID NOT IN (SELECT mission.Ship_ID FROM mission        )       
SELECT party.Party_name FROM party JOIN party_events ON party.Party_ID = T2.Party_ID  GROUP BY party.Party_name HAVING count( *) >= 2     
SELECT people.Name FROM people WHERE people.People_ID NOT IN (SELECT debate_people.Affirmative FROM debate_people        )       
SELECT sports_info.StuID FROM SportsInfo WHERE sports_info.OnScholarship = '1'       
SELECT count( *) FROM aircraft        
"SELECT employee.name, employee.salary FROM employee JOIN certificate ON employee.eid = T2.eid  GROUP BY T2.eid  ORDER BY count( *) DESC LIMIT 1    "
SELECT school.School_name FROM School JOIN endowment ON school.School_id = T2.School_id JOIN budget ON school.School_id = T3.School_id  GROUP BY school.School_name HAVING sum( T3.Budgeted) > 100 sum( T2.amount) > 10     
"SELECT avg( student.Age), max( student.Age), student.Sex FROM Student  GROUP BY student.Sex      "
SELECT instruments.Instrument FROM Instruments JOIN Songs ON instruments.SongId = songs.SongId JOIN Performance ON songs.SongId = T3.SongId JOIN Band ON T3.Bandmate = band.Id WHERE band.Lastname = 'Heilo' and songs.Title = 'Le Pop'       
SELECT publication.Publisher FROM publication  GROUP BY publication.Publisher HAVING count( *) > 1     
SELECT airports.name FROM airports WHERE airports.country = 'Cuba' or airports.country = 'Argentina'       
SELECT count( *) FROM Authors        
"SELECT customers.customer_first_name, customers.customer_last_name, customers.customer_phone FROM Customers JOIN Accounts WHERE accounts.account_name = '162'       "
SELECT DISTINCT count(DISTINCT neighbourhood.neighbourhood_name) FROM neighbourhood JOIN business ON neighbourhood.business_id = business.business_id WHERE business.city = 'Madison' and business.rating = 5       
"SELECT max( grade_conversion.gradepoint), min( grade_conversion.gradepoint) FROM Gradeconversion JOIN Enrolled_in ON grade_conversion.lettergrade = Enrolled_in.Grade JOIN Student ON Enrolled_in.StuID = student.StuID WHERE student.city_code = 'NYC'       "
SELECT device.Carrier FROM device WHERE device.Device_ID NOT IN (SELECT stock.Device_ID FROM stock        )       
SELECT customers.Customer_Details FROM Customers        EXCEPT SELECT customers.Customer_Details FROM Customers JOIN Policies ON customers.Customer_ID = T3.Customer_ID        
SELECT * FROM employees WHERE employees.DEPARTMENT_ID = 1       
SELECT publication.title FROM publication JOIN journal ON publication.jid = journal.jid WHERE journal.name = 'PVLDB' and publication.citation_num > 200       
SELECT count( *) FROM Rooms WHERE rooms.bedType = 'King'       
SELECT count( *) FROM track        
SELECT DISTINCT paper.title FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId JOIN venue ON paper.venueId = venue.venueId WHERE author.authorName like '%1%' and key_phrase.keyphraseName = '1' and venue.venueName = '1'       
SELECT instructor.name FROM instructor JOIN department ON instructor.dept_name = department.dept_name JOIN student ON department.dept_name = student.dept_name    ORDER BY student.tot_cred DESC LIMIT 1    
SELECT sum( festival_detail.Num_of_Audience) FROM festival_detail        
"SELECT party.Minister, party.Took_office, party.Left_office FROM party     ORDER BY party.Left_office ASC   "
SELECT documents.document_type_code FROM Documents WHERE documents.document_name = 'David CV'       
SELECT weather.zip_code FROM weather  GROUP BY weather.zip_code  ORDER BY avg( weather.mean_sea_level_pressure_inches) ASC LIMIT 1    
SELECT addresses.state_province_county FROM Addresses JOIN Staff ON addresses.address_id = T2.staff_address_id  GROUP BY addresses.state_province_county HAVING count( *) between 2 AND 4     
"SELECT department_stores.dept_store_id, department_stores.store_name FROM Department_Stores JOIN Departments ON department_stores.dept_store_id = departments.dept_store_id WHERE departments.department_name = '1'     INTERSECT SELECT department_stores.dept_store_id, department_stores.store_name FROM Department_Stores JOIN Departments ON department_stores.dept_store_id = departments.dept_store_id WHERE departments.department_name = '1'         "
SELECT medication.Name FROM Medication JOIN Prescribes ON medication.Code = Prescribes.Medication JOIN Patient ON Prescribes.Patient = Patient.SSN JOIN Stay ON Patient.SSN = stay.Patient WHERE stay.Room = 111       
SELECT DISTINCT count(DISTINCT transactions.transaction_type_code) FROM Transactions        
SELECT section.course_id FROM section WHERE section.semester = '1' and section.year = 1     INTERSECT SELECT section.course_id FROM section WHERE section.semester = '1' and section.year = 1         
"SELECT avg( financial_transactions.transaction_amount), sum( financial_transactions.transaction_amount) FROM Financial_Transactions        "
SELECT highlow.state_name FROM highlow WHERE highlow.highest_elevation > (SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name = '1'       )       
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and restaurant.RATING > 1       "
SELECT count( *) FROM Services        
"SELECT DISTINCT student.Fname, student.city_code FROM Student JOIN Has_Allergy ON student.StuID = has_allergy.StuID WHERE has_allergy.Allergy = '1' or has_allergy.Allergy = '1'       "
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Peter Mertens' and author.authorName = 'Dina Barbian'       
"SELECT city.White, county_public_safety.Crime_rate FROM city JOIN county_public_safety ON city.County_ID = county_public_safety.County_ID        "
SELECT accounts.name FROM ACCOUNTS JOIN SAVINGS ON accounts.custid = T2.custid JOIN CHECKING ON accounts.custid = checking.custid WHERE checking.balance > 1       
"SELECT faculty.Fname, faculty.Lname, faculty.Phone FROM Faculty WHERE faculty.Sex = 'F'       "
SELECT courses.course_name FROM Courses     ORDER BY courses.course_name ASC   
SELECT college.cName FROM College WHERE college.enr > (SELECT max( college.enr) FROM College WHERE college.state = 'FL'       )       
SELECT DISTINCT songs.Title FROM Songs JOIN Vocals ON songs.SongId = T2.SongId        EXCEPT SELECT songs.Title FROM Songs JOIN Vocals ON songs.SongId = vocals.SongId WHERE vocals.Type = '1'       
SELECT wine.Price FROM wine WHERE wine.Year < 2010       
SELECT player.Position FROM player WHERE player.Points > 20     INTERSECT SELECT player.Position FROM player WHERE player.Points < 10         
SELECT endowment.donator_name FROM endowment JOIN School ON endowment.School_id = school.School_id WHERE school.School_name = 'Glenn'     INTERSECT SELECT endowment.donator_name FROM endowment JOIN School ON endowment.School_id = school.School_id WHERE school.School_name = 'Triton'         
"SELECT enzyme.id, enzyme.name FROM enzyme JOIN medicine_enzyme_interaction ON enzyme.id = medicine_enzyme_interaction.enzyme_id WHERE medicine_enzyme_interaction.interaction_type = '1' GROUP BY medicine_enzyme_interaction.enzyme_id  ORDER BY count( *) DESC LIMIT 1    "
SELECT wine.Name FROM wine WHERE wine.Score > 90       
"SELECT student.LName, student.Fname FROM Student JOIN SportsInfo ON student.StuID = sports_info.StuID WHERE sports_info.SportName = 'Football' or sports_info.SportName = 'Lacrosse'       "
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
SELECT technician.Name FROM technician     ORDER BY technician.Age ASC   
"SELECT count( *), player.Position FROM player WHERE player.Points < 30 GROUP BY player.Position      "
"SELECT financial_transactions.transaction_type, sum( financial_transactions.transaction_amount) FROM Financial_Transactions  GROUP BY financial_transactions.transaction_type      "
"SELECT count( *), list.Classroom FROM list  GROUP BY list.Classroom      "
"SELECT teachers.FirstName, teachers.LastName FROM teachers JOIN list WHERE list.FirstName = 'EVELINA' and list.LastName = 'BROMLEY'       "
"SELECT DISTINCT cite.citedPaperId, count(DISTINCT cite.citedPaperId) FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' GROUP BY cite.citedPaperId   ORDER BY count( cite.citedPaperId) DESC   "
"SELECT competition.Competition_type, competition.Country FROM competition        "
SELECT publication.citation_num FROM publication JOIN conference ON publication.cid = conference.cid WHERE conference.name = 'VLDB'       
SELECT user.name FROM user JOIN review ON user.user_id = review.user_id JOIN business ON review.business_id = business.business_id JOIN category ON business.business_id = category.business_id WHERE category.category_name = '1' and review.year = 1       
SELECT count( *) FROM cinema        
SELECT DISTINCT track.Location FROM track        
SELECT DISTINCT musical.Nominee FROM musical WHERE musical.Award != 'Tony Award'       
SELECT patient.Name FROM Patient JOIN Appointment ON patient.SSN = T2.Patient        
SELECT product.product FROM product WHERE product.product like '%Scanner%'       
"SELECT track.Name, count( *) FROM track JOIN race ON track.Track_ID = race.Track_ID  GROUP BY track.Name      "
"SELECT reference_service_types.Service_Type_Description, services.Service_Type_Code, count( *) FROM Ref_Service_Types JOIN Services ON reference_service_types.Service_Type_Code = services.Service_Type_Code  GROUP BY services.Service_Type_Code      "
"SELECT max( school_bus.Years_Working), min( school_bus.Years_Working), avg( school_bus.Years_Working) FROM school_bus        "
SELECT employees.address FROM employees WHERE employees.first_name = 'Nancy' and employees.last_name = 'Edwards'       
"SELECT drama_workshop_groups.Store_Phone, drama_workshop_groups.Store_Email_Address FROM Drama_Workshop_Groups JOIN Services ON drama_workshop_groups.Workshop_Group_ID = T2.Workshop_Group_ID        "
SELECT customers.customer_name FROM Customers JOIN Mailshot_Customers ON customers.customer_id = T2.customer_id  GROUP BY customers.customer_name  ORDER BY count( *) DESC LIMIT 1    
SELECT volume.Song FROM volume WHERE volume.Weeks_on_Top > 1       
SELECT river.river_name FROM river WHERE river.traverse = '1'       
SELECT DISTINCT paper_key_phrase.keyphraseId FROM paperKeyphrase JOIN paper ON paper_key_phrase.paperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Christof Dallermassl' and paper.year = 2000       
"SELECT customers.customer_name, customer_orders.order_date FROM Customers JOIN Customer_Orders ON customers.customer_id = customer_orders.customer_id WHERE customer_orders.order_status = 'Delivered'       "
"SELECT artist.Name, album.ArtistId FROM Artist JOIN Album ON artist.ArtistId = album.ArtistId  GROUP BY album.ArtistId HAVING count( *) >= 3  ORDER BY artist.Name ASC   "
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId JOIN venue ON paper.venueId = venue.venueId WHERE author.authorName = '1' and venue.venueName = '1'       
SELECT students.email_address FROM Students WHERE students.first_name = 'Emma' and students.last_name = 'Rohan'       
"SELECT operate_company.id, operate_company.name FROM operate_company JOIN flight ON operate_company.id = T2.company_id  GROUP BY T2.company_id HAVING count( *) > 1     "
"SELECT party.Party, count( *) FROM party  GROUP BY party.Party      "
SELECT DISTINCT drivers.forename FROM drivers JOIN driverStandings ON drivers.driverId = driver_standings.driverId WHERE driver_standings.position = 1 and driver_standings.wins = 1 and driver_standings.points > 20       
SELECT csu_fees.CampusFee FROM csu_fees JOIN Campuses ON csu_fees.Campus = campuses.Id WHERE campuses.Campus = 'San Francisco State University' and csu_fees.Year = 2000       
SELECT trip.id FROM trip WHERE trip.duration >= (SELECT avg( trip.duration) FROM trip WHERE trip.zip_code = 94103       )       
SELECT DISTINCT count(DISTINCT river.traverse) FROM river WHERE river.length > 1       
"SELECT products.product_id, reference_colors.color_description FROM Products JOIN Ref_Colors ON products.color_code = reference_colors.color_code JOIN Product_Characteristics ON products.product_id = T3.product_id JOIN Characteristics ON T3.characteristic_id = characteristics.characteristic_id  GROUP BY products.color_code HAVING count( *) >= 2     "
SELECT pilot.Name FROM pilot     ORDER BY pilot.Age DESC   
SELECT addresses.line_1 FROM Addresses      INTERSECT SELECT addresses.line_1 FROM Addresses JOIN Teachers ON addresses.address_id = T3.address_id          
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
"SELECT movie.title, movie.director FROM Movie WHERE movie.title != '1'    ORDER BY movie.director ASC   "
SELECT count( *) FROM Courses JOIN Student_Course_Registrations ON courses.course_id = Student_Course_Registrations.course_id JOIN Student_Course_Attendance ON Student_Course_Registrations.student_id = student_course_attendance.student_id WHERE student_course_attendance.student_id = 171       
SELECT actor.name FROM actor WHERE actor.nationality = 'Afghanistan'       
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Peter Mertens' and author.authorName = 'Dina Barbian'       
SELECT count( *) FROM Songs JOIN Performance ON songs.SongId = performance.SongId JOIN Band ON performance.Bandmate = T3.Id WHERE songs.Title = 'Flash'       
SELECT DISTINCT count(DISTINCT results.driverId) FROM results WHERE results.raceId NOT IN (SELECT races.raceId FROM races WHERE races.year != 2009       )       
SELECT count( patient.SSN) FROM Patient JOIN Physician ON patient.PCP = physician.EmployeeID JOIN Prescribes ON physician.EmployeeID = T3.Physician WHERE physician.Name = 'John Dorian'       
SELECT teachers.gender FROM Teachers WHERE teachers.last_name = 'Medhurst'       
SELECT DISTINCT station.Location FROM station WHERE station.Number_of_Platforms >= 15 and station.Total_Passengers > 25       
SELECT DISTINCT count(DISTINCT review.i_id) FROM review        
SELECT rooms.decor FROM Rooms JOIN Reservations ON rooms.RoomId = T2.Room  GROUP BY rooms.decor  ORDER BY count( rooms.decor) ASC LIMIT 1    
SELECT university.Primary_conference FROM university JOIN basketball_match ON university.School_ID = basketball_match.School_ID    ORDER BY basketball_match.ACC_Percent ASC LIMIT 1    
SELECT employees.phone FROM employees WHERE employees.first_name = 'Nancy' and employees.last_name = 'Edwards'       
"SELECT count( *), member.Address FROM member  GROUP BY member.Address      "
SELECT DISTINCT county_public_safety.Police_force FROM county_public_safety WHERE county_public_safety.Location != '1'       
SELECT document_locations.Location_Code FROM Document_Locations  GROUP BY document_locations.Location_Code HAVING count( *) >= 3     
SELECT DISTINCT count(DISTINCT cite.citedPaperId) FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
SELECT * FROM College     ORDER BY college.enr ASC   
"SELECT count( *), course.DEPT_CODE FROM CLASS JOIN COURSE ON class.CRS_CODE = course.CRS_CODE  GROUP BY course.DEPT_CODE      "
SELECT river.river_name FROM river WHERE river.traverse = '1'       
SELECT DISTINCT cite.citedPaperId FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1'       
SELECT DISTINCT count(DISTINCT student.Advisor) FROM Student        
SELECT count( *) FROM venue        
SELECT staff.date_joined_staff FROM Staff WHERE staff.first_name = 'Janessa' and staff.last_name = 'Sawayn'       
"SELECT artist.gender, artist.artist_name FROM artist JOIN song ON artist.artist_name = song.artist_name    ORDER BY song.resolution ASC LIMIT 1    "
SELECT count( *) FROM film WHERE film.Title like '%Dummy%'       
"SELECT furniture.Num_of_Component, furniture.Name FROM furniture WHERE furniture.Num_of_Component > 10       "
"SELECT DISTINCT artist.artist_name, artist.country FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.rating > 9       "
SELECT student.Advisor FROM Student  GROUP BY student.Advisor HAVING count( *) >= 1     
SELECT count( *) FROM RESTAURANT JOIN GEOGRAPHIC ON restaurant.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN LOCATION ON GEOGRAPHIC.CITY_NAME = location.CITY_NAME WHERE location.CITY_NAME = '1' and restaurant.FOOD_TYPE = '1'       
"SELECT count( *), projects.Name FROM Scientists JOIN AssignedTo ON scientists.SSN = AssignedTo.Scientist JOIN Projects ON AssignedTo.Project = projects.Code WHERE projects.Hours > 300 GROUP BY projects.Name      "
SELECT student.LName FROM Student JOIN SportsInfo ON student.StuID = sports_info.StuID WHERE sports_info.OnScholarship = '1'       
SELECT count( river.river_name) FROM river WHERE river.traverse = '1'       
SELECT state.capital FROM state JOIN border_info ON state.state_name = border_info.border WHERE border_info.state_name = '1'       
"SELECT member.Member_Name, party.Party_name FROM member JOIN party ON member.Party_ID = party.Party_ID        "
SELECT count( *) FROM state        
"SELECT count( *), movie.director FROM Movie  GROUP BY movie.director      "
"SELECT apartments.apt_number, apartments.room_count FROM Apartments        "
SELECT river.river_name FROM river WHERE river.length > 1 and river.traverse = '1'       
SELECT elimination.Team FROM Elimination WHERE elimination.Eliminated_By = 'Orton'     INTERSECT SELECT elimination.Team FROM Elimination WHERE elimination.Eliminated_By = 'Benjamin'         
"SELECT DISTINCT count(DISTINCT paper.paperId), paper.year FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1' GROUP BY paper.year   ORDER BY paper.year ASC   "
"SELECT student.Fname, student.LName FROM Student WHERE student.city_code != 'HKG'    ORDER BY student.Age ASC   "
SELECT DISTINCT count(DISTINCT writes.paperId) FROM writes JOIN author ON writes.authorId = author.authorId JOIN paper ON writes.paperId = paper.paperId WHERE author.authorName = '1' and paper.year = 1       
SELECT count( *) FROM classroom WHERE classroom.building = 'Lamberton' and classroom.capacity < 50       
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = geographic.CITY_NAME JOIN RESTAURANT ON geographic.CITY_NAME = restaurant.CITY_NAME WHERE geographic.REGION = '1' and restaurant.NAME = '1'       "
SELECT rent_arrears.council_tax_id FROM Rent_Arrears JOIN CMI_Cross_References ON rent_arrears.cmi_cross_ref_id = CMI_Cross_References.cmi_cross_ref_id JOIN Customer_Master_Index ON CMI_Cross_References.master_customer_id = customer_master_index.master_customer_id WHERE customer_master_index.cmi_details != '1'       
SELECT business.name FROM business JOIN category ON business.business_id = category.business_id WHERE business.state = '1' and category.category_name = '1'       
"SELECT count( *), airport.Country FROM airport  GROUP BY airport.Country      "
SELECT DISTINCT count(DISTINCT business.name) FROM business JOIN category ON business.business_id = category.business_id WHERE business.city = '1' and business.rating = 1 and category.category_name = '1'       
SELECT DISTINCT count(DISTINCT border_info.state_name) FROM border_info        
SELECT DISTINCT product.product_name FROM Product     ORDER BY product.product_id ASC   
SELECT count( *) FROM Customers WHERE customers.customer_id NOT IN (SELECT customer_events.customer_id FROM Customer_Events        )       
"SELECT DISTINCT paper.paperId, writes.authorId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN venue ON paper.venueId = venue.venueId WHERE venue.venueName = 'ACL'       "
SELECT faculty.FacID FROM Faculty JOIN Faculty_Participates_in ON faculty.FacID = Faculty_Participates_in.FacID JOIN Activity ON Faculty_Participates_in.actid = Activity.actid JOIN Participates_in ON Activity.actid = Participates_in.actid JOIN Student ON Participates_in.stuid = T2.StuID  GROUP BY faculty.FacID HAVING count( *) >= 2     
SELECT highlow.highest_elevation FROM highlow        
"SELECT avg( products.product_price), products.product_category_code FROM Products  GROUP BY products.product_category_code      "
SELECT DISTINCT reviewer.name FROM Reviewer JOIN Rating ON reviewer.rID = rating.rID WHERE rating.ratingDate = '1'       
SELECT count( *) FROM venue        
SELECT student.Advisor FROM Student WHERE student.StuID = 1004       
SELECT DISTINCT count(DISTINCT accounts.customer_id) FROM Accounts        
SELECT students.date_of_latest_logon FROM Students WHERE students.family_name = 'Jaskolski' or students.family_name = 'Langosh'       
SELECT accounts.other_account_details FROM Accounts WHERE accounts.account_name = '338'       
SELECT DISTINCT max(DISTINCT highlow.highest_elevation) FROM highlow WHERE highlow.state_name = '1'       
SELECT DISTINCT faculty.Building FROM Faculty        
SELECT count( *) FROM Accounts        
SELECT airports.city FROM airports  GROUP BY airports.city HAVING count( *) = 2     
"SELECT wrestler.Name, wrestler.Location FROM wrestler        "
"SELECT phone.Hardware_Model_name, phone.Company_name FROM phone JOIN chip_model ON phone.chip_model = chip_model.Model_name WHERE chip_model.Launch_year = 2002 or chip_model.RAM_MiB > 32       "
"SELECT course_authors_and_tutors.login_name, course_authors_and_tutors.family_name FROM Course_Authors_and_Tutors        "
SELECT pilot.Join_Year FROM pilot    ORDER BY pilot.Rank ASC LIMIT 1    
"SELECT train.name, train.time FROM train JOIN route ON train.id = route.train_id JOIN station ON route.station_id = station.id WHERE station.local_authority = 'Chiltern'       "
SELECT DISTINCT institution.name FROM Inst JOIN Authorship ON institution.instID = Authorship.instID JOIN Authors ON Authorship.authID = authors.authID WHERE authors.fname = 'Matthias' and authors.lname = 'Blume'       
SELECT book.Writer FROM book JOIN publication ON book.Book_ID = publication.Book_ID WHERE publication.Price > 4000000       
"SELECT accounts.account_id, accounts.date_account_opened, accounts.account_name, accounts.other_account_details FROM Accounts JOIN Customers ON accounts.customer_id = customers.customer_id WHERE customers.customer_first_name = 'Meaghan'       "
"SELECT problem_log.problem_log_id, problem_log.log_entry_description FROM Problem_Log        "
"SELECT drama_workshop_groups.Store_Phone, drama_workshop_groups.Store_Email_Address FROM Drama_Workshop_Groups JOIN Services ON drama_workshop_groups.Workshop_Group_ID = services.Workshop_Group_ID WHERE services.Product_Name = 'film'       "
SELECT avg( player.HS) FROM Player JOIN Tryout ON player.pID = tryout.pID WHERE tryout.decision = 'no'       
SELECT DISTINCT manager.Country FROM manager        
SELECT DISTINCT allergy_type.AllergyType FROM Allergy_Type        
SELECT state.state_name FROM state WHERE state.area = (SELECT min( state.area) FROM state        )       
SELECT products.Product_Name FROM Products     ORDER BY products.Product_Price ASC   
"SELECT physician.Name, physician.Position FROM Physician JOIN Department ON physician.EmployeeID = department.Head  GROUP BY department.Head  ORDER BY count( department.DepartmentID) ASC LIMIT 1    "
SELECT DISTINCT driver.Home_city FROM driver        
SELECT endowment.donator_name FROM endowment        EXCEPT SELECT endowment.donator_name FROM endowment WHERE endowment.amount < 9       
SELECT driver.Home_city FROM driver WHERE driver.Age > 40 GROUP BY driver.Home_city HAVING count( *) >= 2     
SELECT phone.Name FROM phone     ORDER BY phone.Price ASC   
"SELECT branch.Name, count( *) FROM branch JOIN purchase ON branch.Branch_ID = purchase.Branch_ID JOIN member ON purchase.Member_ID = member.Member_ID JOIN membership_register_branch ON member.Member_ID = membership_register_branch.Member_ID WHERE membership_register_branch.Register_Year > '2015' GROUP BY branch.Name      "
SELECT music_festival.Category FROM music_festival WHERE music_festival.Result = 'Awarded'       
"SELECT category.name, film_category.category_id, count( *) FROM category JOIN film_category ON category.category_id = film_category.category_id  GROUP BY film_category.category_id      "
SELECT allergy_type.AllergyType FROM Allergy_Type  GROUP BY allergy_type.AllergyType  ORDER BY count( *) ASC LIMIT 1    
SELECT campuses.Campus FROM Campuses WHERE campuses.County = 'Los Angeles'       
SELECT * FROM departments WHERE departments.DEPARTMENT_NAME = 'Marketing'       
"SELECT count( *), block.BlockCode FROM Room JOIN Block ON room.BlockFloor = block.BlockFloor  GROUP BY block.BlockCode      "
"SELECT architect.id, architect.name, architect.nationality FROM architect JOIN mill ON architect.id = mill.architect_id  GROUP BY mill.architect_id  ORDER BY count( *) DESC LIMIT 1    "
"SELECT DISTINCT key_phrase.keyphraseName, sum(DISTINCT paper.numCitedBy) FROM keyphrase JOIN paperKeyphrase ON key_phrase.keyphraseId = paperKeyphrase.keyphraseId JOIN paper ON paperKeyphrase.paperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Brian DeRenzi' GROUP BY key_phrase.keyphraseName   ORDER BY sum( paper.numCitedBy) DESC   "
SELECT party.Minister FROM party WHERE party.Party_name != 'Progress Party'       
"SELECT rating.mID, avg( rating.stars) FROM Rating  GROUP BY rating.mID HAVING count( *) >= 2     "
SELECT count( *) FROM Customers JOIN Customer_Addresses ON customers.customer_id = Customer_Addresses.customer_id JOIN Addresses ON Customer_Addresses.address_id = addresses.address_id WHERE addresses.city = 'Lake Geovannyton'       
SELECT city.city_name FROM city WHERE city.population = (SELECT max( city.population) FROM city WHERE city.state_name = '1'       ) and city.state_name = '1'       
"SELECT tourist_attractions.Name, visits.Tourist_Attraction_ID, count( *) FROM Tourist_Attractions JOIN Visits ON tourist_attractions.Tourist_Attraction_ID = visits.Tourist_Attraction_ID  GROUP BY visits.Tourist_Attraction_ID      "
"SELECT aircraft.name, count( *) FROM aircraft JOIN flight ON aircraft.aid = flight.aid  GROUP BY aircraft.name      "
SELECT count( *) FROM Addresses        
"SELECT race.Name, race.Date, track.Name FROM race JOIN track ON race.Track_ID = track.Track_ID        "
"SELECT avg( wine.Price), avg( wine.Score), wine.Appelation FROM wine  GROUP BY wine.Appelation      "
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and location.STREET_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT campuses.Campus FROM Campuses WHERE campuses.Location = 'Chico'       
"SELECT characteristics.characteristic_name, characteristics.other_characteristic_details, characteristics.characteristic_data_type FROM Characteristics        EXCEPT SELECT characteristics.characteristic_name, characteristics.other_characteristic_details, characteristics.characteristic_data_type FROM Characteristics JOIN Product_Characteristics ON characteristics.characteristic_id = T3.characteristic_id        "
"SELECT reference_calendar.Calendar_Date, reference_calendar.Day_Number FROM Ref_Calendar        "
"SELECT DISTINCT cite.citedPaperId, count(DISTINCT cite.citedPaperId) FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 2010 and venue.venueName = 'EMNLP' GROUP BY cite.citedPaperId   ORDER BY count( cite.citedPaperId) DESC   "
SELECT DISTINCT cmi_cross_references.source_system_code FROM CMI_Cross_References JOIN Customer_Master_Index ON cmi_cross_references.master_customer_id = customer_master_index.master_customer_id WHERE customer_master_index.cmi_details = '1'       
SELECT songs.Title FROM Songs JOIN Vocals ON songs.SongId = vocals.SongId  GROUP BY songs.Title  ORDER BY count( *) DESC LIMIT 1    
"SELECT faculty.Building, count( *) FROM Faculty  GROUP BY faculty.Building      "
SELECT station.name FROM station JOIN status ON station.id = T2.station_id  GROUP BY station.name HAVING avg( T2.bikes_available) > 10     EXCEPT SELECT station.name FROM station WHERE station.city = 'San Jose'       
SELECT count( *) FROM Customers        
SELECT section.course_id FROM section WHERE section.semester = '1' and section.year = 1      UNION SELECT section.course_id FROM section WHERE section.semester = '1' and section.year = 1        
SELECT count( *) FROM Person WHERE person.age > 30 and person.job = 'engineer'       
SELECT product.max_page_size FROM product  GROUP BY product.max_page_size HAVING count( *) > 3     
SELECT employees.Employee_ID FROM Employees        EXCEPT SELECT documents_to_be_destroyed.Destruction_Authorised_by_Employee_ID FROM Documents_to_be_Destroyed        
SELECT invoices.Product_ID FROM Invoices  GROUP BY invoices.Product_ID  ORDER BY count( *) DESC LIMIT 1    
SELECT aircraft.name FROM aircraft JOIN flight ON aircraft.aid = T2.aid  GROUP BY aircraft.name HAVING count( *) >= 2     
SELECT DISTINCT writes.authorId FROM writes JOIN paper ON writes.paperId = paper.paperId WHERE paper.year = 2015       
SELECT DISTINCT movie.year FROM Movie JOIN Rating ON movie.mID = rating.mID WHERE rating.stars >= 4    ORDER BY movie.year ASC   
SELECT state.population FROM state WHERE state.state_name = '1'       
SELECT teachers.LastName FROM teachers JOIN list WHERE list.FirstName = 'GELL' and list.LastName = 'TAMI'       
SELECT reference_transaction_types.transaction_type_description FROM Ref_Transaction_Types JOIN Transactions ON reference_transaction_types.transaction_type_code = transactions.transaction_type_code  GROUP BY reference_transaction_types.transaction_type_description  ORDER BY count( *) DESC LIMIT 1    
SELECT employees.JOB_ID FROM employees  GROUP BY employees.JOB_ID HAVING avg( employees.SALARY) > 8000     
"SELECT customers.customer_name, customers.customer_address FROM Customers JOIN Customer_Orders ON customers.customer_id = customer_orders.customer_id WHERE customer_orders.order_status_code = 'New'     INTERSECT SELECT customers.customer_name, customers.customer_address FROM Customers JOIN Customer_Orders ON customers.customer_id = customer_orders.customer_id WHERE customer_orders.order_status_code = 'Pending'         "
"SELECT employees.FIRST_NAME, employees.LAST_NAME, employees.SALARY FROM employees WHERE employees.SALARY < 6000       "
SELECT DISTINCT count(DISTINCT faculty_participates_in.FacID) FROM Faculty_Participates_in        
SELECT volume.Song FROM volume     ORDER BY volume.Song ASC   
SELECT DISTINCT match_season.Position FROM match_season        
SELECT DISTINCT count(DISTINCT college.state) FROM College WHERE college.enr > (SELECT avg( college.enr) FROM College        )       
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = geographic.CITY_NAME JOIN RESTAURANT ON geographic.CITY_NAME = restaurant.CITY_NAME WHERE geographic.REGION = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT reference_shipping_agents.shipping_agent_name FROM Ref_Shipping_Agents JOIN Documents ON reference_shipping_agents.shipping_agent_code = documents.shipping_agent_code WHERE documents.document_id = 2       
"SELECT avg( artist.Age), min( artist.Age) FROM artist WHERE artist.Country = 'United States'       "
SELECT employees.Employee_ID FROM Employees WHERE employees.Employee_Name = 'Ebba'       
SELECT student.Advisor FROM Student  GROUP BY student.Advisor HAVING count( *) > 2     
SELECT products.product_name FROM Products JOIN Ref_Colors ON products.color_code = reference_colors.color_code WHERE reference_colors.color_description = 'yellow'       
"SELECT courses.course_name, count( *) FROM Courses JOIN Student_Course_Registrations ON courses.course_id = Student_Course_Registrations.course_id JOIN Students ON Student_Course_Registrations.student_id = students.student_id  GROUP BY courses.course_name      "
SELECT student.STU_FNAME FROM STUDENT JOIN ENROLL ON student.STU_NUM = enroll.STU_NUM JOIN CLASS ON enroll.CLASS_CODE = class.CLASS_CODE WHERE class.CRS_CODE = 'ACCT-211' and enroll.ENROLL_GRADE = 'C'       
SELECT count( *) FROM GEOGRAPHIC        
"SELECT invoices.billing_state, count( *) FROM invoices WHERE invoices.billing_country = '1' GROUP BY invoices.billing_state  ORDER BY count( *) DESC LIMIT 1    "
SELECT county_public_safety.Crime_rate FROM county_public_safety     ORDER BY county_public_safety.Police_officers ASC   
SELECT count( *) FROM Document_Types        
"SELECT sum( university.Enrollment), min( university.Enrollment) FROM university        "
SELECT river.river_name FROM river WHERE river.traverse = '1'       
SELECT station.city FROM station  GROUP BY station.city   ORDER BY max( station.lat) DESC   
SELECT DISTINCT wrestler.Reign FROM wrestler WHERE wrestler.Location != '1'       
SELECT DISTINCT count(DISTINCT albums.Label) FROM Albums        
SELECT sum( state.population) FROM state        
SELECT people.Weight FROM people JOIN entrepreneur ON people.People_ID = entrepreneur.People_ID     ORDER BY entrepreneur.Money_Requested DESC   
SELECT DISTINCT count(DISTINCT accounts.customer_id) FROM Accounts        
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Peter Mertens' and author.authorName = 'Dina Barbian'       
"SELECT DISTINCT count(DISTINCT cite.citingPaperId), writes.authorId FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1' GROUP BY writes.authorId   ORDER BY count( cite.citingPaperId) DESC   "
"SELECT DISTINCT employee.EMP_FNAME, employee.EMP_DOB FROM EMPLOYEE JOIN CLASS ON employee.EMP_NUM = class.PROF_NUM WHERE class.CRS_CODE = 'ACCT-211'       "
"SELECT DISTINCT count(DISTINCT paper.paperId), paper.year FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' GROUP BY paper.year   ORDER BY paper.year DESC   "
SELECT DISTINCT count(DISTINCT course.dept_name) FROM course        
SELECT technician.Name FROM technician WHERE technician.technician_id NOT IN (SELECT repair_assignment.technician_id FROM repair_assignment        )       
"SELECT branch.City, count( *) FROM branch WHERE branch.Open_year < '2010' GROUP BY branch.City      "
SELECT student.StuID FROM Student WHERE student.Sex = 'F'     INTERSECT SELECT sports_info.StuID FROM SportsInfo WHERE sports_info.SportName = 'Football'         
SELECT song.song_name FROM song JOIN files ON song.f_id = files.f_id WHERE files.formats = 'mp3'     INTERSECT SELECT song.song_name FROM song WHERE song.resolution < 1000         
"SELECT journal.Date, journal.Theme, journal.Sales FROM journal        EXCEPT SELECT journal.Date, journal.Theme, journal.Sales FROM journal JOIN journal_committee ON journal.Journal_ID = T3.Journal_ID        "
SELECT city.city_name FROM city WHERE city.population = (SELECT min( city.population) FROM city WHERE city.state_name = '1'       ) and city.state_name = '1'       
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = geographic.CITY_NAME JOIN RESTAURANT ON geographic.CITY_NAME = restaurant.CITY_NAME WHERE geographic.REGION = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT count( *) FROM basketball_match JOIN university ON basketball_match.School_ID = university.School_ID WHERE university.School_ID NOT IN (SELECT basketball_match.School_ID FROM basketball_match        )       
SELECT culture_company.Company_name FROM culture_company JOIN book_club ON culture_company.book_club_id = book_club.book_club_id WHERE book_club.Publisher = 'Alyson'       
SELECT river.length FROM river WHERE river.river_name = '1'       
SELECT DISTINCT paper.paperId FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE venue.venueName = '1'       
"SELECT student.Fname, student.LName FROM Student JOIN Participates_in ON student.StuID = T3.stuid JOIN Activity ON T3.actid = activity.actid  GROUP BY T3.stuid  ORDER BY count( *) DESC LIMIT 1    "
SELECT count( *) FROM party        
SELECT staff.last_name FROM Staff JOIN Complaints ON staff.staff_id = Complaints.staff_id JOIN Products ON Complaints.product_id = products.product_id    ORDER BY products.product_price ASC LIMIT 1    
SELECT swimmer.name FROM swimmer     ORDER BY swimmer.meter_100 ASC   
"SELECT orders.order_id, orders.order_status FROM Orders JOIN Customers ON orders.customer_id = customers.customer_id WHERE customers.customer_name = 'Jeramie'       "
"SELECT count( *), manufacturers.Name FROM Products JOIN Manufacturers ON products.Manufacturer = manufacturers.Code  GROUP BY manufacturers.Name      "
"SELECT company.Company, company.Headquarters FROM company     ORDER BY company.Market_Value DESC   "
SELECT college.state FROM College JOIN Tryout ON college.cName = tryout.cName WHERE tryout.pPos = '1'       EXCEPT SELECT college.state FROM College JOIN Tryout ON college.cName = tryout.cName WHERE tryout.pPos = '1'       
SELECT rooms.roomName FROM Rooms JOIN Reservations ON rooms.RoomId = reservations.Room WHERE reservations.FirstName like '%ROY%'       
SELECT medicine_enzyme_interaction.interaction_type FROM medicine_enzyme_interaction JOIN enzyme ON medicine_enzyme_interaction.enzyme_id = enzyme.id JOIN medicine ON medicine_enzyme_interaction.medicine_id = medicine.id WHERE enzyme.name = 'ALA synthase' and medicine.name = 'Aripiprazole'       
SELECT count( *) FROM author        
SELECT product.product FROM product WHERE product.max_page_size = 'A4' or product.pages_per_minute_color < 5       
SELECT sum( customer.acc_bal) FROM customer WHERE customer.state = 'Utah' or customer.state = 'Texas'       
"SELECT employees.FIRST_NAME, employees.LAST_NAME, employees.HIRE_DATE FROM employees WHERE employees.DEPARTMENT_ID = (SELECT employees.DEPARTMENT_ID FROM employees WHERE employees.FIRST_NAME = 'Clara'       ) and employees.FIRST_NAME != 'Clara'       "
SELECT count( border_info.border) FROM border_info WHERE border_info.state_name = '1'       
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and location.STREET_NAME = '1'       "
"SELECT member.Name, member.Member_ID FROM member WHERE member.Membership_card = '1' or member.Age < 1       "
SELECT employees.Role_Code FROM Employees  GROUP BY employees.Role_Code  ORDER BY count( *) DESC LIMIT 1    
SELECT faculty.Fname FROM Faculty WHERE faculty.Rank = 'Professor'    ORDER BY faculty.Fname ASC   
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT course_authors_and_tutors.login_name FROM Course_Authors_and_Tutors JOIN Courses ON course_authors_and_tutors.author_id = courses.author_id WHERE courses.course_name = 'advanced database'       
SELECT actor.Character FROM actor     ORDER BY actor.age DESC   
SELECT services.service_name FROM Services        EXCEPT SELECT services.service_name FROM Services JOIN Party_Services ON services.service_id = T3.service_id        
SELECT state.population FROM state WHERE state.state_name in (SELECT river.traverse FROM river WHERE river.river_name = '1'       )       
SELECT student.LName FROM Student JOIN Member_of_club ON student.StuID = Member_of_club.StuID JOIN Club ON Member_of_club.ClubID = club.ClubID WHERE club.ClubName = 'Bootup Baltimore'       
"SELECT apartment_buildings.building_address, apartment_buildings.building_phone FROM Apartment_Buildings WHERE apartment_buildings.building_manager = 'Brenden'       "
SELECT highlow.state_name FROM highlow WHERE highlow.highest_elevation = (SELECT max( highlow.highest_elevation) FROM highlow        )       
"SELECT avg( station.lat), avg( station.long) FROM trip JOIN station        "
SELECT problems.problem_id FROM Problems WHERE problems.date_problem_reported > '1978-06-26'       
SELECT count( *) FROM university WHERE university.School_ID NOT IN (SELECT basketball_match.School_ID FROM basketball_match        )       
"SELECT employees.FIRST_NAME, employees.LAST_NAME FROM employees WHERE employees.DEPARTMENT_ID = 70 or employees.DEPARTMENT_ID = 90       "
"SELECT products.product_id, products.product_type_code FROM Products    ORDER BY products.product_price ASC LIMIT 1    "
SELECT climber.Name FROM climber WHERE climber.Country != 'Switzerland'       
"SELECT complaints.complaint_status_code, count( *) FROM Complaints WHERE complaints.complaint_type_code = 'Product Failure' GROUP BY complaints.complaint_status_code      "
SELECT member.Name FROM member WHERE member.Country = 'United States' or member.Country = 'Canada'       
SELECT courses.course_name FROM Courses JOIN Student_Course_Registrations ON courses.course_id = T3.course_id JOIN Students ON T3.student_id = students.student_id  GROUP BY courses.course_name  ORDER BY count( *) DESC LIMIT 1    
"SELECT election.Delegate, county.County_name FROM election JOIN county ON election.District = county.County_Id        "
"SELECT sum( customer.acc_bal), customer.state FROM customer WHERE customer.credit_score > 100 GROUP BY customer.state      "
SELECT sum( publication.citation_num) FROM publication JOIN journal ON publication.jid = journal.jid WHERE journal.name = 'PVLDB' and publication.year < 2005       
SELECT DISTINCT paper.paperId FROM paper WHERE paper.year = (SELECT max( paper.year) FROM paper        )       
"SELECT customers.customer_id, customers.first_name, count( *) FROM Customers JOIN Bookings ON customers.customer_id = bookings.customer_id  GROUP BY bookings.customer_id      "
SELECT DISTINCT financial_transactions.transaction_type FROM Financial_Transactions        
SELECT buildings.name FROM buildings     ORDER BY buildings.Height DESC   
SELECT player.Position FROM player WHERE player.Points > 20     INTERSECT SELECT player.Position FROM player WHERE player.Points < 10         
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN paperKeyphrase ON paper.paperId = T2.paperId JOIN journal ON paper.journalId = journal.journalId WHERE journal.journalName = 'Cell' and paper.year = 2015       
SELECT count( *) FROM Allergy_Type WHERE allergy_type.AllergyType = 'animal'       
SELECT movie.title FROM cast JOIN actor ON T2.aid = actor.aid JOIN movie WHERE actor.name = 'Robin Wright'       
SELECT shop.Address FROM shop     ORDER BY shop.Open_Year ASC   
SELECT allergy_type.AllergyType FROM Allergy_Type WHERE allergy_type.Allergy = '1'       
SELECT dorm_amenity.amenity_name FROM Dorm_amenity     ORDER BY dorm_amenity.amenity_name ASC   
"SELECT count( *), block.BlockCode FROM Room JOIN Block ON room.BlockFloor = block.BlockFloor  GROUP BY block.BlockCode      "
SELECT mountain.mountain_name FROM mountain WHERE mountain.mountain_altitude = (SELECT max( mountain.mountain_altitude) FROM mountain        )       
"SELECT course.title, course.credits FROM course JOIN section ON course.course_id = section.course_id JOIN classroom ON section.building = classroom.building WHERE classroom.capacity = (SELECT max( classroom.capacity) FROM classroom        )       "
"SELECT max( student.STU_GPA), avg( student.STU_GPA), min( student.STU_GPA), student.DEPT_CODE FROM STUDENT  GROUP BY student.DEPT_CODE      "
SELECT DISTINCT count(DISTINCT trip.bike_id) FROM trip        
SELECT department.dept_name FROM department    ORDER BY department.budget ASC LIMIT 1    
SELECT volume.Issue_Date FROM volume JOIN artist ON volume.Artist_ID = artist.Artist_ID WHERE artist.Age <= 23       
"SELECT company.Company, company.Main_Industry FROM company WHERE company.Company_ID NOT IN (SELECT station_company.Company_ID FROM station_company        )       "
SELECT count( *) FROM buildings        
"SELECT train.Railway_ID, railway.Location FROM train JOIN railway ON train.Railway_ID = railway.Railway_ID  GROUP BY train.Railway_ID HAVING count( *) > 1     "
SELECT member.Name FROM member     ORDER BY member.Name ASC   
SELECT count( *) FROM Inst        
SELECT checkin.count FROM checkin JOIN business ON checkin.business_id = business.business_id WHERE business.name = 'Cafe Zinho' and checkin.day = 'Friday'       
SELECT * FROM Customer WHERE customer.State = 'NY'       
SELECT claims.Effective_Date FROM Claims JOIN Settlements ON claims.Claim_ID = settlements.Claim_ID  GROUP BY claims.Effective_Date  ORDER BY sum( settlements.Settlement_Amount) DESC LIMIT 1    
SELECT * FROM Customer WHERE customer.State = 'NY'       
SELECT reviewer.name FROM Reviewer       UNION SELECT movie.title FROM Movie         
"SELECT member.Name, performance.Date FROM member JOIN member_attendance ON member.Member_ID = member_attendance.Member_ID JOIN performance ON member_attendance.Performance_ID = performance.Performance_ID     ORDER BY performance.Attendance DESC   "
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId JOIN venue ON paper.venueId = venue.venueId WHERE author.authorName = '1' and venue.venueName = '1'       
SELECT count( *) FROM state        
"SELECT aircraft.name, aircraft.distance FROM aircraft        "
SELECT count( *) FROM Student WHERE student.Age = 18       
SELECT DISTINCT count(DISTINCT business.name) FROM business JOIN category ON business.business_id = category.business_id WHERE business.city = '1' and category.category_name = '1'       
SELECT state.capital FROM state WHERE state.population = (SELECT max( state.population) FROM state        )       
SELECT albums.Label FROM Albums  GROUP BY albums.Label  ORDER BY count( *) DESC LIMIT 1    
SELECT student.STU_FNAME FROM STUDENT JOIN ENROLL ON student.STU_NUM = ENROLL.STU_NUM JOIN CLASS ON ENROLL.CLASS_CODE = class.CLASS_CODE WHERE class.CRS_CODE = 'ACCT-211' and student.STU_LNAME like '%S%'       
"SELECT hotels.pets_allowed_yn, avg( hotels.price_range) FROM Hotels  GROUP BY hotels.pets_allowed_yn      "
SELECT DISTINCT count(DISTINCT film.language_id) FROM film        
SELECT products.Name FROM Products JOIN Manufacturers ON products.Manufacturer = manufacturers.Code WHERE manufacturers.Name = 'Creative Labs'     INTERSECT SELECT products.Name FROM Products JOIN Manufacturers ON products.Manufacturer = manufacturers.Code WHERE manufacturers.Name = 'Sony'         
SELECT school_details.Nickname FROM school_details WHERE school_details.Division != 'Division 1'       
"SELECT rooms.roomName, rooms.RoomId FROM Rooms WHERE rooms.basePrice > 160 and rooms.maxOccupancy > 2       "
"SELECT customer.cust_name, customer.acc_type, customer.acc_bal FROM customer    ORDER BY customer.credit_score DESC LIMIT 1    "
"SELECT employee.EMP_FNAME, course.CRS_DESCRIPTION FROM EMPLOYEE JOIN CLASS ON employee.EMP_NUM = CLASS.PROF_NUM JOIN COURSE ON CLASS.CRS_CODE = course.CRS_CODE        "
SELECT count( *) FROM city WHERE city.County_ID in (SELECT county_public_safety.County_ID FROM county_public_safety WHERE county_public_safety.Population > 20000       )       
"SELECT accounts.customer_id, customers.customer_first_name, customers.customer_last_name FROM Accounts JOIN Customers ON accounts.customer_id = customers.customer_id  GROUP BY accounts.customer_id  ORDER BY count( *) DESC LIMIT 1    "
SELECT count( patient.SSN) FROM Patient JOIN Physician ON patient.PCP = physician.EmployeeID JOIN Prescribes ON physician.EmployeeID = T3.Physician WHERE physician.Name = 'John Dorian'       
SELECT student_course_attendance.student_id FROM Student_Course_Attendance WHERE student_course_attendance.course_id = 301   ORDER BY student_course_attendance.date_of_attendance DESC LIMIT 1    
SELECT technician.Name FROM technician JOIN repair_assignment ON technician.technician_id = repair_assignment.technician_id JOIN machine ON repair_assignment.Machine_ID = machine.Machine_ID WHERE machine.value_points > 70       
SELECT department.DEPT_NAME FROM DEPARTMENT JOIN STUDENT ON department.DEPT_CODE = student.DEPT_CODE    ORDER BY student.STU_GPA ASC LIMIT 1    
"SELECT race.Name, race.Class, race.Date FROM race        "
SELECT department.DEPT_NAME FROM DEPARTMENT JOIN COURSE ON department.DEPT_CODE = course.DEPT_CODE WHERE course.CRS_DESCRIPTION like '%Statistics%'       
SELECT artist.Name FROM Artist JOIN Album ON artist.ArtistId = album.ArtistId  GROUP BY artist.Name  ORDER BY count( *) DESC LIMIT 1    
SELECT manager.Name FROM manager    ORDER BY manager.Age DESC LIMIT 1    
SELECT representative.Lifespan FROM representative WHERE representative.State = 'New York' or representative.State = 'Indiana'       
"SELECT station.city, count( *) FROM station  GROUP BY station.city HAVING count( *) >= 15     "
SELECT city.city_name FROM city WHERE city.population = (SELECT max( city.population) FROM city WHERE city.state_name = '1'       ) and city.state_name = '1'       
"SELECT airports.name, airports.city, routes.dst_apid FROM airports JOIN routes ON airports.apid = routes.src_apid  GROUP BY routes.src_apid  ORDER BY count( *) DESC LIMIT 1    "
"SELECT phone.Hardware_Model_name, phone.Company_name FROM phone WHERE phone.Accreditation_type like '%Full%'       "
SELECT state.state_name FROM state WHERE state.population = (SELECT max( state.population) FROM state        )       
"SELECT documents.Document_ID, documents.Document_Name FROM Documents        "
SELECT customers.customer_status_code FROM Customers  GROUP BY customers.customer_status_code  ORDER BY count( *) ASC LIMIT 1    
SELECT count( *) FROM Ref_Document_Types        
SELECT DISTINCT nurse.Name FROM Nurse JOIN Undergoes ON nurse.EmployeeID = T2.AssistingNurse        
SELECT sum( claims.Amount_Claimed) FROM Claims        
SELECT department.DPhone FROM Department WHERE department.Room = '268'       
SELECT employees.Role_Code FROM Employees JOIN Roles ON employees.Role_Code = roles.Role_Code  GROUP BY employees.Role_Code HAVING count( *) >= 3     
SELECT DISTINCT film.Director FROM film        
SELECT count( *) FROM county_public_safety        
SELECT school.Enrollment FROM school WHERE school.Denomination != 'Catholic'       
SELECT count( *) FROM Hotels        
SELECT course_authors_and_tutors.address_line_1 FROM Course_Authors_and_Tutors        
SELECT person_friend.friend FROM PersonFriend JOIN Person ON person_friend.friend = person.name WHERE person.name = 'Bob'       
"SELECT claims.Claim_ID, count( *) FROM Claims JOIN Settlements ON claims.Claim_ID = settlements.Claim_ID  GROUP BY claims.Claim_ID      "
"SELECT climber.Name, mountain.Height FROM climber JOIN mountain ON climber.Mountain_ID = mountain.Mountain_ID        "
"SELECT student.Fname, student.LName FROM Student WHERE student.Major != (SELECT student.Major FROM Student  GROUP BY student.Major  ORDER BY count( *) DESC LIMIT 1    )       "
SELECT count( *) FROM market WHERE market.Number_cities < 300       
SELECT DISTINCT college.state FROM College JOIN Tryout ON college.cName = tryout.cName WHERE tryout.decision = '1'       
"SELECT customers.phone_number, customers.email_address FROM Customers WHERE customers.amount_outstanding > 2000       "
SELECT person_friend.name FROM PersonFriend JOIN Person ON person_friend.friend = person.name WHERE person.city = '1'       
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' and paper.year < 1       
SELECT apartment_buildings.building_address FROM Apartment_Buildings JOIN Apartments ON apartment_buildings.building_id = apartments.building_id WHERE apartments.bathroom_count > 2       
SELECT DISTINCT song.artist_name FROM song WHERE song.languages = 'english'       EXCEPT SELECT DISTINCT song.artist_name FROM song WHERE song.rating > 8       
"SELECT faculty.Fname, faculty.Lname FROM Faculty JOIN Faculty_Participates_in ON faculty.FacID = Faculty_Participates_in.FacID JOIN Activity ON Faculty_Participates_in.actid = Activity.actid JOIN Participates_in ON Activity.actid = Participates_in.actid JOIN Student ON Participates_in.stuid = student.StuID  GROUP BY faculty.FacID  ORDER BY count( *) DESC LIMIT 1    "
SELECT count( *) FROM employee        
"SELECT airlines.name, routes.alid FROM airlines JOIN routes ON airlines.alid = routes.alid  GROUP BY routes.alid  ORDER BY count( *) DESC LIMIT 1    "
SELECT count( *) FROM Band        
SELECT count( *) FROM exhibition JOIN exhibition_record ON exhibition.Exhibition_ID = exhibition_record.Exhibition_ID WHERE exhibition_record.Attendance > 100 or exhibition.Ticket_Price < 10       
SELECT employee.eid FROM employee        EXCEPT SELECT certificate.eid FROM certificate        
SELECT count( *) FROM author        
SELECT party.Party FROM party  GROUP BY party.Party HAVING count( *) >= 2     
SELECT products.product_price FROM Products WHERE products.product_id NOT IN (SELECT complaints.product_id FROM Complaints        )       
"SELECT student.Fname, student.Age FROM Student WHERE student.StuID in (SELECT sports_info.StuID FROM SportsInfo WHERE sports_info.SportName = 'Football'       )       "
SELECT DISTINCT paper.paperId FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE venue.venueName = '1'       
SELECT count( *) FROM Documents WHERE documents.Document_ID NOT IN (SELECT documents_with_expenses.Document_ID FROM Documents_with_Expenses        )       
SELECT DISTINCT teachers.FirstName FROM teachers JOIN list WHERE list.Grade = 1       
"SELECT list.Classroom, count( *) FROM list WHERE list.Grade = 0 GROUP BY list.Classroom      "
SELECT orders.date_order_placed FROM Orders JOIN Shipments ON orders.order_id = shipments.order_id WHERE shipments.shipment_tracking_number = '3452'       
SELECT technician.Starting_Year FROM technician WHERE technician.Team = 'CLE'     INTERSECT SELECT technician.Starting_Year FROM technician WHERE technician.Team = 'CWS'         
SELECT sum( order_items.order_quantity) FROM Order_Items JOIN Customer_Orders ON order_items.order_id = customer_orders.order_id WHERE customer_orders.order_status = 'Cancelled'       
SELECT city.city_name FROM city WHERE city.state_name = '1'       
SELECT lake.lake_name FROM lake WHERE lake.state_name = '1'       
"SELECT bookings.Planned_Delivery_Date, bookings.Actual_Delivery_Date FROM Bookings        "
"SELECT station.name, station.id FROM station JOIN status ON station.id = T2.station_id  GROUP BY T2.station_id HAVING avg( T2.bikes_available) > 1    UNION SELECT station.name, station.id FROM station WHERE station.installation_date like '%1%'        "
"SELECT faculty.Rank, count( *) FROM Faculty JOIN Faculty_Participates_in ON faculty.FacID = Faculty_Participates_in.FacID JOIN Activity ON Faculty_Participates_in.actid = Activity.actid JOIN Participates_in ON Activity.actid = Participates_in.actid JOIN Student ON Participates_in.stuid = student.StuID  GROUP BY faculty.Rank      "
SELECT lake.lake_name FROM lake WHERE lake.area > 1       
SELECT DISTINCT count(DISTINCT user.name) FROM user JOIN review ON user.user_id = review.user_id JOIN business ON review.business_id = business.business_id JOIN category ON business.business_id = category.business_id WHERE business.city = '1' and business.name = '1' and business.state = '1' and category.category_name = '1'       
SELECT student.Fname FROM Student JOIN Lives_in ON student.StuID = Lives_in.stuid JOIN Dorm ON Lives_in.dormid = dorm.dormid WHERE dorm.dorm_name = 'Smith Hall'       
SELECT county_public_safety.Name FROM county_public_safety    ORDER BY county_public_safety.Population DESC LIMIT 1    
SELECT river.river_name FROM river WHERE river.length > 1 and river.traverse = '1'       
SELECT count( *) FROM Users WHERE users.user_login = '1'       
"SELECT department.dept_name, department.building FROM department    ORDER BY department.budget DESC LIMIT 1    "
SELECT count( city.city_name) FROM city WHERE city.city_name = '1'       
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = geographic.CITY_NAME JOIN RESTAURANT ON geographic.CITY_NAME = restaurant.CITY_NAME WHERE geographic.REGION = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
"SELECT avg( person.age), person.job FROM Person  GROUP BY person.job      "
SELECT volume.Song FROM volume JOIN artist ON volume.Artist_ID = artist.Artist_ID WHERE artist.Age >= 32       
SELECT DISTINCT paper.paperId FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 1 and venue.venueName = '1'       
"SELECT department.dept_name, department.building FROM department     ORDER BY department.budget DESC   "
SELECT volume.Issue_Date FROM volume JOIN artist ON volume.Artist_ID = artist.Artist_ID WHERE artist.Artist = 'Gorgoroth'       
SELECT film.Title FROM film WHERE film.Film_ID NOT IN (SELECT film_market_estimation.Film_ID FROM film_market_estimation        )       
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and location.STREET_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
"SELECT player.name_first, player.name_last, player.player_id, count( *) FROM player JOIN all_star ON player.player_id = all_star.player_id  GROUP BY all_star.player_id  ORDER BY count( *) DESC LIMIT 1    "
SELECT documents_to_be_destroyed.Destroyed_by_Employee_ID FROM Documents_to_be_Destroyed       UNION SELECT documents_to_be_destroyed.Destruction_Authorised_by_Employee_ID FROM Documents_to_be_Destroyed         
SELECT phone.Hardware_Model_name FROM phone JOIN screen_mode ON phone.screen_mode = screen_mode.Graphics_mode JOIN chip_model ON phone.chip_model = chip_model.Model_name WHERE screen_mode.Type = 'Text' or chip_model.RAM_MiB > 32       
SELECT movie.title FROM Movie WHERE movie.director = 'Steven Spielberg'       
"SELECT DISTINCT architect.name, architect.nationality FROM architect JOIN mill ON architect.id = T2.architect_id        "
"SELECT max( settlements.Settlement_Amount), min( settlements.Settlement_Amount) FROM Settlements        "
"SELECT count( *), person.gender FROM Person WHERE person.age < 40 GROUP BY person.gender      "
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId JOIN venue ON paper.venueId = venue.venueId WHERE author.authorName = '1' and venue.venueName = '1'       
SELECT count( *) FROM GEOGRAPHIC        
"SELECT max( market.Number_cities), min( market.Number_cities) FROM market        "
SELECT book_club.Publisher FROM book_club WHERE book_club.Year = 1989     INTERSECT SELECT book_club.Publisher FROM book_club WHERE book_club.Year = 1990         
SELECT river.traverse FROM river WHERE river.length = (SELECT max( river.length) FROM river        )       
"SELECT DISTINCT count(DISTINCT paper.paperId), writes.authorId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' and paper.year > 1 GROUP BY writes.authorId   ORDER BY count( paper.paperId) DESC   "
SELECT reference_document_types.Document_Type_Code FROM Ref_Document_Types WHERE reference_document_types.Document_Type_Name = 'Paper'       
SELECT count( *) FROM venue        
SELECT DISTINCT paper.paperId FROM paperDataset JOIN dataset JOIN paper WHERE dataset.datasetName = 'WebKB'       
SELECT count( *) FROM routes JOIN airports ON routes.src_apid = airports.apid WHERE airports.country = 'Canada'       
SELECT DISTINCT count(DISTINCT river.traverse) FROM river WHERE river.length = (SELECT DISTINCT min(DISTINCT river.length) FROM river        )       
SELECT list.LastName FROM list WHERE list.Classroom = 111       
SELECT DISTINCT paper.paperId FROM paper WHERE paper.year != 1       
SELECT count( *) FROM list        
SELECT person_friend.name FROM PersonFriend WHERE person_friend.friend = 'Alice' and person_friend.year = (SELECT min( person_friend.year) FROM PersonFriend WHERE person_friend.friend = 'Alice'       )       
SELECT DISTINCT count(DISTINCT products.product_type_code) FROM Products        
"SELECT station.Name, station.Total_Passengers FROM station WHERE station.Location != 'London'       "
SELECT count( *) FROM Customers JOIN Customers_Cards WHERE customers.customer_first_name = 'Art' and customers.customer_last_name = 'Turcotte'       
SELECT instruments.Instrument FROM Instruments JOIN Songs ON instruments.SongId = songs.SongId WHERE songs.Title = 'Le Pop'       
"SELECT residents.resident_id, residents.other_details, count( *) FROM Residents JOIN Residents_Services ON residents.resident_id = Residents_Services.resident_id JOIN Services ON Residents_Services.service_id = services.service_id  GROUP BY residents.resident_id   ORDER BY count( *) DESC   "
"SELECT furniture.Name, furniture.Num_of_Component FROM furniture    ORDER BY furniture.Market_Rate ASC LIMIT 1    "
SELECT count( *) FROM actor        
"SELECT max( wine.Price), max( wine.Score) FROM wine WHERE wine.Appelation = 'St. Helena'       "
SELECT DISTINCT paper.paperId FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE venue.venueName = '1'       
"SELECT building.Name, count( *) FROM building JOIN Institution ON building.building_id = institution.building_id  GROUP BY building.Name      "
SELECT DISTINCT writes.authorId FROM writes JOIN author ON writes.authorId = T2.authorId JOIN paper ON writes.paperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = 'Bacterial Wilt' and paper.year = 2016       
SELECT research_outcomes.outcome_description FROM Research_Outcomes JOIN Project_Outcomes ON research_outcomes.outcome_code = Project_Outcomes.outcome_code JOIN Projects ON Project_Outcomes.project_id = projects.project_id WHERE projects.project_details = 'sint'       
SELECT max( postseason.wins) FROM postseason JOIN team WHERE team.name = 'Boston Red Stockings'       
"SELECT count( *), avg( student.Age), student.city_code FROM Student WHERE student.Sex = 'M' GROUP BY student.city_code      "
SELECT projects.Project_Details FROM Projects JOIN Documents ON projects.Project_ID = documents.Project_ID WHERE documents.Document_Name = 'King Book'       
SELECT temperature.Jan FROM temperature JOIN city ON temperature.City_ID = city.City_ID WHERE city.City = 'Shanghai'       
"SELECT artist.artist_name, artist.country FROM artist JOIN song ON artist.artist_name = song.artist_name    ORDER BY song.rating DESC LIMIT 1    "
SELECT actor.name FROM actor WHERE actor.birth_city = 'Austin' and actor.birth_year > 1980       
SELECT city.state_name FROM city WHERE city.population = (SELECT max( city.population) FROM city JOIN state ON city.state_name = T23.state_name        )       
"SELECT section.semester, section.year FROM section JOIN course ON section.course_id = course.course_id  GROUP BY section.course_id  ORDER BY count( *) DESC LIMIT 1    "
"SELECT reference_document_types.Document_Type_Code, reference_document_types.Document_Type_Name, reference_document_types.Document_Type_Description FROM Ref_Document_Types        "
"SELECT storm.Name, count( *) FROM storm JOIN affected_region ON storm.Storm_ID = affected_region.Storm_ID  GROUP BY storm.Name      "
SELECT technician.Name FROM technician JOIN repair_assignment ON technician.technician_id = repair_assignment.technician_id JOIN machine ON repair_assignment.Machine_ID = machine.Machine_ID WHERE machine.value_points > 70       
"SELECT count( *), products.product_id FROM Products  GROUP BY products.product_id      "
SELECT count( *) FROM Financial_Transactions JOIN Accounts ON financial_transactions.account_id = accounts.account_id WHERE accounts.account_name = '337'       
"SELECT count( *), artist.gender FROM artist  GROUP BY artist.gender      "
SELECT station.name FROM station WHERE station.lat < 37.5       
"SELECT employee.EMP_JOBCODE, count( *) FROM EMPLOYEE  GROUP BY employee.EMP_JOBCODE  ORDER BY count( *) DESC LIMIT 1    "
SELECT volume.Song FROM volume    ORDER BY volume.Weeks_on_Top DESC LIMIT 1    
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN paperKeyphrase ON paper.paperId = T2.paperId JOIN journal ON paper.journalId = journal.journalId WHERE journal.journalName = '1' and paper.year = 1       
SELECT match_season.Position FROM match_season JOIN team ON match_season.Team = team.Team_id  GROUP BY match_season.Position  ORDER BY count( *) DESC LIMIT 1    
SELECT count( *) FROM Customers        
"SELECT basketball_match.Team_Name, basketball_match.ACC_Regular_Season FROM basketball_match JOIN university ON basketball_match.School_ID = university.School_ID    ORDER BY university.Founded ASC LIMIT 1    "
SELECT DISTINCT key_phrase.keyphraseId FROM keyphrase JOIN paperKeyphrase ON key_phrase.keyphraseId = paperKeyphrase.keyphraseId JOIN paper ON paperKeyphrase.paperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Luke Zettlemoyer'       
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and location.STREET_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT DISTINCT albums.Label FROM Albums        
"SELECT DISTINCT reviewer.name, movie.title, rating.stars FROM Reviewer JOIN Rating ON reviewer.rID = rating.rID JOIN Movie ON rating.mID = movie.mID WHERE movie.director = '1'       "
"SELECT student.Fname, student.LName FROM Student        "
SELECT faculty.Building FROM Faculty  GROUP BY faculty.Building  ORDER BY count( *) DESC LIMIT 1    
SELECT program.Name FROM program     ORDER BY program.Launch ASC   
SELECT driver.Name FROM driver WHERE driver.Home_city = 'Hartford' and driver.Age < 40       
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId JOIN venue ON paper.venueId = venue.venueId WHERE key_phrase.keyphraseName = 'TAIL' and venue.venueName = 'NIPS'       
SELECT companies.name FROM Companies WHERE companies.Headquarters != 'USA'       
"SELECT customers.customer_name, count( *) FROM Customers JOIN Orders ON customers.customer_id = orders.customer_id  GROUP BY customers.customer_name HAVING count( *) >= 2     "
SELECT instruments.Instrument FROM Instruments JOIN Band ON instruments.BandmateId = band.Id WHERE band.Lastname = 'Heilo'       
SELECT movie.budget FROM movie WHERE movie.title = 'Finding Nemo'       
"SELECT guests.guest_first_name, guests.guest_last_name FROM Guests JOIN Apartment_Bookings ON guests.guest_id = apartment_bookings.guest_id WHERE apartment_bookings.booking_status_code = 'Confirmed'       "
"SELECT rooms.decor, count( *) FROM Rooms WHERE rooms.bedType = 'King' GROUP BY rooms.decor      "
"SELECT products.Product_Name, products.Product_Type_Code FROM Products        "
SELECT region.Region_name FROM region     ORDER BY region.Region_name ASC   
SELECT count( *) FROM venue        
SELECT state.density FROM state WHERE state.state_name in (SELECT river.traverse FROM river WHERE river.length = (SELECT max( river.length) FROM river        )       )       
SELECT DISTINCT departments.DEPARTMENT_NAME FROM departments JOIN employees ON departments.DEPARTMENT_ID = T2.DEPARTMENT_ID        
SELECT player.pName FROM Player WHERE player.HS between 500 AND 1500       
SELECT DISTINCT customer.FirstName FROM Customer JOIN Invoice ON customer.CustomerId = T2.CustomerId WHERE customer.Country = 'Brazil'       
SELECT DISTINCT writes.authorId FROM writes JOIN paper ON writes.paperId = paper.paperId JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 1 and venue.venueName = '1'       
SELECT sum( publication.citation_num) FROM publication JOIN conference ON publication.cid = conference.cid WHERE conference.name = 'VLDB' and publication.year < 2005       
SELECT city.city_name FROM city WHERE city.population = (SELECT max( city.population) FROM city        )       
"SELECT avg( products.Price), manufacturers.Name FROM Products JOIN Manufacturers ON products.Manufacturer = manufacturers.Code  GROUP BY manufacturers.Name HAVING avg( products.Price) >= 150     "
"SELECT staff.staff_id, staff.staff_gender FROM Staff JOIN Staff_Department_Assignments ON staff.staff_id = staff_department_assignments.staff_id WHERE staff_department_assignments.job_title_code = 'Department Manager'       "
"SELECT count( *), ship.Flag FROM Ship  GROUP BY ship.Flag      "
"SELECT pilot.Pilot_name, aircraft.Fleet_Series FROM pilot JOIN pilot_record ON pilot.Pilot_ID = pilot_record.Pilot_ID JOIN aircraft ON pilot_record.Aircraft_ID = aircraft.Aircraft_ID     ORDER BY pilot.Rank ASC   "
SELECT DISTINCT faculty.Lname FROM Faculty JOIN Faculty_Participates_in ON faculty.FacID = Faculty_Participates_in.FacID JOIN Activity ON Faculty_Participates_in.actid = activity.actid WHERE activity.activity_name = 'Canoeing' or activity.activity_name = 'Kayaking'       
SELECT jobs.JOB_TITLE FROM jobs WHERE jobs.MIN_SALARY > 9000       
SELECT DISTINCT player.pName FROM Player WHERE player.pName like '%a%'       
"SELECT order_items.order_id, count( *) FROM Order_Items JOIN Orders ON order_items.order_id = orders.order_id  GROUP BY order_items.order_id      "
SELECT * FROM Albums WHERE albums.Year = 2012       
SELECT city.city_name FROM city        
SELECT state.state_name FROM state WHERE state.area = (SELECT min( state.area) FROM state        )       
SELECT student.city_code FROM Student  GROUP BY student.city_code  ORDER BY count( *) DESC LIMIT 1    
SELECT staff_department_assignments.staff_id FROM Staff_Department_Assignments WHERE staff_department_assignments.date_assigned_to < (SELECT max( staff_department_assignments.date_assigned_to) FROM Staff_Department_Assignments WHERE staff_department_assignments.job_title_code = 'Clerical Staff'       )       
"SELECT employee.EMP_FNAME, class.CRS_CODE FROM EMPLOYEE JOIN CLASS ON employee.EMP_NUM = class.PROF_NUM        "
SELECT employee.Phone FROM Employee        
SELECT DISTINCT count(DISTINCT allergy_type.Allergy) FROM Allergy_Type        
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' and paper.year < 1       
"SELECT candidate.Support_rate, candidate.Consider_rate, candidate.Oppose_rate FROM candidate     ORDER BY candidate.Unsure_rate ASC   "
SELECT avg( entrepreneur.Money_Requested) FROM entrepreneur        
SELECT club.ClubLocation FROM Club WHERE club.ClubName = 'Hopkins Student Enterprises'       
"SELECT manufacturers.Name, manufacturers.Headquarter, manufacturers.Founder FROM Manufacturers    ORDER BY manufacturers.Revenue DESC LIMIT 1    "
SELECT reference_document_types.Document_Type_Code FROM Ref_Document_Types WHERE reference_document_types.Document_Type_Name = 'Paper'       
SELECT count( *) FROM Manufacturers WHERE manufacturers.Headquarter = 'Tokyo' or manufacturers.Headquarter = 'Beijing'       
SELECT count( *) FROM College        
SELECT count( *) FROM actor        
SELECT count( *) FROM county_public_safety        
SELECT count( *) FROM GEOGRAPHIC JOIN RESTAURANT ON geographic.CITY_NAME = restaurant.CITY_NAME WHERE geographic.REGION = '1' and restaurant.FOOD_TYPE = '1'       
SELECT DISTINCT count(DISTINCT sports_info.SportName) FROM SportsInfo        
SELECT count( *) FROM Draft_Copies WHERE draft_copies.document_id = 2       
SELECT DISTINCT paper.paperId FROM paperDataset JOIN dataset JOIN paper WHERE dataset.datasetName = 'WebKB'       
"SELECT stadium.id, count( *) FROM stadium JOIN game ON stadium.id = game.stadium_id  GROUP BY stadium.id      "
SELECT river.traverse FROM river WHERE river.length > 1       
SELECT clients.Customer_Name FROM Clients        EXCEPT SELECT clients.Customer_Name FROM Clients JOIN Bookings ON clients.Client_ID = T3.Customer_ID        
"SELECT count( *), avg( student.Age), student.city_code FROM Student  GROUP BY student.city_code      "
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' and paper.year < 1       
SELECT roles.Role_Description FROM Roles WHERE roles.Role_Name = 'Proof Reader'       
SELECT count( *) FROM actor        
SELECT DISTINCT author.authorName FROM author JOIN writes ON author.authorId = writes.authorId JOIN paper ON writes.paperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName like '%1%'       
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and location.STREET_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT city.state_name FROM city WHERE city.city_name = '1'       
SELECT avg( customer.credit_score) FROM customer JOIN bank ON customer.branch_ID = bank.branch_ID JOIN loan ON bank.branch_ID = T2.branch_ID        
SELECT sum( lessons.lesson_time) FROM Lessons JOIN Customers ON lessons.customer_id = customers.customer_id WHERE customers.first_name = 'Rylan' and customers.last_name = 'Goodwin'       
SELECT DISTINCT count(DISTINCT station.services) FROM station        
SELECT river.river_name FROM river WHERE river.length = (SELECT max( river.length) FROM river        )       
SELECT customers.town_city FROM Customers WHERE customers.customer_type_code = 'Good Credit Rating' GROUP BY customers.town_city  ORDER BY count( *) ASC LIMIT 1    
"SELECT student.Fname, student.LName, student.Age FROM Student WHERE student.Sex = 'F'       "
SELECT people.Name FROM people WHERE people.Height > 200 or people.Height < 190       
"SELECT trip.id, station.installation_date FROM trip JOIN station        "
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and location.STREET_NAME = '1' and restaurant.RATING > 1       "
SELECT count( *) FROM Video_Games        
SELECT player.name FROM player WHERE player.Points > (SELECT avg( player.Points) FROM player        )       
SELECT count( *) FROM Ref_Colors WHERE reference_colors.color_code NOT IN (SELECT products.color_code FROM Products        )       
"SELECT companies.name, companies.Assets_billion FROM Companies     ORDER BY companies.name ASC   "
SELECT station.Name FROM station JOIN train_station ON station.Station_ID = train_station.Station_ID  GROUP BY station.Name  ORDER BY count( *) DESC LIMIT 1    
"SELECT policies.Policy_Type_Code, count( *) FROM Policies  GROUP BY policies.Policy_Type_Code      "
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE restaurant.CITY_NAME in (SELECT geographic.CITY_NAME FROM GEOGRAPHIC WHERE geographic.REGION = '1'       )       "
SELECT documents.document_id FROM Documents WHERE documents.document_status_code = '1' and documents.document_type_code = '1'       
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' and paper.year > 1       
"SELECT party.Lieutenant_Governor, party.Comptroller FROM party WHERE party.Party = '1'       "
SELECT ship.Name FROM ship JOIN mission ON ship.Ship_ID = mission.Ship_ID WHERE mission.Launched_Year > 1928       
"SELECT faculty.Rank, count( *) FROM Faculty JOIN Faculty_Participates_in ON faculty.FacID = Faculty_Participates_in.FacID JOIN Activity ON Faculty_Participates_in.actid = Activity.actid JOIN Participates_in ON Activity.actid = Participates_in.actid JOIN Student ON Participates_in.stuid = student.StuID  GROUP BY faculty.Rank      "
SELECT apartments.apt_number FROM Apartments WHERE apartments.apt_type_code = 'Flat'       
SELECT school.Location FROM school     ORDER BY school.Enrollment ASC   
SELECT count( *) FROM circuits        
SELECT captain.Name FROM captain    ORDER BY captain.age ASC LIMIT 1    
SELECT parties.party_email FROM Parties JOIN Party_Forms ON parties.party_id = party_forms.party_id WHERE party_forms.form_id = (SELECT party_forms.form_id FROM Party_Forms  GROUP BY party_forms.form_id  ORDER BY count( *) DESC LIMIT 1    )       
SELECT perpetrator.Date FROM perpetrator JOIN people ON perpetrator.People_ID = people.People_ID    ORDER BY people.Height DESC LIMIT 1    
"SELECT DISTINCT author.authorId, paper.paperId FROM author JOIN writes ON author.authorId = writes.authorId JOIN paper ON writes.paperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE author.authorName = '1' and key_phrase.keyphraseName = '1'       "
SELECT payment.amount FROM payment    ORDER BY payment.amount DESC LIMIT 1    
SELECT storm.Name FROM storm JOIN affected_region ON storm.Storm_ID = affected_region.Storm_ID JOIN region ON affected_region.Region_id = region.Region_id WHERE region.Region_name = 'Afghanistan'     INTERSECT SELECT storm.Name FROM storm JOIN affected_region ON storm.Storm_ID = affected_region.Storm_ID JOIN region ON affected_region.Region_id = region.Region_id WHERE region.Region_name = 'Albania'         
"SELECT student_course_enrolment.student_id, students.middle_name FROM Student_Course_Enrolment JOIN Students ON student_course_enrolment.student_id = students.student_id JOIN Courses ON student_course_enrolment.course_id = courses.course_id  GROUP BY student_course_enrolment.student_id HAVING count( *) <= 2     "
SELECT * FROM Students JOIN Student_Course_Registrations ON students.student_id = student_course_registrations.student_id WHERE student_course_registrations.student_id NOT IN (SELECT student_course_attendance.student_id FROM Student_Course_Attendance        )       
"SELECT financial_transactions.account_id, count( *) FROM Financial_Transactions  GROUP BY financial_transactions.account_id      "
SELECT DISTINCT count(DISTINCT student_course_enrolment.student_id) FROM Student_Course_Enrolment        
SELECT customer.cust_name FROM customer JOIN bank ON customer.branch_ID = bank.branch_ID JOIN loan ON bank.branch_ID = loan.branch_ID  GROUP BY customer.cust_name   ORDER BY sum( loan.amount) ASC   
SELECT bank.bname FROM bank    ORDER BY bank.no_of_customers DESC LIMIT 1    
"SELECT player.pName, player.HS FROM Player JOIN Tryout ON player.pID = tryout.pID WHERE tryout.decision = 'yes'       "
"SELECT count( *), products.product_id FROM Products  GROUP BY products.product_id      "
SELECT border_info.border FROM border_info WHERE border_info.state_name = '1'       
SELECT count( *) FROM Rooms WHERE rooms.maxOccupancy = 1       
SELECT course.title FROM course WHERE course.course_id NOT IN (SELECT prerequisite.course_id FROM prereq        )       
"SELECT customers.customer_phone, customers.customer_email FROM Customers WHERE customers.customer_first_name = 'Aniyah' and customers.customer_last_name = 'Feest'       "
SELECT shop.Shop_Name FROM shop JOIN stock ON shop.Shop_ID = T3.Shop_ID  GROUP BY shop.Shop_Name  ORDER BY count( *) DESC LIMIT 1    
"SELECT DISTINCT paper.journalId, venue.venueId FROM paper JOIN venue ON paper.venueId = venue.venueId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Peter Mertens'       "
SELECT employee.City FROM Employee JOIN Customer ON employee.EmployeeId = customer.SupportRepId WHERE customer.PostalCode = '70174'       
SELECT vehicles.vehicle_id FROM Vehicles        
SELECT DISTINCT people.Hometown FROM people JOIN gymnast ON people.People_ID = gymnast.Gymnast_ID WHERE gymnast.Total_Points > 57.5       
SELECT DISTINCT list.Grade FROM list WHERE list.Classroom = 103       
SELECT student_addresses.monthly_rental FROM Student_Addresses JOIN Addresses ON student_addresses.address_id = addresses.address_id WHERE addresses.state_province_county = 'Texas'       
SELECT store.Store_Name FROM store JOIN store_district ON store.Store_ID = store_district.Store_ID JOIN district ON store_district.District_ID = district.District_ID WHERE district.District_name = 'Khanewal District'       
SELECT people.Name FROM people WHERE people.People_ID NOT IN (SELECT perpetrator.People_ID FROM perpetrator        )       
SELECT problems.product_id FROM Problems JOIN Staff ON problems.reported_by_staff_id = staff.staff_id WHERE staff.staff_first_name = 'Dameon' and staff.staff_last_name = 'Frami'      UNION SELECT problems.product_id FROM Problems JOIN Staff ON problems.reported_by_staff_id = staff.staff_id WHERE staff.staff_first_name = 'Jolie' and staff.staff_last_name = 'Weber'        
SELECT state.area FROM state WHERE state.state_name = '1'       
SELECT state.state_name FROM state WHERE state.density = (SELECT max( state.density) FROM state        )       
SELECT section.year FROM section JOIN course ON section.course_id = course.course_id  GROUP BY section.year  ORDER BY count( *) DESC LIMIT 1    
SELECT product_suppliers.supplier_id FROM Product_Suppliers  GROUP BY product_suppliers.supplier_id HAVING avg( product_suppliers.total_amount_purchased) > '50000' avg( product_suppliers.total_amount_purchased) < '30000'     
"SELECT school.Location, school_details.Nickname FROM school JOIN school_details ON school.School_ID = school_details.School_ID        "
SELECT count( *) FROM Apartment_Buildings        
"SELECT employees.first_name, employees.last_name FROM employees WHERE employees.first_name = 'Nancy' and employees.last_name = 'Edwards'       "
SELECT products.Product_Name FROM Products  GROUP BY products.Product_Name HAVING avg( products.Product_Price) < 1000000     
"SELECT sum( grants.grant_amount), grants.organisation_id FROM Grants  GROUP BY grants.organisation_id      "
SELECT region.Region_name FROM region JOIN affected_region ON region.Region_id = T2.Region_id  GROUP BY region.Region_name HAVING count( *) >= 2     
SELECT country.Official_native_language FROM country JOIN match_season ON country.Country_id = match_season.Country WHERE match_season.College = 'Maryland' or match_season.College = 'Duke'       
SELECT director.name FROM director JOIN directed_by ON director.did = T3.did JOIN tv_series WHERE tv_series.release_year = 1 and tv_series.title = '1'       
"SELECT course.title, instructor.name FROM course JOIN department ON course.dept_name = department.dept_name JOIN instructor ON department.dept_name = instructor.dept_name JOIN teaches ON instructor.ID = teaches.ID WHERE teaches.year = 2008    ORDER BY course.title ASC   "
"SELECT pilot.Pilot_name, aircraft.Model FROM pilot JOIN pilot_record ON pilot.Pilot_ID = pilot_record.Pilot_ID JOIN aircraft ON pilot_record.Aircraft_ID = aircraft.Aircraft_ID        "
SELECT representative.Party FROM representative JOIN election ON representative.Representative_ID = election.Representative_ID    ORDER BY election.Votes ASC LIMIT 1    
"SELECT architect.name, architect.nationality, architect.id FROM architect WHERE architect.gender = 'male'    ORDER BY architect.name ASC   "
SELECT count( *) FROM airlines WHERE airlines.country = 'Russia'       
"SELECT DISTINCT list.FirstName, list.LastName FROM list        "
SELECT count( *) FROM Artist WHERE artist.ArtistId NOT IN (SELECT album.ArtistId FROM Album        )       
SELECT DISTINCT vocals.Type FROM Vocals        
SELECT trip.id FROM trip WHERE trip.duration >= (SELECT avg( trip.duration) FROM trip WHERE trip.zip_code = 94103       )       
SELECT state.state_name FROM state WHERE state.population = (SELECT min( state.population) FROM state        )       
"SELECT addresses.country, addresses.state_province_county FROM Addresses JOIN Staff ON addresses.address_id = staff.staff_address_id WHERE staff.first_name = 'Janessa' and staff.last_name = 'Sawayn'       "
"SELECT document_locations.Location_Code, count( *) FROM Document_Locations  GROUP BY document_locations.Location_Code      "
SELECT match_season.Position FROM match_season JOIN team ON match_season.Team = team.Team_id WHERE team.Name = 'Ryley Goldner'       
SELECT companies.Industry FROM Companies  GROUP BY companies.Industry  ORDER BY count( *) DESC LIMIT 1    
SELECT DISTINCT count(DISTINCT class.CRS_CODE) FROM CLASS        
SELECT count( *) FROM Player WHERE player.HS > 1000       
SELECT sum( bank.no_of_customers) FROM bank WHERE bank.city = 'New York City'       
SELECT customers.customer_name FROM Customers        EXCEPT SELECT customers.customer_name FROM Customers JOIN Customer_Orders ON customers.customer_id = T3.customer_id        
SELECT state.density FROM state WHERE state.population = (SELECT min( state.population) FROM state        )       
SELECT border_info.border FROM border_info WHERE border_info.state_name = '1'       
SELECT count( *) FROM GEOGRAPHIC        
"SELECT airlines.country, count( *) FROM airlines  GROUP BY airlines.country   ORDER BY count( *) DESC   "
SELECT reference_document_types.document_type_description FROM Ref_Document_Types WHERE reference_document_types.document_type_code = 'Paper'       
"SELECT DISTINCT paper.paperId, count(DISTINCT cite.citingPaperId) FROM paper JOIN cite ON paper.paperId = cite.citingPaperId JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 2012 and venue.venueName = 'ACL' GROUP BY paper.paperId HAVING count( cite.citingPaperId) > 7     "
"SELECT transactions.investor_id, avg( transactions.share_count) FROM Transactions  GROUP BY transactions.investor_id      "
SELECT student.LName FROM Student WHERE student.Sex = 'F' and student.city_code = 'BAL'      UNION SELECT student.LName FROM Student WHERE student.Sex = 'M' and student.Age < 20        
"SELECT cmi_cross_references.source_system_code, benefits_overpayments.council_tax_id FROM CMI_Cross_References JOIN Benefits_Overpayments ON cmi_cross_references.cmi_cross_ref_id = benefits_overpayments.cmi_cross_ref_id     ORDER BY benefits_overpayments.council_tax_id ASC   "
"SELECT max( customers.customer_code), min( customers.customer_code) FROM Customers        "
SELECT DISTINCT company.Main_Industry FROM company        
SELECT DISTINCT invoices.payment_method_code FROM Invoices        
SELECT document_locations.Location_Code FROM Document_Locations  GROUP BY document_locations.Location_Code  ORDER BY count( *) DESC LIMIT 1    
SELECT club.ClubName FROM Club        
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and location.STREET_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT farm_competition.Theme FROM farm_competition JOIN city ON farm_competition.Host_city_ID = city.City_ID WHERE city.Population > 1000       
"SELECT problem_log.problem_log_id, problem_log.log_entry_date FROM Problem_Log WHERE problem_log.problem_id = 10       "
SELECT author.name FROM author JOIN writes ON author.aid = writes.aid JOIN publication ON writes.pid = publication.pid JOIN journal ON publication.jid = journal.jid WHERE journal.name = 'PVLDB' GROUP BY author.name HAVING count( publication.title) > '10'     
SELECT highlow.state_name FROM highlow WHERE highlow.lowest_elevation = (SELECT min( highlow.lowest_elevation) FROM highlow        )       
SELECT wine.Winery FROM wine  GROUP BY wine.Winery HAVING count( *) >= 4     
"SELECT DISTINCT paper.paperId, paper.title FROM paper WHERE paper.title like '%1%' and paper.year > 1       "
SELECT count( *) FROM Physician        
SELECT files.f_id FROM files WHERE files.formats = 'mp3'       
"SELECT customers.Customer_Details, customers.Customer_ID FROM Customers JOIN Customer_Policies ON customers.Customer_ID = T2.Customer_ID  GROUP BY T2.Customer_ID HAVING count( *) > 1     "
"SELECT employees.FIRST_NAME, employees.LAST_NAME, locations.CITY FROM employees JOIN departments ON employees.DEPARTMENT_ID = departments.DEPARTMENT_ID JOIN locations ON departments.LOCATION_ID = locations.LOCATION_ID WHERE employees.FIRST_NAME like '%1%'       "
SELECT author.name FROM author JOIN writes ON author.aid = writes.aid JOIN publication ON writes.pid = publication.pid JOIN conference ON publication.cid = conference.cid WHERE conference.name = 'VLDB' and publication.year = 2002       
SELECT count( *) FROM train WHERE train.name like '%Express%'       
SELECT DISTINCT count(DISTINCT person.job) FROM Person        
"SELECT DISTINCT problem_log.problem_id, problem_log.problem_log_id FROM Problem_Log JOIN Staff ON problem_log.assigned_to_staff_id = staff.staff_id WHERE staff.staff_first_name = 'Rylan' and staff.staff_last_name = 'Homenick'       "
SELECT state.capital FROM state WHERE state.area = (SELECT max( state.area) FROM state        )       
SELECT DISTINCT count(DISTINCT review.text) FROM review JOIN user ON review.user_id = user.user_id WHERE review.month = '1' and review.year = 1 and user.name = '1'       
SELECT DISTINCT student.Fname FROM Student JOIN Voting_record ON student.StuID = T2.Class_Senator_Vote        
SELECT projects.Name FROM Projects WHERE projects.Hours > (SELECT avg( projects.Hours) FROM Projects        )       
SELECT farm_competition.Hosts FROM farm_competition WHERE farm_competition.Theme != 'Aliens'       
"SELECT employee.EMP_FNAME, employee.EMP_LNAME FROM EMPLOYEE JOIN PROFESSOR ON employee.EMP_NUM = T2.EMP_NUM JOIN DEPARTMENT ON T2.DEPT_CODE = department.DEPT_CODE WHERE department.DEPT_NAME = 'Biology'       "
SELECT catalogs.date_of_latest_revision FROM Catalogs  GROUP BY catalogs.date_of_latest_revision HAVING count( *) > 1     
SELECT employees.HIRE_DATE FROM employees WHERE employees.FIRST_NAME not_like 'M'       
SELECT DISTINCT club.Region FROM club     ORDER BY club.Region ASC   
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Liwen Xiong' and paper.year = 2015       
SELECT city.population FROM city WHERE city.city_name = '1'       
SELECT projects.Name FROM Projects JOIN AssignedTo ON projects.Code = AssignedTo.Project JOIN Scientists ON AssignedTo.Scientist = scientists.SSN WHERE scientists.Name like '%Smith%'       
"SELECT airports.name, airports.city, airports.country, airports.elevation FROM airports WHERE airports.city = 'New York'       "
SELECT highlow.highest_point FROM highlow JOIN state ON highlow.state_name = state.state_name WHERE state.state_name in (SELECT state.state_name FROM state WHERE state.area = (SELECT max( state.area) FROM state        )       )       
"SELECT employee.FirstName, employee.LastName FROM Employee JOIN Customer ON employee.EmployeeId = customer.SupportRepId WHERE customer.FirstName = 'Leonie'       "
SELECT candidate.Poll_Source FROM candidate  GROUP BY candidate.Poll_Source  ORDER BY count( *) DESC LIMIT 1    
SELECT tip.text FROM tip JOIN user ON tip.user_id = T2.user_id JOIN review ON T2.user_id = review.user_id WHERE review.year = 2012       
SELECT state.population FROM state WHERE state.area = (SELECT min( state.area) FROM state        )       
SELECT city.population FROM city WHERE city.population > 1 and city.state_name = '1'       
SELECT church.Name FROM church     ORDER BY church.Open_Date DESC   
"SELECT flight.Vehicle_Flight_number, flight.Date, flight.Pilot FROM flight     ORDER BY flight.Altitude ASC   "
SELECT DISTINCT people.Hometown FROM people        EXCEPT SELECT DISTINCT people.Hometown FROM people JOIN gymnast ON people.People_ID = T3.Gymnast_ID        
"SELECT district.Headquartered_City, count( *) FROM district JOIN store_district ON district.District_ID = store_district.District_ID  GROUP BY district.Headquartered_City      "
SELECT publication.Price FROM publication WHERE publication.Publisher = 'Person' or publication.Publisher = 'Wiley'       
"SELECT trip.start_station_name, trip.end_station_name FROM trip    ORDER BY trip.id ASC LIMIT 1    "
SELECT files.f_id FROM files WHERE files.formats = 'mp4'     INTERSECT SELECT song.f_id FROM song WHERE song.resolution < 1000         
SELECT aircraft.Aircraft FROM aircraft JOIN airport_aircraft ON aircraft.Aircraft_ID = airport_aircraft.Aircraft_ID JOIN airport ON airport_aircraft.Airport_ID = airport.Airport_ID WHERE airport.Airport_Name = 'London Heathrow'     INTERSECT SELECT aircraft.Aircraft FROM aircraft JOIN airport_aircraft ON aircraft.Aircraft_ID = airport_aircraft.Aircraft_ID JOIN airport ON airport_aircraft.Airport_ID = airport.Airport_ID WHERE airport.Airport_Name = 'London Gatwick'         
SELECT DISTINCT count(DISTINCT room.RoomType) FROM Room        
SELECT rating.mID FROM Rating        EXCEPT SELECT rating.mID FROM Rating JOIN Reviewer ON rating.rID = reviewer.rID WHERE reviewer.name = 'Brittany Harris'       
"SELECT staff.staff_name, count( *) FROM Staff JOIN Engineer_Visits ON staff.staff_id = engineer_visits.contact_staff_id  GROUP BY staff.staff_name      "
SELECT river.river_name FROM river WHERE river.length = (SELECT max( river.length) FROM river        )       
SELECT vocals.Type FROM Vocals  GROUP BY vocals.Type  ORDER BY count( *) DESC LIMIT 1    
SELECT addresses.country FROM Addresses  GROUP BY addresses.country HAVING count( addresses.address_id) > 4     
SELECT campuses.Campus FROM Campuses JOIN faculty ON campuses.Id = faculty.Campus WHERE faculty.Faculty >= 600 and faculty.Faculty <= 1000 and campuses.Year = 2004       
SELECT aircraft.Aircraft FROM aircraft JOIN match ON aircraft.Aircraft_ID = T2.Winning_Aircraft  GROUP BY aircraft.Aircraft  ORDER BY count( *) DESC LIMIT 1    
SELECT DISTINCT count(DISTINCT timed_locations_of_things.Location_Code) FROM Timed_Locations_of_Things JOIN Things ON timed_locations_of_things.thing_id = things.thing_id WHERE things.service_details = 'Unsatisfied'       
"SELECT DISTINCT count(DISTINCT publication.title), publication.year FROM publication JOIN writes ON publication.pid = writes.pid JOIN author ON writes.aid = author.aid WHERE author.name = '1' GROUP BY publication.year      "
SELECT count( *) FROM Apartment_Buildings        
SELECT DISTINCT writes.authorId FROM writes JOIN paper ON writes.paperId = paper.paperId JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 1 and venue.venueName = '1'       
"SELECT film.Directed_by, count( *) FROM film  GROUP BY film.Directed_by      "
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId JOIN venue ON paper.venueId = venue.venueId WHERE author.authorName = '1' and venue.venueName = '1'       
"SELECT DISTINCT author.authorId, paper.paperId FROM author JOIN writes ON author.authorId = writes.authorId JOIN paper ON writes.paperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE author.authorName = '1' and key_phrase.keyphraseName = '1'       "
SELECT bookings.Order_Date FROM Bookings        
SELECT university.Founded FROM university WHERE university.Affiliation != 'Public'   ORDER BY university.Founded DESC LIMIT 1    
SELECT region.Region_name FROM region JOIN affected_region ON region.Region_id = affected_region.Region_id JOIN storm ON affected_region.Storm_ID = storm.Storm_ID    ORDER BY storm.Number_Deaths DESC LIMIT 1    
SELECT DISTINCT papers.title FROM Papers JOIN Authorship ON papers.paperID = Authorship.paperID JOIN Inst ON Authorship.instID = institution.instID WHERE institution.name = 'Google'       
SELECT DISTINCT count(DISTINCT film.rating) FROM film        
"SELECT department.DEPT_NAME, professor.PROF_OFFICE FROM DEPARTMENT JOIN PROFESSOR ON department.DEPT_CODE = professor.DEPT_CODE JOIN EMPLOYEE ON professor.EMP_NUM = employee.EMP_NUM WHERE employee.EMP_LNAME = 'Heffington'       "
SELECT count( *) FROM Customers JOIN Customers_Cards WHERE customers.customer_first_name = 'Art' and customers.customer_last_name = 'Turcotte'       
SELECT people.Name FROM people     ORDER BY people.Date_of_Birth ASC   
SELECT instruments.Instrument FROM Instruments JOIN Songs ON instruments.SongId = songs.SongId WHERE songs.Title = 'Le Pop'       
"SELECT results.driverId, drivers.forename FROM results JOIN drivers ON results.driverId = drivers.driverId JOIN races ON results.raceId = races.raceId WHERE races.name = 'Australian Grand Prix'     INTERSECT SELECT results.driverId, drivers.forename FROM results JOIN drivers ON results.driverId = drivers.driverId JOIN races ON results.raceId = races.raceId WHERE races.name = 'Chinese Grand Prix'         "
SELECT club.ClubLocation FROM Club WHERE club.ClubName = 'Tennis Club'       
SELECT program.Origin FROM program     ORDER BY program.Origin ASC   
"SELECT DISTINCT count(DISTINCT paper.paperId), venue.venueId FROM paper JOIN venue ON paper.venueId = venue.venueId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' GROUP BY venue.venueId   ORDER BY count( paper.paperId) DESC   "
SELECT customers.customer_id FROM Customers JOIN Orders ON customers.customer_id = orders.customer_id WHERE orders.order_status = 'On Road'     INTERSECT SELECT customers.customer_id FROM Customers JOIN Orders ON customers.customer_id = orders.customer_id WHERE orders.order_status = 'Shipped'         
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = 'Question Answering'       
SELECT wrestler.Location FROM wrestler  GROUP BY wrestler.Location HAVING count( *) > 2     
SELECT DISTINCT count(DISTINCT writes.paperId) FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
SELECT DISTINCT races.name FROM races     ORDER BY races.name DESC   
SELECT airlines.name FROM airlines JOIN routes ON airlines.alid = routes.alid  GROUP BY airlines.name  ORDER BY count( *) DESC LIMIT 1    
SELECT problems.product_id FROM Problems JOIN Staff ON problems.reported_by_staff_id = staff.staff_id WHERE staff.staff_first_name = 'Christop' and staff.staff_last_name = 'Berge'     INTERSECT SELECT problems.product_id FROM Problems JOIN Staff ON problems.reported_by_staff_id = staff.staff_id WHERE staff.staff_first_name = 'Ashley' and staff.staff_last_name = 'Medhurst'         
SELECT * FROM Student_Addresses     ORDER BY student_addresses.monthly_rental DESC   
SELECT DISTINCT products.Product_Name FROM Products WHERE products.Product_Price > (SELECT avg( products.Product_Price) FROM Products        )       
SELECT artist.artist_name FROM artist WHERE artist.country = '1' and artist.gender = '1'       
SELECT customers.customer_name FROM Customers JOIN Orders ON customers.customer_id = orders.customer_id WHERE orders.order_status = 'On Road'     INTERSECT SELECT customers.customer_name FROM Customers JOIN Orders ON customers.customer_id = orders.customer_id WHERE orders.order_status = 'Shipped'         
"SELECT customers.customer_first_name, customers.customer_last_name, accounts.customer_id FROM Customers JOIN Accounts  GROUP BY accounts.account_id  ORDER BY count( *) ASC LIMIT 1    "
SELECT student.StuID FROM Student WHERE student.Sex = 'M'       EXCEPT SELECT sports_info.StuID FROM SportsInfo WHERE sports_info.SportName = 'Football'       
SELECT student_course_attendance.student_id FROM Student_Course_Attendance WHERE student_course_attendance.course_id = 301       
"SELECT jobs.JOB_TITLE, jobs.MAX_SALARY FROM jobs WHERE jobs.MAX_SALARY between 12000 AND 18000       "
SELECT DISTINCT classroom.building FROM classroom WHERE classroom.capacity > 50       
SELECT sum( lessons.lesson_time) FROM Lessons JOIN Staff ON lessons.staff_id = staff.staff_id WHERE staff.first_name = 'Janessa' and staff.last_name = 'Sawayn'       
"SELECT customers.Customer_ID, customers.Customer_name FROM Customers     ORDER BY customers.Customer_ID ASC   "
SELECT races.name FROM races    ORDER BY races.date DESC LIMIT 1    
SELECT parties.payment_method_code FROM Parties  GROUP BY parties.payment_method_code HAVING count( *) > 3     
SELECT count( *) FROM Courses        
SELECT count( *) FROM Songs        
SELECT river.river_name FROM river WHERE river.traverse in (SELECT border_info.border FROM border_info WHERE border_info.state_name = '1'       )       
SELECT river.length FROM river WHERE river.river_name = '1' and river.traverse = '1'       
"SELECT rooms.roomName, rooms.decor FROM Rooms WHERE rooms.bedType = 'King'    ORDER BY rooms.basePrice ASC   "
"SELECT student.Fname, student.LName FROM Student JOIN Participates_in ON student.StuID = Participates_in.stuid JOIN Activity ON Participates_in.actid = Activity.actid JOIN Faculty_Participates_in ON Activity.actid = Faculty_Participates_in.actid JOIN Faculty ON Faculty_Participates_in.FacID = faculty.FacID WHERE faculty.Fname = 'Michael' and faculty.Lname = 'Goodrich'       "
SELECT farm.Total_Horses FROM farm     ORDER BY farm.Total_Horses ASC   
SELECT vocals.Type FROM Vocals  GROUP BY vocals.Type  ORDER BY count( *) DESC LIMIT 1    
SELECT state.area FROM state        
"SELECT max( player.HS), tryout.pPos FROM Player JOIN Tryout ON player.pID = tryout.pID WHERE player.HS > 1000 GROUP BY tryout.pPos      "
SELECT customer.LastName FROM Customer JOIN Employee ON customer.SupportRepId = T2.EmployeeId  GROUP BY customer.LastName HAVING count( *) <= 20     
"SELECT participants.Participant_ID, participants.Participant_Type_Code, participants.Participant_Details FROM Participants        "
"SELECT election.Delegate, party.Party FROM election JOIN party ON election.Party = party.Party_ID        "
SELECT actor.name FROM actor WHERE actor.birth_city = 'New York City' and actor.birth_year = 1984       
"SELECT book.Title, book.Issues FROM book        "
SELECT DISTINCT head.age FROM head JOIN management ON head.head_ID = management.head_ID WHERE management.temporary_acting = '1'       
SELECT max( student.Age) FROM Student        
SELECT count( river.traverse) FROM river WHERE river.river_name = '1'       
SELECT publication.title FROM publication JOIN writes ON publication.pid = writes.pid JOIN author ON writes.aid = author.aid WHERE author.name = '1'       
SELECT count( *) FROM Lessons JOIN Customers ON lessons.customer_id = customers.customer_id WHERE customers.first_name = '1' and customers.last_name = '1' and lessons.lesson_status_code = '1'       
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId JOIN venue ON paper.venueId = venue.venueId WHERE author.authorName = '1' and paper.year = 1 and venue.venueName = '1'       
"SELECT aircraft.Aircraft, count( *) FROM aircraft JOIN match ON aircraft.Aircraft_ID = match.Winning_Aircraft  GROUP BY aircraft.Aircraft      "
"SELECT shop.Shop_Name, shop.Location FROM shop     ORDER BY shop.Shop_Name ASC   "
SELECT DISTINCT count(DISTINCT review.text) FROM review JOIN user ON review.user_id = user.user_id WHERE user.name = 'Adrienne'       
SELECT count( *) FROM Staff WHERE staff.first_name = 'Ludie'       
SELECT campuses.Campus FROM Campuses WHERE campuses.County = 'Los Angeles' and campuses.Year > 1950       
SELECT DISTINCT count(DISTINCT enrolled_in.StuID) FROM Enrolled_in WHERE enrolled_in.Grade = 'B'       
SELECT student.StuID FROM Student WHERE student.Age > 20       
SELECT count( *) FROM Faculty        
SELECT player.Player_name FROM player     ORDER BY player.Votes ASC   
SELECT count( *) FROM technician        
SELECT DISTINCT count(DISTINCT writes.paperId) FROM writes JOIN author ON writes.authorId = author.authorId JOIN paper ON writes.paperId = paper.paperId WHERE author.authorName = '1' and paper.year = 1       
SELECT DISTINCT count(DISTINCT publication.title) FROM publication JOIN journal ON publication.jid = journal.jid WHERE journal.name = 'PVLDB' and publication.year > 2000       
"SELECT royal_family.Royal_Family_Details, tourist_attractions.How_to_Get_There FROM Royal_Family JOIN Tourist_Attractions ON royal_family.Royal_Family_ID = tourist_attractions.Tourist_Attraction_ID        "
SELECT faculty.Lname FROM Faculty JOIN Member_of ON faculty.FacID = Member_of.FacID JOIN Department ON Member_of.DNO = department.DNO WHERE department.DName = 'Computer Science'       
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 1 and venue.venueName = '1'       
SELECT movie.title FROM writer JOIN written_by ON writer.wid = T3.wid JOIN movie WHERE writer.name = Matt Damon       
SELECT count( stay.Patient) FROM Stay WHERE stay.Room = 112       
SELECT count( *) FROM PROFESSOR WHERE professor.PROF_HIGH_DEGREE = 'Ph.D.'       
SELECT party.Comptroller FROM party JOIN election ON party.Party_ID = election.Party WHERE election.District = 1 or election.District = 2       
SELECT students.student_details FROM Students JOIN Student_Course_Registrations ON students.student_id = T3.student_id JOIN Courses ON T3.course_id = courses.course_id  GROUP BY students.student_details  ORDER BY count( *) DESC LIMIT 1    
SELECT count( *) FROM COURSE JOIN DEPARTMENT ON course.DEPT_CODE = department.DEPT_CODE WHERE department.DEPT_NAME = '1'       
SELECT count( *) FROM people        
SELECT institution.Type FROM Institution WHERE institution.Founded > 1990 and institution.Enrollment >= 1000       
SELECT payment.amount FROM payment    ORDER BY payment.amount DESC LIMIT 1    
"SELECT people.Hometown, count( *) FROM people JOIN gymnast ON people.People_ID = gymnast.Gymnast_ID  GROUP BY people.Hometown      "
"SELECT employees.employee_name, count( *) FROM Employees  GROUP BY employees.employee_name  ORDER BY count( *) DESC LIMIT 1    "
"SELECT weather.date, weather.cloud_cover FROM weather    ORDER BY weather.cloud_cover DESC LIMIT 1    "
SELECT college.cName FROM College    ORDER BY college.enr DESC LIMIT 1    
"SELECT claims.Claim_ID, claims.Date_Claim_Made, count( *) FROM Claims JOIN Settlements ON claims.Claim_ID = settlements.Claim_ID  GROUP BY settlements.Claim_ID  ORDER BY count( *) DESC LIMIT 1    "
SELECT individuals.individual_last_name FROM Individuals JOIN Organization_Contact_Individuals ON individuals.individual_id = organization_contact_individuals.individual_id JOIN Organizations ON organization_contact_individuals.organization_id = organizations.organization_id WHERE organizations.organization_name = 'Labour Party'   ORDER BY organization_contact_individuals.date_contact_to DESC LIMIT 1    
"SELECT race.Class, count( *) FROM race  GROUP BY race.Class      "
"SELECT DISTINCT count(DISTINCT paper.paperId), writes.authorId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 2007 and venue.venueName = 'CVPR' GROUP BY writes.authorId   ORDER BY count( paper.paperId) DESC   "
SELECT city.population FROM city WHERE city.population > 1 and city.state_name = '1'       
SELECT student.STU_FNAME FROM STUDENT JOIN ENROLL ON student.STU_NUM = T2.STU_NUM  GROUP BY student.STU_FNAME HAVING count( *) = 1     
SELECT DISTINCT instructor.name FROM instructor     ORDER BY instructor.name ASC   
"SELECT invoices.billing_state, count( *), sum( invoices.total) FROM invoices WHERE invoices.billing_state = 'CA' GROUP BY invoices.billing_state      "
SELECT manufacturers.Headquarter FROM Manufacturers WHERE manufacturers.Founder = 'James'       
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId JOIN venue ON paper.venueId = venue.venueId WHERE key_phrase.keyphraseName = '1' and paper.year = 1 and venue.venueName = '1'       
SELECT count( *) FROM Customers        
SELECT DISTINCT department.Creation FROM department JOIN management ON department.Department_ID = management.department_ID JOIN head ON management.head_ID = head.head_ID WHERE head.born_state = 'Alabama'       
SELECT sum( projects.Hours) FROM Projects JOIN AssignedTo ON projects.Code = AssignedTo.Project JOIN Scientists ON AssignedTo.Scientist = scientists.SSN WHERE scientists.Name = 'Michael Rogers' or scientists.Name = 'Carol Smith'       
SELECT wine.Name FROM wine WHERE wine.Price > (SELECT max( wine.Price) FROM wine WHERE wine.Year = 2006       )       
SELECT river.river_name FROM river WHERE river.traverse = '1'       
SELECT instructor.name FROM instructor WHERE instructor.dept_name = '1'       
"SELECT project_staff.date_from, project_staff.date_to FROM Project_Staff WHERE project_staff.role_code = '1'       "
"SELECT county_public_safety.Police_force, count( *) FROM county_public_safety  GROUP BY county_public_safety.Police_force      "
SELECT count( *) FROM Rooms JOIN Reservations ON rooms.RoomId = reservations.Room WHERE reservations.FirstName = 'ROY' and reservations.LastName = 'SWEAZY'       
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' and paper.year = 1 GROUP BY paper.paperId HAVING count( key_phrase.keyphraseName) > '1'     
SELECT dorm.dorm_name FROM Dorm WHERE dorm.gender = 'F'       
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' and paper.year > 1       
SELECT match.Venue FROM match JOIN hosting_city ON match.Match_ID = hosting_city.Match_ID JOIN city ON hosting_city.Host_City = city.City_ID WHERE city.City = 'Nanjing ( Jiangsu )' and match.Competition = '1994 FIFA World Cup qualification'       
SELECT city.city_name FROM city WHERE city.population > 1 and city.state_name = '1'       
SELECT count( *) FROM Ref_Document_Types        
"SELECT count( *), projects.project_details FROM Tasks JOIN Projects ON tasks.project_id = projects.project_id  GROUP BY projects.project_details      "
"SELECT journalist.Nationality, journalist.Age FROM journalist        "
SELECT DISTINCT count(DISTINCT actor.name) FROM actor JOIN cast ON actor.aid = T3.aid JOIN movie WHERE actor.nationality = '1' and movie.title = '1'       
"SELECT film.title, film.film_id, film.description FROM film JOIN film_actor ON film.film_id = T3.film_id  GROUP BY T3.film_id  ORDER BY count( *) DESC LIMIT 1    "
"SELECT payments.Payment_ID, payments.Date_Payment_Made, payments.Amount_Payment FROM Payments WHERE payments.Payment_Method_Code = 'Visa'       "
SELECT papers.title FROM Papers JOIN Authorship ON papers.paperID = Authorship.paperID JOIN Authors ON Authorship.authID = authors.authID WHERE authors.fname = 'Olin' and authors.lname = 'Shivers'       
SELECT count( *) FROM Third_Party_Companies        
SELECT catalog_contents.catalog_entry_name FROM Catalog_Contents WHERE catalog_contents.length < '3' or catalog_contents.width > '5'       
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
SELECT actor.birth_year FROM actor WHERE actor.name = 'Benedict Cumberbatch'       
"SELECT drivers.forename, drivers.surname FROM drivers JOIN lapTimes ON drivers.driverId = lap_times.driverId    ORDER BY lap_times.milliseconds ASC LIMIT 1    "
SELECT DISTINCT faculty.Lname FROM Faculty JOIN Faculty_Participates_in ON faculty.FacID = Faculty_Participates_in.FacID JOIN Activity ON Faculty_Participates_in.actid = activity.actid WHERE activity.activity_name = 'Canoeing' or activity.activity_name = 'Kayaking'       
"SELECT reference_locations.Location_Name, document_locations.Location_Code FROM Ref_Locations JOIN Document_Locations ON reference_locations.Location_Code = document_locations.Location_Code  GROUP BY document_locations.Location_Code  ORDER BY count( *) ASC LIMIT 1    "
SELECT DISTINCT movie.title FROM Movie JOIN Rating ON movie.mID = Rating.mID JOIN Reviewer ON Rating.rID = reviewer.rID WHERE reviewer.name = 'Brittany Harris' or movie.year > 2000       
"SELECT wine.Name, wine.Score FROM wine JOIN grapes ON wine.Grape = grapes.Grape WHERE grapes.Color = '1'       "
SELECT count( *) FROM aircraft WHERE aircraft.distance between 1000 AND 5000       
SELECT addresses.City_Town FROM Addresses        EXCEPT SELECT addresses.City_Town FROM Addresses JOIN Performers ON addresses.Address_ID = T3.Address_ID        
"SELECT ship.Name, ship.Type, ship.Flag FROM Ship    ORDER BY ship.Built_Year DESC LIMIT 1    "
SELECT song.song_name FROM song JOIN files ON song.f_id = files.f_id WHERE files.duration like '%1%'      UNION SELECT song.song_name FROM song WHERE song.languages = '1'        
SELECT state.state_name FROM state WHERE state.population = (SELECT max( state.population) FROM state        )       
SELECT vehicles.vehicle_id FROM Vehicles        
SELECT person.age FROM Person JOIN PersonFriend ON person.name = person_friend.friend WHERE person_friend.name = 'Zach' and person_friend.year = (SELECT max( person_friend.year) FROM PersonFriend WHERE person_friend.name = 'Zach'       )       
SELECT avg( club_rank.Gold) FROM club_rank        
"SELECT player.Team, school.Location FROM player JOIN school ON player.School_ID = school.School_ID        "
SELECT trip.id FROM trip JOIN weather  GROUP BY trip.id HAVING avg( T2.mean_temperature_f) > 60     
SELECT problems.problem_description FROM Problems JOIN Staff ON problems.reported_by_staff_id = staff.staff_id WHERE staff.staff_first_name = 'Christop'       
"SELECT accounts.Account_ID, accounts.Account_Details FROM Accounts        "
SELECT count( *) FROM Customers        
SELECT DISTINCT count(DISTINCT player.Position) FROM player        
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE restaurant.CITY_NAME in (SELECT geographic.CITY_NAME FROM GEOGRAPHIC WHERE geographic.REGION = '1'       ) and restaurant.RATING > 1       "
SELECT albums.title FROM albums WHERE albums.title like '%1%'    ORDER BY albums.title ASC   
SELECT DISTINCT weather.zip_code FROM weather        EXCEPT SELECT DISTINCT weather.zip_code FROM weather WHERE weather.max_dew_point_f >= 70       
SELECT county.County_name FROM county JOIN election ON county.County_Id = T2.District  GROUP BY county.County_name HAVING count( *) >= 2     
SELECT actor.nationality FROM actor WHERE actor.name = 'Christoph Waltz'       
SELECT count( *) FROM inventory WHERE inventory.store_id = 1       
"SELECT customers.customer_status_code, customers.cell_mobile_phone_number, customers.email_address FROM Customers WHERE customers.first_name = 'Marina' or customers.last_name = 'Kohler'       "
"SELECT customer.FirstName, customer.LastName FROM Customer WHERE customer.Email = 'luisg@embraer.com.br'       "
SELECT basketball_match.Team_Name FROM basketball_match     ORDER BY basketball_match.All_Home DESC   
SELECT max( transactions.share_count) FROM Transactions WHERE transactions.amount_of_transaction < 10000       
"SELECT max( player.weight), min( player.weight) FROM Player        "
"SELECT max( products.product_price), min( products.product_price), products.product_type_code FROM Products  GROUP BY products.product_type_code   ORDER BY products.product_type_code ASC   "
SELECT DISTINCT count(DISTINCT election.Delegate) FROM election JOIN county ON election.District = county.County_Id WHERE county.Population > 50000       
SELECT count( *) FROM trip JOIN station WHERE station.city != 'San Francisco'       
"SELECT DISTINCT customers.customer_first_name, customers.customer_last_name FROM Customers JOIN Accounts        "
SELECT products.product_description FROM Products WHERE products.product_name = 'Chocolate'       
"SELECT hotels.hotel_id, hotels.star_rating_code FROM Hotels     ORDER BY hotels.price_range ASC   "
"SELECT products.product_name, count( *) FROM Products JOIN Complaints ON products.product_id = complaints.product_id  GROUP BY products.product_name      "
SELECT people.Name FROM people    ORDER BY people.Age DESC LIMIT 1    
"SELECT DISTINCT paper.paperId, paper.year FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1'    ORDER BY paper.year DESC   "
SELECT count( *) FROM postseason WHERE postseason.year = 1885 and postseason.ties = 1       
"SELECT wine.Name, wine.Score FROM wine        "
SELECT grapes.Color FROM grapes JOIN wine ON grapes.Grape = wine.Grape  GROUP BY grapes.Color  ORDER BY avg( wine.Price) DESC LIMIT 1    
SELECT DISTINCT manufacturers.Headquarter FROM Manufacturers        
SELECT church.Name FROM church JOIN wedding ON church.Church_ID = wedding.Church_ID JOIN people ON wedding.Female_ID = people.People_ID WHERE people.Age > 30 or people.Age > 30       
SELECT river.traverse FROM river WHERE river.river_name = '1'       
SELECT rooms.roomName FROM Rooms    ORDER BY rooms.maxOccupancy DESC LIMIT 1    
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId JOIN venue ON paper.venueId = venue.venueId WHERE author.authorName = '1' and venue.venueName = '1'       
SELECT count( *) FROM Project_Staff WHERE project_staff.role_code = '1' or project_staff.date_from < '1'       
SELECT DISTINCT count(DISTINCT business.name) FROM business JOIN category ON business.business_id = category.business_id WHERE business.city = '1' and category.category_name = '1'       
SELECT mountain.Country FROM mountain  GROUP BY mountain.Country HAVING count( *) > 1     
SELECT river.length FROM river WHERE river.length = (SELECT max( river.length) FROM river WHERE river.traverse = '1'       ) and river.traverse = '1'       
SELECT campuses.Campus FROM Campuses JOIN faculty ON campuses.Id = faculty.Campus WHERE faculty.Faculty >= 600 and faculty.Faculty <= 1000 and campuses.Year = 2004       
SELECT DISTINCT count(DISTINCT accounts.customer_id) FROM Accounts        
SELECT policies.Policy_Type_Code FROM Policies JOIN Customers ON policies.Customer_ID = customers.Customer_ID WHERE customers.Customer_Details = 'Dayana Robel'       
SELECT publication.title FROM publication JOIN writes ON publication.pid = writes.pid JOIN author ON writes.aid = author.aid JOIN journal ON publication.jid = journal.jid WHERE author.name = '1' and author.name = '1' and journal.name = '1' and publication.year > 1       
SELECT building.Name FROM building        EXCEPT SELECT building.Name FROM building JOIN Institution ON building.building_id = institution.building_id WHERE institution.Founded = 2003       
SELECT DISTINCT wine.Name FROM wine WHERE wine.Price > (SELECT min( wine.Price) FROM wine WHERE wine.Winery = 'John Anthony'       )       
SELECT language.name FROM language JOIN film ON language.language_id = film.original_language_id WHERE film.title = 'AIRPORT POLLOCK'       
SELECT locations.Address FROM Locations WHERE locations.Location_Name = 'UK Gallery'       
"SELECT student.Major, count( *) FROM Student  GROUP BY student.Major      "
SELECT party.Minister FROM party    ORDER BY party.Left_office DESC LIMIT 1    
SELECT * FROM basketball_match        
SELECT airports.name FROM airports WHERE airports.elevation between -50 AND 50       
SELECT state.density FROM state WHERE state.area = (SELECT min( state.area) FROM state        )       
SELECT count( *) FROM Customers_Cards        
"SELECT party.Party_name, count( *) FROM party JOIN party_events ON party.Party_ID = party_events.Party_ID  GROUP BY party.Party_name      "
"SELECT department.DEPT_NAME, professor.DEPT_CODE FROM DEPARTMENT JOIN PROFESSOR ON department.DEPT_CODE = professor.DEPT_CODE WHERE professor.PROF_HIGH_DEGREE = 'Ph.D.' GROUP BY professor.DEPT_CODE  ORDER BY count( *) DESC LIMIT 1    "
"SELECT races.name, races.year FROM races JOIN results ON races.raceId = T3.raceId JOIN drivers ON T3.driverId = drivers.driverId WHERE drivers.forename = 'Lewis'       "
"SELECT airlines.country, airlines.name, count( *) FROM airlines JOIN routes ON airlines.alid = routes.alid  GROUP BY routes.alid      "
"SELECT aircraft.Aircraft, aircraft.Description FROM aircraft JOIN airport_aircraft ON aircraft.Aircraft_ID = airport_aircraft.Aircraft_ID JOIN airport ON airport_aircraft.Airport_ID = airport.Airport_ID WHERE airport.Total_Passengers > 10000000       "
"SELECT phone.Name, market.District FROM phone JOIN phone_market ON phone.Phone_ID = phone_market.Phone_ID JOIN market ON phone_market.Market_ID = market.Market_ID        "
SELECT address.district FROM address  GROUP BY address.district HAVING count( *) >= 2     
SELECT course.CName FROM Course WHERE course.Credits = 3      UNION SELECT course.CName FROM Course WHERE course.Credits = 1 and course.Hours = '4'        
SELECT documents_with_expenses.Budget_Type_Code FROM Documents_with_Expenses JOIN Documents ON documents_with_expenses.Document_ID = documents.Document_ID  GROUP BY documents_with_expenses.Budget_Type_Code  ORDER BY count( *) DESC LIMIT 1    
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1' and paper.journalId >= 1       
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 1 and venue.venueName = '1'       
SELECT drama_workshop_groups.Store_Name FROM Drama_Workshop_Groups JOIN Bookings ON drama_workshop_groups.Workshop_Group_ID = bookings.Workshop_Group_ID WHERE bookings.Status_Code = 'stop'       
"SELECT DISTINCT paper.paperId, paper.year FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1'    ORDER BY paper.year DESC   "
"SELECT projects.Project_ID, projects.Project_Details FROM Projects JOIN Documents ON projects.Project_ID = T2.Project_ID  GROUP BY T2.Project_ID HAVING count( *) > 2     "
SELECT attribute_definitions.attribute_data_type FROM Attribute_Definitions WHERE attribute_definitions.attribute_name = 'Green'       
SELECT sum( perpetrator.Killed) FROM perpetrator JOIN people ON perpetrator.People_ID = people.People_ID WHERE people.Height > 1.84       
SELECT club.ClubLocation FROM Club WHERE club.ClubName = 'Hopkins Student Enterprises'       
SELECT count( *) FROM venue        
SELECT chip_model.Model_name FROM chip_model WHERE chip_model.Launch_year between 2002 AND 2004       
SELECT people.Name FROM people JOIN perpetrator ON people.People_ID = T2.People_ID        
"SELECT wine.Grape, wine.Appelation FROM wine        "
SELECT mountain.Name FROM mountain WHERE mountain.Mountain_ID NOT IN (SELECT climber.Mountain_ID FROM climber        )       
SELECT count( *) FROM player WHERE player.birth_country = 'USA' and player.bats = 'R'       
SELECT products.product_name FROM Products WHERE products.product_type_code = 'Hardware'   ORDER BY products.product_price DESC LIMIT 1    
SELECT tracks.name FROM tracks JOIN genres ON tracks.genre_id = genres.id WHERE genres.name = 'Rock' or genres.name = 'Jazz'       
SELECT course.CName FROM Course     ORDER BY course.Credits ASC   
SELECT match_season.Player FROM match_season     ORDER BY match_season.College ASC   
SELECT count( *) FROM teachers JOIN list WHERE list.FirstName = 'MADLOCK' and list.LastName = 'RAY'       
SELECT manufacturers.Name FROM Manufacturers WHERE manufacturers.Revenue > (SELECT avg( manufacturers.Revenue) FROM Manufacturers        )       
"SELECT mountain.name, mountain.Height, mountain.Prominence FROM mountain WHERE mountain.Range != 'Aberdare Range'       "
"SELECT customers.first_name, customers.last_name FROM Customers JOIN Customer_Payments ON customers.customer_id = T2.customer_id  GROUP BY T2.customer_id HAVING count( *) > 2     "
SELECT aircraft.Aircraft FROM aircraft WHERE aircraft.Aircraft_ID NOT IN (SELECT match.Winning_Aircraft FROM match        )       
SELECT state.capital FROM state WHERE state.state_name in (SELECT border_info.border FROM border_info WHERE border_info.state_name in (SELECT border_info.border FROM border_info WHERE border_info.state_name = '1'       )       )       
SELECT school.Mascot FROM School WHERE school.Enrollment > (SELECT avg( school.Enrollment) FROM School        )       
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Peter Mertens' and author.authorName = 'Dina Barbian'       
"SELECT weather.date, weather.max_temperature_f FROM weather    ORDER BY weather.max_temperature_f ASC LIMIT 1    "
SELECT DISTINCT paper.paperId FROM paperDataset JOIN dataset JOIN paper WHERE dataset.datasetName = 'WebKB'       
"SELECT employees.FIRST_NAME, employees.JOB_ID FROM employees JOIN departments ON employees.DEPARTMENT_ID = departments.DEPARTMENT_ID WHERE departments.DEPARTMENT_NAME = 'Finance'       "
"SELECT weather.date, weather.zip_code FROM weather WHERE weather.min_dew_point_f < (SELECT min( weather.min_dew_point_f) FROM weather WHERE weather.zip_code = 94107       )       "
SELECT list.Classroom FROM list  GROUP BY list.Classroom  ORDER BY count( *) DESC LIMIT 1    
SELECT count( *) FROM Appointment        
"SELECT DISTINCT cite.citedPaperId, count(DISTINCT cite.citedPaperId) FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 2010 and venue.venueName = 'EMNLP' GROUP BY cite.citedPaperId   ORDER BY count( cite.citedPaperId) DESC   "
"SELECT tourist_attractions.Name, tourist_attractions.Tourist_Attraction_ID FROM Tourist_Attractions JOIN Visits ON tourist_attractions.Tourist_Attraction_ID = T2.Tourist_Attraction_ID  GROUP BY T2.Tourist_Attraction_ID HAVING count( *) <= 1     "
"SELECT election.Date, election.Vote_Percent FROM election        "
SELECT faculty.Rank FROM Faculty  GROUP BY faculty.Rank  ORDER BY count( *) ASC LIMIT 1    
SELECT publication.title FROM publication JOIN writes ON publication.pid = writes.pid JOIN author ON writes.aid = author.aid WHERE author.name = '1' and publication.year > 1       
SELECT weather.zip_code FROM weather  GROUP BY weather.zip_code  ORDER BY avg( weather.mean_sea_level_pressure_inches) ASC LIMIT 1    
SELECT technician.Starting_Year FROM technician    ORDER BY technician.Age DESC LIMIT 1    
"SELECT reference_product_categories.unit_of_measure, reference_product_categories.product_category_code FROM Ref_Product_Categories JOIN Products ON reference_product_categories.product_category_code = products.product_category_code WHERE products.product_name = 'chervil'       "
SELECT gas_station.Location FROM gas_station JOIN station_company ON gas_station.Station_ID = station_company.Station_ID JOIN company ON station_company.Company_ID = company.Company_ID WHERE company.Market_Value > 100       
SELECT student.Major FROM Student WHERE student.Sex = 'M'       
"SELECT count( *), airports.city FROM airports WHERE airports.country = 'United States' GROUP BY airports.city   ORDER BY count( *) DESC   "
"SELECT customers_policies.Date_Opened, customers_policies.Date_Closed FROM Customers_Policies JOIN Customers ON customers_policies.Customer_ID = customers.Customer_ID WHERE customers.Customer_name like '%Diana%'       "
"SELECT county_public_safety.Police_force, count( *) FROM county_public_safety  GROUP BY county_public_safety.Police_force      "
SELECT musical.Name FROM musical JOIN actor  GROUP BY musical.Name HAVING count( *) >= 3     
SELECT DISTINCT paper.paperId FROM paperDataset JOIN dataset JOIN paper WHERE dataset.datasetName = 'WebKB'       
SELECT movie.title FROM written_by JOIN copyright ON written_by.msid = copyright.msid JOIN made_by ON copyright.msid = made_by.msid JOIN producer ON made_by.pid = producer.pid JOIN writer ON written_by.wid = writer.wid JOIN movie WHERE producer.name = 'Woody Allen' and writer.name = Woody Allen       
SELECT vocals.Type FROM Vocals JOIN Songs ON vocals.SongId = songs.SongId WHERE songs.Title = 'Le Pop'       
SELECT campuses.Campus FROM Campuses JOIN faculty ON campuses.Id = faculty.Campus WHERE faculty.Year = 2003   ORDER BY faculty.Faculty DESC LIMIT 1    
"SELECT party.Minister, party.Party_name FROM party     ORDER BY party.Took_office DESC   "
SELECT available_policies.Customer_Phone FROM Available_Policies WHERE available_policies.policy_type_code = (SELECT available_policies.policy_type_code FROM Available_Policies JOIN Customers_Policies ON available_policies.Policy_ID = Customers_Policies.Policy_ID JOIN Customers ON Customers_Policies.Customer_ID = customers.Customer_ID  GROUP BY available_policies.policy_type_code  ORDER BY count( *) DESC LIMIT 1    )       
SELECT songs.Title FROM Songs WHERE songs.Title like '%1%'       
"SELECT match_season.Season, match_season.Player, team.Name FROM match_season JOIN team ON match_season.Team = team.Team_id        "
"SELECT ref_attraction_types.Attraction_Type_Description, tourist_attractions.Attraction_Type_Code FROM Ref_Attraction_Types JOIN Tourist_Attractions ON ref_attraction_types.Attraction_Type_Code = tourist_attractions.Attraction_Type_Code  GROUP BY tourist_attractions.Attraction_Type_Code  ORDER BY count( *) DESC LIMIT 1    "
SELECT program.Name FROM program WHERE program.Origin != 'Beijing'       
SELECT students.student_id FROM Students WHERE students.student_id NOT IN (SELECT student_course_attendance.student_id FROM Student_Course_Attendance        )       
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' and paper.year = 1       
SELECT DISTINCT products.product_color FROM Products        
"SELECT student_course_enrolment.student_id, students.login_name FROM Student_Course_Enrolment JOIN Students ON student_course_enrolment.student_id = students.student_id JOIN Courses ON student_course_enrolment.course_id = courses.course_id  GROUP BY student_course_enrolment.student_id  ORDER BY count( *) DESC LIMIT 1    "
"SELECT accounts.Statement_ID, statements.Statement_Details, accounts.Account_Details FROM Accounts JOIN Statements ON accounts.Statement_ID = statements.Statement_ID        "
SELECT department.DPhone FROM Department WHERE department.Room = '268'       
SELECT DISTINCT count(DISTINCT allergy_type.Allergy) FROM Allergy_Type        
SELECT attribute_definitions.attribute_data_type FROM Attribute_Definitions  GROUP BY attribute_definitions.attribute_data_type HAVING count( *) > 3     
SELECT count( *) FROM Inst        
"SELECT job_history.EMPLOYEE_ID, max( job_history.END_DATE) FROM job_history  GROUP BY job_history.EMPLOYEE_ID      "
SELECT business.state FROM business WHERE business.name = 'Whataburger'       
SELECT DISTINCT film.Director FROM film JOIN film_market_estimation ON film.Film_ID = film_market_estimation.Film_ID WHERE film_market_estimation.Year = 1995       
"SELECT count( *), artist.gender FROM artist  GROUP BY artist.gender      "
SELECT player.Team FROM player    ORDER BY player.Age DESC LIMIT 1    
SELECT count( *) FROM Course        
SELECT csu_fees.CampusFee FROM csu_fees JOIN Campuses ON csu_fees.Campus = campuses.Id WHERE campuses.Campus = 'San Jose State University' and csu_fees.Year = 1996       
"SELECT player.pName, player.HS FROM Player JOIN Tryout ON player.pID = tryout.pID WHERE tryout.decision = 'yes'       "
SELECT DISTINCT count(DISTINCT publication.title) FROM publication JOIN conference ON publication.cid = conference.cid WHERE conference.name = 'VLDB'       
SELECT author.name FROM author JOIN writes ON author.aid = writes.aid JOIN publication ON writes.pid = publication.pid JOIN journal ON publication.jid = journal.jid WHERE journal.name = 'PVLDB' and publication.year > 2010       
"SELECT train.Name, train.Arrival FROM train        "
"SELECT pilot.Position, pilot.Team FROM pilot        "
SELECT department.DEPT_NAME FROM DEPARTMENT JOIN PROFESSOR ON department.DEPT_CODE = professor.DEPT_CODE  GROUP BY department.DEPT_NAME  ORDER BY count( *) ASC LIMIT 1    
"SELECT DISTINCT cite.citedPaperId, count(DISTINCT cite.citedPaperId) FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1' GROUP BY cite.citedPaperId   ORDER BY count( cite.citedPaperId) DESC   "
"SELECT customers.customer_last_name, orders.customer_id, customers.phone_number FROM Customers JOIN Orders ON customers.customer_id = orders.customer_id  GROUP BY orders.customer_id  ORDER BY count( *) DESC LIMIT 1    "
"SELECT employees.EMPLOYEE_ID, employees.FIRST_NAME, employees.LAST_NAME FROM employees WHERE employees.DEPARTMENT_ID in (SELECT employees.DEPARTMENT_ID FROM employees WHERE employees.FIRST_NAME like '%T%'       )       "
SELECT school.Enrollment FROM school WHERE school.Denomination != 'Catholic'       
SELECT rooms.roomName FROM Rooms    ORDER BY rooms.maxOccupancy DESC LIMIT 1    
"SELECT products.product_name, products.typical_buying_price FROM Products        "
SELECT student.name FROM student JOIN takes ON student.ID = takes_classes.ID WHERE takes_classes.course_id in (SELECT prerequisite.prereq_id FROM prereq JOIN course ON prerequisite.prereq_id = course.course_id WHERE course.title = 'International Finance'       )       
SELECT sum( district.City_Population) FROM district    ORDER BY district.City_Area DESC LIMIT 1    
"SELECT institution.Institution, institution.Location FROM Institution WHERE institution.Founded > 1990 and institution.Type = 'Private'       "
SELECT DISTINCT paper.paperId FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 1 and venue.venueName = '1'       
"SELECT max( companies.Sales_billion), min( companies.Sales_billion) FROM Companies WHERE companies.Industry != 'Banking'       "
"SELECT weather.zip_code, count( *) FROM weather WHERE weather.max_wind_Speed_mph >= 25 GROUP BY weather.zip_code      "
SELECT catalog_contents.catalog_entry_name FROM Catalog_Contents JOIN Catalog_Contents_Additional_Attributes ON catalog_contents.catalog_entry_id = catalog_contents_additional_attributes.catalog_entry_id WHERE catalog_contents_additional_attributes.attribute_value = (SELECT catalog_contents_additional_attributes.attribute_value FROM Catalog_Contents_Additional_Attributes JOIN Catalog_Structure ON catalog_contents_additional_attributes.catalog_level_number = Catalog_Structure.catalog_level_number JOIN Catalogs ON Catalog_Structure.catalog_id = catalogs.catalog_id  GROUP BY catalog_contents_additional_attributes.attribute_value  ORDER BY count( *) DESC LIMIT 1    )       
"SELECT station.Name, count( *) FROM station JOIN train_station ON station.Station_ID = train_station.Station_ID  GROUP BY station.Name      "
"SELECT documents.Project_ID, count( *) FROM Documents  GROUP BY documents.Project_ID      "
SELECT DISTINCT addresses.city FROM Addresses        
SELECT count( *) FROM Events JOIN Participants_in_Events ON events.Event_ID = Participants_in_Events.Event_ID JOIN Participants ON Participants_in_Events.Participant_ID = participants.Participant_ID WHERE participants.Participant_Details like '%Dr.%'       
"SELECT user_profiles.name, user_profiles.email FROM user_profiles JOIN follows ON user_profiles.uid = T2.f2  GROUP BY T2.f2 HAVING count( *) > 1     "
SELECT documents.Document_Type_Code FROM Documents  GROUP BY documents.Document_Type_Code  ORDER BY count( *) DESC LIMIT 1    
SELECT list.FirstName FROM list WHERE list.Classroom = 108       
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1'       "
"SELECT customers_cards.date_valid_from, customers_cards.date_valid_to FROM Customers_Cards WHERE customers_cards.card_number = '4560596484842'       "
"SELECT accounts.Statement_ID, count( *) FROM Accounts  GROUP BY accounts.Statement_ID      "
SELECT DISTINCT count(DISTINCT business.name) FROM business JOIN category ON business.business_id = category.business_id WHERE category.category_name = '1'       
SELECT sports_info.StuID FROM SportsInfo WHERE sports_info.OnScholarship = '1'       
SELECT DISTINCT student.Fname FROM Student WHERE student.Fname like '%a%'       
"SELECT student.Fname, student.Age FROM Student JOIN Lives_in ON student.StuID = lives_in.stuid WHERE lives_in.dormid NOT IN (SELECT has_amenity.dormid FROM Has_amenity JOIN Dorm_amenity ON has_amenity.amenid = dorm_amenity.amenid WHERE dorm_amenity.amenity_name = 'TV Lounge'       )       "
"SELECT student.Fname, student.LName FROM Student JOIN Member_of_club ON student.StuID = Member_of_club.StuID JOIN Club ON Member_of_club.ClubID = club.ClubID WHERE club.ClubName = 'Bootup Baltimore' and student.Major = 600       "
"SELECT DISTINCT drivers.driverId, drivers.nationality FROM drivers JOIN lapTimes ON drivers.driverId = lap_times.driverId WHERE lap_times.milliseconds > 100000       "
SELECT races.name FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Spain' and races.year > 2017       
"SELECT behavior_incident.incident_type_code, reference_incident_type.incident_type_description FROM Behavior_Incident JOIN Ref_Incident_Type ON behavior_incident.incident_type_code = reference_incident_type.incident_type_code  GROUP BY behavior_incident.incident_type_code  ORDER BY count( *) DESC LIMIT 1    "
SELECT count( *) FROM GEOGRAPHIC        
SELECT DISTINCT mission.Fate FROM mission JOIN ship ON mission.Ship_ID = ship.Ship_ID WHERE ship.Nationality = 'United States'       
SELECT avg( school.Enrollment) FROM school        
"SELECT party.Party, count( *) FROM party  GROUP BY party.Party      "
SELECT DISTINCT paper.venueId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1' and paper.year = 1       
SELECT channel.Name FROM channel JOIN broadcast ON channel.Channel_ID = broadcast.Channel_ID WHERE broadcast.Time_of_day = 'Morning'     INTERSECT SELECT channel.Name FROM channel JOIN broadcast ON channel.Channel_ID = broadcast.Channel_ID WHERE broadcast.Time_of_day = 'Night'         
SELECT count( *) FROM author        
"SELECT hotels.hotel_id, hotels.star_rating_code FROM Hotels     ORDER BY hotels.price_range ASC   "
SELECT movie.title FROM directed_by JOIN copyright ON directed_by.msid = copyright.msid JOIN cast ON copyright.msid = cast.msid JOIN actor ON cast.aid = actor.aid JOIN director ON directed_by.did = director.did JOIN movie WHERE actor.name = 'Taraneh Alidoosti' and director.name = 'Asghar Farhadi'       
SELECT entrepreneur.Investor FROM entrepreneur  GROUP BY entrepreneur.Investor HAVING count( *) >= 2     
"SELECT customers.customer_first_name, accounts.customer_id FROM Customers JOIN Accounts ON customers.customer_id = accounts.customer_id  GROUP BY accounts.customer_id HAVING count( *) >= 2     "
SELECT instructor.name FROM instructor WHERE instructor.ID NOT IN (SELECT teaches.ID FROM teaches        )       
SELECT track.Name FROM track        EXCEPT SELECT track.Name FROM track JOIN race ON track.Track_ID = race.Track_ID WHERE race.Class = 'GT'       
SELECT people.Age FROM people    ORDER BY people.Height DESC LIMIT 1    
SELECT rooms.roomName FROM Rooms JOIN Reservations ON rooms.RoomId = reservations.Room WHERE reservations.FirstName like '%ROY%'       
SELECT sum( discipline_enrollments.Undergraduate) FROM discipline_enrollments JOIN Campuses ON discipline_enrollments.Campus = campuses.Id WHERE discipline_enrollments.Year = 1 and campuses.Campus = '1'       
SELECT apartments.apt_type_code FROM Apartments  GROUP BY apartments.apt_type_code  ORDER BY avg( apartments.room_count) DESC LIMIT 1    
SELECT count( *) FROM Reviewer        
SELECT DISTINCT count(DISTINCT department.DEPT_ADDRESS) FROM DEPARTMENT WHERE department.SCHOOL_CODE = 'BUS'       
"SELECT student.Fname, student.LName FROM Student JOIN Minor_in ON student.StuID = minor_in.StuID WHERE minor_in.DNO = 140       "
"SELECT company.Headquarters, company.Industry FROM company        "
SELECT documents.document_name FROM Documents WHERE documents.document_name like '%CV%'       
"SELECT DISTINCT count(DISTINCT paper.paperId), paper.year FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1' GROUP BY paper.year      "
SELECT projects.project_details FROM Projects JOIN Project_Outcomes ON projects.project_id = project_outcomes.project_id WHERE project_outcomes.outcome_code = '1'     INTERSECT SELECT projects.project_details FROM Projects JOIN Project_Outcomes ON projects.project_id = project_outcomes.project_id WHERE project_outcomes.outcome_code = '1'         
SELECT count( *) FROM customers WHERE customers.state = 'CA'       
"SELECT sum( loan.amount), bank.bname FROM loan JOIN bank ON loan.branch_ID = bank.branch_ID  GROUP BY bank.bname      "
SELECT people.Age FROM people JOIN gymnast ON people.People_ID = gymnast.Gymnast_ID     ORDER BY gymnast.Total_Points DESC   
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
"SELECT team.name, team.team_id FROM salary JOIN team  GROUP BY team.team_id  ORDER BY avg( salary.salary) ASC LIMIT 1    "
"SELECT properties.property_id, count( *) FROM Properties JOIN Residents ON properties.property_id = residents.property_id  GROUP BY properties.property_id      "
SELECT publication.Publisher FROM publication    ORDER BY publication.Price DESC LIMIT 1    
SELECT count( *) FROM venue        
SELECT DISTINCT club.ClubName FROM Club JOIN Member_of_club ON club.ClubID = Member_of_club.ClubID JOIN Student ON Member_of_club.StuID = student.StuID WHERE student.Advisor = 1121       
SELECT business.name FROM business JOIN category ON business.business_id = category.business_id WHERE business.city = '1' and business.rating > 1 and category.category_name = '1'       
SELECT max( climber.Points) FROM climber WHERE climber.Country = 'United Kingdom'       
SELECT addresses.country FROM Addresses JOIN Customers ON addresses.address_id = customers.customer_address_id WHERE customers.first_name = 'Carole' and customers.last_name = 'Bernhard'       
SELECT DISTINCT customer.Address FROM Customer JOIN Invoice ON customer.CustomerId = T2.CustomerId WHERE customer.Country = 'Germany'       
"SELECT rooms.decor, count( *) FROM Rooms WHERE rooms.bedType = 'King' GROUP BY rooms.decor      "
SELECT movie.title FROM directed_by JOIN copyright ON directed_by.msid = copyright.msid JOIN cast ON copyright.msid = cast.msid JOIN actor ON cast.aid = actor.aid JOIN director ON directed_by.did = director.did JOIN movie WHERE actor.name = 'Taraneh Alidoosti' and director.name = 'Asghar Farhadi'       
SELECT avg( student.Age) FROM Student JOIN Lives_in ON student.StuID = Lives_in.stuid JOIN Dorm ON Lives_in.dormid = dorm.dormid WHERE dorm.student_capacity = (SELECT max( dorm.student_capacity) FROM Dorm        )       
SELECT DISTINCT count(DISTINCT keyword.keyword) FROM keyword JOIN publication_keyword ON keyword.kid = publication_keyword.kid JOIN publication ON publication_keyword.pid = publication.pid JOIN conference ON publication.cid = conference.cid WHERE conference.name = 'VLDB'       
SELECT player.name FROM player WHERE player.Points > (SELECT avg( player.Points) FROM player        )       
SELECT customers.good_or_bad_customer FROM Customers JOIN Discount_Coupons ON customers.coupon_id = discount_coupons.coupon_id WHERE discount_coupons.coupon_amount = 500       
SELECT invoices.invoice_number FROM Invoices WHERE invoices.invoice_date < '1989-09-03' or invoices.invoice_date > '2007-12-25'       
"SELECT medicine.name, medicine.Trade_Name FROM medicine        EXCEPT SELECT medicine.name, medicine.Trade_Name FROM medicine JOIN medicine_enzyme_interaction ON medicine.id = medicine_enzyme_interaction.medicine_id JOIN enzyme ON medicine_enzyme_interaction.enzyme_id = enzyme.id WHERE enzyme.Product = '1'       "
SELECT enzyme.name FROM enzyme     ORDER BY enzyme.name DESC   
SELECT people.Name FROM people JOIN candidate ON people.People_ID = T2.People_ID WHERE people.Sex = 'F'    ORDER BY people.Name ASC   
SELECT count( *) FROM Customer WHERE customer.Email like '%gmail.com%'       
SELECT flight.origin FROM flight  GROUP BY flight.origin  ORDER BY count( *) DESC LIMIT 1    
SELECT catalogs.catalog_publisher FROM Catalogs  GROUP BY catalogs.catalog_publisher  ORDER BY count( *) DESC LIMIT 1    
SELECT count( city.city_name) FROM city WHERE city.state_name = '1'       
"SELECT employees.FIRST_NAME, employees.LAST_NAME, employees.HIRE_DATE FROM employees WHERE employees.DEPARTMENT_ID = (SELECT employees.DEPARTMENT_ID FROM employees WHERE employees.FIRST_NAME = 'Clara'       ) and employees.FIRST_NAME != 'Clara'       "
SELECT employee.EMP_FNAME FROM EMPLOYEE WHERE employee.EMP_JOBCODE = '1'       EXCEPT SELECT employee.EMP_FNAME FROM EMPLOYEE JOIN CLASS ON employee.EMP_NUM = T3.PROF_NUM        
"SELECT staff.staff_id, staff.staff_name FROM Staff JOIN Staff_Department_Assignments ON staff.staff_id = staff_department_assignments.staff_id    ORDER BY staff_department_assignments.date_assigned_to ASC LIMIT 1    "
SELECT DISTINCT paper.paperId FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 1 and venue.venueName = '1'       
SELECT DISTINCT count(DISTINCT cite.citedPaperId) FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
"SELECT customer.first_name, customer.last_name FROM customer JOIN rental ON customer.customer_id = rental.customer_id    ORDER BY rental.rental_date ASC LIMIT 1    "
SELECT documents.Project_ID FROM Documents JOIN Projects ON documents.Project_ID = projects.Project_ID  GROUP BY documents.Project_ID HAVING count( *) >= 2     
SELECT tryout.pPos FROM Tryout JOIN Player ON tryout.pID = player.pID  GROUP BY tryout.pPos  ORDER BY count( *) DESC LIMIT 1    
SELECT DISTINCT count(DISTINCT writes.paperId) FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
SELECT member.Member_Name FROM member JOIN party_events ON member.Member_ID = party_events.Member_in_charge_ID  GROUP BY member.Member_Name  ORDER BY count( *) DESC LIMIT 1    
"SELECT mountain.id, mountain.name FROM mountain JOIN photos ON mountain.id = T2.mountain_id WHERE mountain.Height > 1       "
SELECT city.state_name FROM city WHERE city.population = (SELECT max( city.population) FROM city        )       
SELECT river.river_name FROM river WHERE river.length > 1 and river.traverse = '1'       
"SELECT DISTINCT voting_record.Registration_Date, voting_record.Election_Cycle FROM Voting_record        "
SELECT people.Party FROM people  GROUP BY people.Party  ORDER BY count( *) DESC LIMIT 1    
SELECT count( *) FROM Addresses WHERE addresses.state_province_county = 'Georgia'       
SELECT song.song_name FROM song WHERE song.genre_is = '1' or song.languages = '1'       
SELECT DISTINCT voting_record.President_Vote FROM Voting_record WHERE voting_record.Registration_Date = '08/30/2015'       
SELECT club.name FROM club     ORDER BY club.name DESC   
SELECT addresses.address_details FROM Addresses JOIN Documents_Mailed ON addresses.address_id = documents_mailed.mailed_to_address_id WHERE documents_mailed.document_id = 4       
SELECT DISTINCT albums.Label FROM Albums        
"SELECT employee.eid, employee.salary FROM employee WHERE employee.name = 'Mark Young'       "
SELECT course.title FROM course JOIN department ON course.dept_name = department.dept_name  GROUP BY course.title HAVING count( *) > 1     
SELECT tracks.name FROM tracks JOIN invoice_lines ON tracks.id = invoice_lines.track_id JOIN invoices ON invoice_lines.invoice_id = invoices.id JOIN customers ON invoices.customer_id = customers.id WHERE customers.first_name = 'Daan' and customers.last_name = 'Peeters'       
SELECT river.river_name FROM river        
"SELECT min( aircraft.distance), avg( aircraft.distance), max( aircraft.distance) FROM aircraft        "
SELECT department.DEPT_NAME FROM DEPARTMENT     ORDER BY department.DEPT_NAME ASC   
"SELECT addresses.city, count( *) FROM Addresses  GROUP BY addresses.city  ORDER BY count( *) DESC LIMIT 1    "
SELECT races.name FROM races    ORDER BY races.date DESC LIMIT 1    
SELECT building.Name FROM building    ORDER BY building.Height_feet DESC LIMIT 1    
SELECT rooms.roomName FROM Rooms JOIN Reservations ON rooms.RoomId = reservations.Room  GROUP BY rooms.roomName  ORDER BY count( *) DESC LIMIT 1    
"SELECT customers.customer_id, customers.customer_first_name FROM Customers        EXCEPT SELECT customers_cards.customer_id, customers.customer_first_name FROM Customers JOIN Customers_Cards WHERE customers_cards.card_type_code = 'Credit'       "
SELECT state.state_name FROM state WHERE state.area = (SELECT max( state.area) FROM state        )       
"SELECT student.Fname, student.LName FROM Student WHERE student.StuID NOT IN (SELECT has_allergy.StuID FROM Has_Allergy JOIN Allergy_Type ON has_allergy.Allergy = allergy_type.Allergy WHERE allergy_type.AllergyType = 'food'       )       "
"SELECT flight.origin, count( *) FROM flight  GROUP BY flight.origin      "
"SELECT drivers.driverId, drivers.surname FROM drivers JOIN lapTimes ON drivers.driverId = lap_times.driverId    ORDER BY lap_times.milliseconds DESC LIMIT 1    "
SELECT count( *) FROM film        
"SELECT project_staff.project_id, count( *) FROM Project_Staff  GROUP BY project_staff.project_id   ORDER BY count( *) ASC   "
SELECT state.capital FROM state JOIN highlow ON state.state_name = highlow.state_name WHERE highlow.lowest_elevation = (SELECT min( highlow.lowest_elevation) FROM highlow        )       
"SELECT staff.Name, staff.Other_Details FROM Staff        "
SELECT physician.Name FROM Physician JOIN Appointment ON physician.EmployeeID = T2.Physician        
"SELECT DISTINCT count(DISTINCT paper.paperId), key_phrase.keyphraseId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 2015 and venue.venueName = 'NIPS' GROUP BY key_phrase.keyphraseId   ORDER BY count( paper.paperId) DESC   "
"SELECT documents.Document_Name, documents.Document_ID FROM Documents WHERE documents.Document_Type_Code = 'BK'       "
SELECT movie.title FROM directed_by JOIN director ON T2.did = director.did JOIN movie WHERE director.name = 'Alfred Hitchcock'       
SELECT DISTINCT wine.Name FROM wine JOIN appellations ON wine.Appelation = appellations.Appelation WHERE appellations.Area = 'North Coast'       
SELECT products.product_name FROM Products JOIN Ref_Colors ON products.color_code = reference_colors.color_code WHERE reference_colors.color_description = 'yellow'       
SELECT DISTINCT products.product_details FROM Products        
"SELECT employee.EMP_FNAME, professor.PROF_OFFICE, course.CRS_DESCRIPTION FROM EMPLOYEE JOIN PROFESSOR ON employee.EMP_NUM = professor.EMP_NUM JOIN DEPARTMENT ON professor.DEPT_CODE = DEPARTMENT.DEPT_CODE JOIN COURSE ON DEPARTMENT.DEPT_CODE = course.DEPT_CODE        "
SELECT city.city_name FROM city WHERE city.population = (SELECT min( city.population) FROM city        )       
SELECT staff.first_name FROM Staff        EXCEPT SELECT staff.first_name FROM Staff JOIN Lessons ON staff.staff_id = T3.staff_id        
SELECT track.Name FROM track JOIN race ON track.Track_ID = race.Track_ID  GROUP BY track.Name  ORDER BY count( *) DESC LIMIT 1    
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and restaurant.RATING > 1       "
SELECT market.Country FROM market     ORDER BY market.Number_cities DESC   
SELECT job_history.EMPLOYEE_ID FROM job_history JOIN employees ON job_history.EMPLOYEE_ID = employees.EMPLOYEE_ID  GROUP BY job_history.EMPLOYEE_ID HAVING count( *) >= 2     
"SELECT cinema.Name, cinema.Openning_year, cinema.Capacity FROM cinema        "
SELECT sum( manufacturers.Revenue) FROM Manufacturers WHERE manufacturers.Headquarter = 'Austin'       
SELECT employees.Employee_ID FROM Employees        EXCEPT SELECT documents_to_be_destroyed.Destroyed_by_Employee_ID FROM Documents_to_be_Destroyed        
SELECT avg( customer.credit_score) FROM customer WHERE customer.cust_ID NOT IN (SELECT loan.cust_ID FROM loan        )       
"SELECT apartment_buildings.building_address, apartment_buildings.building_phone FROM Apartment_Buildings WHERE apartment_buildings.building_manager = 'Brenden'       "
SELECT region.Region_name FROM region JOIN affected_region ON region.Region_id = affected_region.Region_id JOIN storm ON affected_region.Storm_ID = storm.Storm_ID WHERE storm.Number_Deaths >= 10       
SELECT county_public_safety.Crime_rate FROM county_public_safety JOIN city ON county_public_safety.County_ID = city.County_ID WHERE city.White > 90       
SELECT DISTINCT count(DISTINCT country.Official_native_language) FROM country JOIN match_season ON country.Country_id = match_season.Country WHERE match_season.Position = 'Defender'       
SELECT customers.customer_name FROM Customers JOIN Customer_Orders ON customers.customer_id = T2.customer_id  GROUP BY customers.customer_name  ORDER BY count( *) DESC LIMIT 1    
"SELECT accounts.name, checking.balance FROM ACCOUNTS JOIN CHECKING ON accounts.custid = checking.custid JOIN SAVINGS ON accounts.custid = savings.custid    ORDER BY savings.balance ASC LIMIT 1    "
SELECT DISTINCT customers.customer_name FROM Customers JOIN Orders ON customers.customer_id = orders.customer_id WHERE orders.order_status = 'Packing'       
SELECT max( results.fastestLapSpeed) FROM results JOIN races ON results.raceId = races.raceId WHERE races.year = 2008 and races.name = 'Monaco Grand Prix'       
SELECT accounts.name FROM ACCOUNTS     ORDER BY accounts.name ASC   
SELECT electoral_register.electoral_register_id FROM Electoral_Register JOIN CMI_Cross_References ON electoral_register.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id WHERE cmi_cross_references.source_system_code = 'Electoral' or cmi_cross_references.source_system_code = 'Tax'       
"SELECT financial_transactions.transaction_type, count( *) FROM Financial_Transactions  GROUP BY financial_transactions.transaction_type      "
SELECT highlow.state_name FROM highlow WHERE highlow.highest_elevation = (SELECT max( highlow.highest_elevation) FROM highlow        )       
SELECT * FROM Students JOIN Student_Course_Registrations ON students.student_id = student_course_registrations.student_id WHERE student_course_registrations.student_id NOT IN (SELECT student_course_attendance.student_id FROM Student_Course_Attendance        )       
SELECT rooms.roomName FROM Rooms WHERE rooms.basePrice between 120 AND 150       
"SELECT film.title, film.film_id FROM film JOIN inventory ON film.film_id = inventory.film_id  GROUP BY inventory.film_id  ORDER BY count( *) DESC LIMIT 1    "
"SELECT artwork.Type, count( *) FROM artwork  GROUP BY artwork.Type      "
SELECT product.product FROM product WHERE product.product like '%Scanner%'       
SELECT teachers.FirstName FROM teachers WHERE teachers.Classroom = 110       
SELECT DISTINCT person_friend.name FROM PersonFriend JOIN Person ON person_friend.friend = person.name WHERE person.name = 'Alice' and person_friend.name != 'Alice'       
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 2015 and venue.venueName = 'ACL'       
SELECT addresses.state_province_county FROM Addresses WHERE addresses.address_id NOT IN (SELECT employees.employee_address_id FROM Employees        )       
SELECT count( *) FROM farm        
SELECT actor.name FROM actor JOIN cast ON actor.aid = cast.aid JOIN movie WHERE cast.role = Alan Turing and movie.title = 'The Imitation Game'       
SELECT song.song_name FROM song WHERE song.languages = 'english'       
"SELECT DISTINCT count(DISTINCT paper.paperId), writes.authorId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' GROUP BY writes.authorId   ORDER BY count( paper.paperId) DESC   "
"SELECT customers.customer_id, customers.customer_first_name, customers.customer_last_name, customers.customer_phone FROM Customers        "
SELECT count( *) FROM Products        
SELECT count( *) FROM entrepreneur        
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId JOIN venue ON paper.venueId = venue.venueId WHERE key_phrase.keyphraseName = '1' and paper.year = 1 and venue.venueName = '1'       
"SELECT film_market_estimation.Low_Estimate, film_market_estimation.High_Estimate FROM film_market_estimation        "
SELECT DISTINCT count(DISTINCT voting_record.President_Vote) FROM Voting_record        
"SELECT pilot.Name, pilot.Age FROM pilot JOIN match ON pilot.Pilot_Id = T2.Winning_Pilot    ORDER BY pilot.Age ASC LIMIT 1    "
SELECT employees.Role_Code FROM Employees  GROUP BY employees.Role_Code  ORDER BY count( *) ASC LIMIT 1    
SELECT sum( dorm.student_capacity) FROM Dorm        
SELECT DISTINCT count(DISTINCT party.Governor) FROM party        
SELECT tourist_attractions.Name FROM Tourist_Attractions JOIN Visits ON tourist_attractions.Tourist_Attraction_ID = Visits.Tourist_Attraction_ID JOIN Visitors ON Visits.Tourist_ID = visitors.Tourist_ID WHERE visitors.Tourist_Details = 'Alison'       EXCEPT SELECT tourist_attractions.Name FROM Tourist_Attractions JOIN Visits ON tourist_attractions.Tourist_Attraction_ID = Visits.Tourist_Attraction_ID JOIN Visitors ON Visits.Tourist_ID = visitors.Tourist_ID WHERE visitors.Tourist_Details = 'Rosalind'       
SELECT business.name FROM business JOIN category ON business.business_id = category.business_id WHERE business.city = '1' and business.rating > 1 and category.category_name = '1' and category.category_name = '1'       
"SELECT track.Name, track.Location FROM track JOIN race ON track.Track_ID = T2.Track_ID  GROUP BY T2.Track_ID HAVING count( *) = 1     "
"SELECT member.Name, branch.Name FROM member JOIN purchase ON member.Member_ID = purchase.Member_ID JOIN branch ON purchase.Branch_ID = branch.Branch_ID JOIN membership_register_branch ON branch.Branch_ID = membership_register_branch.Branch_ID     ORDER BY membership_register_branch.Register_Year ASC   "
SELECT department.DName FROM Department        EXCEPT SELECT department.DName FROM Department JOIN Minor_in ON department.DNO = T3.DNO        
SELECT count( *) FROM Characteristics JOIN Product_Characteristics ON characteristics.characteristic_id = Product_Characteristics.characteristic_id JOIN Products ON Product_Characteristics.product_id = products.product_id WHERE products.product_name = 'sesame'       
SELECT ship.Name FROM ship WHERE ship.Nationality != 'United States'       
SELECT addresses.address_content FROM Addresses WHERE addresses.city = 'East Julianaside' and addresses.state_province_county = 'Texas'      UNION SELECT addresses.address_content FROM Addresses WHERE addresses.city = 'Gleasonmouth' and addresses.state_province_county = 'Arizona'        
SELECT city.city_name FROM city WHERE city.population = (SELECT max( city.population) FROM city JOIN state ON city.state_name = T23.state_name        )       
SELECT count( *) FROM author        
"SELECT sports_info.SportName, count( *) FROM SportsInfo JOIN Student ON sports_info.StuID = student.StuID  GROUP BY sports_info.SportName      "
SELECT authors.fname FROM Authors     ORDER BY authors.fname ASC   
SELECT claims.Date_Claim_Made FROM Claims    ORDER BY claims.Date_Claim_Made ASC LIMIT 1    
SELECT apartment_buildings.building_short_name FROM Apartment_Buildings WHERE apartment_buildings.building_manager = 'Emma'       
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId JOIN venue ON paper.venueId = venue.venueId WHERE author.authorName = '1' and key_phrase.keyphraseName = '1' and venue.venueName = '1'       
SELECT count( *) FROM state        
SELECT instructor.name FROM instructor WHERE instructor.ID NOT IN (SELECT teaches.ID FROM teaches        )       
SELECT dorm.dorm_name FROM Dorm WHERE dorm.gender = 'F'       
"SELECT movie.director, movie.title FROM Movie JOIN Rating ON movie.mID = rating.mID WHERE rating.stars = 5       "
"SELECT student.city_code, count( *) FROM Student  GROUP BY student.city_code      "
SELECT party_events.Event_Name FROM party_events  GROUP BY party_events.Event_Name HAVING count( *) > 2     
"SELECT representative.Name, representative.Party FROM representative        "
SELECT DISTINCT count(DISTINCT user.name) FROM user JOIN review ON user.user_id = review.user_id JOIN business ON review.business_id = business.business_id JOIN category ON business.business_id = category.business_id WHERE business.city = 'Dallas' and category.category_name = 'Irish Pub'       
"SELECT products.product_name, products.product_category_code FROM Products    ORDER BY products.product_price DESC LIMIT 1    "
SELECT river.traverse FROM river WHERE river.river_name = '1'       
SELECT DISTINCT count(DISTINCT assigned_to.Scientist) FROM AssignedTo        
"SELECT documents.document_name, documents.access_count FROM Documents    ORDER BY documents.access_count DESC LIMIT 1    "
SELECT department_stores.dept_store_chain_id FROM Department_Stores  GROUP BY department_stores.dept_store_chain_id  ORDER BY count( *) DESC LIMIT 1    
SELECT DISTINCT list.FirstName FROM list WHERE list.Classroom = 107       
SELECT count( *) FROM Student        
SELECT airlines.country FROM airlines WHERE airlines.active = '1' GROUP BY airlines.country  ORDER BY count( *) DESC LIMIT 1    
"SELECT count( *), classroom.building FROM classroom WHERE classroom.capacity > 50 GROUP BY classroom.building      "
SELECT movie.title FROM directed_by JOIN director ON T2.did = director.did JOIN movie WHERE director.birth_city = 'Los Angeles'       
SELECT song.song_name FROM song WHERE song.genre_is = '1' or song.languages = '1'       
SELECT media_types.name FROM media_types        
SELECT employees.DEPARTMENT_ID FROM employees  GROUP BY employees.DEPARTMENT_ID HAVING count( employees.COMMISSION_PCT) > 10     
SELECT film.Studio FROM film  GROUP BY film.Studio HAVING count( *) >= 2     
SELECT captain.Name FROM captain     ORDER BY captain.age DESC   
SELECT user_profiles.email FROM user_profiles WHERE user_profiles.name = 'Mary'       
SELECT max( accounts.Account_Details) FROM Accounts       UNION SELECT accounts.Account_Details FROM Accounts WHERE accounts.Account_Details like '%5%'        
"SELECT reviewer.name, movie.title, rating.stars, rating.ratingDate FROM Reviewer JOIN Rating ON reviewer.rID = rating.rID JOIN Movie ON rating.mID = movie.mID     ORDER BY reviewer.name ASC   "
SELECT count( *) FROM review JOIN useracct ON review.u_id = useracct.u_id WHERE useracct.u_id NOT IN (SELECT review.u_id FROM review        )       
"SELECT faculty.Fname, faculty.Lname FROM Faculty JOIN Member_of ON faculty.FacID = member_of.FacID WHERE member_of.DNO = 520       "
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
SELECT faculty_participates_in.FacID FROM Faculty_Participates_in      INTERSECT SELECT student.Advisor FROM Student          
"SELECT DISTINCT count(DISTINCT paper.paperId), paper.year FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE venue.venueName = 'NIPS' GROUP BY paper.year   ORDER BY count( paper.paperId) DESC   "
SELECT count( *) FROM Products        
SELECT count( *) FROM venue        
"SELECT DISTINCT count(DISTINCT paper.paperId), key_phrase.keyphraseId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 2015 and venue.venueName = 'NIPS' GROUP BY key_phrase.keyphraseId   ORDER BY count( paper.paperId) DESC   "
"SELECT editor.Name, editor.Age, journal.Theme FROM editor JOIN journal_committee ON editor.Editor_ID = journal_committee.Editor_ID JOIN journal ON journal_committee.Journal_ID = journal.Journal_ID     ORDER BY journal.Theme ASC   "
"SELECT max( student.Age), min( student.Age) FROM Student WHERE student.Major = 600       "
SELECT count( *) FROM Hotels        
SELECT DISTINCT teachers.LastName FROM teachers JOIN list WHERE list.Grade = 5       
SELECT people.Date_of_Birth FROM people JOIN entrepreneur ON people.People_ID = entrepreneur.People_ID WHERE entrepreneur.Investor = 'Simon Woodroffe' or entrepreneur.Investor = 'Peter Jones'       
SELECT journalist.Name FROM journalist WHERE journalist.Nationality = 'England' or journalist.Nationality = 'Wales'       
SELECT customers.last_name FROM Customers      INTERSECT SELECT staff.last_name FROM Staff          
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT DISTINCT available_policies.policy_type_code FROM Available_Policies JOIN Customers_Policies ON available_policies.Policy_ID = Customers_Policies.Policy_ID JOIN Customers ON Customers_Policies.Customer_ID = customers.Customer_ID WHERE customers.Customer_name = 'Dayana Robel'       
"SELECT count( *), projects.project_details FROM Tasks JOIN Projects ON tasks.project_id = projects.project_id  GROUP BY projects.project_details      "
SELECT count( *) FROM Apartment_Buildings        
SELECT sum( settlements.Amount_Settled) FROM Settlements        
"SELECT phone.Name, market.District FROM phone JOIN phone_market ON phone.Phone_ID = phone_market.Phone_ID JOIN market ON phone_market.Market_ID = market.Market_ID     ORDER BY market.Ranking ASC   "
SELECT research_outcomes.outcome_description FROM Research_Outcomes JOIN Project_Outcomes ON research_outcomes.outcome_code = Project_Outcomes.outcome_code JOIN Projects ON Project_Outcomes.project_id = projects.project_id WHERE projects.project_details = 'sint'       
"SELECT pilot.Name, pilot.Age FROM pilot JOIN match ON pilot.Pilot_Id = T2.Winning_Pilot WHERE pilot.Age < 30 GROUP BY T2.Winning_Pilot  ORDER BY count( *) DESC LIMIT 1    "
SELECT sum( furniture.Num_of_Component) FROM furniture        
SELECT river.traverse FROM river WHERE river.river_name = '1'       
SELECT DISTINCT count(DISTINCT business.name) FROM business JOIN category ON business.business_id = category.business_id WHERE business.city = 'Dallas' and business.rating > 3.5 and category.category_name = 'Bars'       
SELECT border_info.border FROM border_info WHERE border_info.state_name in (SELECT river.traverse FROM river WHERE river.river_name = '1'       )       
SELECT DISTINCT college.state FROM College JOIN Tryout ON college.cName = T2.cName        
SELECT DISTINCT artist.artist_name FROM artist WHERE artist.country = 'Bangladesh'       EXCEPT SELECT DISTINCT song.artist_name FROM song WHERE song.rating > 7       
SELECT party.Governor FROM party JOIN election ON party.Party_ID = election.Party WHERE election.District = 1       
SELECT river.river_name FROM river WHERE river.length = (SELECT min( river.length) FROM river        )       
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = geographic.CITY_NAME JOIN RESTAURANT ON geographic.CITY_NAME = restaurant.CITY_NAME WHERE geographic.REGION = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT DISTINCT count(DISTINCT instruments.Instrument) FROM Instruments JOIN Songs ON instruments.SongId = songs.SongId WHERE songs.Title = 'Le Pop'       
"SELECT sum( settlements.Settlement_Amount), avg( settlements.Settlement_Amount) FROM Settlements        "
"SELECT accounts.customer_id, customers.customer_first_name, customers.customer_last_name, count( *) FROM Accounts JOIN Customers ON accounts.customer_id = customers.customer_id  GROUP BY accounts.customer_id      "
"SELECT DISTINCT person_friend.name, person_friend.friend, person.age FROM PersonFriend JOIN Person ON person_friend.friend = person.name WHERE person.age > (SELECT avg( person.age) FROM Person        )       "
SELECT manufacturers.Name FROM Manufacturers WHERE manufacturers.Revenue > (SELECT avg( manufacturers.Revenue) FROM Manufacturers        )       
SELECT manufacturers.Name FROM Manufacturers WHERE manufacturers.Revenue < (SELECT min( manufacturers.Revenue) FROM Manufacturers WHERE manufacturers.Headquarter = 'Austin'       )       
SELECT DISTINCT operate_company.Type FROM operate_company JOIN flight ON operate_company.id = flight.company_id WHERE flight.Velocity < 200       
"SELECT sum( sports_info.HoursPerWeek), sum( sports_info.GamesPlayed) FROM SportsInfo JOIN Student ON sports_info.StuID = student.StuID WHERE student.Age < 20       "
"SELECT music_festival.Category, count( *) FROM music_festival  GROUP BY music_festival.Category      "
SELECT student.name FROM student WHERE student.dept_name = 'History'   ORDER BY student.tot_cred DESC LIMIT 1    
"SELECT avg( artist.Age), min( artist.Age) FROM artist WHERE artist.Country = 'United States'       "
SELECT products.product_price FROM Products WHERE products.product_id NOT IN (SELECT complaints.product_id FROM Complaints        )       
SELECT count( *) FROM Customer_Orders WHERE customer_orders.order_details = 'Second time'       
"SELECT photos.Name, photos.Description FROM Photos JOIN Tourist_Attractions ON photos.Tourist_Attraction_ID = tourist_attractions.Tourist_Attraction_ID WHERE tourist_attractions.Name = 'film festival'       "
"SELECT city.Name, county_public_safety.Name FROM city JOIN county_public_safety ON city.County_ID = county_public_safety.County_ID        "
SELECT DISTINCT count(DISTINCT person.city) FROM Person        
SELECT people.Name FROM people WHERE people.Height < (SELECT avg( people.Height) FROM people        )       
SELECT DISTINCT artist.Country FROM artist        
SELECT DISTINCT customer_contact_channels.channel_code FROM Customer_Contact_Channels JOIN Customers ON customer_contact_channels.customer_id = customers.customer_id WHERE customers.customer_name = 'Tillman Ernser'       
SELECT song.languages FROM song  GROUP BY song.languages  ORDER BY count( *) DESC LIMIT 1    
SELECT marketing_regions.Marketing_Region_Name FROM Marketing_Regions JOIN Stores ON marketing_regions.Marketing_Region_Code = stores.Marketing_Region_Code WHERE stores.Store_Name = 'Rob Dinning'       
"SELECT payments.customer_id, sum( payments.amount_paid) FROM Payments  GROUP BY payments.customer_id  ORDER BY sum( payments.amount_paid) DESC LIMIT 1    "
SELECT park.city FROM park  GROUP BY park.city HAVING count( *) between 2 AND 4     
SELECT apartment_bookings.booking_status_code FROM Apartment_Bookings JOIN Apartments ON apartment_bookings.apt_id = apartments.apt_id WHERE apartments.apt_number = 'Suite 634'       
"SELECT DISTINCT count(DISTINCT paper.paperId), writes.authorId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' GROUP BY writes.authorId   ORDER BY count( paper.paperId) DESC   "
"SELECT organisations.organisation_type, organisations.organisation_id FROM Organisations JOIN Research_Staff ON organisations.organisation_id = research_staff.employer_organisation_id  GROUP BY research_staff.employer_organisation_id  ORDER BY count( *) DESC LIMIT 1    "
"SELECT ship.Type, ship.Nationality FROM ship        "
SELECT tourist_attractions.Name FROM Tourist_Attractions JOIN Photos ON tourist_attractions.Tourist_Attraction_ID = photos.Tourist_Attraction_ID WHERE photos.Name = 'game1'       
SELECT addresses.state_province_county FROM Addresses JOIN Staff ON addresses.address_id = T2.staff_address_id  GROUP BY addresses.state_province_county HAVING count( *) between 2 AND 4     
SELECT count( *) FROM Video_Games WHERE video_games.GType = '1'       
SELECT staff.last_name FROM Staff JOIN Complaints ON staff.staff_id = complaints.staff_id    ORDER BY complaints.date_complaint_raised ASC LIMIT 1    
"SELECT musical.Name, count( *) FROM musical JOIN actor  GROUP BY musical.Name      "
SELECT count( *) FROM postseason JOIN team WHERE team.name = 'Boston Red Stockings' and postseason.year = 2009       
"SELECT authors.fname, authors.lname FROM Authors     ORDER BY authors.lname ASC   "
SELECT procedures.Name FROM Procedures    ORDER BY procedures.Cost ASC LIMIT 1    
SELECT count( border_info.border) FROM border_info WHERE border_info.state_name in (SELECT state.state_name FROM state WHERE state.population = (SELECT max( state.population) FROM state        )       )       
SELECT dorm.dorm_name FROM Dorm JOIN Has_amenity ON dorm.dormid = Has_amenity.dormid JOIN Dorm_amenity ON Has_amenity.amenid = dorm_amenity.amenid WHERE dorm_amenity.amenity_name = 'TV Lounge'       EXCEPT SELECT dorm.dorm_name FROM Dorm JOIN Has_amenity ON dorm.dormid = Has_amenity.dormid JOIN Dorm_amenity ON Has_amenity.amenid = dorm_amenity.amenid WHERE dorm_amenity.amenity_name = 'Study Room'       
SELECT pilot.Pilot_name FROM pilot WHERE pilot.Pilot_ID NOT IN (SELECT pilot_record.Pilot_ID FROM pilot_record        )       
"SELECT employees.FIRST_NAME, employees.LAST_NAME FROM employees WHERE employees.DEPARTMENT_ID = 70 or employees.DEPARTMENT_ID = 90       "
SELECT customers.payment_method FROM Customers JOIN Customer_Orders ON customers.customer_id = Customer_Orders.customer_id JOIN Order_Items ON Customer_Orders.order_id = order_items.order_id  GROUP BY customers.payment_method  ORDER BY sum( order_items.order_quantity) ASC LIMIT 1    
SELECT customers.customer_name FROM Customers        
"SELECT min( person.age), person.job FROM Person  GROUP BY person.job      "
SELECT lots.lot_details FROM Lots        EXCEPT SELECT lots.lot_details FROM Lots JOIN Transactions_Lots ON lots.lot_id = T3.lot_id        
SELECT count( *) FROM csu_fees WHERE csu_fees.CampusFee > (SELECT avg( csu_fees.CampusFee) FROM csu_fees        )       
SELECT city.Official_Name FROM city JOIN farm_competition ON city.City_ID = T2.Host_city_ID  GROUP BY city.Official_Name HAVING count( *) > 1     
SELECT count( *) FROM Customers_Cards        
SELECT teaches.ID FROM teaches WHERE teaches.semester = '1' and teaches.year = 1       EXCEPT SELECT teaches.ID FROM teaches WHERE teaches.semester = '1' and teaches.year = 1       
SELECT DISTINCT count(DISTINCT bank.state) FROM bank        
SELECT student.LName FROM Student WHERE student.Major = 50       
SELECT DISTINCT count(DISTINCT customer_orders.customer_id) FROM Customer_Orders WHERE customer_orders.order_status = 'Cancelled'       
"SELECT phone.Accreditation_type, count( *) FROM phone  GROUP BY phone.Accreditation_type      "
SELECT artist.Name FROM artist    ORDER BY artist.Year_Join DESC LIMIT 1    
"SELECT faculty.FacID, count( *) FROM Faculty JOIN Faculty_Participates_in ON faculty.FacID = Faculty_Participates_in.FacID JOIN Activity ON Faculty_Participates_in.actid = Activity.actid JOIN Participates_in ON Activity.actid = Participates_in.actid JOIN Student ON Participates_in.stuid = student.StuID  GROUP BY faculty.FacID      "
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = geographic.CITY_NAME JOIN RESTAURANT ON geographic.CITY_NAME = restaurant.CITY_NAME WHERE geographic.REGION = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT guests.date_of_birth FROM Guests WHERE guests.gender_code = 'Male'       
SELECT genre.genre FROM genre JOIN classification ON genre.gid = T3.gid JOIN movie WHERE movie.title = 'Jurassic Park'       
SELECT products.product_name FROM Products    ORDER BY products.product_price DESC LIMIT 1    
"SELECT customers.customer_name, customer_contact_channels.active_from_date FROM Customers JOIN Customer_Contact_Channels ON customers.customer_id = customer_contact_channels.customer_id WHERE customer_contact_channels.channel_code = 'Email'       "
"SELECT aircraft.aid, aircraft.name FROM aircraft    ORDER BY aircraft.distance DESC LIMIT 1    "
SELECT market.Country FROM market     ORDER BY market.Number_cities DESC   
SELECT drama_workshop_groups.Marketing_Region_Code FROM Drama_Workshop_Groups  GROUP BY drama_workshop_groups.Marketing_Region_Code  ORDER BY count( *) DESC LIMIT 1    
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN cite ON paper.paperId = T3.citingPaperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
SELECT highlow.lowest_point FROM highlow WHERE highlow.state_name in (SELECT river.traverse FROM river WHERE river.river_name = '1'       )   ORDER BY highlow.lowest_elevation ASC LIMIT 1    
SELECT documents_with_expenses.Document_ID FROM Documents_with_Expenses JOIN Ref_Budget_Codes ON documents_with_expenses.Budget_Type_Code = reference_budget_codes.Budget_Type_Code WHERE reference_budget_codes.Budget_Type_Description = 'Government'       
SELECT count( *) FROM CLASS        
SELECT count( *) FROM chip_model WHERE chip_model.WiFi = '1'       
SELECT max( university.Enrollment) FROM university        
SELECT artist.Age FROM artist        
SELECT debate.Date FROM debate WHERE debate.Num_of_Audience > 150       
SELECT count( *) FROM Ship        
SELECT DISTINCT student.STU_FNAME FROM STUDENT JOIN ENROLL ON student.STU_NUM = enroll.STU_NUM WHERE enroll.ENROLL_GRADE = 'C'       
SELECT rooms.roomName FROM Rooms WHERE rooms.basePrice > (SELECT avg( rooms.basePrice) FROM Rooms        )       
"SELECT customer_orders.order_shipping_charges, customer_orders.customer_id FROM Customer_Orders WHERE customer_orders.order_status_code = 'Cancelled' or customer_orders.order_status_code = 'Paid'       "
SELECT genre.genre FROM genre JOIN classification ON genre.gid = classification.gid JOIN copyright ON classification.msid = copyright.msid JOIN directed_by ON copyright.msid = directed_by.msid JOIN director ON directed_by.did = director.did JOIN movie WHERE director.name = 'Asghar Farhadi'       
SELECT DISTINCT count(DISTINCT products.Name) FROM Products WHERE products.Name NOT IN (SELECT products.Name FROM Products JOIN Manufacturers ON products.Manufacturer = manufacturers.Code WHERE manufacturers.Name = 'Sony'       )       
"SELECT order_items.order_id, count( *) FROM Order_Items  GROUP BY order_items.order_id      "
SELECT count( *) FROM state        
SELECT count( *) FROM author        
SELECT state.state_name FROM state WHERE state.density = (SELECT max( state.density) FROM state        )       
SELECT DISTINCT count(DISTINCT songs.Title) FROM Songs JOIN Tracklists ON songs.SongId = Tracklists.SongId JOIN Albums ON Tracklists.AlbumId = albums.AId WHERE albums.Type = '1'       
SELECT user.name FROM user JOIN review ON user.user_id = review.user_id JOIN business ON review.business_id = business.business_id JOIN category ON business.business_id = category.business_id WHERE business.name = '1' and category.category_name = '1'       
SELECT representative.Party FROM representative WHERE representative.State = 'New York'     INTERSECT SELECT representative.Party FROM representative WHERE representative.State = 'Pennsylvania'         
SELECT branch.Name FROM branch JOIN purchase ON branch.Branch_ID = purchase.Branch_ID JOIN member ON purchase.Member_ID = member.Member_ID WHERE member.Hometown = '1'     INTERSECT SELECT branch.Name FROM branch JOIN purchase ON branch.Branch_ID = purchase.Branch_ID JOIN member ON purchase.Member_ID = member.Member_ID WHERE member.Hometown = '1'         
"SELECT member.Card_Number, member.Name, member.Hometown FROM member     ORDER BY member.Level DESC   "
"SELECT avg( customer.acc_bal), customer.acc_type FROM customer WHERE customer.credit_score < 50 GROUP BY customer.acc_type      "
"SELECT party.Comptroller, count( *) FROM party  GROUP BY party.Comptroller  ORDER BY count( *) DESC LIMIT 1    "
"SELECT business.state, sum( checkin.count) FROM business JOIN checkin ON business.business_id = checkin.business_id JOIN category ON business.business_id = category.business_id WHERE category.category_name = '1' and category.category_name = '1' and checkin.day = '1' GROUP BY business.state      "
SELECT parties.party_email FROM Parties JOIN Party_Services ON parties.party_id = party_services.customer_id  GROUP BY parties.party_email  ORDER BY count( *) DESC LIMIT 1    
"SELECT DISTINCT order_items.product_id, count(DISTINCT order_items.order_id) FROM Order_Items  GROUP BY order_items.product_id      "
"SELECT DISTINCT customers.customer_first_name, customers.customer_last_name FROM Customers JOIN Accounts        "
SELECT hall_of_fame.yearid FROM hall_of_fame  GROUP BY hall_of_fame.yearid  ORDER BY count( *) ASC LIMIT 1    
SELECT customers.customer_name FROM Customers JOIN Orders ON customers.customer_id = Orders.customer_id JOIN Order_Items ON Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = products.product_id WHERE products.product_name = 'food' GROUP BY customers.customer_name HAVING count( *) >= 1     
SELECT catalog_contents.catalog_entry_name FROM Catalog_Contents JOIN Catalog_Contents_Additional_Attributes ON catalog_contents.catalog_entry_id = catalog_contents_additional_attributes.catalog_entry_id WHERE catalog_contents_additional_attributes.attribute_value = (SELECT catalog_contents_additional_attributes.attribute_value FROM Catalog_Contents_Additional_Attributes JOIN Catalog_Structure ON catalog_contents_additional_attributes.catalog_level_number = Catalog_Structure.catalog_level_number JOIN Catalogs ON Catalog_Structure.catalog_id = catalogs.catalog_id  GROUP BY catalog_contents_additional_attributes.attribute_value  ORDER BY count( *) DESC LIMIT 1    )       
SELECT DISTINCT department.Name FROM Department JOIN Affiliated_With ON department.DepartmentID = affiliated_with.Department WHERE affiliated_with.PrimaryAffiliation = 1       
SELECT DISTINCT film.Directed_by FROM film        
"SELECT film.Title, film_market_estimation.Type FROM film JOIN film_market_estimation ON film.Film_ID = film_market_estimation.Film_ID        "
"SELECT claims.Date_Claim_Made, claims.Date_Claim_Settled FROM Claims WHERE claims.Amount_Claimed > (SELECT avg( claims.Amount_Claimed) FROM Claims        )       "
"SELECT DISTINCT count(DISTINCT student.ID), count(DISTINCT instructor.ID), instructor.dept_name FROM student JOIN department ON student.dept_name = T3.dept_name JOIN instructor ON T3.dept_name = instructor.dept_name  GROUP BY instructor.dept_name      "
SELECT weather.date FROM weather WHERE weather.max_temperature_f > 85       
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE restaurant.CITY_NAME in (SELECT geographic.CITY_NAME FROM GEOGRAPHIC WHERE geographic.REGION = '1'       ) and restaurant.RATING > 1       "
SELECT count( *) FROM ship        
SELECT DISTINCT count(DISTINCT movie.Director) FROM movie        
SELECT albums.title FROM albums JOIN artists ON albums.artist_id = sqlite_sequence.id WHERE sqlite_sequence.name = 'Aerosmith'       
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1'       
SELECT documents.document_type_code FROM Documents WHERE documents.document_id = 2       
"SELECT school.Type, count( *) FROM school JOIN school_bus ON school.School_ID = school_bus.School_ID  GROUP BY school.Type      "
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = 'Question Answering'       
SELECT count( highlow.state_name) FROM highlow WHERE highlow.lowest_elevation < (SELECT highlow.lowest_elevation FROM highlow WHERE highlow.state_name = '1'       )       
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT student_tests_taken.date_test_taken FROM Student_Tests_Taken WHERE student_tests_taken.test_result = 'Pass'       
SELECT count( *) FROM postseason        
SELECT count( *) FROM venue        
SELECT DISTINCT count(DISTINCT albums.Label) FROM Albums        
"SELECT student.Fname, student.Sex FROM Student WHERE student.StuID in (SELECT has_allergy.StuID FROM Has_Allergy WHERE has_allergy.Allergy = '1'       )       "
SELECT sum( payments.Amount_Payment) FROM Payments        
SELECT DISTINCT manufacturers.Headquarter FROM Manufacturers        
"SELECT customer.cust_name, customer.acc_bal FROM customer WHERE customer.cust_name like '%a%'       "
SELECT company.Headquarters FROM company  GROUP BY company.Headquarters  ORDER BY count( *) DESC LIMIT 1    
SELECT count( river.river_name) FROM river        
SELECT services.service_name FROM Services        EXCEPT SELECT services.service_name FROM Services JOIN Party_Services ON services.service_id = T3.service_id        
SELECT tracks.name FROM tracks JOIN genres ON tracks.genre_id = genres.id WHERE genres.name = 'Rock'       
SELECT tryout.cName FROM Tryout WHERE tryout.pPos = '1'     INTERSECT SELECT tryout.cName FROM Tryout WHERE tryout.pPos = '1'         
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = 'Question Answering'       
"SELECT employees.FIRST_NAME, employees.LAST_NAME FROM employees WHERE employees.SALARY > (SELECT employees.SALARY FROM employees WHERE employees.EMPLOYEE_ID = 163       )       "
SELECT city.city_name FROM city WHERE city.population = (SELECT max( city.population) FROM city JOIN state ON city.state_name = T23.state_name        )       
"SELECT student.Fname, student.LName FROM Student WHERE student.Age > 18 and student.Major != 600 and student.Sex = 'F'       "
SELECT campuses.Campus FROM Campuses WHERE campuses.Year < 1800       
SELECT student.Major FROM Student  GROUP BY student.Major HAVING count( *) < 3     
SELECT addresses.zip_postcode FROM Addresses JOIN Teachers ON addresses.address_id = teachers.address_id WHERE teachers.first_name = 'Lyla'       
SELECT claims_processing_stages.Claim_Status_Description FROM Claims_Processing_Stages WHERE claims_processing_stages.Claim_Status_Name = 'Open'       
SELECT swimmer.name FROM swimmer JOIN record ON swimmer.ID = T2.Swimmer_ID  GROUP BY swimmer.name HAVING count( *) >= 2     
SELECT count( *) FROM university WHERE university.Location like '%NY%'       
"SELECT count( *), medication.Name FROM Medication  GROUP BY medication.Name      "
SELECT degrees.Degrees FROM degrees JOIN Campuses ON degrees.Campus = campuses.Id WHERE campuses.Campus = 'San Jose State University' and degrees.Year = 2000       
SELECT avg( student.STU_GPA) FROM STUDENT JOIN ENROLL ON student.STU_NUM = ENROLL.STU_NUM JOIN CLASS ON ENROLL.CLASS_CODE = class.CLASS_CODE WHERE class.CRS_CODE = 'ACCT-211'       
SELECT DISTINCT count(DISTINCT publication.Publication_Date) FROM publication        
SELECT DISTINCT wine.Name FROM wine     ORDER BY wine.Name ASC   
"SELECT DISTINCT submission.Author, count(DISTINCT acceptance.Workshop_ID) FROM submission JOIN Acceptance ON submission.Submission_ID = acceptance.Submission_ID  GROUP BY submission.Author      "
SELECT film_market_estimation.Type FROM film_market_estimation WHERE film_market_estimation.Year = 1995       
SELECT ship.Name FROM Ship JOIN captain ON ship.Ship_ID = captain.Ship_ID    ORDER BY captain.age ASC LIMIT 1    
SELECT film.Studio FROM film  GROUP BY film.Studio  ORDER BY count( *) DESC LIMIT 1    
SELECT DISTINCT count(DISTINCT cite.citedPaperId) FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
"SELECT employees.first_name, employees.last_name FROM employees    ORDER BY employees.hire_date ASC LIMIT 1    "
SELECT state.state_name FROM state WHERE state.density = (SELECT min( state.density) FROM state        )       
SELECT customers.customer_name FROM Customers JOIN Customer_Orders ON customers.customer_id = customer_orders.customer_id    ORDER BY customer_orders.order_date DESC LIMIT 1    
SELECT gas_station.Manager_Name FROM gas_station WHERE gas_station.Open_Year > 2000 GROUP BY gas_station.Manager_Name  ORDER BY count( *) DESC LIMIT 1    
SELECT farm_competition.Hosts FROM farm_competition WHERE farm_competition.Theme != 'Aliens'       
"SELECT avg( station.lat), avg( station.long) FROM station WHERE station.city = 'San Jose'       "
"SELECT employees.EMPLOYEE_ID, employees.FIRST_NAME, employees.LAST_NAME, employees.JOB_ID FROM employees WHERE employees.SALARY > (SELECT max( employees.SALARY) FROM employees WHERE employees.JOB_ID = 'PU_MAN'       )       "
SELECT pilot.Name FROM pilot     ORDER BY pilot.Age DESC   
"SELECT DISTINCT person.name, person.age FROM Person JOIN PersonFriend ON person.name = person_friend.friend WHERE person_friend.friend = '1' or person_friend.friend = '1'       "
"SELECT journalist.Name, event.Name FROM journalist JOIN news_report ON journalist.journalist_ID = news_report.journalist_ID JOIN event ON news_report.Event_ID = event.Event_ID     ORDER BY event.Event_Attendance ASC   "
SELECT course_authors_and_tutors.address_line_1 FROM Course_Authors_and_Tutors WHERE course_authors_and_tutors.personal_name = 'Cathrine'       
SELECT courses.course_name FROM Courses JOIN Student_Course_Enrolment ON courses.course_id = T3.course_id JOIN Students ON T3.student_id = students.student_id  GROUP BY courses.course_name  ORDER BY count( *) DESC LIMIT 1    
SELECT customer_orders.Order_Date FROM Customer_Orders JOIN Order_Items ON customer_orders.Order_ID = Order_Items.Order_ID JOIN Products ON Order_Items.Product_ID = products.Product_ID WHERE products.Product_Price > 1000       
SELECT dorm_amenity.amenity_name FROM Dorm_amenity JOIN Has_amenity ON dorm_amenity.amenid = Has_amenity.amenid JOIN Dorm ON Has_amenity.dormid = dorm.dormid WHERE dorm.dorm_name = 'Smith Hall'    ORDER BY dorm_amenity.amenity_name ASC   
"SELECT station.id, station.local_authority FROM station JOIN weekly_weather ON station.id = T2.station_id  GROUP BY T2.station_id HAVING max( T2.precipitation) > 50     "
SELECT party.Governor FROM party  GROUP BY party.Governor  ORDER BY count( *) DESC LIMIT 1    
"SELECT avg( weekly_weather.high_temperature), weekly_weather.day_of_week FROM weekly_weather  GROUP BY weekly_weather.day_of_week      "
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
SELECT papers.title FROM Papers JOIN Authorship ON papers.paperID = authorship_count.paperID JOIN Inst ON authorship_count.instID = institution.instID JOIN Authors ON authorship_count.authID = authors.authID WHERE institution.country = 'Japan' and authorship_count.authOrder = 1 and authors.lname = 'Ohori'       
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Peter Mertens' and author.authorName = 'Dina Barbian'       
SELECT dorm.dorm_name FROM Dorm JOIN Has_amenity ON dorm.dormid = Has_amenity.dormid JOIN Dorm_amenity ON Has_amenity.amenid = dorm_amenity.amenid WHERE dorm_amenity.amenity_name = 'TV Lounge'       EXCEPT SELECT dorm.dorm_name FROM Dorm JOIN Has_amenity ON dorm.dormid = Has_amenity.dormid JOIN Dorm_amenity ON Has_amenity.amenid = dorm_amenity.amenid WHERE dorm_amenity.amenity_name = 'Study Room'       
SELECT count( *) FROM home_game JOIN park ON home_game.park_id = park.park_id WHERE home_game.year = 1907 and park.park_name = 'Columbia Park'       
SELECT count( *) FROM program        
"SELECT rooms.bedType, avg( rooms.basePrice) FROM Rooms  GROUP BY rooms.bedType      "
SELECT DISTINCT customers.customer_name FROM Customers JOIN Customer_Orders ON customers.customer_id = Customer_Orders.customer_id JOIN Order_Items ON Customer_Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = products.product_id WHERE products.product_name = 'keyboard'       
"SELECT courses.subject_id, subjects.subject_name, count( *) FROM Courses JOIN Subjects ON courses.subject_id = subjects.subject_id  GROUP BY courses.subject_id   ORDER BY count( *) ASC   "
"SELECT basketball_match.Team_Name, basketball_match.ACC_Regular_Season FROM basketball_match JOIN university ON basketball_match.School_ID = university.School_ID    ORDER BY university.Founded ASC LIMIT 1    "
SELECT count( *) FROM CLASS        
"SELECT college.Leader_Name, college.College_Location FROM college        "
SELECT movie.title FROM classification JOIN genre ON T2.gid = genre.gid JOIN movie WHERE genre.genre = 'Sci-Fi' and movie.release_year = 2010       
"SELECT operate_company.name, operate_company.Type FROM operate_company JOIN flight ON operate_company.id = T2.company_id        "
"SELECT hotels.other_hotel_details, hotels.star_rating_code FROM Hotels    ORDER BY hotels.price_range ASC LIMIT 1    "
SELECT body_builder.Clean_Jerk FROM body_builder    ORDER BY body_builder.Total DESC LIMIT 1    
SELECT publication.title FROM publication JOIN writes ON publication.pid = writes.pid JOIN author ON writes.aid = author.aid WHERE author.name = '1'   ORDER BY publication.citation_num DESC LIMIT 1    
SELECT complaints.complaint_status_code FROM Complaints  GROUP BY complaints.complaint_status_code HAVING count( *) > 3     
SELECT state.area FROM state WHERE state.state_name = '1'       
SELECT sum( settlements.Amount_Settled) FROM Settlements        
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId JOIN venue ON paper.venueId = venue.venueId WHERE author.authorName = '1' and venue.venueName = '1'       
"SELECT reference_locations.Location_Code, reference_locations.Location_Name FROM Ref_Locations        "
SELECT artist.artist_name FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.languages = 'bangla' GROUP BY artist.artist_name  ORDER BY count( *) DESC LIMIT 1    
SELECT student_course_attendance.student_id FROM Student_Course_Attendance WHERE student_course_attendance.course_id = 301   ORDER BY student_course_attendance.date_of_attendance DESC LIMIT 1    
SELECT people.Hometown FROM people JOIN gymnast ON people.People_ID = T2.Gymnast_ID  GROUP BY people.Hometown HAVING count( *) >= 2     
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId JOIN venue ON paper.venueId = venue.venueId WHERE author.authorName = '1' and venue.venueName = '1'       
"SELECT count( *), avg( student.Age), student.city_code FROM Student WHERE student.Sex = 'M' GROUP BY student.city_code      "
"SELECT faculty.Rank, count( *) FROM Faculty  GROUP BY faculty.Rank      "
"SELECT departments.DEPARTMENT_NAME, count( *) FROM departments JOIN employees ON departments.DEPARTMENT_ID = employees.DEPARTMENT_ID  GROUP BY departments.DEPARTMENT_NAME      "
SELECT customers.payment_method FROM Customers JOIN Customer_Orders ON customers.customer_id = Customer_Orders.customer_id JOIN Order_Items ON Customer_Orders.order_id = order_items.order_id  GROUP BY customers.payment_method  ORDER BY sum( order_items.order_quantity) ASC LIMIT 1    
SELECT highlow.highest_point FROM highlow WHERE highlow.state_name = '1'       
SELECT customer.LastName FROM Customer        EXCEPT SELECT customer.LastName FROM Customer JOIN Invoice ON customer.CustomerId = invoice.CustomerId WHERE invoice.Total > 20       
SELECT customer.cust_name FROM customer JOIN bank ON customer.branch_ID = bank.branch_ID JOIN loan ON bank.branch_ID = loan.branch_ID  GROUP BY customer.cust_name  ORDER BY sum( loan.amount) DESC LIMIT 1    
SELECT count( *) FROM Student        
SELECT count( *) FROM country        
SELECT DISTINCT count(DISTINCT university.Affiliation) FROM university        
SELECT DISTINCT player.player_name FROM Player JOIN Player_Attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.preferred_foot = '1' and player_attributes.overall_rating >= 1 and player_attributes.overall_rating <= 1       
"SELECT film.Title, film.Directed_by FROM film        "
SELECT river.traverse FROM river WHERE river.length = (SELECT max( river.length) FROM river        )       
SELECT member.Member_Name FROM member WHERE member.Party_ID = '3'     INTERSECT SELECT member.Member_Name FROM member WHERE member.Party_ID = '1'         
SELECT party.Governor FROM party  GROUP BY party.Governor  ORDER BY count( *) DESC LIMIT 1    
SELECT sum( discipline_enrollments.Graduate) FROM discipline_enrollments JOIN Campuses ON discipline_enrollments.Campus = campuses.Id WHERE discipline_enrollments.Year = 2004 and campuses.Campus = 'San Francisco State University'       
SELECT degrees.Degrees FROM degrees JOIN Campuses ON degrees.Campus = campuses.Id WHERE campuses.Campus = 'San Francisco State University' and degrees.Year = 2001       
"SELECT genres.name, count( *) FROM genres JOIN tracks ON genres.id = tracks.genre_id  GROUP BY genres.name  ORDER BY count( *) DESC LIMIT 1    "
SELECT count( *) FROM Premises        
"SELECT departments.DEPARTMENT_NAME, locations.CITY, locations.STATE_PROVINCE FROM departments JOIN locations ON departments.LOCATION_ID = locations.LOCATION_ID        "
"SELECT student.Advisor, count( *) FROM Student  GROUP BY student.Advisor      "
SELECT person_friend.name FROM PersonFriend WHERE person_friend.friend = 'Alice' and person_friend.year = (SELECT min( person_friend.year) FROM PersonFriend WHERE person_friend.friend = 'Alice'       )       
SELECT representative.State FROM representative  GROUP BY representative.State HAVING count( *) >= 2     
SELECT DISTINCT count(DISTINCT bank.city) FROM bank        
"SELECT customer_events.Customer_Event_ID, customer_events.date_moved_in, customer_events.property_id FROM Customer_Events        "
SELECT avg( results.fastestLapSpeed) FROM results JOIN races ON results.raceId = races.raceId WHERE races.year = 2008 and races.name = 'Monaco Grand Prix'       
SELECT count( *) FROM item WHERE item.i_id NOT IN (SELECT review.i_id FROM review        )       
SELECT city.state_name FROM city WHERE city.city_name = '1'       
SELECT restaurant_type.ResTypeDescription FROM Restaurant_Type WHERE restaurant_type.ResTypeName = 'Sandwich'       
SELECT representative.Name FROM representative JOIN election ON representative.Representative_ID = election.Representative_ID WHERE election.Votes > 10000       
"SELECT train.origin, count( *) FROM train  GROUP BY train.origin      "
SELECT apartments.apt_type_code FROM Apartments  GROUP BY apartments.apt_type_code  ORDER BY count( *) DESC LIMIT 1    
SELECT count( *) FROM club JOIN club_rank ON club.Club_ID = club_rank.Club_ID WHERE club_rank.Total < 10       
SELECT DISTINCT available_policies.policy_type_code FROM Available_Policies JOIN Customers_Policies ON available_policies.Policy_ID = Customers_Policies.Policy_ID JOIN Customers ON Customers_Policies.Customer_ID = customers.Customer_ID WHERE customers.Customer_name = 'Dayana Robel'       
"SELECT DISTINCT count(DISTINCT cite.citingPaperId), paper.paperId FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 2014 and venue.venueName = 'TACL' GROUP BY paper.paperId   ORDER BY count( cite.citingPaperId) DESC   "
SELECT student.STU_FNAME FROM STUDENT JOIN ENROLL ON student.STU_NUM = ENROLL.STU_NUM JOIN CLASS ON ENROLL.CLASS_CODE = class.CLASS_CODE WHERE class.CRS_CODE = 'ACCT-211' and student.STU_LNAME like '%S%'       
SELECT program.Name FROM program JOIN broadcast ON program.Program_ID = T2.Program_ID  GROUP BY program.Name  ORDER BY count( *) DESC LIMIT 1    
SELECT DISTINCT invoices.invoice_details FROM Invoices WHERE invoices.invoice_date < '1989-09-03' or invoices.invoice_date > '2007-12-25'       
SELECT ship.Name FROM ship JOIN mission ON ship.Ship_ID = mission.Ship_ID WHERE mission.Launched_Year > 1928       
"SELECT documents.Document_Name, documents.Document_Date FROM Documents JOIN Projects ON documents.Project_ID = projects.Project_ID WHERE projects.Project_Details = 'Graph Database project'       "
"SELECT DISTINCT pit_stops.driverId, pit_stops.stop FROM pitStops WHERE pit_stops.duration < (SELECT max( pit_stops.duration) FROM pitStops WHERE pit_stops.raceId = 841       )       "
SELECT DISTINCT count(DISTINCT volume.Artist_ID) FROM volume        
"SELECT elimination.Team, count( *) FROM Elimination  GROUP BY elimination.Team      "
SELECT pilot.Pilot_name FROM pilot     ORDER BY pilot.Rank ASC   
"SELECT allergy_type.Allergy, allergy_type.AllergyType FROM Allergy_Type JOIN Has_Allergy ON allergy_type.Allergy = Has_Allergy.Allergy JOIN Student ON Has_Allergy.StuID = student.StuID WHERE student.Fname = 'Lisa'    ORDER BY allergy_type.Allergy ASC   "
SELECT DISTINCT paper.paperId FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 1 and venue.venueName = '1'       
"SELECT player.pName, tryout.cName FROM Player JOIN Tryout ON player.pID = tryout.pID WHERE tryout.decision = 'yes'       "
"SELECT country.Country_name, country.Capital FROM country        "
SELECT DISTINCT premises.premises_type FROM Premises        
"SELECT editor.Editor_ID, editor.Name, count( *) FROM editor JOIN journal_committee ON editor.Editor_ID = journal_committee.Editor_ID  GROUP BY journal_committee.Editor_ID      "
SELECT count( city.state_name) FROM city WHERE city.city_name = '1'       
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE venue.venueName = '1'       
SELECT city.city_name FROM city WHERE city.population = (SELECT max( city.population) FROM city JOIN state ON city.state_name = T23.state_name        )       
SELECT count( *) FROM Papers        
SELECT albums.title FROM albums     ORDER BY albums.title ASC   
SELECT roles.role_description FROM Roles WHERE roles.role_code = (SELECT users.role_code FROM Users JOIN Roles ON users.role_code = roles.role_code WHERE users.user_login = '1' GROUP BY users.role_code  ORDER BY count( *) DESC LIMIT 1    )       
"SELECT projects.organisation_id, count( *) FROM Projects  GROUP BY projects.organisation_id  ORDER BY count( *) DESC LIMIT 1    "
SELECT editor.Name FROM editor WHERE editor.Editor_ID NOT IN (SELECT journal_committee.Editor_ID FROM journal_committee        )       
"SELECT apartments.apt_type_code, apartments.apt_number FROM Apartments JOIN Apartment_Buildings ON apartments.building_id = apartment_buildings.building_id WHERE apartment_buildings.building_manager = 'Kyle'       "
SELECT park.city FROM park  GROUP BY park.city HAVING count( *) between 2 AND 4     
SELECT state.state_name FROM state        
SELECT instructor.name FROM instructor WHERE instructor.dept_name = 'Statistics'   ORDER BY instructor.salary ASC LIMIT 1    
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and restaurant.NAME = '1'       "
"SELECT count( *), constructors.nationality FROM constructors  GROUP BY constructors.nationality      "
"SELECT departments.DEPARTMENT_NAME, count( *) FROM departments JOIN employees ON departments.DEPARTMENT_ID = employees.DEPARTMENT_ID  GROUP BY departments.DEPARTMENT_NAME      "
SELECT state.population FROM state WHERE state.state_name = '1'       
SELECT DISTINCT count(DISTINCT publication.title) FROM publication JOIN writes ON publication.pid = writes.pid JOIN author ON writes.aid = author.aid JOIN domain_author ON author.aid = domain_author.aid JOIN domain ON domain_author.did = domain.did JOIN domain_keyword ON domain.did = domain_keyword.did JOIN keyword ON domain_keyword.kid = keyword.kid WHERE author.name = '1' and keyword.keyword = '1'       
"SELECT instructor.name, teaches.course_id FROM instructor JOIN teaches ON instructor.ID = teaches.ID        "
"SELECT count( *), university.Affiliation FROM university WHERE university.Enrollment > 20000 GROUP BY university.Affiliation      "
SELECT sum( purchase.Total_pounds) FROM purchase JOIN branch ON purchase.Branch_ID = branch.Branch_ID WHERE branch.City = 'London' and purchase.Year = '2018'       
SELECT avg( chip_model.RAM_MiB) FROM chip_model WHERE chip_model.Model_name NOT IN (SELECT phone.chip_model FROM phone        )       
SELECT tracks.name FROM tracks JOIN genres ON tracks.genre_id = genres.id JOIN media_types ON tracks.media_type_id = media_types.id WHERE genres.name = 'Rock' and media_types.name = 'MPEG audio file'       
"SELECT roles.Role_Name, roles.Role_Description FROM Roles JOIN Employees ON roles.Role_Code = employees.Role_Code WHERE employees.Employee_Name = 'Ebba'       "
"SELECT student.Fname, student.LName FROM Student JOIN Member_of_club ON student.StuID = member_of_club.StuID JOIN Club ON member_of_club.ClubID = club.ClubID WHERE club.ClubName = 'Bootup Baltimore' and member_of_club.Position = 'President'       "
SELECT student_course_enrolment.date_of_completion FROM Student_Course_Enrolment JOIN Student_Tests_Taken ON student_course_enrolment.registration_id = student_tests_taken.registration_id WHERE student_tests_taken.test_result = 'Fail'       
SELECT count( *) FROM Investors        
SELECT artist.country FROM artist JOIN song ON artist.artist_name = song.artist_name  GROUP BY artist.country  ORDER BY count( *) ASC LIMIT 1    
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId JOIN venue ON paper.venueId = venue.venueId WHERE key_phrase.keyphraseName = 'TAIL' and venue.venueName = 'NIPS'       
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Liwen Xiong' and paper.year = 2015       
SELECT DISTINCT count(DISTINCT employee.City) FROM Employee        
"SELECT transactions_lots.lot_id, avg( transactions.amount_of_transaction) FROM Transactions_Lots JOIN Transactions ON transactions_lots.transaction_id = transactions.transaction_id  GROUP BY transactions_lots.lot_id      "
SELECT * FROM employees WHERE employees.FIRST_NAME like '%D%' or employees.FIRST_NAME like '%S%'    ORDER BY employees.SALARY DESC   
SELECT church.Open_Date FROM church  GROUP BY church.Open_Date HAVING count( *) >= 2     
SELECT DISTINCT count(DISTINCT complaints.complaint_type_code) FROM Complaints        
SELECT match_season.College FROM match_season JOIN team ON match_season.Team = team.Team_id  GROUP BY match_season.College  ORDER BY count( *) DESC LIMIT 1    
SELECT count( border_info.border) FROM border_info WHERE border_info.state_name = (SELECT state.state_name FROM state WHERE state.area = (SELECT max( state.area) FROM state        )       )       
"SELECT characteristics.characteristic_name, characteristics.characteristic_data_type FROM Characteristics JOIN Product_Characteristics ON characteristics.characteristic_id = Product_Characteristics.characteristic_id JOIN Products ON Product_Characteristics.product_id = products.product_id WHERE products.product_name = 'cumin'       "
SELECT count( *) FROM Addresses        
SELECT movie.director FROM Movie WHERE movie.title = 'Avatar'       
SELECT tracks.name FROM tracks JOIN albums ON tracks.album_id = albums.id WHERE albums.title = 'Balls to the Wall'       
SELECT category.name FROM category JOIN film_category ON category.category_id = film_category.category_id JOIN film ON film_category.film_id = film.film_id WHERE film.title = 'HUNGER ROOF'       
SELECT sum( river.length) FROM river        
"SELECT count( *), tryout.cName FROM Tryout  GROUP BY tryout.cName   ORDER BY count( *) DESC   "
SELECT musical.Name FROM musical JOIN actor  GROUP BY musical.Name HAVING count( *) >= 3     
"SELECT min( aircraft.distance), avg( aircraft.distance), max( aircraft.distance) FROM aircraft        "
SELECT department.Dname FROM department JOIN dept_locations WHERE department_locations.Dlocation = 'Houston'       
SELECT highlow.state_name FROM highlow WHERE highlow.highest_elevation = (SELECT max( highlow.highest_elevation) FROM highlow        )       
SELECT apartments.apt_number FROM Apartments     ORDER BY apartments.room_count ASC   
SELECT vocals.Type FROM Vocals JOIN Band ON vocals.Bandmate = band.Id JOIN Performance ON band.Id = Performance.Bandmate JOIN Songs ON Performance.SongId = songs.SongId WHERE band.Lastname = 'Heilo' and songs.Title = 'Der Kapitan'       
SELECT count( *) FROM Ref_Characteristic_Types        
SELECT employees.Employee_Name FROM Employees JOIN Roles ON employees.Role_Code = roles.Role_Code WHERE roles.Role_Name = 'Editor'       
"SELECT max( classroom.capacity), avg( classroom.capacity), classroom.building FROM classroom  GROUP BY classroom.building      "
SELECT tryout.pPos FROM Tryout  GROUP BY tryout.pPos  ORDER BY count( *) DESC LIMIT 1    
"SELECT customers.customer_name, customers.customer_phone, customers.payment_method_code FROM Customers     ORDER BY customers.customer_number DESC   "
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
SELECT roller_coaster.Park FROM roller_coaster    ORDER BY roller_coaster.Speed DESC LIMIT 1    
SELECT airports.country FROM airports    ORDER BY airports.elevation DESC LIMIT 1    
SELECT party.Minister FROM party WHERE party.Took_office > '1961' or party.Took_office < '1959'       
SELECT DISTINCT forms.form_type_code FROM Forms        
SELECT students.student_details FROM Students JOIN Student_Course_Registrations ON students.student_id = student_course_registrations.student_id    ORDER BY student_course_registrations.registration_date DESC LIMIT 1    
SELECT DISTINCT count(DISTINCT class.PROF_NUM) FROM CLASS WHERE class.CRS_CODE = 'ACCT-211'       
SELECT DISTINCT count(DISTINCT business.city) FROM business WHERE business.name = 'Panda Express'       
SELECT DISTINCT paper.venueId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Daniella Coelho'       
SELECT useracct.name FROM useracct JOIN trust ON useracct.u_id = trust.target_u_id  GROUP BY useracct.name  ORDER BY avg( trust.trust) DESC LIMIT 1    
SELECT count( *) FROM Products        
SELECT DISTINCT forms.form_type_code FROM Forms        
"SELECT list.Classroom, count( *) FROM list WHERE list.Grade = 0 GROUP BY list.Classroom      "
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 1 and venue.venueName = '1'       
SELECT climber.Time FROM climber JOIN mountain ON climber.Mountain_ID = mountain.Mountain_ID WHERE mountain.Country = 'Uganda'       
SELECT count( *) FROM circuits        
SELECT employee.name FROM employee    ORDER BY employee.salary ASC LIMIT 1    
SELECT DISTINCT nurse.Name FROM Nurse     ORDER BY nurse.Name ASC   
"SELECT manufacturers.Name, manufacturers.Headquarter FROM Manufacturers     ORDER BY manufacturers.Revenue DESC   "
SELECT DISTINCT count(DISTINCT movie.title) FROM cast JOIN actor ON T2.aid = actor.aid JOIN movie WHERE actor.name = 'Humphrey Bogart' and movie.release_year < 1942       
SELECT DISTINCT paper.year FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE author.authorName = 'Michael Stonebraker' and key_phrase.keyphraseName = 'GIS Database'       
SELECT item.title FROM item WHERE item.i_id NOT IN (SELECT review.i_id FROM review        )       
"SELECT book_club.Category, count( *) FROM book_club  GROUP BY book_club.Category      "
SELECT user_profiles.name FROM user_profiles    ORDER BY user_profiles.followers DESC LIMIT 1    
"SELECT DISTINCT count(DISTINCT cite.citingPaperId), writes.authorId FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1' GROUP BY writes.authorId   ORDER BY count( cite.citingPaperId) DESC   "
SELECT course.dept_name FROM course  GROUP BY course.dept_name  ORDER BY sum( course.credits) DESC LIMIT 1    
SELECT songs.Title FROM Songs JOIN Performance ON songs.SongId = T2.SongId JOIN Band ON T2.Bandmate = band.Id WHERE band.Firstname = 'Marianne'       
SELECT count( *) FROM routes JOIN airports ON routes.src_apid = airports.apid WHERE airports.country = '1'       
SELECT avg( procedures.Cost) FROM Procedures JOIN Trained_In ON procedures.Code = T2.Treatment JOIN Physician ON T2.Physician = physician.EmployeeID WHERE physician.Name = 'John Wen'       
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = geographic.CITY_NAME JOIN RESTAURANT ON geographic.CITY_NAME = restaurant.CITY_NAME WHERE geographic.REGION = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT vocals.Type FROM Vocals JOIN Band ON vocals.Bandmate = band.Id WHERE band.Firstname = 'Marianne' GROUP BY vocals.Type  ORDER BY count( *) DESC LIMIT 1    
"SELECT artist.Name, artist.Age, artist.Country FROM artist     ORDER BY artist.Year_Join ASC   "
SELECT railway.Builder FROM railway     ORDER BY railway.Builder ASC   
"SELECT avg( song.rating), avg( song.resolution) FROM song WHERE song.languages = '1'       "
SELECT count( *) FROM Student WHERE student.Advisor = 1121       
SELECT company.Headquarters FROM company WHERE company.Main_Industry = 'Banking' GROUP BY company.Headquarters HAVING count( *) >= 2     
SELECT book_club.Publisher FROM book_club  GROUP BY book_club.Publisher  ORDER BY count( *) DESC LIMIT 1    
SELECT financial_transactions.transaction_type FROM Financial_Transactions  GROUP BY financial_transactions.transaction_type  ORDER BY sum( financial_transactions.transaction_amount) DESC LIMIT 1    
"SELECT entrepreneur.Investor, count( *) FROM entrepreneur  GROUP BY entrepreneur.Investor      "
"SELECT min( weekly_weather.low_temperature), max( weekly_weather.wind_speed_mph) FROM weekly_weather        "
SELECT student.StuID FROM Student WHERE student.Sex = 'M'       EXCEPT SELECT sports_info.StuID FROM SportsInfo WHERE sports_info.SportName = 'Football'       
"SELECT student.Fname, student.LName FROM Student JOIN Member_of_club ON student.StuID = Member_of_club.StuID JOIN Club ON Member_of_club.ClubID = club.ClubID WHERE club.ClubName = 'Bootup Baltimore' and student.Sex = 'F'       "
SELECT DISTINCT count(DISTINCT movie.title) FROM directed_by JOIN director ON T2.did = director.did JOIN movie WHERE director.name = 'Quentin Tarantino' and movie.release_year < 2010       
"SELECT team.team_id, team.rank FROM team JOIN home_game ON team.team_id = home_game.team_id WHERE home_game.year = 2014 GROUP BY home_game.team_id  ORDER BY avg( home_game.attendance) DESC LIMIT 1    "
SELECT person.name FROM Person        EXCEPT SELECT person_friend.name FROM PersonFriend        
SELECT state.capital FROM state JOIN border_info ON state.state_name = border_info.border WHERE border_info.state_name = '1'       
SELECT member.Card_Number FROM member WHERE member.Hometown like '%Kentucky%'       
SELECT city.City FROM city WHERE city.Regional_Population > 1      UNION SELECT city.City FROM city WHERE city.Regional_Population < 1        
"SELECT game.Date, injury_accident.Player FROM game JOIN injury_accident ON game.id = injury_accident.game_id     ORDER BY game.Season DESC   "
SELECT person.name FROM Person WHERE person.age > (SELECT min( person.age) FROM Person WHERE person.job = 'engineer'       )    ORDER BY person.age ASC   
SELECT ship.Name FROM ship WHERE ship.Nationality != 'United States'       
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Peter Mertens' and author.authorName = 'Dina Barbian'       
"SELECT sum( manufacturers.Revenue), manufacturers.Name FROM Manufacturers  GROUP BY manufacturers.Name      "
SELECT staff.date_left_staff FROM Staff WHERE staff.first_name = 'Janessa' and staff.last_name = 'Sawayn'       
SELECT employees.phone FROM employees WHERE employees.first_name = 'Nancy' and employees.last_name = 'Edwards'       
"SELECT DISTINCT authors.fname, authors.lname FROM Authors JOIN Authorship ON authors.authID = Authorship.authID JOIN Inst ON Authorship.instID = institution.instID WHERE institution.name = 'University of Oxford'       "
SELECT state.state_name FROM state WHERE state.density = (SELECT max( state.density) FROM state        )       
SELECT organizations.organization_name FROM Organizations JOIN Organization_Contact_Individuals ON organizations.organization_id = T3.organization_id JOIN Individuals ON T3.individual_id = individuals.individual_id  GROUP BY organizations.organization_name  ORDER BY count( *) DESC LIMIT 1    
"SELECT endowment.amount, endowment.donator_name FROM endowment    ORDER BY endowment.amount DESC LIMIT 1    "
SELECT customers.Customer_name FROM Customers JOIN Customers_Policies ON customers.Customer_ID = Customers_Policies.Customer_ID JOIN First_Notification_of_Loss ON Customers_Policies.Customer_ID = First_Notification_of_Loss.Customer_ID JOIN Services ON First_Notification_of_Loss.Service_ID = services.Service_ID WHERE services.Service_name = 'Close a policy' or services.Service_name = 'Upgrade a policy'       
"SELECT products.Name, products.Price FROM Products    ORDER BY products.Price ASC LIMIT 1    "
SELECT count( *) FROM Dorm        
SELECT count( *) FROM Customers JOIN Customer_Addresses ON customers.customer_id = Customer_Addresses.customer_id JOIN Addresses ON Customer_Addresses.address_id = addresses.address_id WHERE addresses.city = 'Lake Geovannyton'       
"SELECT events.Event_ID, events.Event_Details FROM Events JOIN Participants_in_Events ON events.Event_ID = T2.Event_ID JOIN Participants ON T2.Participant_ID = participants.Participant_ID  GROUP BY events.Event_ID HAVING count( *) > 1     "
SELECT count( *) FROM csu_fees WHERE csu_fees.CampusFee > (SELECT avg( csu_fees.CampusFee) FROM csu_fees        )       
SELECT church.Name FROM church        EXCEPT SELECT church.Name FROM church JOIN wedding ON church.Church_ID = wedding.Church_ID WHERE wedding.Year = 2015       
SELECT DISTINCT count(DISTINCT publication.title) FROM publication JOIN writes ON publication.pid = writes.pid JOIN author ON writes.aid = author.aid WHERE author.name = '1' and author.name = '1' and publication.year < 1       
SELECT count( *) FROM wedding WHERE wedding.Year = 2016       
SELECT actor.Name FROM musical JOIN actor     ORDER BY musical.Year DESC   
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Peter Mertens' and author.authorName = 'Dina Barbian'       
SELECT DISTINCT paper.paperId FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE venue.venueName = '1'       
SELECT people.Name FROM people JOIN gymnast ON people.People_ID = T2.Gymnast_ID        
SELECT journal.name FROM journal JOIN publication ON journal.jid = publication.jid JOIN writes ON publication.pid = writes.pid JOIN author ON writes.aid = author.aid WHERE author.name = '1' GROUP BY journal.name  ORDER BY count( publication.title) DESC LIMIT 1    
SELECT customers.customer_name FROM Customers WHERE customers.customer_name like '%Alex%'       
SELECT staff.last_name FROM Staff JOIN Complaints ON staff.staff_id = Complaints.staff_id JOIN Products ON Complaints.product_id = products.product_id    ORDER BY products.product_price ASC LIMIT 1    
"SELECT customers_cards.customer_id, count( *) FROM Customers_Cards  GROUP BY customers_cards.customer_id  ORDER BY count( *) DESC LIMIT 1    "
"SELECT apartment_bookings.booking_status_code, count( *) FROM Apartment_Bookings  GROUP BY apartment_bookings.booking_status_code      "
SELECT mountain.state_name FROM mountain        
SELECT lake.lake_name FROM lake        
"SELECT dorm.dorm_name, dorm.gender FROM Dorm WHERE dorm.student_capacity > 300 or dorm.student_capacity < 100       "
SELECT movie.director FROM Movie  GROUP BY movie.director HAVING count( *) = 1     
SELECT student.LName FROM Student WHERE student.Age = (SELECT min( student.Age) FROM Student        )       
"SELECT player.Player_name, player.Gender FROM player JOIN player_coach ON player.Player_ID = player_coach.Player_ID JOIN coach ON player_coach.Coach_ID = T3.Coach_ID WHERE player_coach.Starting_year > 2011       "
SELECT DISTINCT count(DISTINCT writes.paperId) FROM writes JOIN author ON writes.authorId = author.authorId JOIN paper ON writes.paperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE author.authorName = 'Ed Desmond' and key_phrase.keyphraseName = 'Semantic Parsing'       
"SELECT customers.customer_first_name, accounts.customer_id FROM Customers JOIN Accounts ON customers.customer_id = accounts.customer_id  GROUP BY accounts.customer_id HAVING count( *) >= 2     "
SELECT files.formats FROM files  GROUP BY files.formats  ORDER BY count( *) DESC LIMIT 1    
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1' and paper.year = 1       
SELECT bank.bname FROM bank WHERE bank.state = 'New York'       
"SELECT count( *), avg( student.Age), student.city_code FROM Student  GROUP BY student.city_code      "
"SELECT allergy_type.Allergy, allergy_type.AllergyType FROM Allergy_Type        "
"SELECT products.product_name, reference_colors.color_description, products.product_description FROM Products JOIN Ref_Colors ON products.color_code = reference_colors.color_code WHERE products.product_category_code = 'Herbs'       "
"SELECT rating.mID, avg( rating.stars) FROM Rating  GROUP BY rating.mID HAVING count( *) >= 1     "
SELECT courses.course_name FROM Courses JOIN Student_Course_Enrolment ON courses.course_id = T2.course_id  GROUP BY courses.course_name HAVING count( *) = 1     
"SELECT employee.eid, employee.salary FROM employee WHERE employee.name = 'Mark Young'       "
SELECT DISTINCT count(DISTINCT medicine.FDA_approved) FROM medicine        
"SELECT scientists.SSN, scientists.Name FROM Scientists JOIN AssignedTo ON scientists.SSN = AssignedTo.Scientist JOIN Projects ON AssignedTo.Project = projects.Code WHERE projects.Hours = (SELECT max( projects.Hours) FROM Projects        )       "
"SELECT avg( person.age), person.job FROM Person WHERE person.gender = 'male' GROUP BY person.job      "
SELECT DISTINCT count(DISTINCT video_games.GType) FROM Video_Games        
SELECT count( *) FROM ship        
SELECT authors.lname FROM Authors     ORDER BY authors.lname ASC   
SELECT subjects.subject_name FROM Subjects        
SELECT channel.Name FROM channel JOIN broadcast ON channel.Channel_ID = broadcast.Channel_ID WHERE broadcast.Time_of_day = 'Morning'       
"SELECT claims.Date_Claim_Made, claims.Date_Claim_Settled FROM Claims WHERE claims.Amount_Claimed > (SELECT avg( claims.Amount_Claimed) FROM Claims        )       "
"SELECT DISTINCT employee.EMP_FNAME, employee.EMP_DOB FROM EMPLOYEE JOIN CLASS ON employee.EMP_NUM = class.PROF_NUM WHERE class.CRS_CODE = 'ACCT-211'       "
SELECT count( *) FROM purchase JOIN member ON purchase.Member_ID = member.Member_ID WHERE member.Level = 6       
SELECT elimination.Team FROM Elimination WHERE elimination.Eliminated_By = 'Orton'     INTERSECT SELECT elimination.Team FROM Elimination WHERE elimination.Eliminated_By = 'Benjamin'         
SELECT invoices.invoice_number FROM Invoices WHERE invoices.invoice_date < '1989-09-03' or invoices.invoice_date > '2007-12-25'       
SELECT count( *) FROM results JOIN races ON results.raceId = races.raceId WHERE races.name = 'Australian Grand Prix' and races.year = 2009       
"SELECT department.DEPT_NAME, professor.PROF_OFFICE FROM DEPARTMENT JOIN PROFESSOR ON department.DEPT_CODE = professor.DEPT_CODE JOIN EMPLOYEE ON professor.EMP_NUM = employee.EMP_NUM WHERE employee.EMP_LNAME = 'Heffington'       "
SELECT count( *) FROM routes JOIN airports ON routes.src_apid = airports.apid WHERE airports.name = 'John F Kennedy International Airport'       
"SELECT artist.artist_name, artist.gender FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.releasedate like '%1%'       "
"SELECT bank.bname, bank.city FROM bank JOIN loan ON bank.branch_ID = loan.branch_ID WHERE loan.loan_type = 'Business'       "
SELECT documents_with_expenses.Document_ID FROM Documents_with_Expenses WHERE documents_with_expenses.Budget_Type_Code = 'SF'       
"SELECT sum( university.Enrollment), university.Affiliation FROM university  GROUP BY university.Affiliation      "
SELECT faculty.FacID FROM Faculty        EXCEPT SELECT student.Advisor FROM Student        
"SELECT sum( claim_headers.Amount_Piad), avg( claim_headers.Amount_Piad) FROM Claim_Headers        "
SELECT pilot.Pilot_name FROM pilot WHERE pilot.Team = 'Bradley' or pilot.Team = 'Fordham'       
"SELECT documents.Document_Name, documents.Document_Date FROM Documents JOIN Projects ON documents.Project_ID = projects.Project_ID WHERE projects.Project_Details = 'Graph Database project'       "
"SELECT ship.Type, count( *) FROM ship  GROUP BY ship.Type      "
"SELECT min( files.duration), min( song.rating), song.genre_is FROM files JOIN song ON files.f_id = song.f_id  GROUP BY song.genre_is   ORDER BY song.genre_is ASC   "
SELECT DISTINCT paper.venueId FROM paperDataset JOIN dataset JOIN paper WHERE dataset.datasetName = 'ImageNet'       
"SELECT count( *), player.Position FROM player WHERE player.Points < 30 GROUP BY player.Position      "
"SELECT organisations.organisation_id, organisations.organisation_type, organisations.organisation_details FROM Organisations JOIN Research_Staff ON organisations.organisation_id = research_staff.employer_organisation_id  GROUP BY research_staff.employer_organisation_id  ORDER BY count( *) DESC LIMIT 1    "
SELECT count( *) FROM author        
"SELECT student_course_enrolment.date_of_enrolment, student_course_enrolment.date_of_completion FROM Student_Course_Enrolment JOIN Students ON student_course_enrolment.student_id = students.student_id WHERE students.family_name = 'Zieme' and students.personal_name = 'Bernie'       "
SELECT county_public_safety.Name FROM county_public_safety WHERE county_public_safety.County_ID NOT IN (SELECT city.County_ID FROM city        )       
SELECT available_policies.policy_type_code FROM Available_Policies JOIN Customers_Policies ON available_policies.Policy_ID = Customers_Policies.Policy_ID JOIN Customers ON Customers_Policies.Customer_ID = customers.Customer_ID  GROUP BY available_policies.policy_type_code HAVING count( *) > 4     
SELECT city.state_name FROM city WHERE city.city_name = '1'       
"SELECT DISTINCT paper.paperId, paper.year FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1'    ORDER BY paper.year DESC   "
"SELECT match_season.Season, match_season.Player, country.Country_name FROM match_season JOIN country ON match_season.Country = country.Country_id        "
SELECT DISTINCT debate.Venue FROM debate        
SELECT customers.Customer_Details FROM Customers       UNION SELECT staff.Staff_Details FROM Staff         
"SELECT representative.Party, count( *) FROM representative  GROUP BY representative.Party  ORDER BY count( *) DESC LIMIT 1    "
SELECT track.Name FROM track WHERE track.Track_ID NOT IN (SELECT race.Track_ID FROM race        )       
SELECT artist.Famous_Title FROM artist JOIN volume ON artist.Artist_ID = volume.Artist_ID WHERE volume.Weeks_on_Top > 2       
SELECT student_course_registrations.student_id FROM Student_Course_Registrations JOIN Courses ON student_course_registrations.course_id = courses.course_id WHERE courses.course_name = 'statistics'    ORDER BY student_course_registrations.registration_date ASC   
SELECT pilot.Name FROM pilot WHERE pilot.Age <= 30    ORDER BY pilot.Name DESC   
SELECT count( *) FROM Songs        
SELECT state.state_name FROM state WHERE state.density = (SELECT min( state.density) FROM state        )       
SELECT count( *) FROM Student_Tests_Taken WHERE student_tests_taken.test_result = 'Fail'       
SELECT track.Location FROM track WHERE track.Seating > 90000     INTERSECT SELECT track.Location FROM track WHERE track.Seating < 70000         
SELECT person.name FROM Person WHERE person.job = 'student' and person.age = (SELECT max( person.age) FROM Person WHERE person.job = 'student'       )       
SELECT has_allergy.Allergy FROM Has_Allergy JOIN Student ON has_allergy.StuID = student.StuID  GROUP BY has_allergy.Allergy  ORDER BY count( *) DESC LIMIT 1    
SELECT students.login_name FROM Students WHERE students.family_name = 'Ward'       
SELECT DISTINCT count(DISTINCT tip.text) FROM tip WHERE tip.year = 2015       
SELECT DISTINCT catalogs.catalog_publisher FROM Catalogs WHERE catalogs.catalog_publisher like '%Murray%'       
SELECT employee.name FROM employee JOIN certificate ON employee.eid = certificate.eid JOIN aircraft ON certificate.aid = aircraft.aid WHERE aircraft.name = 'Boeing 737-800'       
SELECT course.title FROM course WHERE course.course_id in (SELECT prerequisite.prereq_id FROM prereq JOIN course ON prerequisite.prereq_id = course.course_id WHERE course.title = 'International Finance'       )       
SELECT student.name FROM student JOIN advisor ON student.ID = T2.s_ID  GROUP BY student.name HAVING count( *) > 1     
SELECT documents.document_id FROM Documents WHERE documents.document_status_code = '1' and documents.document_type_code = '1'     INTERSECT SELECT documents.document_id FROM Documents JOIN Ref_Shipping_Agents ON documents.shipping_agent_code = reference_shipping_agents.shipping_agent_code WHERE reference_shipping_agents.shipping_agent_name = '1'         
SELECT wine.Name FROM wine JOIN grapes ON wine.Grape = grapes.Grape WHERE grapes.Color = 'Red' and wine.Price > 50       
"SELECT player.name_first, player.name_last FROM player WHERE player.death_year = ''       "
SELECT student_course_attendance.student_id FROM Student_Course_Attendance WHERE student_course_attendance.course_id = 301       
SELECT author.name FROM author JOIN writes ON author.aid = writes.aid JOIN publication ON writes.pid = publication.pid JOIN conference ON publication.cid = conference.cid WHERE conference.name = 'VLDB' GROUP BY author.name  ORDER BY count( publication.title) DESC LIMIT 1    
SELECT physician.Name FROM Physician JOIN Prescribes ON physician.EmployeeID = prescribes.Physician    ORDER BY prescribes.Dose DESC LIMIT 1    
SELECT count( *) FROM journalist        
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Peter Mertens' and author.authorName = 'Dina Barbian'       
SELECT race.Class FROM race  GROUP BY race.Class HAVING count( *) >= 2     
"SELECT actor.Character, actor.Duration FROM actor        "
SELECT count( *) FROM author        
"SELECT count( *), claims.Claim_ID FROM Settlements JOIN Claims ON settlements.Claim_ID = claims.Claim_ID  GROUP BY claims.Claim_ID  ORDER BY claims.Date_Claim_Settled DESC LIMIT 1    "
SELECT DISTINCT movie.year FROM Movie JOIN Rating ON movie.mID = rating.mID WHERE rating.stars >= 4    ORDER BY movie.year ASC   
SELECT count( *) FROM climber        
SELECT actor.birth_year FROM actor WHERE actor.name = '1'       
SELECT county.County_name FROM county JOIN election ON county.County_Id = election.District WHERE election.Committee = 'Appropriations'       
"SELECT employees.FIRST_NAME, employees.LAST_NAME, employees.SALARY, employees.DEPARTMENT_ID, max( employees.SALARY) FROM employees  GROUP BY employees.DEPARTMENT_ID      "
SELECT DISTINCT count(DISTINCT publication.title) FROM publication JOIN publication_keyword ON publication.pid = publication_keyword.pid JOIN keyword ON publication_keyword.kid = keyword.kid WHERE keyword.keyword = 'Natural Language'       
SELECT count( *) FROM state        
"SELECT roles.Role_Name, roles.Role_Description FROM Roles JOIN Employees ON roles.Role_Code = employees.Role_Code WHERE employees.Employee_Name = 'Ebba'       "
SELECT DISTINCT count(DISTINCT tweets.uid) FROM tweets        
SELECT sum( publication.citation_num) FROM publication JOIN conference ON publication.cid = conference.cid WHERE conference.name = 'VLDB'       
SELECT river.river_name FROM river WHERE river.traverse in (SELECT border_info.border FROM border_info WHERE border_info.state_name in (SELECT state.state_name FROM state WHERE state.capital = '1'       )       )       
"SELECT scientists.SSN, scientists.Name FROM Scientists JOIN AssignedTo ON scientists.SSN = AssignedTo.Scientist JOIN Projects ON AssignedTo.Project = projects.Code WHERE projects.Hours = (SELECT max( projects.Hours) FROM Projects        )       "
SELECT degrees.Year FROM degrees  GROUP BY degrees.Year  ORDER BY sum( degrees.Degrees) DESC LIMIT 1    
SELECT DISTINCT video_games.GType FROM Video_Games        
SELECT device.Carrier FROM device WHERE device.Device_ID NOT IN (SELECT stock.Device_ID FROM stock        )       
SELECT customers.customer_phone FROM Customers       UNION SELECT suppliers.supplier_phone FROM Suppliers         
"SELECT max( farm.Cows), min( farm.Cows) FROM farm        "
SELECT payment.payment_date FROM payment WHERE payment.amount > 10      UNION SELECT payment.payment_date FROM payment JOIN staff ON payment.staff_id = staff.staff_id WHERE staff.first_name = 'Elsa'        
SELECT count( border_info.border) FROM border_info WHERE border_info.state_name = '1'       
"SELECT employees.FIRST_NAME, employees.LAST_NAME, employees.HIRE_DATE, employees.SALARY, employees.DEPARTMENT_ID FROM employees WHERE employees.FIRST_NAME not_like 'M'    ORDER BY employees.DEPARTMENT_ID ASC   "
SELECT manager.Country FROM manager WHERE manager.Age > 50     INTERSECT SELECT manager.Country FROM manager WHERE manager.Age < 46         
SELECT sum( projects.Hours) FROM Projects        
SELECT head.name FROM head WHERE head.born_state != 'California'       
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Liwen Xiong' and paper.year = 2015       
SELECT * FROM employees WHERE employees.DEPARTMENT_ID NOT IN (SELECT departments.DEPARTMENT_ID FROM departments WHERE departments.MANAGER_ID between 100 AND 200       )       
SELECT people.Weight FROM people    ORDER BY people.Height ASC LIMIT 1    
SELECT highlow.highest_point FROM highlow WHERE highlow.highest_elevation = (SELECT max( highlow.highest_elevation) FROM highlow        )       
SELECT sum( payments.Amount_Payment) FROM Payments        
SELECT dorm_amenity.amenity_name FROM Dorm_amenity JOIN Has_amenity ON dorm_amenity.amenid = Has_amenity.amenid JOIN Dorm ON Has_amenity.dormid = dorm.dormid WHERE dorm.dorm_name = 'Anonymous Donor Hall'    ORDER BY dorm_amenity.amenity_name ASC   
"SELECT max( track.Milliseconds), min( track.Milliseconds) FROM Track        "
SELECT submission.Author FROM submission     ORDER BY submission.Scores ASC   
SELECT project_staff.date_from FROM Project_Staff    ORDER BY project_staff.date_from ASC LIMIT 1    
SELECT customers.phone_number FROM Customers JOIN Complaints ON customers.customer_id = complaints.customer_id    ORDER BY complaints.date_complaint_raised DESC LIMIT 1    
SELECT DISTINCT drivers.forename FROM drivers JOIN driverStandings ON drivers.driverId = driver_standings.driverId WHERE driver_standings.position = 1 and driver_standings.wins = 1       
SELECT count( city.state_name) FROM city WHERE city.city_name = '1'       
SELECT sum( airport.Domestic_Passengers) FROM airport WHERE airport.Airport_Name like '%London%'       
SELECT count( *) FROM Documents WHERE documents.Document_ID NOT IN (SELECT documents_with_expenses.Document_ID FROM Documents_with_Expenses        )       
SELECT songs.Title FROM Songs JOIN Performance ON songs.SongId = T2.SongId JOIN Band ON T2.Bandmate = band.Id WHERE band.Lastname = 'Heilo'       
"SELECT min( track.Seating), max( track.Seating), avg( track.Seating) FROM track        "
"SELECT city.GDP, city.Regional_Population FROM city JOIN hosting_city ON city.City_ID = T2.Host_City  GROUP BY T2.Host_City HAVING count( *) > 1     "
"SELECT products.color_code, reference_colors.color_description FROM Products JOIN Ref_Colors ON products.color_code = reference_colors.color_code WHERE products.product_name = 'chervil'       "
SELECT DISTINCT count(DISTINCT climber.Country) FROM climber        
"SELECT DISTINCT cite.citedPaperId, count(DISTINCT cite.citingPaperId) FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN venue ON paper.venueId = venue.venueId WHERE venue.venueName = '1' GROUP BY cite.citedPaperId   ORDER BY count( cite.citingPaperId) DESC   "
SELECT DISTINCT paper.paperId FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 1 and venue.venueName = '1'       
SELECT accounts.name FROM ACCOUNTS JOIN SAVINGS ON accounts.custid = savings.custid WHERE savings.balance > (SELECT avg( checking.balance) FROM CHECKING        )     INTERSECT SELECT accounts.name FROM ACCOUNTS JOIN SAVINGS ON accounts.custid = savings.custid WHERE savings.balance < (SELECT avg( savings.balance) FROM SAVINGS        )         
SELECT competition.Competition_type FROM competition  GROUP BY competition.Competition_type HAVING count( *) <= 5     
SELECT employee.BirthDate FROM Employee WHERE employee.City = 'Edmonton'       
"SELECT count( *), broadcast.Time_of_day FROM program JOIN broadcast ON program.Program_ID = broadcast.Program_ID  GROUP BY broadcast.Time_of_day      "
SELECT avg( artist.Age) FROM artist        
"SELECT DISTINCT list.Classroom, count(DISTINCT list.Grade) FROM list  GROUP BY list.Classroom      "
"SELECT DISTINCT paper.title, paper.year FROM paper WHERE paper.title = '1'       "
"SELECT max( user_profiles.followers), sum( user_profiles.followers) FROM user_profiles        "
"SELECT DISTINCT enzyme.name, enzyme.Location, enzyme.Product FROM enzyme JOIN medicine_enzyme_interaction ON enzyme.id = medicine_enzyme_interaction.enzyme_id WHERE medicine_enzyme_interaction.interaction_type = '1'       "
SELECT student.city_code FROM Student  GROUP BY student.city_code  ORDER BY count( *) DESC LIMIT 1    
SELECT characteristics.characteristic_name FROM Characteristics JOIN Product_Characteristics ON characteristics.characteristic_id = Product_Characteristics.characteristic_id JOIN Products ON Product_Characteristics.product_id = products.product_id WHERE products.product_name = 'sesame'       
SELECT count( *) FROM artist WHERE artist.country = 'Bangladesh'       
"SELECT count( *), wine.Grape FROM wine  GROUP BY wine.Grape      "
"SELECT avg( student.Age), student.city_code FROM Student  GROUP BY student.city_code      "
SELECT aircraft.name FROM aircraft JOIN flight ON aircraft.aid = flight.aid WHERE flight.flno = 99       
"SELECT DISTINCT cite.citedPaperId, count(DISTINCT cite.citedPaperId) FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 2010 and venue.venueName = 'EMNLP' GROUP BY cite.citedPaperId   ORDER BY count( cite.citedPaperId) DESC   "
SELECT tip.text FROM tip JOIN business ON tip.business_id = business.business_id WHERE business.name = 'Cafe Zinho' and business.state = 'Texas'       
SELECT band.Lastname FROM Band JOIN Performance ON band.Id = performance.Bandmate WHERE performance.StagePosition = '1' GROUP BY band.Lastname  ORDER BY count( *) DESC LIMIT 1    
"SELECT statements.Statement_ID, statements.Statement_Details FROM Statements        "
"SELECT sum( sports_info.HoursPerWeek), sum( sports_info.GamesPlayed) FROM SportsInfo JOIN Student ON sports_info.StuID = student.StuID WHERE student.Fname = 'David' and student.LName = 'Shieber'       "
SELECT count( *) FROM teachers JOIN list WHERE list.FirstName = 'CHRISSY' and list.LastName = 'NABOZNY'       
"SELECT band.Firstname, band.Lastname FROM Band JOIN Performance ON band.Id = T3.Bandmate JOIN Songs ON T3.SongId = songs.SongId WHERE songs.Title = 'Le Pop'       "
SELECT people.Name FROM people JOIN candidate ON people.People_ID = candidate.People_ID WHERE candidate.Support_rate < 1       
"SELECT DISTINCT paper.paperId, paper.year FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Mirella Lapata'   ORDER BY paper.year DESC LIMIT 1    "
SELECT festival_detail.Chair_Name FROM festival_detail     ORDER BY festival_detail.Year ASC   
"SELECT player.name_first, player.name_last FROM player JOIN player_award ON player.player_id = player_award.player_id WHERE player_award.year = 1960     INTERSECT SELECT player.name_first, player.name_last FROM player JOIN player_award ON player.player_id = player_award.player_id WHERE player_award.year = 1961         "
"SELECT student.STU_GPA, student.STU_PHONE, student.STU_FNAME FROM STUDENT    ORDER BY student.STU_GPA DESC LIMIT 1    "
"SELECT department.DEPT_NAME, department.DEPT_ADDRESS, count( *) FROM DEPARTMENT JOIN STUDENT ON department.DEPT_CODE = student.DEPT_CODE  GROUP BY student.DEPT_CODE  ORDER BY count( *) DESC LIMIT 1    "
SELECT browser.name FROM browser JOIN accelerator_compatible_browser ON browser.id = accelerator_compatible_browser.browser_id JOIN Web_client_accelerator ON accelerator_compatible_browser.accelerator_id = web_client_accelerator.id WHERE web_client_accelerator.name = 'CProxy' and accelerator_compatible_browser.compatible_since_year > 1998       
SELECT DISTINCT products.product_name FROM Products     ORDER BY products.product_name ASC   
SELECT DISTINCT count(DISTINCT papers.title) FROM Papers JOIN Authorship ON papers.paperID = Authorship.paperID JOIN Inst ON Authorship.instID = institution.instID WHERE institution.name = 'Tokohu University'       
SELECT DISTINCT count(DISTINCT author.authorId) FROM author JOIN writes ON author.authorId = writes.authorId WHERE author.authorName != 'Mark Steedman' and writes.paperId in (SELECT writes.paperId FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Mark Steedman'       )       
SELECT conference.name FROM conference JOIN publication ON conference.cid = publication.cid JOIN writes ON publication.pid = writes.pid JOIN author ON writes.aid = author.aid WHERE author.name = '1' GROUP BY conference.name  ORDER BY count( publication.title) DESC LIMIT 1    
SELECT documents.document_type_code FROM Documents  GROUP BY documents.document_type_code HAVING sum( documents.access_count) > 10000     
SELECT stadium.name FROM stadium JOIN game ON stadium.id = game.stadium_id JOIN injury_accident ON game.id = injury_accident.game_id WHERE injury_accident.Player = 'Walter Samuel'     INTERSECT SELECT stadium.name FROM stadium JOIN game ON stadium.id = game.stadium_id JOIN injury_accident ON game.id = injury_accident.game_id WHERE injury_accident.Player = 'Thiago Motta'         
SELECT DISTINCT state.capital FROM state WHERE state.density = (SELECT max( state.density) FROM state        )       
"SELECT assessment_notes.student_id, students.first_name FROM Assessment_Notes JOIN Students ON assessment_notes.student_id = students.student_id  GROUP BY assessment_notes.student_id  ORDER BY count( *) DESC LIMIT 1    "
SELECT member.Name FROM member WHERE member.Address = 'Harford' or member.Address = 'Waterbury'       
SELECT people.Weight FROM people    ORDER BY people.Height ASC LIMIT 1    
SELECT river.river_name FROM river WHERE river.traverse = '1'       
"SELECT products.product_name, sum( order_items.order_quantity) FROM Products JOIN Order_Items ON products.product_id = order_items.product_id  GROUP BY products.product_name      "
"SELECT player.pName, player.HS FROM Player WHERE player.HS < 1500       "
SELECT DISTINCT count(DISTINCT person.job) FROM Person        
"SELECT max( browser.market_share), min( browser.market_share), avg( browser.market_share) FROM browser        "
"SELECT airport.id, airport.name, airport.IATA FROM airport JOIN flight ON airport.id = flight.airport_id  GROUP BY flight.airport_id  ORDER BY count( *) DESC LIMIT 1    "
SELECT avg( bank.no_of_customers) FROM bank        
SELECT customers.customer_name FROM Customers WHERE customers.payment_method = 'Cash'       
"SELECT company.Rank, company.Company, company.Market_Value FROM company WHERE company.Main_Industry = 'Banking'    ORDER BY company.Sales_billion ASC   "
SELECT actual_orders.actual_order_id FROM Actual_Orders WHERE actual_orders.order_status_code = 'Success'       
SELECT DISTINCT college.cName FROM College WHERE college.enr > (SELECT min( college.enr) FROM College WHERE college.state = 'FL'       )       
SELECT count( river.river_name) FROM river JOIN state ON river.traverse = state.state_name WHERE state.state_name = (SELECT state.state_name FROM state WHERE state.population = (SELECT max( state.population) FROM state        )       )       
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
"SELECT representative.Name, election.Date FROM representative JOIN election ON representative.Representative_ID = election.Representative_ID        "
SELECT accelerator_compatible_browser.compatible_since_year FROM accelerator_compatible_browser JOIN Web_client_accelerator ON accelerator_compatible_browser.accelerator_id = web_client_accelerator.id JOIN browser ON accelerator_compatible_browser.browser_id = browser.id WHERE web_client_accelerator.name = 'CACHEbox' and browser.name = 'Internet Explorer'       
SELECT county.County_name FROM county    ORDER BY county.Population ASC LIMIT 1    
SELECT documents.Document_ID FROM Documents        EXCEPT SELECT documents_with_expenses.Document_ID FROM Documents_with_Expenses        
SELECT film.title FROM film WHERE film.length > 100 or film.rating = 'PG'       EXCEPT SELECT film.title FROM film WHERE film.replacement_cost > 200       
"SELECT sum( university.Enrollment), min( university.Enrollment) FROM university        "
SELECT customers.Customer_Details FROM Customers JOIN Policies ON customers.Customer_ID = Policies.Customer_ID JOIN Claim_Headers ON Policies.Policy_ID = claim_headers.Policy_ID WHERE claim_headers.Amount_Claimed = (SELECT max( claim_headers.Amount_Claimed) FROM Claim_Headers        )       
"SELECT count( *), movie.director FROM Movie  GROUP BY movie.director      "
SELECT person.name FROM Person        EXCEPT SELECT person_friend.name FROM PersonFriend JOIN Person ON person_friend.friend = person.name WHERE person.job = 'student'       
SELECT player.Sponsor_name FROM player WHERE player.Residence = 'Brandon' or player.Residence = 'Birtle'       
SELECT airports.name FROM airports WHERE airports.country = 'Cuba' or airports.country = 'Argentina'       
SELECT people.Age FROM people    ORDER BY people.Height DESC LIMIT 1    
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and location.STREET_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT airports.city FROM airports WHERE airports.country = 'United States' GROUP BY airports.city HAVING count( *) > 3     
"SELECT program.Name, program.Origin, program.Owner FROM program        "
"SELECT customers.email_address, customers.phone_number FROM Customers     ORDER BY customers.email_address ASC   "
SELECT person.age FROM Person WHERE person.job = 'doctor' and person.name = 'Zach'       
SELECT companies.Industry FROM Companies WHERE companies.Headquarters = 'USA'     INTERSECT SELECT companies.Industry FROM Companies WHERE companies.Headquarters = 'China'         
"SELECT album.Title, track.AlbumId, count( *) FROM Album JOIN Track ON album.AlbumId = track.AlbumId  GROUP BY track.AlbumId      "
"SELECT employees.first_name, employees.last_name FROM employees WHERE employees.first_name = 'Nancy' and employees.last_name = 'Edwards'       "
SELECT avg( stadium.Capacity) FROM stadium WHERE stadium.Opening_year = 2005       
SELECT scientists.Name FROM Scientists WHERE scientists.SSN NOT IN (SELECT assigned_to.Scientist FROM AssignedTo        )       
"SELECT faculty.Fname, faculty.Lname FROM Faculty JOIN Faculty_Participates_in ON faculty.FacID = Faculty_Participates_in.FacID JOIN Activity ON Faculty_Participates_in.actid = Activity.actid JOIN Participates_in ON Activity.actid = Participates_in.actid JOIN Student ON Participates_in.stuid = student.StuID  GROUP BY faculty.FacID  ORDER BY count( *) DESC LIMIT 1    "
SELECT city.city_name FROM city WHERE city.state_name = '1'       
SELECT * FROM airport    ORDER BY airport.International_Passengers DESC LIMIT 1    
SELECT count( *) FROM Lessons JOIN Staff ON lessons.staff_id = staff.staff_id WHERE staff.first_name like '%a%'       
"SELECT customers.customer_id, customers.customer_name FROM Customers WHERE customers.customer_address like '%WY%' and customers.payment_method_code != 'Credit Card'       "
SELECT DISTINCT count(DISTINCT party.Party_name) FROM party        
"SELECT match_season.Season, match_season.Player, country.Country_name FROM match_season JOIN country ON match_season.Country = country.Country_id        "
"SELECT count( *), course.DEPT_CODE FROM CLASS JOIN COURSE ON class.CRS_CODE = course.CRS_CODE  GROUP BY course.DEPT_CODE      "
SELECT count( *) FROM Scientists        
SELECT furniture.Name FROM furniture JOIN furniture_manufacte ON furniture.Furniture_ID = furniture_manufacte.Furniture_ID WHERE furniture_manufacte.Price_in_Dollar < (SELECT max( furniture_manufacte.Price_in_Dollar) FROM furniture_manufacte        )       
SELECT DISTINCT teachers.FirstName FROM teachers JOIN list WHERE list.Grade = 1       
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' and paper.year > 1       
SELECT DISTINCT paper.journalId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = 'Trophic Cascade' and paper.year = 2010       
SELECT DISTINCT paper.title FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE author.authorName like '%Ranjit Jhala%' and key_phrase.keyphraseName = 'Liquid Haskell'       
SELECT locations.Address FROM Locations WHERE locations.Location_Name = 'UK Gallery'       
SELECT count( *) FROM storm WHERE storm.Number_Deaths > 1       
SELECT grants.grant_start_date FROM Grants JOIN Documents ON grants.grant_id = Documents.grant_id JOIN Document_Types ON Documents.document_type_code = document_types.document_type_code WHERE document_types.document_description = 'Regular'     INTERSECT SELECT grants.grant_start_date FROM Grants JOIN Documents ON grants.grant_id = Documents.grant_id JOIN Document_Types ON Documents.document_type_code = document_types.document_type_code WHERE document_types.document_description = 'Initial Application'         
SELECT farm_competition.Theme FROM farm_competition     ORDER BY farm_competition.Year ASC   
SELECT pilot.Name FROM pilot     ORDER BY pilot.Name ASC   
SELECT DISTINCT author.authorName FROM author JOIN writes ON author.authorId = writes.authorId JOIN paper ON writes.paperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName like '%1%'       
"SELECT track.Name, track.Location FROM track        "
SELECT avg( track.Milliseconds) FROM Track JOIN Genre ON track.GenreId = genre.GenreId WHERE genre.Name = 'Latin' or genre.Name = 'Pop'       
SELECT count( *) FROM actor        
SELECT constructors.name FROM constructors JOIN constructorStandings ON constructors.constructorId = constructor_standings.constructorId WHERE constructors.nationality = 'Japanese' and constructor_standings.points > 5       
SELECT count( *) FROM entrepreneur        
"SELECT aircraft.aid, aircraft.name FROM aircraft    ORDER BY aircraft.distance DESC LIMIT 1    "
SELECT customers.customer_name FROM Customers WHERE customers.payment_method != 'Cash'       
SELECT vocals.Type FROM Vocals JOIN Songs ON vocals.SongId = songs.SongId WHERE songs.Title = 'Badlands'       
"SELECT DISTINCT college.state, college.enr FROM College JOIN Tryout ON college.cName = tryout.cName WHERE tryout.decision = '1'       "
SELECT player.pName FROM Player JOIN Tryout ON player.pID = tryout.pID WHERE tryout.cName = (SELECT college.cName FROM College    ORDER BY college.enr DESC LIMIT 1    )       
"SELECT DISTINCT count(DISTINCT paper.paperId), writes.authorId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = 'Neutralizing Antibody' and paper.year = 2012 GROUP BY writes.authorId   ORDER BY count( paper.paperId) DESC   "
"SELECT financial_transactions.transaction_type, count( *) FROM Financial_Transactions  GROUP BY financial_transactions.transaction_type      "
SELECT business.city FROM business WHERE business.rating < 1.5       
SELECT payment.payment_date FROM payment WHERE payment.amount > 10      UNION SELECT payment.payment_date FROM payment JOIN staff ON payment.staff_id = staff.staff_id WHERE staff.first_name = 'Elsa'        
"SELECT customers.address_line_1, customers.address_line_2 FROM Customers WHERE customers.email_address = 'vbogisich@example.org'       "
SELECT business.name FROM business JOIN category ON business.business_id = category.business_id  GROUP BY business.name  ORDER BY count( category.category_name) DESC LIMIT 1    
SELECT technician.Team FROM technician  GROUP BY technician.Team HAVING count( *) >= 2     
"SELECT country.name, league.name FROM Country JOIN League ON country.id = league.country_id        "
SELECT forms.form_name FROM Forms JOIN Party_Forms ON forms.form_id = party_forms.form_id  GROUP BY forms.form_name  ORDER BY count( *) DESC LIMIT 1    
SELECT keyword.keyword FROM keyword JOIN publication_keyword ON keyword.kid = publication_keyword.kid JOIN publication ON publication_keyword.pid = publication.pid JOIN journal ON publication.jid = journal.jid WHERE journal.name = 'PVLDB' GROUP BY keyword.keyword  ORDER BY count( publication.title) DESC LIMIT 1    
SELECT tip.text FROM tip JOIN business ON tip.business_id = business.business_id WHERE business.name = 'Cafe Zinho' and business.state = 'Pennsylvania' and tip.year = 2010       
"SELECT customer.FirstName, customer.SupportRepId FROM Customer JOIN Employee ON customer.SupportRepId = T2.EmployeeId  GROUP BY customer.SupportRepId HAVING count( *) >= 10     "
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId JOIN venue ON paper.venueId = venue.venueId WHERE key_phrase.keyphraseName = '1' and paper.year = 1 and venue.venueName = '1'       
SELECT * FROM employees WHERE employees.DEPARTMENT_ID NOT IN (SELECT departments.DEPARTMENT_ID FROM departments WHERE departments.MANAGER_ID between 100 AND 200       )       
SELECT DISTINCT count(DISTINCT match_season.College) FROM match_season JOIN team ON match_season.Team = team.Team_id WHERE team.Name = 'Columbus Crew'       
"SELECT count( *), manufacturer.Name FROM manufacturer  GROUP BY manufacturer.Name      "
"SELECT debate.Date, debate.Venue FROM debate        "
SELECT city.state_name FROM city WHERE city.city_name = '1'       
SELECT count( *) FROM book        
SELECT problems.problem_id FROM Problems WHERE problems.date_problem_reported < '1978-06-26'       
"SELECT people.Name, debate.Date, debate.Venue FROM people JOIN debate_people ON people.People_ID = debate_people.Negative JOIN debate ON debate_people.Debate_ID = debate.Debate_ID     ORDER BY people.Name ASC   "
"SELECT accounts.Account_ID, accounts.Account_Details FROM Accounts        "
SELECT DISTINCT count(DISTINCT movie.title) FROM movie JOIN keyword JOIN tags WHERE keyword.keyword = 'Persians' and movie.release_year > 1990       
SELECT count( *) FROM Rooms WHERE rooms.maxOccupancy = 1       
"SELECT album.Title, track.AlbumId FROM Album JOIN Track ON album.AlbumId = track.AlbumId WHERE track.UnitPrice > 1       "
SELECT county.County_name FROM county     ORDER BY county.Population ASC   
SELECT DISTINCT phone.Hardware_Model_name FROM phone JOIN screen_mode ON phone.screen_mode = screen_mode.Graphics_mode WHERE phone.Company_name = 'Nokia Corporation' and screen_mode.Type != 'Text'       
"SELECT item.title, item.i_id FROM item JOIN review ON item.i_id = review.i_id  GROUP BY review.i_id  ORDER BY avg( review.rank) DESC LIMIT 1    "
SELECT avg( journal.Sales) FROM journal JOIN journal_committee ON journal.Journal_ID = journal_committee.Journal_ID WHERE journal_committee.Work_Type = 'Photo'       
SELECT customers.date_became_customer FROM Customers WHERE customers.first_name = 'Carole' and customers.last_name = 'Bernhard'       
"SELECT employee.EMP_FNAME, class.CRS_CODE FROM EMPLOYEE JOIN CLASS ON employee.EMP_NUM = class.PROF_NUM        "
SELECT DISTINCT count(DISTINCT plays_games.StuID) FROM Plays_Games        
"SELECT people.Name, people.Sex FROM people JOIN candidate ON people.People_ID = candidate.People_ID    ORDER BY candidate.Support_rate DESC LIMIT 1    "
"SELECT movie.Title, movie.Director FROM movie WHERE movie.Year <= 2000   ORDER BY movie.Gross_worldwide DESC LIMIT 1    "
"SELECT DISTINCT count(DISTINCT cite.citingPaperId), key_phrase.keyphraseName FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId  GROUP BY key_phrase.keyphraseName   ORDER BY count( cite.citingPaperId) DESC   "
SELECT count( *) FROM driver WHERE driver.Home_city = 'Hartford' or driver.Age < 40       
SELECT submission.Author FROM submission    ORDER BY submission.Scores DESC LIMIT 1    
"SELECT player.pName, tryout.cName FROM Player JOIN Tryout ON player.pID = tryout.pID WHERE tryout.decision = 'yes'       "
"SELECT authors.fname, authors.lname FROM Authors JOIN Authorship ON authors.authID = Authorship.authID JOIN Papers ON Authorship.paperID = papers.paperID WHERE papers.title = '1'       "
SELECT DISTINCT count(DISTINCT writes.paperId) FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
SELECT buildings.Stories FROM buildings    ORDER BY buildings.Height DESC LIMIT 1    
SELECT count( *) FROM routes JOIN airports ON routes.src_apid = airports.apid WHERE airports.name = 'John F Kennedy International Airport'       
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT submission.Author FROM submission JOIN Acceptance ON submission.Submission_ID = T2.Submission_ID  GROUP BY submission.Author HAVING count( T2.Workshop_ID) > 1     
"SELECT characteristics.characteristic_name, characteristics.characteristic_data_type FROM Characteristics JOIN Product_Characteristics ON characteristics.characteristic_id = Product_Characteristics.characteristic_id JOIN Products ON Product_Characteristics.product_id = products.product_id WHERE products.product_name = 'cumin'       "
SELECT faculty.FacID FROM Faculty JOIN Faculty_Participates_in ON faculty.FacID = Faculty_Participates_in.FacID JOIN Activity ON Faculty_Participates_in.actid = Activity.actid JOIN Participates_in ON Activity.actid = Participates_in.actid JOIN Student ON Participates_in.stuid = T2.StuID  GROUP BY faculty.FacID HAVING count( *) >= 2     
SELECT video_games.GName FROM Video_Games JOIN Plays_Games ON video_games.GameID = T2.GameID  GROUP BY video_games.GName HAVING sum( T2.Hours_Played) >= 1000     
"SELECT faculty.Phone, faculty.Room, faculty.Building FROM Faculty WHERE faculty.Fname = 'Jerry' and faculty.Lname = 'Prince'       "
"SELECT ship.Name, ship.Class FROM Ship WHERE ship.Ship_ID NOT IN (SELECT captain.Ship_ID FROM captain        )       "
SELECT chip_model.Model_name FROM chip_model     ORDER BY chip_model.Launch_year ASC   
SELECT climber.Name FROM climber WHERE climber.Country != 'Switzerland'       
SELECT count( *) FROM budget WHERE budget.Budgeted > 3000 and budget.Year <= 2001       
"SELECT invoices.invoice_date, invoices.order_id, orders.order_details FROM Invoices JOIN Orders ON invoices.order_id = orders.order_id        "
SELECT max( customer_contact_channels.active_to_date) FROM Customer_Contact_Channels JOIN Customers ON customer_contact_channels.customer_id = customers.customer_id WHERE customers.customer_name = 'Tillman Ernser'       
SELECT team.Name FROM team        
"SELECT student.Advisor, count( *) FROM Student  GROUP BY student.Advisor  ORDER BY count( student.Advisor) DESC LIMIT 1    "
SELECT customers.date_became_customer FROM Customers WHERE customers.customer_id between 10 AND 20       
SELECT catalog_contents.catalog_entry_name FROM Catalog_Contents WHERE catalog_contents.next_entry_id > 8       
SELECT actor.name FROM actor WHERE actor.birth_city = 'Austin' and actor.birth_year > 1980       
SELECT state.state_name FROM state WHERE state.area = (SELECT max( state.area) FROM state        )       
SELECT count( *) FROM Course        
SELECT city.city_name FROM city WHERE city.population = (SELECT max( city.population) FROM city        )       
"SELECT tourist_attractions.Name, tourist_attractions.Opening_Hours FROM Tourist_Attractions WHERE tourist_attractions.How_to_Get_There = '1' or tourist_attractions.How_to_Get_There = '1'       "
SELECT third_party_companies.company_name FROM Third_Party_Companies JOIN Maintenance_Contracts ON third_party_companies.company_id = maintenance_contracts.maintenance_contract_company_id    ORDER BY maintenance_contracts.contract_end_date DESC LIMIT 1    
SELECT count( *) FROM region JOIN party ON region.Region_ID = party.Region_ID JOIN party_events ON party.Party_ID = party_events.Party_ID WHERE region.Region_name = 'United Kingdom' and party_events.Event_Name = 'Annaual Meeting'       
SELECT vocals.Type FROM Vocals JOIN Band ON vocals.Bandmate = band.Id WHERE band.Firstname = 'Solveig' GROUP BY vocals.Type  ORDER BY count( *) DESC LIMIT 1    
SELECT school.School_name FROM School     ORDER BY school.School_name ASC   
SELECT order_items.product_id FROM Order_Items  GROUP BY order_items.product_id HAVING count( *) > 3    UNION SELECT product_suppliers.product_id FROM Product_Suppliers  GROUP BY product_suppliers.product_id HAVING sum( product_suppliers.total_amount_purchased) > '80000'      
"SELECT web_client_accelerator.id, web_client_accelerator.name FROM Web_client_accelerator JOIN accelerator_compatible_browser ON web_client_accelerator.id = T2.accelerator_id  GROUP BY web_client_accelerator.id HAVING count( *) >= 2     "
SELECT purchases.purchase_details FROM Purchases JOIN Transactions ON purchases.purchase_transaction_id = transactions.transaction_id WHERE transactions.amount_of_transaction > 10000       
"SELECT DISTINCT list.Classroom, list.Grade FROM list        "
SELECT individuals.individual_last_name FROM Individuals JOIN Organization_Contact_Individuals ON individuals.individual_id = organization_contact_individuals.individual_id JOIN Organizations ON organization_contact_individuals.organization_id = organizations.organization_id WHERE organizations.organization_name = 'Labour Party'   ORDER BY organization_contact_individuals.date_contact_to DESC LIMIT 1    
"SELECT district.District_name, district.City_Population FROM district WHERE district.City_Population between 200000 AND 2000000       "
SELECT customers.customer_name FROM Customers JOIN Orders ON customers.customer_id = orders.customer_id  GROUP BY customers.customer_name  ORDER BY count( *) DESC LIMIT 1    
SELECT actor.Name FROM musical JOIN actor WHERE musical.Name = 'The Phantom of the Opera'       
SELECT count( *) FROM Customers        
SELECT addresses.country FROM Addresses  GROUP BY addresses.country HAVING count( addresses.address_id) > 4     
"SELECT checking.balance, savings.balance, accounts.name FROM CHECKING JOIN ACCOUNTS ON checking.custid = accounts.custid JOIN SAVINGS ON accounts.custid = savings.custid        "
SELECT apartment_bookings.booking_status_code FROM Apartment_Bookings JOIN Apartments ON apartment_bookings.apt_id = apartments.apt_id WHERE apartments.apt_number = 'Suite 634'       
"SELECT avg( wine.Price), avg( wine.Score), wine.Appelation FROM wine  GROUP BY wine.Appelation      "
SELECT DISTINCT author.authorName FROM author JOIN writes ON author.authorId = writes.authorId JOIN paper ON writes.paperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName like '%1%'       
"SELECT reservations.FirstName, reservations.LastName FROM Reservations WHERE reservations.Rate > 1       "
SELECT album.Title FROM Album JOIN Track ON album.AlbumId = Track.AlbumId JOIN Genre ON Track.GenreId = genre.GenreId WHERE genre.Name = 'Reggae'     INTERSECT SELECT album.Title FROM Album JOIN Track ON album.AlbumId = Track.AlbumId JOIN Genre ON Track.GenreId = genre.GenreId WHERE genre.Name = 'Rock'         
"SELECT student.Fname, student.LName FROM Student JOIN Visits_Restaurant ON student.StuID = T2.StuID  GROUP BY T2.StuID  ORDER BY count( *) DESC LIMIT 1    "
SELECT technician.Name FROM technician WHERE technician.Age = 36 or technician.Age = 37       
"SELECT documents_to_be_destroyed.Destroyed_by_Employee_ID, count( *) FROM Documents_to_be_Destroyed  GROUP BY documents_to_be_destroyed.Destroyed_by_Employee_ID      "
SELECT DISTINCT count(DISTINCT conference.name) FROM conference JOIN publication ON conference.cid = publication.cid JOIN writes ON publication.pid = writes.pid JOIN author ON writes.aid = author.aid WHERE author.name = '1'       
SELECT county_public_safety.Name FROM county_public_safety    ORDER BY county_public_safety.Population DESC LIMIT 1    
"SELECT projects.Project_ID, projects.Project_Details FROM Projects        "
SELECT DISTINCT count(DISTINCT member_of_club.Position) FROM Member_of_club JOIN Club ON member_of_club.ClubID = club.ClubID WHERE club.ClubName = 'Bootup Baltimore'       
SELECT DISTINCT list.Classroom FROM list WHERE list.Grade = 4       
SELECT college.cName FROM College WHERE college.enr > 18000    ORDER BY college.cName ASC   
SELECT sum( salary.salary) FROM salary JOIN team WHERE team.name = 'Boston Red Stockings' and salary.year = 2010       
SELECT albums.Label FROM Albums  GROUP BY albums.Label  ORDER BY count( *) DESC LIMIT 1    
"SELECT employee.EMP_FNAME, employee.EMP_LNAME FROM EMPLOYEE    ORDER BY employee.EMP_DOB ASC LIMIT 1    "
SELECT avg( track.UnitPrice) FROM Track JOIN Genre ON track.GenreId = genre.GenreId WHERE genre.Name = 'Jazz'       
SELECT music_festival.Category FROM music_festival  GROUP BY music_festival.Category HAVING count( *) > 1     
"SELECT DISTINCT enzyme.name, enzyme.Location, enzyme.Product FROM enzyme JOIN medicine_enzyme_interaction ON enzyme.id = medicine_enzyme_interaction.enzyme_id WHERE medicine_enzyme_interaction.interaction_type = 'inhibitor'       "
SELECT reference_document_types.Document_Type_Name FROM Ref_Document_Types JOIN All_Documents ON reference_document_types.Document_Type_Code = all_documents.Document_Type_Code WHERE all_documents.Document_Name = 'How to read a book'       
SELECT DISTINCT student.city_code FROM Student        
"SELECT student.Advisor, count( *) FROM Student  GROUP BY student.Advisor      "
SELECT student_course_registrations.student_id FROM Student_Course_Registrations JOIN Courses ON student_course_registrations.course_id = courses.course_id  GROUP BY student_course_registrations.student_id  ORDER BY count( *) ASC LIMIT 1    
SELECT avg( performance.Attendance) FROM performance        
"SELECT documents.Document_Type_Code, documents.Document_Name, documents.Document_Description FROM Documents WHERE documents.Document_Name = 'Noel CV' or documents.Document_Name = 'King Book'       "
SELECT mountain.Country FROM mountain WHERE mountain.Height > 5600     INTERSECT SELECT mountain.Country FROM mountain WHERE mountain.Height < 5200         
SELECT count( *) FROM Documents        
SELECT state.state_name FROM state WHERE state.area = (SELECT min( state.area) FROM state        )       
SELECT customers.date_became_customer FROM Customers WHERE customers.first_name = 'Carole' and customers.last_name = 'Bernhard'       
"SELECT people.first_name, people.last_name FROM People JOIN Candidates ON people.person_id = T2.candidate_id        "
"SELECT storm.Name, storm.Damage_millions_USD FROM storm     ORDER BY storm.Max_speed DESC   "
SELECT tryout.cName FROM Tryout WHERE tryout.decision = '1' and tryout.pPos = '1'       
SELECT representative.Name FROM representative WHERE representative.Party != 'Republican'       
SELECT people.Hometown FROM people WHERE people.Age > 23     INTERSECT SELECT people.Hometown FROM people WHERE people.Age < 20         
SELECT movie.title FROM directed_by JOIN copyright ON directed_by.msid = copyright.msid JOIN cast ON copyright.msid = cast.msid JOIN actor ON cast.aid = actor.aid JOIN director ON directed_by.did = director.did JOIN movie WHERE actor.name = 'Taraneh Alidoosti' and director.name = 'Asghar Farhadi'       
"SELECT products.color_code, reference_colors.color_description FROM Products JOIN Ref_Colors ON products.color_code = reference_colors.color_code WHERE products.product_name = 'chervil'       "
SELECT employees.Employee_ID FROM Employees JOIN Roles ON employees.Role_Code = roles.Role_Code WHERE roles.Role_Name = 'Human Resource' or roles.Role_Name = 'Manager'       
SELECT student.Age FROM Student WHERE student.Fname = 'Linda' and student.LName = 'Smith'       
"SELECT skills.skill_id, skills.skill_description FROM Skills JOIN Skills_Required_To_Fix ON skills.skill_id = skills_required_to_fix.skill_id  GROUP BY skills_required_to_fix.skill_id  ORDER BY count( *) DESC LIMIT 1    "
SELECT movie.Director FROM movie WHERE movie.Year = 2000     INTERSECT SELECT movie.Director FROM movie WHERE movie.Year = 1999         
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1' and paper.journalId >= 1       
SELECT procedures.Name FROM Procedures    ORDER BY procedures.Cost ASC LIMIT 1    
SELECT count( *) FROM flight        
SELECT actor.Duration FROM actor    ORDER BY actor.age DESC LIMIT 1    
"SELECT airports.name, airports.city, routes.src_apid FROM airports JOIN routes ON airports.apid = routes.src_apid  GROUP BY routes.src_apid  ORDER BY count( *) DESC LIMIT 1    "
SELECT count( *) FROM Faculty WHERE faculty.Sex = 'F' and faculty.Rank = 'Professor'       
"SELECT accounts.Statement_ID, count( *) FROM Accounts  GROUP BY accounts.Statement_ID      "
"SELECT faculty.Building, count( *) FROM Faculty  GROUP BY faculty.Building      "
SELECT available_policies.Customer_Phone FROM Available_Policies WHERE available_policies.policy_type_code = 'Life Insurance'       
"SELECT artist.artist_name, artist.gender FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.releasedate like '%1%'       "
SELECT volume.Song FROM volume JOIN music_festival ON volume.Volume_ID = music_festival.Volume WHERE music_festival.Result = 'Nominated'       
SELECT count( *) FROM Students WHERE students.personal_name like '%son%'       
SELECT DISTINCT wine.Name FROM wine WHERE wine.Year < 2000 or wine.Year > 2010       
SELECT movie.title FROM Movie WHERE movie.mID NOT IN (SELECT rating.mID FROM Rating        )       
SELECT projects.project_details FROM Projects JOIN Project_Outcomes ON projects.project_id = Project_Outcomes.project_id JOIN Research_Outcomes ON Project_Outcomes.outcome_code = research_outcomes.outcome_code WHERE research_outcomes.outcome_description like '%1%'       
SELECT products.product_name FROM Products WHERE products.product_category_code = 'Spices'       
SELECT state.state_name FROM state WHERE state.density = (SELECT min( state.density) FROM state        )       
SELECT products.Product_Name FROM Products     ORDER BY products.Product_Price ASC   
SELECT DISTINCT products.product_name FROM Products JOIN Product_Characteristics ON products.product_id = Product_Characteristics.product_id JOIN Characteristics ON Product_Characteristics.characteristic_id = characteristics.characteristic_id WHERE characteristics.characteristic_name = 'warm'       
SELECT book_club.Category FROM book_club WHERE book_club.Year > 1989 GROUP BY book_club.Category HAVING count( *) >= 2     
"SELECT weather.zip_code, count( *) FROM weather WHERE weather.max_wind_Speed_mph >= 25 GROUP BY weather.zip_code      "
SELECT city.City FROM city WHERE city.Regional_Population > 10000000       
SELECT DISTINCT count(DISTINCT elimination.Team) FROM Elimination        
"SELECT list.Classroom, count( *) FROM list WHERE list.Grade = 4 GROUP BY list.Classroom      "
SELECT DISTINCT apartments.apt_number FROM Apartments JOIN Apartment_Bookings ON apartments.apt_id = apartment_bookings.apt_id WHERE apartment_bookings.booking_status_code = 'Confirmed'       
"SELECT train.Name, railway.Location FROM train JOIN railway ON train.Railway_ID = railway.Railway_ID        "
SELECT DISTINCT writes.paperId FROM writes JOIN paper ON writes.paperId = paper.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'    ORDER BY paper.year DESC   
SELECT flight.Pilot FROM flight  GROUP BY flight.Pilot  ORDER BY count( *) DESC LIMIT 1    
SELECT DISTINCT count(DISTINCT movie.title) FROM directed_by JOIN director ON T2.did = director.did JOIN movie WHERE director.name = 'Steven Spielberg'       
SELECT city.state_name FROM city  GROUP BY city.state_name  ORDER BY sum( city.population) ASC LIMIT 1    
SELECT people.Hometown FROM people JOIN gymnast ON people.People_ID = gymnast.Gymnast_ID  GROUP BY people.Hometown  ORDER BY count( *) DESC LIMIT 1    
SELECT business.name FROM business JOIN review ON business.business_id = review.business_id JOIN user ON review.user_id = user.user_id WHERE review.rating = 5 and user.name = 'Niloofar'       
SELECT river.length FROM river WHERE river.river_name = '1'       
SELECT orders.date_order_placed FROM Orders JOIN Customers ON orders.customer_id = customers.customer_id WHERE customers.customer_name = 'Jeramie'       
SELECT instructor.name FROM instructor WHERE instructor.dept_name = '1'       
SELECT ship.Name FROM Ship JOIN captain ON ship.Ship_ID = T2.Ship_ID  GROUP BY ship.Name HAVING count( *) > 1     
"SELECT wine.Grape, wine.Appelation FROM wine        "
"SELECT count( *), product.product_id FROM Problems JOIN Product ON problems.product_id = product.product_id WHERE problems.date_problem_reported > '1986-11-13' GROUP BY product.product_id      "
SELECT city.City FROM city JOIN temperature ON city.City_ID = temperature.City_ID WHERE temperature.Mar < 1       EXCEPT SELECT city.City FROM city JOIN hosting_city ON city.City_ID = T4.Host_City        
SELECT customer.cust_name FROM customer     ORDER BY customer.acc_bal ASC   
SELECT catalog_contents.catalog_entry_name FROM Catalog_Contents WHERE catalog_contents.next_entry_id > 8       
"SELECT avg( person.age), person.job FROM Person WHERE person.gender = 'male' GROUP BY person.job      "
"SELECT customers_cards.card_type_code, count( *) FROM Customers_Cards  GROUP BY customers_cards.card_type_code      "
"SELECT DISTINCT count(DISTINCT paper_key_phrase.keyphraseId), paper_key_phrase.keyphraseId FROM paperKeyphrase JOIN paper ON paper_key_phrase.paperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1' GROUP BY paper_key_phrase.keyphraseId   ORDER BY count( paper_key_phrase.keyphraseId) DESC   "
SELECT DISTINCT races.name FROM races     ORDER BY races.name DESC   
SELECT reference_document_types.document_type_code FROM Ref_Document_Types        
"SELECT storm.Name, storm.Dates_active, storm.Number_Deaths FROM storm WHERE storm.Number_Deaths >= 1       "
SELECT business.name FROM business JOIN category ON business.business_id = category.business_id JOIN review ON business.business_id = review.business_id JOIN user ON review.user_id = user.user_id WHERE business.rating >= 3 and category.category_name = 'Bars' and user.name = 'Patrick'       
SELECT count( *) FROM region JOIN party ON region.Region_ID = party.Region_ID JOIN party_events ON party.Party_ID = party_events.Party_ID WHERE region.Region_name = 'United Kingdom' and party_events.Event_Name = 'Annaual Meeting'       
SELECT count( *) FROM list        
SELECT enzyme.name FROM enzyme WHERE enzyme.name like '%ALA%'       
"SELECT wine.Grape, wine.Appelation, wine.Name FROM wine WHERE wine.Score > 93    ORDER BY wine.Name ASC   "
SELECT attribute_definitions.attribute_data_type FROM Attribute_Definitions WHERE attribute_definitions.attribute_name = 'Green'       
SELECT DISTINCT count(DISTINCT climber.Country) FROM climber        
SELECT driver.Party FROM driver WHERE driver.Home_city = 'Hartford' and driver.Age > 40       
SELECT DISTINCT count(DISTINCT course.dept_name) FROM course        
"SELECT chip_model.Model_name, chip_model.RAM_MiB FROM chip_model    ORDER BY chip_model.RAM_MiB ASC LIMIT 1    "
SELECT submission.Author FROM submission    ORDER BY submission.Scores DESC LIMIT 1    
"SELECT book_club.Book_Title, book_club.Author_or_Editor FROM book_club WHERE book_club.Year > 1989       "
"SELECT count( *), airports.name FROM routes JOIN airports ON routes.src_apid = airports.apid  GROUP BY airports.name   ORDER BY count( *) DESC   "
SELECT papers.title FROM Papers JOIN Authorship ON papers.paperID = Authorship.paperID JOIN Authors ON Authorship.authID = authors.authID WHERE authors.fname = 'Aaron' and authors.lname = 'Turon'       
"SELECT ship.Type, avg( ship.Tonnage) FROM ship  GROUP BY ship.Type      "
SELECT music_festival.Result FROM music_festival  GROUP BY music_festival.Result  ORDER BY count( *) DESC LIMIT 1    
SELECT DISTINCT author.authorName FROM author JOIN writes ON author.authorId = writes.authorId JOIN paper ON writes.paperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = 'Machine Learning' GROUP BY author.authorName   ORDER BY count( writes.paperId) DESC   
SELECT product_suppliers.product_id FROM Product_Suppliers    ORDER BY product_suppliers.total_amount_purchased DESC LIMIT 1    
SELECT DISTINCT employees.DEPARTMENT_ID FROM employees  GROUP BY employees.DEPARTMENT_ID HAVING count( employees.EMPLOYEE_ID) >= 1     
SELECT people.Name FROM people JOIN employment ON people.People_ID = employment.People_ID JOIN company ON employment.Company_ID = company.Company_ID WHERE company.Sales_in_Billion > 200       
"SELECT drivers.driverId, drivers.forename, drivers.surname FROM drivers JOIN lapTimes ON drivers.driverId = lap_times.driverId WHERE lap_times.position = 1 GROUP BY lap_times.driverId HAVING count( *) >= 2     "
"SELECT DISTINCT author.authorId, paper.paperId FROM author JOIN writes ON author.authorId = writes.authorId JOIN paper ON writes.paperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE author.authorName = '1' and key_phrase.keyphraseName = '1'       "
SELECT publication.title FROM publication JOIN conference ON publication.cid = conference.cid WHERE conference.name = 'VLDB'       
SELECT web_client_accelerator.name FROM Web_client_accelerator WHERE web_client_accelerator.name like '%Opera%'       
"SELECT player.Player, player.Years_Played FROM player        "
SELECT customer.first_name FROM customer WHERE customer.customer_id NOT IN (SELECT rental.customer_id FROM rental WHERE rental.rental_date > '2005-08-23 02:06:01'       )       
SELECT count( *) FROM state        
SELECT player.Position FROM player  GROUP BY player.Position HAVING avg( player.Points) >= 20     
SELECT student.name FROM student JOIN takes ON student.ID = takes_classes.ID WHERE takes_classes.course_id in (SELECT prerequisite.prereq_id FROM prereq JOIN course ON prerequisite.prereq_id = course.course_id WHERE course.title = 'International Finance'       )       
SELECT staff.staff_name FROM Staff JOIN Staff_Department_Assignments ON staff.staff_id = T2.staff_id  GROUP BY staff.staff_name HAVING count( *) > 1     
"SELECT DISTINCT author.authorId, paper.paperId FROM author JOIN writes ON author.authorId = writes.authorId JOIN paper ON writes.paperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE author.authorName = '1' and key_phrase.keyphraseName = '1'       "
SELECT people.cell_mobile_number FROM People JOIN Candidates ON people.person_id = Candidates.candidate_id JOIN Candidate_Assessments ON Candidates.candidate_id = candidate_assessments.candidate_id WHERE candidate_assessments.asessment_outcome_code = 'Fail'       
SELECT artist.Famous_Title FROM artist WHERE artist.Artist_ID NOT IN (SELECT volume.Artist_ID FROM volume        )       
SELECT salary.salary FROM salary WHERE salary.year = 2010      UNION SELECT salary.salary FROM salary WHERE salary.year = 2001        
SELECT club.ClubLocation FROM Club WHERE club.ClubName = 'Tennis Club'       
SELECT school_details.Nickname FROM school_details WHERE school_details.Division != 'Division 1'       
SELECT candidate_assessments.candidate_id FROM Candidate_Assessments WHERE candidate_assessments.asessment_outcome_code = 'Pass'       
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId JOIN venue ON paper.venueId = venue.venueId WHERE author.authorName = '1' and venue.venueName = '1'       
"SELECT DISTINCT cite.citedPaperId, count(DISTINCT cite.citedPaperId) FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' GROUP BY cite.citedPaperId   ORDER BY count( cite.citedPaperId) DESC   "
"SELECT products.product_type_code, products.product_name, products.product_price FROM Products JOIN Product_Suppliers ON products.product_id = product_suppliers.product_id WHERE product_suppliers.supplier_id = 3       "
SELECT documents.Document_Type_Code FROM Documents  GROUP BY documents.Document_Type_Code HAVING count( *) < 3     
SELECT patient.Name FROM Patient JOIN Appointment ON patient.SSN = appointment.Patient    ORDER BY appointment.Start DESC LIMIT 1    
SELECT count( *) FROM venue        
SELECT customers.Customer_Details FROM Customers        EXCEPT SELECT customers.Customer_Details FROM Customers JOIN Policies ON customers.Customer_ID = T3.Customer_ID        
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE venue.venueName = '1'       
SELECT state.population FROM state WHERE state.area = (SELECT max( state.area) FROM state        )       
"SELECT guests.guest_first_name, guests.guest_last_name FROM Guests        "
SELECT movie.title FROM actor JOIN cast ON actor.aid = cast.aid JOIN movie WHERE actor.name = '1' and cast.role = 1       
SELECT count( *) FROM Services        
SELECT city.Official_Name FROM city WHERE city.City_ID NOT IN (SELECT farm_competition.Host_city_ID FROM farm_competition        )       
SELECT count( *) FROM Employees        
SELECT DISTINCT count(DISTINCT people.Hometown) FROM people        
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE restaurant.CITY_NAME in (SELECT geographic.CITY_NAME FROM GEOGRAPHIC WHERE geographic.REGION = '1'       )       "
SELECT entrepreneur.Investor FROM entrepreneur  GROUP BY entrepreneur.Investor  ORDER BY count( *) DESC LIMIT 1    
"SELECT employee.Fname, employee.Lname FROM employee WHERE employee.Salary > 30000       "
"SELECT country.Name, country.Area, country.Population FROM country JOIN roller_coaster ON country.Country_ID = roller_coaster.Country_ID WHERE roller_coaster.Speed > '1'     INTERSECT SELECT country.Name, country.Area, country.Population FROM country JOIN roller_coaster ON country.Country_ID = roller_coaster.Country_ID WHERE roller_coaster.Speed < '1'         "
SELECT faculty.Faculty FROM faculty JOIN Campuses ON faculty.Campus = Campuses.Id JOIN degrees ON Campuses.Id = degrees.Campus WHERE faculty.Year = 2001   ORDER BY degrees.Degrees ASC LIMIT 1    
"SELECT DISTINCT count(DISTINCT paper.paperId), writes.authorId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1' and paper.year = 1 GROUP BY writes.authorId      "
SELECT DISTINCT student.Advisor FROM Student JOIN Voting_record ON student.StuID = voting_record.Class_Senator_Vote WHERE voting_record.Election_Cycle = 'Spring'       
"SELECT employee.EMP_FNAME, class.CLASS_ROOM FROM EMPLOYEE JOIN CLASS ON employee.EMP_NUM = class.PROF_NUM JOIN DEPARTMENT ON employee.EMP_NUM = department.EMP_NUM JOIN PROFESSOR ON department.DEPT_CODE = T4.DEPT_CODE WHERE department.DEPT_NAME = 'Accounting'       "
SELECT songs.Title FROM Songs JOIN Performance ON songs.SongId = T2.SongId JOIN Band ON T2.Bandmate = band.Id WHERE band.Lastname = 'Heilo'       
"SELECT avg( station.Total_Passengers), max( station.Total_Passengers) FROM station WHERE station.Location = 'London' or station.Location = 'Glasgow'       "
"SELECT student.LName, student.Fname FROM Student JOIN SportsInfo ON student.StuID = sports_info.StuID WHERE sports_info.SportName = 'Football' or sports_info.SportName = 'Lacrosse'       "
SELECT entrepreneur.Investor FROM entrepreneur WHERE entrepreneur.Money_Requested > 140000     INTERSECT SELECT entrepreneur.Investor FROM entrepreneur WHERE entrepreneur.Money_Requested < 120000         
"SELECT school.Denomination, count( *) FROM school  GROUP BY school.Denomination      "
SELECT count( *) FROM venue        
SELECT DISTINCT paper.journalId FROM paper WHERE paper.year = 2011       
SELECT max( airports.elevation) FROM airports WHERE airports.country = 'Iceland'       
SELECT reference_colors.color_description FROM Ref_Colors JOIN Products ON reference_colors.color_code = products.color_code  GROUP BY reference_colors.color_description  ORDER BY count( *) DESC LIMIT 1    
"SELECT DISTINCT count(DISTINCT department.DEPT_NAME), department.SCHOOL_CODE FROM DEPARTMENT  GROUP BY department.SCHOOL_CODE      "
"SELECT visits.Visit_Date, visits.Visit_Details FROM Visits JOIN Visitors ON visits.Tourist_ID = visitors.Tourist_ID WHERE visitors.Tourist_Details = 'Vincent'       "
SELECT avg( student.Age) FROM Student WHERE student.Sex = 'F'       
"SELECT sales.sales_details, transactions.date_of_transaction FROM Sales JOIN Transactions ON sales.sales_transaction_id = transactions.transaction_id WHERE transactions.amount_of_transaction < 3000       "
SELECT customer_orders.Actual_Delivery_Date FROM Customer_Orders JOIN Order_Items ON customer_orders.Order_ID = order_items.Order_ID WHERE order_items.Order_Quantity = '1'       
SELECT avg( track.UnitPrice) FROM Track        
SELECT DISTINCT paper.venueId FROM paper WHERE paper.title = '1'       
"SELECT employees.first_name, employees.last_name, count( employees.reports_to) FROM employees  GROUP BY employees.last_name  ORDER BY count( employees.reports_to) DESC LIMIT 1    "
SELECT ship.Type FROM Ship WHERE ship.Flag = 'Panama'     INTERSECT SELECT ship.Type FROM Ship WHERE ship.Flag = 'Malta'         
SELECT musical.Result FROM musical  GROUP BY musical.Result  ORDER BY count( *) DESC LIMIT 1    
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
"SELECT department.DEPT_NAME, professor.DEPT_CODE FROM DEPARTMENT JOIN PROFESSOR ON department.DEPT_CODE = professor.DEPT_CODE WHERE professor.PROF_HIGH_DEGREE = 'Ph.D.' GROUP BY professor.DEPT_CODE  ORDER BY count( *) DESC LIMIT 1    "
SELECT count( *) FROM enzyme WHERE enzyme.id NOT IN (SELECT medicine_enzyme_interaction.enzyme_id FROM medicine_enzyme_interaction        )       
SELECT physician.Name FROM Physician        EXCEPT SELECT physician.Name FROM Physician JOIN Appointment ON physician.EmployeeID = T3.Physician        
SELECT count( *) FROM follows        
SELECT faculty.Lname FROM Faculty JOIN Member_of ON faculty.FacID = Member_of.FacID JOIN Department ON Member_of.DNO = department.DNO WHERE department.DName = 'Computer Science'       
SELECT flight.flno FROM flight WHERE flight.origin = 'Los Angeles'       
"SELECT customers_cards.customer_id, customers.customer_first_name, customers.customer_last_name FROM Customers_Cards JOIN Financial_Transactions ON customers_cards.card_id = Financial_Transactions.card_id JOIN Accounts ON Financial_Transactions.account_id = accounts.account_id JOIN Customers  GROUP BY customers.customer_id  ORDER BY count( *) ASC LIMIT 1    "
SELECT DISTINCT paper.paperId FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE venue.venueName = '1'       
SELECT journal.name FROM journal JOIN publication ON journal.jid = publication.jid JOIN writes ON publication.pid = writes.pid JOIN author ON writes.aid = author.aid WHERE author.name = '1'       
"SELECT products_for_hire.product_name, products_for_hire.product_description FROM Products_for_Hire WHERE products_for_hire.product_type_code = 'Cutlery' and products_for_hire.daily_hire_cost < 20       "
"SELECT customer.cust_name, customer.acc_type FROM customer JOIN bank ON customer.branch_ID = bank.branch_ID JOIN loan ON bank.branch_ID = T2.branch_ID  GROUP BY customer.cust_ID HAVING sum( T2.amount) > 5000     "
SELECT member.Name FROM member JOIN round ON member.Member_ID = round.Member_ID WHERE round.Rank_in_Round > 3       
SELECT person_friend.name FROM PersonFriend  GROUP BY person_friend.name HAVING count( *) = 1     
"SELECT movie.Title, movie.Year, movie.Director FROM movie     ORDER BY movie.Budget_million ASC   "
SELECT avg( people.Age) FROM people JOIN gymnast ON people.People_ID = T2.Gymnast_ID        
"SELECT customers.gender, count( *) FROM Customers  GROUP BY customers.gender      "
SELECT count( *) FROM Customers JOIN Accounts WHERE customers.customer_first_name = 'Art' and customers.customer_last_name = 'Turcotte'       
"SELECT count( *), medication.Name FROM Medication  GROUP BY medication.Name      "
SELECT head.born_state FROM head JOIN management ON head.head_ID = management.head_ID JOIN department ON management.department_ID = department.Department_ID WHERE department.Name = 'Treasury'     INTERSECT SELECT head.born_state FROM head JOIN management ON head.head_ID = management.head_ID JOIN department ON management.department_ID = department.Department_ID WHERE department.Name = 'Homeland Security'         
SELECT airports.name FROM airports WHERE airports.city = 'Goroka'       
SELECT DISTINCT count(DISTINCT plays_games.StuID) FROM Plays_Games        
"SELECT team.name, team.team_id FROM salary JOIN team  GROUP BY team.team_id  ORDER BY avg( salary.salary) ASC LIMIT 1    "
SELECT DISTINCT count(DISTINCT behavior_incident.incident_type_code) FROM Behavior_Incident        
SELECT student_course_enrolment.date_of_enrolment FROM Student_Course_Enrolment JOIN Student_Tests_Taken ON student_course_enrolment.registration_id = student_tests_taken.registration_id WHERE student_tests_taken.test_result = 'Pass'       
"SELECT count( *), captain.Rank FROM captain WHERE captain.age < '50' GROUP BY captain.Rank      "
"SELECT accounts.name, savings.balance FROM ACCOUNTS JOIN SAVINGS ON accounts.custid = savings.custid JOIN CHECKING ON accounts.custid = T3.custid WHERE savings.balance < 1       "
SELECT authors.lname FROM Authors JOIN Authorship ON authors.authID = Authorship.authID JOIN Papers ON Authorship.paperID = papers.paperID WHERE papers.title = 'Binders Unbound'       
SELECT DISTINCT paper.venueId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = 'Trophic Cascade'       
SELECT city.City FROM city JOIN temperature ON city.City_ID = temperature.City_ID WHERE temperature.Feb > 1      UNION SELECT city.City FROM city JOIN hosting_city ON city.City_ID = T4.Host_City         
"SELECT student.Major, count( *) FROM Student  GROUP BY student.Major      "
SELECT faculty.FacID FROM Faculty WHERE faculty.Sex = 'M'       
"SELECT max( county.Population), min( county.Population) FROM county        "
SELECT catalog_contents.catalog_entry_name FROM Catalog_Contents    ORDER BY catalog_contents.price_in_dollars DESC LIMIT 1    
"SELECT device.Software_Platform, count( *) FROM device  GROUP BY device.Software_Platform      "
"SELECT customers.Customer_Phone, customers.Customer_Email_Address FROM Customers WHERE customers.Customer_Name = 'Harold'       "
SELECT DISTINCT paper.year FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Pedro Domingos'       
"SELECT invoices.invoice_number, invoices.invoice_date FROM Invoices JOIN Financial_Transactions ON invoices.invoice_number = financial_transactions.invoice_number  GROUP BY financial_transactions.invoice_number  ORDER BY count( *) DESC LIMIT 1    "
"SELECT movie.title, movie.year FROM Movie WHERE movie.title != '1'       "
"SELECT happy_hour.Shop_ID, count( *) FROM happy_hour  GROUP BY happy_hour.Shop_ID  ORDER BY count( *) DESC LIMIT 1    "
"SELECT film.title, film.rental_rate FROM film    ORDER BY film.rental_rate DESC LIMIT 1    "
SELECT highlow.lowest_point FROM highlow WHERE highlow.state_name = '1'       
SELECT employee.BirthDate FROM Employee WHERE employee.City = 'Edmonton'       
SELECT film.Title FROM film JOIN film_market_estimation ON film.Film_ID = film_market_estimation.Film_ID    ORDER BY film_market_estimation.High_Estimate DESC LIMIT 1    
"SELECT employees.EMPLOYEE_ID, jobs.JOB_TITLE FROM employees JOIN jobs ON employees.JOB_ID = jobs.JOB_ID WHERE employees.DEPARTMENT_ID = 80       "
"SELECT flight.departure_date, flight.arrival_date FROM flight WHERE flight.origin = 'Los Angeles' and flight.destination = 'Honolulu'       "
SELECT sum( grants.grant_amount) FROM Grants JOIN Organisations ON grants.organisation_id = Organisations.organisation_id JOIN Organisation_Types ON Organisations.organisation_type = organisation_types.organisation_type WHERE organisation_types.organisation_type_description = 'Research'       
"SELECT customers.customer_first_name, customers.customer_last_name, accounts.customer_id FROM Customers JOIN Accounts  GROUP BY accounts.account_id  ORDER BY count( *) ASC LIMIT 1    "
"SELECT event.Date, event.Name, event.Venue FROM event     ORDER BY event.Event_Attendance DESC   "
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT state.country_name FROM state WHERE state.state_name = '1'       
SELECT DISTINCT count(DISTINCT projects.Name) FROM Projects        
SELECT employee.name FROM employee JOIN certificate ON employee.eid = certificate.eid JOIN aircraft ON certificate.aid = aircraft.aid WHERE aircraft.distance > 5000 GROUP BY employee.name  ORDER BY count( *) DESC LIMIT 1    
SELECT count( *) FROM Inst        
"SELECT sum( savings.balance), accounts.name FROM SAVINGS JOIN ACCOUNTS ON savings.custid = accounts.custid  GROUP BY accounts.name      "
"SELECT party.Lieutenant_Governor, party.Comptroller FROM party WHERE party.Party = '1'       "
"SELECT DISTINCT customers.customer_first_name, customers.customer_last_name, customers.phone_number FROM Customers JOIN Accounts ON customers.customer_id = T2.customer_id        "
SELECT count( *) FROM building        
"SELECT projects.Name, projects.Hours FROM Projects JOIN AssignedTo ON projects.Code = T3.Project JOIN Scientists ON T3.Scientist = scientists.SSN  GROUP BY T3.Project  ORDER BY count( *) DESC LIMIT 1    "
SELECT DISTINCT count(DISTINCT customers_cards.card_type_code) FROM Customers_Cards        
"SELECT user_profiles.name, count( *) FROM user_profiles JOIN tweets ON user_profiles.uid = tweets.uid  GROUP BY user_profiles.name      "
SELECT products.product_name FROM Products JOIN Ref_Colors ON products.color_code = reference_colors.color_code JOIN Ref_Product_Categories ON products.product_category_code = reference_product_categories.product_category_code WHERE reference_colors.color_description = 'white' and reference_product_categories.unit_of_measure != 'Handful'       
"SELECT DISTINCT count(DISTINCT department.DEPT_ADDRESS), department.SCHOOL_CODE FROM DEPARTMENT  GROUP BY department.SCHOOL_CODE      "
SELECT sum( state.population) FROM state JOIN border_info ON state.state_name = border_info.border WHERE border_info.state_name = '1'       
SELECT aircraft.aid FROM aircraft WHERE aircraft.distance > 1000       
SELECT count( *) FROM airlines WHERE airlines.country = 'Russia'       
SELECT count( *) FROM Services        
SELECT sum( sports_info.GamesPlayed) FROM SportsInfo WHERE sports_info.SportName = '1' and sports_info.OnScholarship = '1'       
SELECT sum( order_items.order_quantity) FROM Order_Items JOIN Customer_Orders ON order_items.order_id = customer_orders.order_id WHERE customer_orders.order_date < '2018-03-17 07:13:53'       
"SELECT max( department.Budget_in_Billions), min( department.Budget_in_Billions) FROM department        "
SELECT avg( order_items.order_quantity) FROM Order_Items        
"SELECT city.GDP, city.Regional_Population FROM city JOIN hosting_city ON city.City_ID = T2.Host_City  GROUP BY T2.Host_City HAVING count( *) > 1     "
"SELECT reference_product_categories.product_category_description, reference_product_categories.unit_of_measure FROM Ref_Product_Categories WHERE reference_product_categories.product_category_code = 'Herbs'       "
SELECT state.capital FROM state JOIN city ON state.state_name = city.state_name WHERE city.city_name = '1'       
SELECT degrees.Campus FROM degrees  GROUP BY degrees.Campus  ORDER BY sum( degrees.Degrees) DESC LIMIT 1    
SELECT count( *) FROM venue        
SELECT tweets.text FROM tweets WHERE tweets.text like '%intern%'       
SELECT count( *) FROM Student        
"SELECT DISTINCT paper.venueId, paper.year FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'    ORDER BY paper.year DESC   "
SELECT DISTINCT count(DISTINCT publication.title) FROM publication JOIN writes ON publication.pid = writes.pid JOIN author ON writes.aid = author.aid WHERE author.name = '1'       
"SELECT DISTINCT teachers.FirstName, teachers.LastName FROM teachers        "
SELECT flight.destination FROM flight  GROUP BY flight.destination  ORDER BY count( *) ASC LIMIT 1    
"SELECT trip.id, trip.duration FROM trip    ORDER BY trip.duration DESC LIMIT 1    "
SELECT shop.Shop_Name FROM shop JOIN stock ON shop.Shop_ID = T2.Shop_ID  GROUP BY shop.Shop_Name HAVING count( *) > 1     
SELECT count( *) FROM classroom WHERE classroom.building != 'Lamberton'       
SELECT transactions.transaction_id FROM Transactions WHERE transactions.transaction_type_code = 'PUR'       
"SELECT student.STU_FNAME, student.STU_LNAME FROM STUDENT JOIN ENROLL ON student.STU_NUM = enroll.STU_NUM WHERE enroll.ENROLL_GRADE = 'C' or enroll.ENROLL_GRADE = 'A'       "
"SELECT customers.first_name, customers.last_name, sum( invoices.total) FROM customers JOIN invoices ON customers.id = invoices.customer_id  GROUP BY invoices.customer_id  ORDER BY sum( invoices.total) DESC LIMIT 1    "
SELECT count( *) FROM Products JOIN Ref_Colors ON products.color_code = reference_colors.color_code JOIN Product_Characteristics ON products.product_id = Product_Characteristics.product_id JOIN Characteristics ON Product_Characteristics.characteristic_id = characteristics.characteristic_id WHERE reference_colors.color_description = 'white' or characteristics.characteristic_name = 'hot'       
"SELECT election.Delegate, election.Committee FROM election        "
SELECT course_authors_and_tutors.address_line_1 FROM Course_Authors_and_Tutors JOIN Courses ON course_authors_and_tutors.author_id = courses.author_id WHERE courses.course_name = 'operating system' or courses.course_name = 'data structure'       
"SELECT accounts.name, savings.balance FROM ACCOUNTS JOIN SAVINGS ON accounts.custid = savings.custid    ORDER BY savings.balance DESC LIMIT 1    "
SELECT count( *) FROM Catalog_Contents        
"SELECT employees.EMPLOYEE_ID, jobs.JOB_TITLE FROM employees JOIN jobs ON employees.JOB_ID = jobs.JOB_ID WHERE employees.DEPARTMENT_ID = 80       "
SELECT employees.HIRE_DATE FROM employees WHERE employees.FIRST_NAME not_like 'M'       
SELECT sum( apartments.room_count) FROM Apartments JOIN Apartment_Facilities ON apartments.apt_id = apartment_facilities.apt_id WHERE apartment_facilities.facility_code = 'Gym'       
SELECT count( *) FROM classroom WHERE classroom.building = 'Lamberton'       
SELECT city.city_name FROM city WHERE city.population = (SELECT max( city.population) FROM city JOIN state ON city.state_name = T23.state_name        )       
"SELECT store.Type, count( *) FROM store  GROUP BY store.Type      "
SELECT documents.sent_date FROM Documents JOIN Grants ON documents.grant_id = grants.grant_id JOIN Organisations ON grants.organisation_id = Organisations.organisation_id JOIN Organisation_Types ON Organisations.organisation_type = organisation_types.organisation_type WHERE grants.grant_amount > 1 and organisation_types.organisation_type_description = '1'       
SELECT reviewer.name FROM Reviewer JOIN Rating ON reviewer.rID = rating.rID WHERE rating.stars = 3     INTERSECT SELECT reviewer.name FROM Reviewer JOIN Rating ON reviewer.rID = rating.rID WHERE rating.stars = 4         
SELECT city.City FROM city JOIN temperature ON city.City_ID = temperature.City_ID    ORDER BY temperature.Feb DESC LIMIT 1    
SELECT film.Studio FROM film  GROUP BY film.Studio  ORDER BY count( *) DESC LIMIT 1    
SELECT DISTINCT count(DISTINCT companies.Industry) FROM Companies        
SELECT city.population FROM city WHERE city.city_name = (SELECT state.capital FROM state WHERE state.state_name = '1'       )       
SELECT people.Name FROM people WHERE people.People_ID NOT IN (SELECT candidate.People_ID FROM candidate        )       
SELECT customer_orders.Actual_Delivery_Date FROM Customer_Orders JOIN Order_Items ON customer_orders.Order_ID = order_items.Order_ID WHERE order_items.Order_Quantity = '1'       
"SELECT documents.Document_Type_Code, count( *) FROM Documents  GROUP BY documents.Document_Type_Code      "
SELECT city.state_name FROM city  GROUP BY city.state_name  ORDER BY sum( city.population) DESC LIMIT 1    
SELECT program.Name FROM program        EXCEPT SELECT program.Name FROM program JOIN broadcast ON program.Program_ID = broadcast.Program_ID WHERE broadcast.Time_of_day = 'Morning'       
SELECT financial_transactions.transaction_id FROM Financial_Transactions WHERE financial_transactions.transaction_amount > (SELECT avg( financial_transactions.transaction_amount) FROM Financial_Transactions        )       
"SELECT trip.id, station.installation_date FROM trip JOIN station        "
SELECT host.Nationality FROM host WHERE host.Age > '45'     INTERSECT SELECT host.Nationality FROM host WHERE host.Age < '35'         
"SELECT jobs.JOB_TITLE, avg( employees.SALARY) FROM jobs JOIN employees ON jobs.JOB_ID = employees.JOB_ID  GROUP BY jobs.JOB_TITLE      "
SELECT projects.Name FROM Projects WHERE projects.Hours between 100 AND 300       
SELECT DISTINCT college.state FROM College JOIN Tryout ON college.cName = T2.cName        
"SELECT weather.date, weather.mean_temperature_f, weather.mean_humidity FROM weather    ORDER BY weather.max_gust_speed_mph DESC LIMIT 1    "
SELECT customers.Customer_name FROM Customers JOIN Customers_Policies ON customers.Customer_ID = Customers_Policies.Customer_ID JOIN First_Notification_of_Loss ON Customers_Policies.Customer_ID = First_Notification_of_Loss.Customer_ID JOIN Services ON First_Notification_of_Loss.Service_ID = services.Service_ID WHERE services.Service_name = 'Close a policy' or services.Service_name = 'Upgrade a policy'       
SELECT driver.Name FROM driver JOIN school_bus ON driver.Driver_ID = school_bus.Driver_ID    ORDER BY school_bus.Years_Working DESC LIMIT 1    
"SELECT team.name, team.team_id, max( salary.salary) FROM salary JOIN team  GROUP BY team.team_id      "
SELECT city.city_name FROM city WHERE city.population = (SELECT max( city.population) FROM city        )       
"SELECT band.Firstname, band.Lastname FROM Band JOIN Performance ON band.Id = performance.Bandmate JOIN Songs ON performance.SongId = songs.SongId WHERE songs.Title = '1' and performance.StagePosition = '1'       "
SELECT projects.project_details FROM Projects WHERE projects.project_id NOT IN (SELECT project_outcomes.project_id FROM Project_Outcomes        )       
"SELECT transactions.investor_id, avg( transactions.amount_of_transaction) FROM Transactions  GROUP BY transactions.investor_id      "
SELECT events.Event_ID FROM Events        EXCEPT SELECT participants_in_events.Event_ID FROM Participants_in_Events JOIN Participants ON participants_in_events.Participant_ID = participants.Participant_ID WHERE participants.Participant_Details = 'Kenyatta Kuhn'       
SELECT employees.Role_Code FROM Employees  GROUP BY employees.Role_Code  ORDER BY count( *) DESC LIMIT 1    
"SELECT artist.Name, count( *) FROM artist JOIN exhibition ON artist.Artist_ID = exhibition.Artist_ID  GROUP BY artist.Name      "
SELECT DISTINCT count(DISTINCT elimination.Team) FROM Elimination        
SELECT research_outcomes.outcome_description FROM Research_Outcomes JOIN Project_Outcomes ON research_outcomes.outcome_code = T2.outcome_code        
SELECT rooms.decor FROM Rooms WHERE rooms.roomName = '1'       
SELECT count( *) FROM home_game JOIN park ON home_game.park_id = park.park_id WHERE home_game.year = 2000 and park.city = 'Atlanta'       
SELECT count( *) FROM Person        
SELECT author.name FROM author JOIN writes ON author.aid = writes.aid JOIN publication ON writes.pid = publication.pid JOIN publication_keyword ON publication.pid = publication_keyword.pid JOIN keyword ON publication_keyword.kid = keyword.kid WHERE keyword.keyword = 'Relational Database' GROUP BY author.name  ORDER BY count( publication.title) DESC LIMIT 1    
SELECT DISTINCT instructor.name FROM instructor     ORDER BY instructor.name ASC   
SELECT student.dept_name FROM student JOIN department ON student.dept_name = department.dept_name  GROUP BY student.dept_name  ORDER BY count( *) DESC LIMIT 1    
"SELECT tourist_attractions.Name, visits.Tourist_Attraction_ID FROM Tourist_Attractions JOIN Visits ON tourist_attractions.Tourist_Attraction_ID = visits.Tourist_Attraction_ID  GROUP BY visits.Tourist_Attraction_ID HAVING count( *) >= 2     "
SELECT department.DName FROM Department JOIN Member_of ON department.DNO = member_of.DNO  GROUP BY department.DName  ORDER BY count( *) ASC LIMIT 1    
SELECT DISTINCT count(DISTINCT dorm.gender) FROM Dorm        
"SELECT reference_locations.Location_Name, reference_locations.Location_Description FROM Ref_Locations WHERE reference_locations.Location_Code = '1'       "
SELECT course.title FROM course WHERE course.course_id NOT IN (SELECT prerequisite.course_id FROM prereq        )       
"SELECT rooms.bedType, count( *) FROM Rooms  GROUP BY rooms.bedType      "
SELECT state.population FROM state WHERE state.state_name = '1'       
"SELECT student_course_enrolment.student_id, students.personal_name FROM Student_Course_Enrolment JOIN Students ON student_course_enrolment.student_id = students.student_id JOIN Courses ON student_course_enrolment.course_id = courses.course_id  GROUP BY student_course_enrolment.student_id HAVING count( *) >= 2     "
SELECT genre.Name FROM Genre        
SELECT city.state_name FROM city WHERE city.population = (SELECT max( city.population) FROM city        )       
SELECT assessment_notes.date_of_notes FROM Assessment_Notes JOIN Students ON assessment_notes.student_id = students.student_id WHERE students.first_name = 'Fanny'       
SELECT papers.title FROM Papers WHERE papers.title like '%ML%'       
SELECT airports.city FROM airports  GROUP BY airports.city HAVING count( *) = 2     
"SELECT min( branch.membership_amount), max( branch.membership_amount) FROM branch WHERE branch.Open_year = '2011' or branch.City = 'London'       "
SELECT DISTINCT writes.authorId FROM writes JOIN paper ON writes.paperId = paper.paperId JOIN venue ON paper.venueId = venue.venueId WHERE venue.venueName = 'NIPS'       
SELECT publication.title FROM publication JOIN writes ON publication.pid = writes.pid JOIN author ON writes.aid = author.aid WHERE author.name = '1' and author.name = '1' and publication.citation_num > 1       
SELECT author.name FROM author JOIN writes ON author.aid = writes.aid JOIN publication ON writes.pid = publication.pid JOIN conference ON publication.cid = conference.cid WHERE conference.name = 'VLDB' GROUP BY author.name HAVING count( publication.title) > '10'     
"SELECT customer_contact_channels.channel_code, customer_contact_channels.contact_number FROM Customer_Contact_Channels WHERE customer_contact_channels.active_to_date = (SELECT customer_contact_channels.active_to_date FROM Customer_Contact_Channels    ORDER BY customer_contact_channels.active_to_date DESC LIMIT 1    )       "
SELECT catalog_contents.catalog_entry_name FROM Catalog_Contents JOIN Catalog_Contents_Additional_Attributes ON catalog_contents.catalog_entry_id = catalog_contents_additional_attributes.catalog_entry_id WHERE catalog_contents_additional_attributes.catalog_level_number = 8       
"SELECT weather.date, weather.zip_code FROM weather WHERE weather.max_temperature_f >= 80       "
SELECT editor.Name FROM editor WHERE editor.Age > 25       
"SELECT courses.course_name, courses.course_description FROM Courses JOIN Subjects ON courses.subject_id = subjects.subject_id WHERE subjects.subject_name = 'Computer Science'       "
"SELECT video_games.GName, video_games.GType FROM Video_Games     ORDER BY video_games.GName ASC   "
SELECT count( *) FROM Band        
SELECT organization.homepage FROM organization WHERE organization.name = '1'       
"SELECT branch.Name, branch.City FROM branch WHERE branch.Branch_ID NOT IN (SELECT membership_register_branch.Branch_ID FROM membership_register_branch        )       "
SELECT exhibition.Theme FROM exhibition JOIN exhibition_record ON exhibition.Exhibition_ID = exhibition_record.Exhibition_ID WHERE exhibition_record.Attendance < 100     INTERSECT SELECT exhibition.Theme FROM exhibition JOIN exhibition_record ON exhibition.Exhibition_ID = exhibition_record.Exhibition_ID WHERE exhibition_record.Attendance > 500         
SELECT savings.balance FROM SAVINGS JOIN ACCOUNTS ON savings.custid = accounts.custid WHERE accounts.name in (SELECT accounts.name FROM ACCOUNTS JOIN SAVINGS ON accounts.custid = savings.custid WHERE savings.balance > (SELECT avg( savings.balance) FROM SAVINGS        )       )       
"SELECT perpetrator.Country, count( *) FROM perpetrator  GROUP BY perpetrator.Country HAVING count( *) >= 2     "
SELECT student.LName FROM Student JOIN Member_of_club ON student.StuID = Member_of_club.StuID JOIN Club ON Member_of_club.ClubID = club.ClubID WHERE club.ClubName = 'Bootup Baltimore'       
"SELECT customers.first_name, customers.last_name, count( *) FROM customers  GROUP BY customers.last_name  ORDER BY count( *) DESC LIMIT 1    "
SELECT cinema.Location FROM cinema        EXCEPT SELECT cinema.Location FROM cinema WHERE cinema.Capacity > 800       
"SELECT player.Position, avg( player.Points) FROM player  GROUP BY player.Position      "
"SELECT instructor.name, instructor.salary FROM instructor JOIN department ON instructor.dept_name = department.dept_name JOIN student ON department.dept_name = student.dept_name WHERE student.dept_name = 'Math'       "
"SELECT customer.cust_name, customer.acc_bal FROM customer WHERE customer.cust_name like '%a%'       "
SELECT product.product FROM product WHERE product.max_page_size = 'A4' and product.pages_per_minute_color < 5       
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
"SELECT max( student_addresses.monthly_rental), min( student_addresses.monthly_rental) FROM Student_Addresses        "
SELECT count( *) FROM buildings        
SELECT sum( college.enr) FROM College WHERE college.cName NOT IN (SELECT tryout.cName FROM Tryout WHERE tryout.pPos = 'goalie'       )       
SELECT avg( hotels.price_range) FROM Hotels WHERE hotels.star_rating_code = '1' and hotels.pets_allowed_yn = '1'       
SELECT forms.form_name FROM Forms JOIN Party_Forms ON forms.form_id = party_forms.form_id  GROUP BY forms.form_name  ORDER BY count( *) DESC LIMIT 1    
"SELECT accounts.customer_id, count( *) FROM Accounts  GROUP BY accounts.customer_id      "
SELECT district.District_name FROM district    ORDER BY district.City_Population DESC LIMIT 1    
SELECT DISTINCT station.name FROM station JOIN status ON station.id = status.station_id WHERE status.bikes_available = 7       
SELECT drama_workshop_groups.Store_Email_Address FROM Drama_Workshop_Groups JOIN Addresses ON drama_workshop_groups.Address_ID = addresses.Address_ID WHERE addresses.State_County = 'Alaska'       
SELECT count( *) FROM ACCOUNTS JOIN SAVINGS ON accounts.custid = savings.custid WHERE savings.balance > (SELECT avg( savings.balance) FROM SAVINGS        )       
"SELECT drivers.forename, drivers.surname FROM drivers WHERE drivers.nationality = 'German'       "
"SELECT reference_shipping_agents.shipping_agent_name, count( documents.document_id) FROM Ref_Shipping_Agents JOIN Documents ON reference_shipping_agents.shipping_agent_code = documents.shipping_agent_code  GROUP BY reference_shipping_agents.shipping_agent_name  ORDER BY count( documents.document_id) DESC LIMIT 1    "
SELECT count( *) FROM Tasks        
SELECT city.city_name FROM city WHERE city.population > 1 and city.state_name = (SELECT state.state_name FROM state WHERE state.area = (SELECT max( state.area) FROM state        )       )       
"SELECT addresses.line_1, avg( student_addresses.monthly_rental) FROM Addresses JOIN Student_Addresses ON addresses.address_id = student_addresses.address_id  GROUP BY addresses.line_1      "
"SELECT companies.name, companies.Assets_billion FROM Companies     ORDER BY companies.name ASC   "
"SELECT wine.Grape, wine.Appelation, wine.Name FROM wine WHERE wine.Score > 93    ORDER BY wine.Name ASC   "
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId JOIN venue ON paper.venueId = venue.venueId WHERE author.authorName = 'Samuel Madden' and venue.venueName != 'PVLDB'       
"SELECT services.service_id, services.service_details, count( *) FROM Services  GROUP BY services.service_details  ORDER BY count( *) DESC LIMIT 1    "
"SELECT company.Company, company.Rank FROM company     ORDER BY company.Sales_billion DESC   "
SELECT DISTINCT list.LastName FROM list JOIN teachers WHERE list.Grade = 3 and teachers.FirstName != 'COVIN' and teachers.LastName != 'JEROME'       
SELECT count( *) FROM GEOGRAPHIC JOIN RESTAURANT ON geographic.CITY_NAME = restaurant.CITY_NAME WHERE geographic.REGION = '1' and restaurant.FOOD_TYPE = '1'       
SELECT DISTINCT nurse.Name FROM Nurse JOIN Undergoes ON nurse.EmployeeID = T2.AssistingNurse        
SELECT campuses.Campus FROM Campuses JOIN enrollments ON campuses.Id = enrollments.Campus WHERE enrollments.Year = 1956 and enrollments.TotalEnrollment_AY > 400 and enrollments.FTE_AY > 200       
SELECT products.product_name FROM Products JOIN Ref_Colors ON products.color_code = reference_colors.color_code JOIN Product_Characteristics ON products.product_id = Product_Characteristics.product_id JOIN Characteristics ON Product_Characteristics.characteristic_id = characteristics.characteristic_id WHERE reference_colors.color_description = 'red' and characteristics.characteristic_name = 'fast'       
SELECT class.CRS_CODE FROM CLASS JOIN ENROLL ON class.CLASS_CODE = ENROLL.CLASS_CODE JOIN STUDENT ON ENROLL.STU_NUM = student.STU_NUM WHERE student.STU_LNAME = 'Smithson'       
SELECT apartments.apt_number FROM Apartments JOIN Apartment_Bookings ON apartments.apt_id = apartment_bookings.apt_id WHERE apartment_bookings.booking_status_code = 'Confirmed'     INTERSECT SELECT apartments.apt_number FROM Apartments JOIN Apartment_Bookings ON apartments.apt_id = apartment_bookings.apt_id WHERE apartment_bookings.booking_status_code = 'Provisional'         
SELECT products.Name FROM Products        
SELECT DISTINCT match_season.Position FROM match_season JOIN country ON match_season.Country = country.Country_id WHERE country.Capital = 'Dublin'       
"SELECT invoices.billing_country, avg( invoices.total) FROM invoices  GROUP BY invoices.billing_country  ORDER BY avg( invoices.total) DESC LIMIT 1    "
"SELECT reference_budget_codes.Budget_Type_Code, reference_budget_codes.Budget_Type_Description, documents_with_expenses.Document_ID FROM Ref_Budget_Codes JOIN Documents_with_Expenses ON reference_budget_codes.Budget_Type_Code = documents_with_expenses.Budget_Type_Code        "
"SELECT count( *), files.formats FROM song JOIN files ON song.f_id = files.f_id  GROUP BY files.formats      "
"SELECT customers.first_name, customers.last_name, count( *) FROM customers  GROUP BY customers.last_name  ORDER BY count( *) DESC LIMIT 1    "
SELECT ship.Name FROM ship     ORDER BY ship.Tonnage ASC   
"SELECT station.lat, station.long, station.city FROM trip JOIN station    ORDER BY trip.duration ASC LIMIT 1    "
"SELECT patient.Name, patient.Phone FROM Patient JOIN Appointment ON patient.SSN = T2.Patient  GROUP BY T2.Patient HAVING count( *) > 1     "
SELECT DISTINCT wine.Name FROM wine     ORDER BY wine.Price ASC   
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId JOIN venue ON paper.venueId = venue.venueId WHERE key_phrase.keyphraseName = '1' and venue.venueName = '1'       
SELECT department.SCHOOL_CODE FROM DEPARTMENT JOIN PROFESSOR ON department.DEPT_CODE = professor.DEPT_CODE  GROUP BY department.SCHOOL_CODE  ORDER BY count( *) ASC LIMIT 1    
SELECT candidate_assessments.candidate_id FROM Candidate_Assessments    ORDER BY candidate_assessments.assessment_date DESC LIMIT 1    
"SELECT drivers.forename, drivers.surname FROM drivers WHERE drivers.nationality = 'German'       "
"SELECT plays_games.StuID, sum( plays_games.Hours_Played) FROM Plays_Games  GROUP BY plays_games.StuID      "
"SELECT orders.order_id, orders.order_details FROM Orders JOIN Invoices ON orders.order_id = T2.order_id  GROUP BY T2.order_id HAVING count( *) > 2     "
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1'       
SELECT projects.project_details FROM Projects WHERE projects.project_id NOT IN (SELECT project_staff.project_id FROM Project_Staff WHERE project_staff.role_code = '1'       )       
SELECT DISTINCT paper.venueId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = 'Trophic Cascade'       
SELECT albums.title FROM albums     ORDER BY albums.title ASC   
"SELECT premises.premises_type, count( *) FROM Premises  GROUP BY premises.premises_type      "
"SELECT station.Name, train.Name FROM station JOIN train_station ON station.Station_ID = train_station.Station_ID JOIN train ON train_station.Train_ID = train.Train_ID        "
SELECT avg( track.UnitPrice) FROM Track        
"SELECT train.Name, train.Time FROM train JOIN train_station ON train.Train_ID = train_station.Train_ID JOIN station ON train_station.Station_ID = station.Station_ID WHERE station.Location = 'London'    ORDER BY train.Time DESC   "
SELECT region.Region_name FROM region JOIN affected_region ON region.Region_id = affected_region.Region_id JOIN storm ON affected_region.Storm_ID = storm.Storm_ID WHERE storm.Number_Deaths >= 10       
SELECT city.city_name FROM city WHERE city.population = (SELECT min( city.population) FROM city JOIN state ON city.state_name = T23.state_name        )       
SELECT genre.Name FROM Genre JOIN Track ON genre.GenreId = track.GenreId  GROUP BY genre.Name  ORDER BY count( *) DESC LIMIT 1    
SELECT song.artist_name FROM song JOIN files ON song.f_id = files.f_id    ORDER BY files.duration ASC LIMIT 1    
"SELECT enzyme.name, enzyme.Location FROM enzyme        "
"SELECT DISTINCT author.authorId, paper.paperId FROM author JOIN writes ON author.authorId = writes.authorId JOIN paper ON writes.paperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE author.authorName = '1' and key_phrase.keyphraseName = '1'       "
SELECT count( *) FROM routes JOIN airports ON routes.src_apid = airports.apid JOIN airlines ON routes.alid = airlines.alid WHERE airports.country = 'Italy' and airlines.name = 'American Airlines'       
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE restaurant.CITY_NAME in (SELECT geographic.CITY_NAME FROM GEOGRAPHIC WHERE geographic.REGION = '1'       ) and restaurant.RATING > 1       "
"SELECT accounts.customer_id, customers.customer_first_name, customers.customer_last_name, count( *) FROM Accounts JOIN Customers ON accounts.customer_id = customers.customer_id  GROUP BY accounts.customer_id      "
SELECT count( *) FROM venue        
"SELECT employee.EMP_FNAME, professor.PROF_OFFICE FROM EMPLOYEE JOIN PROFESSOR ON employee.EMP_NUM = professor.EMP_NUM JOIN DEPARTMENT ON professor.DEPT_CODE = department.DEPT_CODE WHERE department.DEPT_NAME = 'History' and professor.PROF_HIGH_DEGREE != 'Ph.D.'       "
SELECT DISTINCT mountain.Name FROM mountain JOIN climber ON mountain.Mountain_ID = climber.Mountain_ID WHERE climber.Country = 'West Germany'       
SELECT DISTINCT count(DISTINCT business.business_id) FROM business WHERE business.city = '1' and business.name = '1' and business.state = '1'       
SELECT addresses.zip_postcode FROM Addresses JOIN Customers ON addresses.address_id = customers.customer_address_id WHERE customers.first_name = 'Carole' and customers.last_name = 'Bernhard'       
"SELECT apartments.apt_number, apartments.room_count FROM Apartments        "
"SELECT medicine.name, medicine.Trade_Name FROM medicine        EXCEPT SELECT medicine.name, medicine.Trade_Name FROM medicine JOIN medicine_enzyme_interaction ON medicine.id = medicine_enzyme_interaction.medicine_id JOIN enzyme ON medicine_enzyme_interaction.enzyme_id = enzyme.id WHERE enzyme.Product = '1'       "
SELECT DISTINCT financial_transactions.transaction_type FROM Financial_Transactions        
"SELECT captain.Name, captain.Class, captain.Rank FROM captain        "
SELECT department.Head FROM Department  GROUP BY department.Head  ORDER BY count( department.DepartmentID) ASC LIMIT 1    
"SELECT fault_log.fault_description, fault_log_parts.fault_status FROM Fault_Log JOIN Fault_Log_Parts ON fault_log.fault_log_entry_id = fault_log_parts.fault_log_entry_id        "
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1'       
"SELECT sum( course.CRS_CREDIT), course.DEPT_CODE FROM COURSE  GROUP BY course.DEPT_CODE      "
SELECT DISTINCT count(DISTINCT channel.Owner) FROM channel        
"SELECT department.Name, department.Num_Employees FROM department JOIN management ON department.Department_ID = management.department_ID WHERE management.temporary_acting = 'Yes'       "
"SELECT station.city, max( station.lat) FROM station  GROUP BY station.city      "
"SELECT station.name, station.lat, min( trip.duration) FROM trip JOIN station  GROUP BY station.id      "
SELECT movie.title FROM directed_by JOIN director ON T2.did = director.did JOIN movie WHERE director.name = 'Steven Spielberg' and movie.release_year > 2006       
"SELECT products.product_name, products.typical_buying_price FROM Products        "
"SELECT avg( people.Weight), min( people.Weight), people.Sex FROM people  GROUP BY people.Sex      "
SELECT city.city_name FROM city WHERE city.population > 1 and city.state_name = '1'       
SELECT city.city_name FROM city WHERE city.population > 1 and city.state_name = '1'       
SELECT avg( player.HS) FROM Player JOIN Tryout ON player.pID = tryout.pID WHERE tryout.decision = '1'       
"SELECT rooms.roomName, rooms.bedType FROM Rooms WHERE rooms.decor = '1'       "
"SELECT customers.first_name, customers.last_name FROM Customers JOIN Addresses ON customers.customer_address_id = addresses.address_id WHERE addresses.city = 'Lockmanfurt'       "
SELECT host.Name FROM host WHERE host.Host_ID NOT IN (SELECT party_host.Host_ID FROM party_host        )       
SELECT count( *) FROM actor        
SELECT count( *) FROM Financial_Transactions        
SELECT DISTINCT count(DISTINCT cite.citingPaperId) FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE author.authorName = 'Dan Makumbi' and key_phrase.keyphraseName = 'Genetic Identity'       
"SELECT catalog_contents.catalog_entry_name, catalog_contents.capacity FROM Catalog_Contents WHERE catalog_contents.price_in_dollars > 700       "
"SELECT staff.first_name, staff.middle_name, staff.last_name FROM Staff        "
SELECT highlow.highest_point FROM highlow WHERE highlow.state_name in (SELECT border_info.border FROM border_info WHERE border_info.state_name = '1'       )       
SELECT count( *) FROM venue        
SELECT count( *) FROM actor        
SELECT count( *) FROM circuits        
SELECT product.product FROM product WHERE product.product != (SELECT product.max_page_size FROM product  GROUP BY product.max_page_size  ORDER BY count( *) DESC LIMIT 1    )       
SELECT customers.customer_name FROM Customers JOIN Orders ON customers.customer_id = orders.customer_id WHERE orders.date_order_placed >= '2009-01-01' and orders.date_order_placed <= '2010-01-01'       
"SELECT people.Name, entrepreneur.Company FROM people JOIN entrepreneur ON people.People_ID = entrepreneur.People_ID     ORDER BY entrepreneur.Money_Requested ASC   "
SELECT DISTINCT drivers.forename FROM drivers     ORDER BY drivers.forename ASC   
SELECT DISTINCT count(DISTINCT business.name) FROM business JOIN category ON business.business_id = category.business_id WHERE business.city = '1' and category.category_name = '1'       
SELECT addresses.zip_postcode FROM Addresses JOIN Customers ON addresses.address_id = customers.customer_address_id WHERE customers.first_name = 'Carole' and customers.last_name = 'Bernhard'       
SELECT tourist_attractions.Name FROM Tourist_Attractions WHERE tourist_attractions.How_to_Get_There = 'bus'       
"SELECT employees.FIRST_NAME, employees.LAST_NAME, employees.EMPLOYEE_ID, countries.COUNTRY_NAME FROM employees JOIN departments ON employees.DEPARTMENT_ID = departments.DEPARTMENT_ID JOIN locations ON departments.LOCATION_ID = locations.LOCATION_ID JOIN countries ON locations.COUNTRY_ID = countries.COUNTRY_ID        "
SELECT aircraft.Description FROM aircraft        
"SELECT station.name, station.long, avg( trip.duration) FROM trip JOIN station  GROUP BY station.id      "
SELECT customer_policies.Policy_Type_Code FROM Customer_Policies JOIN Customers ON customer_policies.Customer_ID = customers.Customer_ID  GROUP BY customer_policies.Policy_Type_Code  ORDER BY count( *) DESC LIMIT 1    
"SELECT course.title, course.credits, course.dept_name FROM course JOIN prereq ON course.course_id = T2.prereq_id  GROUP BY T2.prereq_id HAVING count( *) > 1     "
SELECT state.capital FROM state WHERE state.state_name = '1'       
"SELECT DISTINCT count(DISTINCT paper.paperId), key_phrase.keyphraseId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 2014 and venue.venueName = 'ACL' GROUP BY key_phrase.keyphraseId   ORDER BY count( paper.paperId) DESC   "
SELECT acceptance.Result FROM Acceptance JOIN submission ON acceptance.Submission_ID = submission.Submission_ID    ORDER BY submission.Scores DESC LIMIT 1    
"SELECT customers.email, customers.phone FROM customers WHERE customers.first_name = 'Astrid' and customers.last_name = 'Gruber'       "
SELECT DISTINCT count(DISTINCT college.state) FROM College WHERE college.enr > (SELECT avg( college.enr) FROM College        )       
SELECT people.Name FROM people JOIN perpetrator ON people.People_ID = T2.People_ID    ORDER BY people.Weight DESC LIMIT 1    
SELECT people.Date_of_Birth FROM people JOIN entrepreneur ON people.People_ID = entrepreneur.People_ID WHERE entrepreneur.Investor = 'Simon Woodroffe' or entrepreneur.Investor = 'Peter Jones'       
"SELECT elimination.Team, count( *) FROM Elimination  GROUP BY elimination.Team      "
"SELECT sports_info.SportName, count( *) FROM SportsInfo JOIN Student ON sports_info.StuID = student.StuID  GROUP BY sports_info.SportName      "
"SELECT avg( song.rating), avg( song.resolution) FROM song WHERE song.languages = 'bangla'       "
"SELECT company.Company, company.Main_Industry FROM company WHERE company.Headquarters != 'USA'       "
SELECT DISTINCT writes.authorId FROM writes JOIN paper ON writes.paperId = paper.paperId JOIN venue ON paper.venueId = venue.venueId WHERE venue.venueName = 'NIPS'       
SELECT count( *) FROM book_club        
SELECT movie.title FROM Movie WHERE movie.director = 'Steven Spielberg'       
SELECT player.pName FROM Player WHERE player.HS between 500 AND 1500       
SELECT musical.Name FROM musical WHERE musical.Musical_ID NOT IN (SELECT actor.Musical_ID FROM actor        )       
SELECT actor.Duration FROM actor    ORDER BY actor.age DESC LIMIT 1    
SELECT highlow.state_name FROM highlow WHERE highlow.highest_elevation = (SELECT max( highlow.highest_elevation) FROM highlow        )       
"SELECT track.Name, track.Location, track.Seating FROM track    ORDER BY track.Year_Opened DESC LIMIT 1    "
SELECT csu_fees.CampusFee FROM csu_fees JOIN Campuses ON csu_fees.Campus = campuses.Id WHERE campuses.Campus = 'San Jose State University' and csu_fees.Year = 2000       
"SELECT film.title, film.film_id FROM film WHERE film.rental_rate = 0.99     INTERSECT SELECT film.title, film.film_id FROM film JOIN inventory ON film.film_id = T3.film_id  GROUP BY film.film_id HAVING count( *) < 3       "
"SELECT apartments.apt_type_code, apartments.apt_number FROM Apartments JOIN Apartment_Buildings ON apartments.building_id = apartment_buildings.building_id WHERE apartment_buildings.building_manager = 'Kyle'       "
SELECT river.river_name FROM river  GROUP BY river.river_name  ORDER BY count( river.traverse) DESC LIMIT 1    
SELECT highlow.lowest_point FROM highlow WHERE highlow.lowest_elevation = (SELECT min( highlow.lowest_elevation) FROM highlow        )       
"SELECT customers.phone_number, customers.email_address FROM Customers WHERE customers.amount_outstanding > 2000       "
SELECT river.traverse FROM river        
SELECT reference_budget_codes.Budget_Type_Description FROM Ref_Budget_Codes WHERE reference_budget_codes.Budget_Type_Code = 'ORG'       
SELECT domain.name FROM domain JOIN domain_journal ON domain.did = domain_journal.did JOIN journal ON domain_journal.jid = journal.jid WHERE journal.name = 'PVLDB'       
"SELECT products.product_details, products.product_id FROM Products JOIN Order_Items ON products.product_id = order_items.product_id  GROUP BY order_items.product_id  ORDER BY sum( order_items.order_quantity) ASC LIMIT 1    "
SELECT count( *) FROM GEOGRAPHIC        
"SELECT genre.g_name, genre.rating FROM genre     ORDER BY genre.g_name ASC   "
SELECT DISTINCT paper.paperId FROM paper WHERE paper.year = 2014       
SELECT trip.id FROM trip JOIN station    ORDER BY station.dock_count DESC LIMIT 1    
SELECT building.Name FROM building WHERE building.Height_feet >= 200 and building.Floors >= 20       
SELECT students.student_details FROM Students JOIN Student_Course_Registrations ON students.student_id = student_course_registrations.student_id    ORDER BY student_course_registrations.registration_date DESC LIMIT 1    
SELECT avg( apartments.bedroom_count) FROM Apartments        
"SELECT climber.Name, mountain.Name FROM climber JOIN mountain ON climber.Mountain_ID = mountain.Mountain_ID        "
"SELECT mill.type, count( *) FROM mill  GROUP BY mill.type  ORDER BY count( *) DESC LIMIT 1    "
SELECT DISTINCT employees.DEPARTMENT_ID FROM employees  GROUP BY employees.DEPARTMENT_ID HAVING count( employees.EMPLOYEE_ID) >= 4     
"SELECT DISTINCT phone.Hardware_Model_name, phone.Company_name FROM phone JOIN screen_mode ON phone.screen_mode = screen_mode.Graphics_mode WHERE screen_mode.used_kb between 10 AND 15       "
SELECT companies.Industry FROM Companies  GROUP BY companies.Industry  ORDER BY count( *) DESC LIMIT 1    
SELECT delivery_routes.route_name FROM Delivery_Routes JOIN Delivery_Route_Locations ON delivery_routes.route_id = T2.route_id  GROUP BY delivery_routes.route_name  ORDER BY count( *) DESC LIMIT 1    
"SELECT roles.Role_Name, roles.Role_Description FROM Roles WHERE roles.Role_Code = 'MG'       "
"SELECT DISTINCT student.Fname, student.LName FROM Student JOIN Voting_record ON student.StuID = T2.Class_Senator_Vote WHERE student.Age = 18       "
"SELECT member.Country, count( *) FROM member  GROUP BY member.Country      "
"SELECT count( *), student.dept_name FROM student  GROUP BY student.dept_name      "
"SELECT station.city, max( station.lat) FROM station  GROUP BY station.city      "
SELECT musical.Name FROM musical WHERE musical.Nominee = 'Bob Fosse'       
SELECT movie.title FROM Movie WHERE movie.year > (SELECT max( movie.year) FROM Movie WHERE movie.director = 'Steven Spielberg'       )       
"SELECT genres.name, count( *) FROM genres JOIN tracks ON genres.id = tracks.genre_id  GROUP BY genres.name  ORDER BY count( *) DESC LIMIT 1    "
SELECT people.Name FROM people JOIN entrepreneur ON people.People_ID = T2.People_ID    ORDER BY people.Weight DESC LIMIT 1    
"SELECT station.Name, station.Location, station.Number_of_Platforms FROM station        "
SELECT border_info.border FROM border_info WHERE border_info.state_name = '1'       
"SELECT department.DEPT_NAME, avg( student.STU_GPA) FROM DEPARTMENT JOIN STUDENT ON department.DEPT_CODE = student.DEPT_CODE  GROUP BY department.DEPT_NAME  ORDER BY avg( student.STU_GPA) DESC LIMIT 1    "
SELECT DISTINCT venue.venueId FROM venue WHERE venue.venueName = 'Neuroscience'       
SELECT documents.document_type_code FROM Documents  GROUP BY documents.document_type_code HAVING sum( documents.access_count) > 10000     
SELECT state.state_name FROM state WHERE state.area = (SELECT max( state.area) FROM state        )       
SELECT DISTINCT wine.Name FROM wine JOIN grapes ON wine.Grape = grapes.Grape WHERE grapes.Color = '1'       
"SELECT artist.artist_name, count( *) FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.languages = 'english' GROUP BY artist.artist_name HAVING count( *) >= 1     "
SELECT count( *) FROM employee WHERE employee.salary between 100000 AND 200000       
SELECT product.product_name FROM Product JOIN Problems ON product.product_id = Problems.product_id JOIN Staff ON Problems.reported_by_staff_id = staff.staff_id WHERE staff.staff_first_name = 'Lacey' and staff.staff_last_name = 'Bosco'     INTERSECT SELECT product.product_name FROM Product JOIN Problems ON product.product_id = Problems.product_id JOIN Staff ON Problems.reported_by_staff_id = staff.staff_id WHERE staff.staff_first_name = 'Kenton' and staff.staff_last_name = 'Champlin'         
SELECT student.StuID FROM Student WHERE student.Sex = 'M'       
"SELECT employee.EMP_FNAME, professor.PROF_OFFICE, course.CRS_DESCRIPTION FROM EMPLOYEE JOIN PROFESSOR ON employee.EMP_NUM = professor.EMP_NUM JOIN DEPARTMENT ON professor.DEPT_CODE = DEPARTMENT.DEPT_CODE JOIN COURSE ON DEPARTMENT.DEPT_CODE = course.DEPT_CODE        "
SELECT actor.name FROM actor WHERE actor.birth_city = '1' and actor.gender = '1'       
"SELECT DISTINCT count(DISTINCT paper.paperId), writes.authorId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN venue ON paper.venueId = venue.venueId WHERE venue.venueName = '1' GROUP BY writes.authorId   ORDER BY count( paper.paperId) DESC   "
"SELECT customer.first_name, customer.last_name FROM customer JOIN rental ON customer.customer_id = rental.customer_id    ORDER BY rental.rental_date ASC LIMIT 1    "
"SELECT DISTINCT paper.paperId, paper.year FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1'    ORDER BY paper.year DESC   "
SELECT city.city_name FROM city WHERE city.state_name in (SELECT highlow.state_name FROM highlow WHERE highlow.highest_elevation = (SELECT max( highlow.highest_elevation) FROM highlow        )       )       
"SELECT DISTINCT count(DISTINCT paper.paperId), writes.authorId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' GROUP BY writes.authorId   ORDER BY count( paper.paperId) DESC   "
"SELECT member.Name, member.Hometown FROM member JOIN membership_register_branch ON member.Member_ID = membership_register_branch.Member_ID WHERE membership_register_branch.Register_Year = '2016'       "
"SELECT instructor.name, teaches.course_id FROM instructor JOIN teaches ON instructor.ID = teaches.ID        "
SELECT highlow.state_name FROM highlow WHERE highlow.highest_elevation = (SELECT max( highlow.highest_elevation) FROM highlow        )       
SELECT DISTINCT count(DISTINCT publication.title) FROM publication JOIN journal ON publication.jid = journal.jid WHERE journal.name = 'PVLDB'       
SELECT hosting_city.Host_City FROM hosting_city    ORDER BY hosting_city.Year DESC LIMIT 1    
SELECT conference.homepage FROM conference WHERE conference.name = 'VLDB'       
SELECT DISTINCT student.LName FROM Student JOIN Voting_record ON student.StuID = T2.Class_Senator_Vote      INTERSECT SELECT DISTINCT student.LName FROM Student WHERE student.Advisor = 8741         
SELECT customers.Customer_Details FROM Customers WHERE customers.Customer_Details like '%Diana%'       
SELECT rooms.roomName FROM Rooms JOIN Reservations ON rooms.RoomId = T2.Room  GROUP BY rooms.roomName HAVING count( *) > 60     
SELECT publication.title FROM publication JOIN journal ON publication.jid = journal.jid WHERE journal.name = 'PVLDB' and publication.year > 2000       
"SELECT invoices.billing_country, count( *) FROM invoices  GROUP BY invoices.billing_country  ORDER BY count( *) DESC LIMIT 1    "
SELECT rating.rID FROM Rating        EXCEPT SELECT rating.rID FROM Rating WHERE rating.stars = 4       
SELECT count( *) FROM Companies WHERE companies.Industry = 'Banking' or companies.Industry = 'Conglomerate'       
SELECT count( *) FROM RESTAURANT JOIN GEOGRAPHIC ON restaurant.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN LOCATION ON GEOGRAPHIC.CITY_NAME = location.CITY_NAME WHERE location.CITY_NAME = '1' and restaurant.FOOD_TYPE = '1'       
SELECT customers.Customer_Details FROM Customers JOIN Policies ON customers.Customer_ID = policies.Customer_ID WHERE policies.Start_Date = (SELECT max( policies.Start_Date) FROM Policies        )       
SELECT sum( tip.likes) FROM tip JOIN business ON tip.business_id = business.business_id WHERE business.name = 'Cafe Zinho'       
"SELECT student.LName, student.Age FROM Student WHERE student.StuID in (SELECT has_allergy.StuID FROM Has_Allergy WHERE has_allergy.Allergy = '1'       )       "
"SELECT DISTINCT drivers.forename, drivers.surname FROM drivers JOIN lapTimes ON drivers.driverId = lap_times.driverId WHERE lap_times.milliseconds < 93000       "
SELECT bridge.name FROM bridge JOIN architect ON bridge.architect_id = architect.id WHERE architect.nationality = 'American'    ORDER BY bridge.length_feet ASC   
"SELECT employee.eid, employee.name FROM employee    ORDER BY employee.salary DESC LIMIT 1    "
SELECT aircraft.Aircraft FROM aircraft JOIN airport_aircraft ON aircraft.Aircraft_ID = airport_aircraft.Aircraft_ID JOIN airport ON airport_aircraft.Airport_ID = airport.Airport_ID WHERE airport.Airport_Name = 'London Gatwick'       
SELECT DISTINCT count(DISTINCT writes.paperId) FROM writes JOIN author ON writes.authorId = author.authorId JOIN paper ON writes.paperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE author.authorName = 'Ed Desmond' and key_phrase.keyphraseName = 'Semantic Parsing'       
"SELECT accounts.name, savings.balance FROM ACCOUNTS JOIN SAVINGS ON accounts.custid = savings.custid    ORDER BY savings.balance DESC LIMIT 1    "
SELECT DISTINCT wine.Name FROM wine JOIN grapes ON wine.Grape = grapes.Grape WHERE grapes.Color = '1'       
SELECT dorm.dorm_name FROM Dorm WHERE dorm.dormid NOT IN (SELECT has_amenity.dormid FROM Has_amenity        )       
"SELECT student.name, student.dept_name FROM student     ORDER BY student.tot_cred ASC   "
"SELECT faculty.Sex, count( *) FROM Faculty WHERE faculty.Rank = '1' GROUP BY faculty.Sex      "
"SELECT wine.Name, wine.Score FROM wine JOIN grapes ON wine.Grape = grapes.Grape WHERE grapes.Color = '1'       "
SELECT city.city_name FROM city WHERE city.state_name in (SELECT river.traverse FROM river WHERE river.river_name = '1'       )       
SELECT count( *) FROM Students WHERE students.student_id NOT IN (SELECT student_course_enrolment.student_id FROM Student_Course_Enrolment        )       
"SELECT artist.Famous_Title, artist.Age FROM artist     ORDER BY artist.Age DESC   "
SELECT video_games.GName FROM Video_Games WHERE video_games.GType = 'Collectible card game'       
SELECT DISTINCT list.FirstName FROM list WHERE list.Classroom = 107       
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Liwen Xiong' and paper.year = 2015       
SELECT useracct.name FROM useracct JOIN trust ON useracct.u_id = trust.target_u_id    ORDER BY trust.trust ASC LIMIT 1    
SELECT entrepreneur.Company FROM entrepreneur JOIN people ON entrepreneur.People_ID = people.People_ID    ORDER BY people.Height DESC LIMIT 1    
"SELECT DISTINCT cite.citedPaperId, count(DISTINCT cite.citedPaperId) FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1' GROUP BY cite.citedPaperId   ORDER BY count( cite.citedPaperId) DESC   "
SELECT channel.Name FROM channel WHERE channel.Owner = 'CCTV' or channel.Owner = 'HBS'       
"SELECT track.Name, track.Seating FROM track WHERE track.Year_Opened > 2000    ORDER BY track.Seating ASC   "
SELECT drama_workshop_groups.Store_Name FROM Drama_Workshop_Groups JOIN Addresses ON drama_workshop_groups.Address_ID = addresses.Address_ID WHERE addresses.City_Town = 'Feliciaberg'       
SELECT mountain.mountain_name FROM mountain WHERE mountain.mountain_altitude = (SELECT max( mountain.mountain_altitude) FROM mountain        )       
SELECT editor.Name FROM editor JOIN journal_committee ON editor.Editor_ID = T2.Editor_ID  GROUP BY editor.Name HAVING count( *) >= 2     
SELECT sum( invoices.total) FROM invoices JOIN customers ON invoices.customer_id = customers.id WHERE customers.first_name = 'Lucas' and customers.last_name = 'Mancini'       
SELECT count( *) FROM follows        
SELECT wine.Price FROM wine WHERE wine.Year < 2010       
"SELECT employees.FIRST_NAME, employees.LAST_NAME, employees.SALARY FROM employees WHERE employees.SALARY < 6000       "
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and location.STREET_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT river.river_name FROM river WHERE river.traverse = '1'       
SELECT albums.title FROM albums JOIN tracks ON albums.id = T2.album_id  GROUP BY albums.title HAVING count( albums.id) > 10     
SELECT wrestler.Location FROM wrestler  GROUP BY wrestler.Location HAVING count( *) > 2     
SELECT state.area FROM state WHERE state.state_name = '1'       
SELECT album.Title FROM Album JOIN Artist ON album.ArtistId = artist.ArtistId WHERE artist.Name = 'AC/DC'       
SELECT rooms.roomName FROM Rooms     ORDER BY rooms.basePrice ASC   
SELECT book.Writer FROM book     ORDER BY book.Writer ASC   
SELECT publication.title FROM publication JOIN writes ON publication.pid = writes.pid JOIN author ON writes.aid = author.aid JOIN journal ON publication.jid = journal.jid WHERE author.name = '1' and author.name = '1' and journal.name = '1'       
SELECT state.capital FROM state WHERE state.area = (SELECT max( state.area) FROM state        )       
"SELECT DISTINCT count(DISTINCT paper.paperId), key_phrase.keyphraseId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 2015 and venue.venueName = 'NIPS' GROUP BY key_phrase.keyphraseId   ORDER BY count( paper.paperId) DESC   "
SELECT DISTINCT customers.Customer_Details FROM Customers JOIN Policies ON customers.Customer_ID = policies.Customer_ID WHERE policies.Policy_Type_Code = 'Deputy'       
SELECT DISTINCT key_phrase.keyphraseId FROM keyphrase JOIN paperKeyphrase ON key_phrase.keyphraseId = paperKeyphrase.keyphraseId JOIN paper ON paperKeyphrase.paperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Luke Zettlemoyer'       
SELECT city.population FROM city WHERE city.population > 1 and city.state_name = '1'       
"SELECT complaints.complaint_status_code, count( *) FROM Complaints WHERE complaints.complaint_type_code = 'Product Failure' GROUP BY complaints.complaint_status_code      "
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId JOIN venue ON paper.venueId = venue.venueId WHERE author.authorName = '1' and venue.venueName = '1'       
SELECT count( *) FROM wine WHERE wine.Winery = 'Robert Biale'       
SELECT student.StuID FROM Student JOIN Participates_in ON student.StuID = Participates_in.stuid JOIN Activity ON Participates_in.actid = Activity.actid JOIN Faculty_Participates_in ON Activity.actid = Faculty_Participates_in.actid JOIN Faculty ON Faculty_Participates_in.FacID = faculty.FacID WHERE faculty.Rank = 'Professor'       
SELECT item.i_id FROM item WHERE item.title = 'orange'       
"SELECT products.product_name, products.product_id FROM Products WHERE products.product_price between 600 AND 700       "
SELECT organizations.organization_name FROM Organizations    ORDER BY organizations.date_formed DESC LIMIT 1    
SELECT wrestler.Name FROM wrestler WHERE wrestler.Wrestler_ID NOT IN (SELECT elimination.Wrestler_ID FROM Elimination        )       
SELECT region.Region_name FROM region WHERE region.Region_id NOT IN (SELECT affected_region.Region_id FROM affected_region        )       
SELECT DISTINCT phone.Carrier FROM phone WHERE phone.Memory_in_G > 32       
"SELECT customers.Customer_ID, customers.Customer_name FROM Customers     ORDER BY customers.Customer_ID ASC   "
SELECT count( *) FROM Student WHERE student.Sex = 'F' and student.Age < 25       
SELECT director.name FROM director WHERE director.nationality = 'Afghanistan'       
SELECT customer.cust_name FROM customer JOIN bank ON customer.branch_ID = bank.branch_ID JOIN loan ON bank.branch_ID = loan.branch_ID  GROUP BY customer.cust_name  ORDER BY sum( loan.amount) DESC LIMIT 1    
SELECT count( *) FROM aircraft        
SELECT DISTINCT count(DISTINCT movie.title) FROM cast JOIN actor ON T2.aid = actor.aid JOIN movie WHERE actor.name = 'Shahab Hosseini'       
SELECT publication.title FROM publication WHERE publication.citation_num > 200       
"SELECT order_items.order_id, sum( order_items.product_quantity) FROM Order_Items  GROUP BY order_items.order_id      "
SELECT tourist_attractions.How_to_Get_There FROM Tourist_Attractions  GROUP BY tourist_attractions.How_to_Get_There  ORDER BY count( *) DESC LIMIT 1    
"SELECT products.product_name, sum( order_items.product_quantity) FROM Products JOIN Order_Items ON products.product_id = order_items.product_id  GROUP BY products.product_name      "
SELECT count( *) FROM Person WHERE person.age > 30 and person.job = 'engineer'       
SELECT documents_to_be_destroyed.Destroyed_by_Employee_ID FROM Documents_to_be_Destroyed       UNION SELECT documents_to_be_destroyed.Destruction_Authorised_by_Employee_ID FROM Documents_to_be_Destroyed         
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = 'Question Answering'       
SELECT DISTINCT count(DISTINCT review.text) FROM review WHERE review.month = 'March'       
SELECT faculty_participates_in.FacID FROM Faculty_Participates_in      INTERSECT SELECT student.Advisor FROM Student          
SELECT course_authors_and_tutors.personal_name FROM Course_Authors_and_Tutors      INTERSECT SELECT students.personal_name FROM Students          
"SELECT products.product_name, products.typical_buying_price, products.typical_selling_price FROM Products JOIN Ref_Colors ON products.color_code = reference_colors.color_code WHERE reference_colors.color_description = 'yellow'       "
SELECT city.population FROM city WHERE city.city_name = '1' and city.state_name = '1'       
"SELECT count( *), station.network_name, station.services FROM route JOIN station ON route.station_id = station.id  GROUP BY station.id      "
SELECT program.Name FROM program    ORDER BY program.Launch DESC LIMIT 1    
SELECT customer_policies.Policy_Type_Code FROM Customer_Policies JOIN Customers ON customer_policies.Customer_ID = customers.Customer_ID  GROUP BY customer_policies.Policy_Type_Code  ORDER BY count( *) DESC LIMIT 1    
SELECT document_sections.section_title FROM Document_Sections JOIN Documents ON document_sections.document_code = documents.document_code WHERE documents.document_name = 'David CV'       
SELECT count( *) FROM Lessons WHERE lessons.lesson_status_code = '1'       
"SELECT member.Name, performance.Location FROM member JOIN member_attendance ON member.Member_ID = member_attendance.Member_ID JOIN performance ON member_attendance.Performance_ID = performance.Performance_ID     ORDER BY member.Name ASC   "
SELECT customers.customer_name FROM Customers    ORDER BY customers.date_became_customer ASC LIMIT 1    
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and restaurant.NAME = '1'       "
"SELECT DISTINCT list.Grade, count(DISTINCT list.Classroom), count(DISTINCT *) FROM list  GROUP BY list.Grade      "
SELECT county.County_name FROM county     ORDER BY county.County_name DESC   
SELECT stay.Patient FROM Stay WHERE stay.Room = 111   ORDER BY stay.StayStart DESC LIMIT 1    
SELECT rating.rID FROM Rating WHERE rating.stars != 4       
SELECT DISTINCT musical.Nominee FROM musical WHERE musical.Award != 'Tony Award'       
"SELECT airport.id, count( *) FROM airport JOIN flight ON airport.id = flight.airport_id JOIN operate_company ON flight.company_id = operate_company.id  GROUP BY airport.id      "
SELECT city.state_name FROM city WHERE city.population = (SELECT min( city.population) FROM city        )       
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' and paper.year = 1       
"SELECT min( company.Market_Value), max( company.Market_Value), avg( company.Market_Value) FROM company        "
SELECT election.Delegate FROM election WHERE election.District = 1       
SELECT club.name FROM club     ORDER BY club.name DESC   
"SELECT phone.Name, sum( phone_market.Num_of_stock) FROM phone JOIN phone_market ON phone.Phone_ID = phone_market.Phone_ID  GROUP BY phone.Name      "
SELECT item.title FROM item JOIN review ON item.i_id = review.i_id WHERE review.rating < 5       
SELECT track.Name FROM Track WHERE track.Name like '%you%'       
SELECT player.Position FROM player  GROUP BY player.Position HAVING avg( player.Points) >= 20     
"SELECT max( player.HS), tryout.pPos FROM Player JOIN Tryout ON player.pID = tryout.pID WHERE player.HS > 1000 GROUP BY tryout.pPos      "
SELECT count( *) FROM Apartments WHERE apartments.apt_id NOT IN (SELECT apartment_facilities.apt_id FROM Apartment_Facilities        )       
"SELECT events.Service_ID, events.Event_Details FROM Events        "
SELECT school.School_name FROM School WHERE school.School_id NOT IN (SELECT endowment.School_id FROM endowment        )       
SELECT customers.customer_name FROM Customers        EXCEPT SELECT customers.customer_name FROM Customers JOIN Customer_Addresses ON customers.customer_id = Customer_Addresses.customer_id JOIN Addresses ON Customer_Addresses.address_id = addresses.address_id WHERE addresses.state_province_county = 'California'       
SELECT DISTINCT count(DISTINCT has_amenity.dormid) FROM Has_amenity        
"SELECT count( *), department.SCHOOL_CODE FROM CLASS JOIN EMPLOYEE ON class.PROF_NUM = EMPLOYEE.EMP_NUM JOIN DEPARTMENT ON EMPLOYEE.EMP_NUM = department.EMP_NUM  GROUP BY department.SCHOOL_CODE      "
SELECT department.DEPT_ADDRESS FROM DEPARTMENT WHERE department.DEPT_NAME = 'History'       
"SELECT allergy_type.Allergy, allergy_type.AllergyType FROM Allergy_Type JOIN Has_Allergy ON allergy_type.Allergy = Has_Allergy.Allergy JOIN Student ON Has_Allergy.StuID = student.StuID WHERE student.Fname = 'Lisa'    ORDER BY allergy_type.Allergy ASC   "
SELECT course.dept_name FROM course JOIN department ON course.dept_name = department.dept_name  GROUP BY course.dept_name  ORDER BY count( *) DESC LIMIT 1    
"SELECT weather.date, weather.zip_code FROM weather WHERE weather.min_dew_point_f < (SELECT min( weather.min_dew_point_f) FROM weather WHERE weather.zip_code = 94107       )       "
SELECT device.Carrier FROM device WHERE device.Software_Platform != 'Android'       
SELECT count( *) FROM Invoices        
SELECT people.Name FROM people     ORDER BY people.Weight ASC   
SELECT club.ClubDesc FROM Club WHERE club.ClubName = 'Tennis Club'       
"SELECT DISTINCT count(DISTINCT paper.paperId), writes.authorId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 2007 and venue.venueName = 'CVPR' GROUP BY writes.authorId   ORDER BY count( paper.paperId) DESC   "
SELECT avg( university.Enrollment) FROM university WHERE university.Founded < 1850       
"SELECT sum( trip.duration), max( trip.duration) FROM trip WHERE trip.bike_id = 636       "
SELECT state.state_name FROM state WHERE state.state_name NOT IN (SELECT border_info.state_name FROM border_info        )       
SELECT city.population FROM city WHERE city.population = (SELECT max( city.population) FROM city WHERE city.state_name = '1'       ) and city.state_name = '1'       
SELECT movie.title FROM Movie JOIN Rating ON movie.mID = rating.mID WHERE rating.stars = 3     INTERSECT SELECT movie.title FROM Movie JOIN Rating ON movie.mID = rating.mID WHERE rating.stars = 4         
"SELECT customers.gender, count( *) FROM Customers  GROUP BY customers.gender      "
"SELECT course.title, course.credits FROM course JOIN section ON course.course_id = section.course_id JOIN classroom ON section.building = classroom.building WHERE classroom.capacity = (SELECT max( classroom.capacity) FROM classroom        )       "
"SELECT count( *), ship.Flag FROM Ship  GROUP BY ship.Flag      "
SELECT DISTINCT list.Classroom FROM list WHERE list.Grade = 5       
SELECT DISTINCT paper.year FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1'    ORDER BY paper.year ASC   
SELECT aircraft.Description FROM aircraft        
"SELECT book_club.Category, count( *) FROM book_club  GROUP BY book_club.Category      "
SELECT border_info.border FROM border_info WHERE border_info.state_name = (SELECT state.state_name FROM state WHERE state.area = (SELECT min( state.area) FROM state        )       )       
"SELECT avg( products.product_price), products.product_category_code FROM Products  GROUP BY products.product_category_code      "
SELECT state.state_name FROM state WHERE state.population = (SELECT max( state.population) FROM state        )       
"SELECT products.Name, products.Price FROM Products    ORDER BY products.Price ASC LIMIT 1    "
SELECT addresses.address_content FROM Addresses WHERE addresses.city = 'East Julianaside' and addresses.state_province_county = 'Texas'      UNION SELECT addresses.address_content FROM Addresses WHERE addresses.city = 'Gleasonmouth' and addresses.state_province_county = 'Arizona'        
"SELECT book_club.Publisher, count( *) FROM book_club  GROUP BY book_club.Publisher      "
SELECT club.ClubDesc FROM Club WHERE club.ClubName = 'Pen and Paper Gaming'       
"SELECT artist.Name, artist.Age, artist.Country FROM artist     ORDER BY artist.Year_Join ASC   "
"SELECT party.First_year, party.Last_year FROM party WHERE party.Party_Theme = 'Spring' or party.Party_Theme = 'Teqnology'       "
"SELECT staff.staff_name, staff.staff_gender FROM Staff JOIN Staff_Department_Assignments ON staff.staff_id = staff_department_assignments.staff_id WHERE staff_department_assignments.job_title_code = 'Sales Person'       EXCEPT SELECT staff.staff_name, staff.staff_gender FROM Staff JOIN Staff_Department_Assignments ON staff.staff_id = staff_department_assignments.staff_id WHERE staff_department_assignments.job_title_code = 'Clerical Staff'       "
SELECT shop.Location FROM shop WHERE shop.Open_Year > 2012     INTERSECT SELECT shop.Location FROM shop WHERE shop.Open_Year < 2008         
SELECT count( *) FROM Student WHERE student.Sex = 'F' and student.Age < 25       
SELECT country.Name FROM country WHERE country.Languages != 'German'       
SELECT count( *) FROM circuits        
"SELECT mailshot_customers.outcome_code, count( *) FROM Mailshot_Customers  GROUP BY mailshot_customers.outcome_code      "
SELECT count( river.river_name) FROM river WHERE river.traverse = '1'       
SELECT apartments.apt_number FROM Apartments JOIN View_Unit_Status ON apartments.apt_id = view_unit_status.apt_id WHERE view_unit_status.available_yn = 0     INTERSECT SELECT apartments.apt_number FROM Apartments JOIN View_Unit_Status ON apartments.apt_id = view_unit_status.apt_id WHERE view_unit_status.available_yn = 1         
SELECT technician.Name FROM technician WHERE technician.Team != 'NYY'       
SELECT station.Name FROM station WHERE station.Station_ID NOT IN (SELECT train_station.Station_ID FROM train_station        )       
"SELECT reference_budget_codes.Budget_Type_Code, reference_budget_codes.Budget_Type_Description FROM Ref_Budget_Codes        "
"SELECT DISTINCT key_phrase.keyphraseName, paper.year FROM keyphrase JOIN paperKeyphrase ON key_phrase.keyphraseId = paperKeyphrase.keyphraseId JOIN paper ON paperKeyphrase.paperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'    ORDER BY paper.year DESC   "
"SELECT apartments.apt_type_code, max( apartments.room_count), min( apartments.room_count) FROM Apartments  GROUP BY apartments.apt_type_code      "
SELECT DISTINCT customers.customer_name FROM Customers JOIN Orders ON customers.customer_id = orders.customer_id WHERE orders.order_status = 'Packing'       
"SELECT min( person.age), person.job FROM Person  GROUP BY person.job      "
SELECT mountain.Name FROM mountain WHERE mountain.Height > 5000 or mountain.Prominence > 1000       
SELECT count( *) FROM Visits JOIN Visitors ON visits.Tourist_ID = visitors.Tourist_ID WHERE visitors.Tourist_ID NOT IN (SELECT visits.Tourist_ID FROM Visits        )       
"SELECT avg( airports.elevation), airports.country FROM airports  GROUP BY airports.country      "
SELECT state.population FROM state WHERE state.state_name in (SELECT river.traverse FROM river WHERE river.river_name = '1'       )       
SELECT DISTINCT characteristics.characteristic_name FROM Characteristics        
SELECT country.Country_name FROM country JOIN match_season ON country.Country_id = match_season.Country WHERE match_season.Position = 'Forward'     INTERSECT SELECT country.Country_name FROM country JOIN match_season ON country.Country_id = match_season.Country WHERE match_season.Position = 'Defender'         
SELECT count( *) FROM state        
SELECT DISTINCT count(DISTINCT complaints.complaint_type_code) FROM Complaints        
SELECT count( *) FROM Student        
SELECT DISTINCT employees.DEPARTMENT_ID FROM employees  GROUP BY employees.DEPARTMENT_ID HAVING count( employees.EMPLOYEE_ID) >= 4     
SELECT count( *) FROM storm        
SELECT team.Name FROM team WHERE team.Team_id NOT IN (SELECT match_season.Team FROM match_season        )       
SELECT customers.payment_method FROM Customers  GROUP BY customers.payment_method  ORDER BY count( *) DESC LIMIT 1    
"SELECT customers_cards.customer_id, customers.customer_first_name, customers.customer_last_name FROM Customers_Cards JOIN Financial_Transactions ON customers_cards.card_id = Financial_Transactions.card_id JOIN Accounts ON Financial_Transactions.account_id = accounts.account_id JOIN Customers  GROUP BY customers.customer_id  ORDER BY count( *) ASC LIMIT 1    "
SELECT DISTINCT count(DISTINCT cmi_cross_references.source_system_code) FROM CMI_Cross_References        
SELECT hall_of_fame.yearid FROM hall_of_fame  GROUP BY hall_of_fame.yearid  ORDER BY count( *) ASC LIMIT 1    
SELECT DISTINCT customers.Customer_Details FROM Customers JOIN Policies ON customers.Customer_ID = policies.Customer_ID WHERE policies.Policy_Type_Code = 'Deputy'       
"SELECT invoices.billing_country, sum( invoices.total) FROM invoices  GROUP BY invoices.billing_country  ORDER BY sum( invoices.total) DESC LIMIT 1    "
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 1 and venue.venueName = '1'       
"SELECT climber.Country, count( *) FROM climber  GROUP BY climber.Country      "
"SELECT DISTINCT employee.EMP_FNAME, professor.PROF_HIGH_DEGREE FROM EMPLOYEE JOIN PROFESSOR ON employee.EMP_NUM = professor.EMP_NUM JOIN CLASS ON employee.EMP_NUM = T3.PROF_NUM JOIN DEPARTMENT ON employee.EMP_NUM = department.EMP_NUM WHERE department.DEPT_NAME = '1'       "
SELECT DISTINCT mountain.Name FROM mountain JOIN climber ON mountain.Mountain_ID = climber.Mountain_ID WHERE climber.Country = 'West Germany'       
SELECT apartment_buildings.building_full_name FROM Apartment_Buildings WHERE apartment_buildings.building_full_name like '%court%'       
SELECT member.Name FROM member WHERE member.Member_ID NOT IN (SELECT round.Member_ID FROM round        )       
"SELECT products.Product_Name, count( *) FROM Products JOIN Products_in_Events ON products.Product_ID = Products_in_Events.Product_ID JOIN Events ON Products_in_Events.Event_ID = events.Event_ID  GROUP BY products.Product_Name      "
"SELECT avg( results.fastestLapSpeed), races.name, races.year FROM results JOIN races ON results.raceId = races.raceId WHERE races.year > 1 GROUP BY results.raceId   ORDER BY races.year ASC   "
SELECT person.name FROM Person WHERE person.gender = 'male'    ORDER BY person.age ASC   
"SELECT transactions.investor_id, investors.Investor_details FROM Transactions JOIN Investors ON transactions.investor_id = investors.investor_id WHERE transactions.transaction_type_code = 'SALE' GROUP BY transactions.investor_id HAVING count( *) >= 2     "
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId JOIN venue ON paper.venueId = venue.venueId WHERE key_phrase.keyphraseName = 'TAIL' and venue.venueName = 'NIPS'       
SELECT city.population FROM city WHERE city.city_name = '1' and city.state_name = '1'       
SELECT avg( student.Age) FROM Student JOIN Lives_in ON student.StuID = Lives_in.stuid JOIN Dorm ON Lives_in.dormid = dorm.dormid WHERE dorm.student_capacity = (SELECT max( dorm.student_capacity) FROM Dorm        )       
"SELECT max( procedures.Cost), min( procedures.Cost), avg( procedures.Cost) FROM Procedures        "
SELECT roles.Role_Description FROM Roles WHERE roles.Role_Name = 'Proof Reader'       
SELECT papers.title FROM Papers JOIN Authorship ON papers.paperID = Authorship.paperID JOIN Authors ON Authorship.authID = authors.authID WHERE authors.fname = 'Aaron' and authors.lname = 'Turon'       
SELECT party.Party FROM party JOIN election ON party.Party_ID = election.Party WHERE election.Committee = '1'     INTERSECT SELECT party.Party FROM party JOIN election ON party.Party_ID = election.Party WHERE election.Committee = '1'         
SELECT files.f_id FROM files WHERE files.formats = 'mp4'      UNION SELECT song.f_id FROM song WHERE song.resolution > 720        
SELECT songs.Title FROM Songs JOIN Tracklists ON songs.SongId = Tracklists.SongId JOIN Albums ON Tracklists.AlbumId = albums.AId WHERE albums.Title = 'A Kiss Before You Go: Live in Hamburg'       
"SELECT employees.FIRST_NAME, employees.LAST_NAME, employees.HIRE_DATE FROM employees WHERE employees.DEPARTMENT_ID = (SELECT employees.DEPARTMENT_ID FROM employees WHERE employees.FIRST_NAME = 'Clara'       )       "
"SELECT exhibition.Theme, exhibition.Year FROM exhibition WHERE exhibition.Ticket_Price < 15       "
SELECT DISTINCT trip.start_station_name FROM trip WHERE trip.duration < 100       
"SELECT customers.first_name, customers.last_name FROM Customers        "
"SELECT nomination.Festival_ID, festival_detail.Festival_Name FROM nomination JOIN festival_detail ON nomination.Festival_ID = festival_detail.Festival_ID JOIN artwork ON nomination.Artwork_ID = T3.Artwork_ID  GROUP BY nomination.Festival_ID HAVING count( *) >= 2     "
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId JOIN venue ON paper.venueId = venue.venueId WHERE author.authorName = '1' and venue.venueName = '1'       
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId JOIN venue ON paper.venueId = venue.venueId WHERE key_phrase.keyphraseName = '1' and paper.year = 1 and venue.venueName = '1'       
"SELECT member.Name, member.Country FROM member        "
"SELECT apartments.apt_type_code, apartments.bathroom_count, apartments.bedroom_count FROM Apartments  GROUP BY apartments.apt_type_code, apartments.bathroom_count, apartments.bedroom_count  ORDER BY sum( apartments.room_count) DESC LIMIT 1    "
SELECT host.Name FROM host WHERE host.Host_ID NOT IN (SELECT party_host.Host_ID FROM party_host        )       
SELECT job_history.EMPLOYEE_ID FROM job_history JOIN employees ON job_history.EMPLOYEE_ID = employees.EMPLOYEE_ID  GROUP BY job_history.EMPLOYEE_ID HAVING count( *) >= 2     
SELECT count( *) FROM venue        
SELECT instructor.name FROM instructor WHERE instructor.name like '%dar%'       
"SELECT min( apartments.bathroom_count), max( apartments.bathroom_count) FROM Apartments        "
"SELECT party.Party_Theme, host.Name FROM party JOIN party_host ON party.Party_ID = party_host.Party_ID JOIN host ON party_host.Host_ID = host.Host_ID        "
SELECT DISTINCT college.state FROM College WHERE college.enr < (SELECT max( college.enr) FROM College        )       
SELECT count( *) FROM author        
SELECT state.state_name FROM state WHERE state.area = (SELECT max( state.area) FROM state        )       
"SELECT count( *), documents.Project_ID FROM Documents WHERE documents.Document_Type_Code = 'BK' GROUP BY documents.Project_ID      "
SELECT acceptance.Result FROM Acceptance JOIN submission ON acceptance.Submission_ID = submission.Submission_ID    ORDER BY submission.Scores DESC LIMIT 1    
SELECT publication.title FROM publication JOIN writes ON publication.pid = writes.pid JOIN author ON writes.aid = author.aid WHERE author.name = '1' and author.name = '1'       
"SELECT avg( products.Price), manufacturers.Name FROM Products JOIN Manufacturers ON products.Manufacturer = manufacturers.Code  GROUP BY manufacturers.Name HAVING avg( products.Price) >= 150     "
"SELECT faculty.Fname, faculty.Lname FROM Faculty JOIN Course ON faculty.FacID = course.Instructor WHERE course.CName = 'COMPUTER LITERACY'       "
SELECT gymnast.Total_Points FROM gymnast     ORDER BY gymnast.Total_Points DESC   
SELECT avg( payments.amount_due) FROM Payments        
SELECT tweets.text FROM tweets     ORDER BY tweets.createdate ASC   
SELECT school.Denomination FROM school JOIN player ON school.School_ID = player.School_ID  GROUP BY school.Denomination  ORDER BY count( *) DESC LIMIT 1    
SELECT projects.Name FROM Projects WHERE projects.Code NOT IN (SELECT assigned_to.Project FROM AssignedTo        )       
"SELECT flight.origin, flight.destination FROM flight WHERE flight.price > 300       "
SELECT student.StuID FROM Student WHERE student.city_code = 'CHI'       
SELECT film.Title FROM film WHERE film.Film_ID NOT IN (SELECT film_market_estimation.Film_ID FROM film_market_estimation        )       
SELECT DISTINCT addresses.city FROM Addresses JOIN People_Addresses ON addresses.address_id = T2.address_id        
SELECT DISTINCT count(DISTINCT player.Position) FROM player        
SELECT avg( products.product_price) FROM Products WHERE products.product_type_code = 'Clothes'       
"SELECT region.Region_name, count( *) FROM region JOIN affected_region ON region.Region_id = affected_region.Region_id  GROUP BY region.Region_name      "
SELECT district.District_name FROM district JOIN store_district ON district.District_ID = store_district.District_ID JOIN store ON store_district.Store_ID = store.Store_ID WHERE store.Type = 'City Mall'     INTERSECT SELECT district.District_name FROM district JOIN store_district ON district.District_ID = store_district.District_ID JOIN store ON store_district.Store_ID = store.Store_ID WHERE store.Type = 'Village Store'         
SELECT DISTINCT count(DISTINCT cite.citedPaperId) FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
SELECT DISTINCT count(DISTINCT writes.paperId) FROM writes JOIN author ON writes.authorId = author.authorId JOIN paper ON writes.paperId = paper.paperId WHERE author.authorName != 'Noah Smith' and paper.year > 2009 and writes.paperId in (SELECT writes.paperId FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName like '%Noah Smith%'       )       
SELECT instructor.dept_name FROM instructor  GROUP BY instructor.dept_name  ORDER BY avg( instructor.salary) DESC LIMIT 1    
SELECT shipments.order_id FROM Shipments WHERE shipments.shipment_tracking_number = '3452'       
SELECT student.LName FROM Student JOIN SportsInfo ON student.StuID = sports_info.StuID WHERE sports_info.OnScholarship = '1'       
SELECT instructor.ID FROM instructor        EXCEPT SELECT teaches.ID FROM teaches        
"SELECT drama_workshop_groups.Store_Phone, drama_workshop_groups.Store_Email_Address FROM Drama_Workshop_Groups JOIN Services ON drama_workshop_groups.Workshop_Group_ID = T2.Workshop_Group_ID        "
SELECT projects.project_details FROM Projects JOIN Project_Outcomes ON projects.project_id = Project_Outcomes.project_id JOIN Research_Outcomes ON Project_Outcomes.outcome_code = research_outcomes.outcome_code WHERE research_outcomes.outcome_description like '%Published%'       
"SELECT DISTINCT count(DISTINCT paper.paperId), writes.authorId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' GROUP BY writes.authorId   ORDER BY count( paper.paperId) DESC   "
SELECT market.Country FROM market     ORDER BY market.Country ASC   
"SELECT DISTINCT cite.citedPaperId, count(DISTINCT cite.citedPaperId) FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1' GROUP BY cite.citedPaperId   ORDER BY count( cite.citedPaperId) DESC   "
"SELECT staff.staff_name, staff.staff_gender FROM Staff JOIN Staff_Department_Assignments ON staff.staff_id = staff_department_assignments.staff_id WHERE staff_department_assignments.date_assigned_from like '%2016%'       "
SELECT item.title FROM item JOIN review ON item.i_id = review.i_id WHERE review.rating > 8     INTERSECT SELECT item.title FROM item JOIN review ON item.i_id = review.i_id WHERE review.rating < 5         
"SELECT customers.first_name, customers.last_name, sum( invoices.total) FROM customers JOIN invoices ON customers.id = invoices.customer_id  GROUP BY invoices.customer_id  ORDER BY sum( invoices.total) DESC LIMIT 1    "
"SELECT student.name, student.dept_name FROM student     ORDER BY student.tot_cred ASC   "
SELECT transactions.transaction_type_code FROM Transactions  GROUP BY transactions.transaction_type_code  ORDER BY count( *) ASC LIMIT 1    
SELECT festival_detail.Festival_Name FROM festival_detail WHERE festival_detail.Year = 2007       
"SELECT staff.first_name, staff.middle_name, staff.last_name FROM Staff        "
SELECT DISTINCT paper.venueId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = 'Trophic Cascade'       
"SELECT course.CRS_CREDIT, course.CRS_DESCRIPTION FROM COURSE WHERE course.CRS_CODE = 'QM-261'       "
SELECT vehicles.vehicle_details FROM Vehicles WHERE vehicles.vehicle_id = 1       
SELECT competition.Competition_type FROM competition  GROUP BY competition.Competition_type  ORDER BY count( *) DESC LIMIT 1    
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 2015 and venue.venueName = 'ACL'       
SELECT employees.address FROM employees WHERE employees.first_name = 'Nancy' and employees.last_name = 'Edwards'       
SELECT college.state FROM College JOIN Tryout ON college.cName = tryout.cName WHERE tryout.pPos = 'striker'       
"SELECT customer_orders.order_id, customer_orders.customer_id FROM Customer_Orders WHERE customer_orders.order_status_code = 'Cancelled'    ORDER BY customer_orders.order_date ASC   "
"SELECT manufacturers.Name, manufacturers.Headquarter, manufacturers.Revenue FROM Manufacturers     ORDER BY manufacturers.Revenue DESC   "
SELECT roller_coaster.Status FROM roller_coaster  GROUP BY roller_coaster.Status HAVING count( *) > 2     
"SELECT DISTINCT cite.citedPaperId, count(DISTINCT cite.citedPaperId) FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' GROUP BY cite.citedPaperId   ORDER BY count( cite.citedPaperId) DESC   "
"SELECT financial_transactions.account_id, accounts.account_name FROM Financial_Transactions JOIN Accounts ON financial_transactions.account_id = accounts.account_id  GROUP BY financial_transactions.account_id HAVING count( *) >= 4     "
SELECT device.Software_Platform FROM device  GROUP BY device.Software_Platform   ORDER BY count( *) DESC   
SELECT person.name FROM Person WHERE person.age < 30       
"SELECT sum( course.CRS_CREDIT), course.DEPT_CODE FROM COURSE JOIN CLASS ON course.CRS_CODE = T2.CRS_CODE  GROUP BY course.DEPT_CODE      "
SELECT DISTINCT count(DISTINCT entrepreneur.Company) FROM entrepreneur        
SELECT count( *) FROM Vocals JOIN Songs ON vocals.SongId = songs.SongId WHERE songs.Title = 'Le Pop'       
SELECT customer.cust_name FROM customer WHERE customer.credit_score < (SELECT avg( customer.credit_score) FROM customer        )       
"SELECT medicine.id, medicine.name, medicine.FDA_approved FROM medicine JOIN medicine_enzyme_interaction ON medicine.id = T3.medicine_id  GROUP BY T3.medicine_id   ORDER BY count( *) DESC   "
"SELECT artist.Name, album.ArtistId FROM Artist JOIN Album ON artist.ArtistId = album.ArtistId  GROUP BY album.ArtistId HAVING count( *) >= 3  ORDER BY artist.Name ASC   "
"SELECT invoices.order_id, count( *) FROM Invoices  GROUP BY invoices.order_id      "
SELECT on_call.Nurse FROM On_Call WHERE on_call.BlockFloor = 1 and on_call.BlockCode = 1       
"SELECT mountain.name, mountain.Prominence FROM mountain        EXCEPT SELECT mountain.name, mountain.Prominence FROM mountain JOIN photos ON mountain.id = photos.mountain_id JOIN camera_lens ON photos.camera_lens_id = camera_lens.id WHERE camera_lens.brand = 'Sigma'       "
"SELECT DISTINCT count(DISTINCT paper.paperId), paper.year FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName like '%Ye Cao%' GROUP BY paper.year   ORDER BY count( paper.paperId) DESC   "
SELECT person_friend.friend FROM PersonFriend WHERE person_friend.name = 'Zach' and person_friend.year = (SELECT max( person_friend.year) FROM PersonFriend WHERE person_friend.name = 'Zach'       )       
"SELECT airport.International_Passengers, airport.Domestic_Passengers FROM airport WHERE airport.Airport_Name = '1'       "
"SELECT video_games.GType, count( *) FROM Video_Games  GROUP BY video_games.GType      "
"SELECT student.Advisor, count( *) FROM Student  GROUP BY student.Advisor      "
SELECT vocals.Type FROM Vocals JOIN Songs ON vocals.SongId = songs.SongId WHERE songs.Title = 'Le Pop'       
"SELECT campuses.Campus, sum( degrees.Degrees) FROM Campuses JOIN degrees ON campuses.Id = degrees.Campus WHERE degrees.Year >= 1998 and degrees.Year <= 2002 GROUP BY campuses.Campus      "
SELECT city.Status FROM city  GROUP BY city.Status   ORDER BY count( *) ASC   
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and restaurant.RATING > 1       "
"SELECT department.DEPT_NAME, department.DEPT_ADDRESS FROM DEPARTMENT JOIN STUDENT ON department.DEPT_CODE = student.DEPT_CODE  GROUP BY student.DEPT_CODE  ORDER BY count( *) DESC LIMIT 1    "
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 1 and venue.venueName = '1'       
SELECT club.ClubName FROM Club WHERE club.ClubLocation = 'AKW'       
SELECT host.Name FROM host JOIN party_host ON host.Host_ID = party_host.Host_ID JOIN party ON party_host.Party_ID = party.Party_ID WHERE party.Number_of_hosts > 20       
"SELECT region.Region_code, region.Region_name FROM region     ORDER BY region.Region_code ASC   "
SELECT organizations.organization_name FROM Organizations     ORDER BY organizations.date_formed ASC   
SELECT allergy_type.AllergyType FROM Allergy_Type WHERE allergy_type.Allergy = 'Cat'       
"SELECT DISTINCT station.id, station.name FROM station JOIN status ON station.id = status.station_id WHERE status.bikes_available > 12       "
SELECT avg( lessons.price) FROM Lessons JOIN Staff ON lessons.staff_id = staff.staff_id WHERE staff.first_name = 'Janessa' and staff.last_name = 'Sawayn'       
SELECT DISTINCT products.product_name FROM Products JOIN Complaints ON products.product_id = complaints.product_id  GROUP BY products.product_name  ORDER BY count( *) ASC LIMIT 1    
SELECT DISTINCT paper.paperId FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE venue.venueName = '1'       
SELECT DISTINCT wine.Winery FROM wine WHERE wine.Price between 50 AND 100       
"SELECT reference_document_types.Document_Type_Name, reference_document_types.Document_Type_Description, documents.Document_Date FROM Ref_Document_Types JOIN Documents ON reference_document_types.Document_Type_Code = documents.Document_Type_Code        "
SELECT DISTINCT web_client_accelerator.name FROM Web_client_accelerator JOIN accelerator_compatible_browser ON web_client_accelerator.id = accelerator_compatible_browser.accelerator_id JOIN browser ON accelerator_compatible_browser.browser_id = browser.id WHERE browser.market_share > 15       
SELECT actor.Name FROM actor WHERE actor.age != 20       
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and location.STREET_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT station.name FROM station WHERE station.city = '1'       EXCEPT SELECT trip.end_station_name FROM trip JOIN station  GROUP BY trip.end_station_name HAVING count( *) > 1     
SELECT participants.Participant_Type_Code FROM Participants  GROUP BY participants.Participant_Type_Code  ORDER BY count( *) DESC LIMIT 1    
SELECT state.population FROM state WHERE state.state_name = '1'       
SELECT count( *) FROM Video_Games WHERE video_games.GType = 'Massively multiplayer online game'       
SELECT customers.Customer_name FROM Customers JOIN Customers_Policies ON customers.Customer_ID = Customers_Policies.Customer_ID JOIN First_Notification_of_Loss ON Customers_Policies.Customer_ID = First_Notification_of_Loss.Customer_ID JOIN Services ON First_Notification_of_Loss.Service_ID = services.Service_ID WHERE services.Service_name = 'Close a policy'     INTERSECT SELECT customers.Customer_name FROM Customers JOIN Customers_Policies ON customers.Customer_ID = Customers_Policies.Customer_ID JOIN First_Notification_of_Loss ON Customers_Policies.Customer_ID = First_Notification_of_Loss.Customer_ID JOIN Services ON First_Notification_of_Loss.Service_ID = services.Service_ID WHERE services.Service_name = 'New policy application'         
SELECT company.Headquarters FROM company        EXCEPT SELECT company.Headquarters FROM company WHERE company.Main_Industry = 'Banking'       
SELECT people.Name FROM people JOIN body_builder ON people.People_ID = body_builder.People_ID     ORDER BY body_builder.Total DESC   
SELECT sum( order_items.order_quantity) FROM Order_Items JOIN Customer_Orders ON order_items.order_id = customer_orders.order_id WHERE customer_orders.order_date < '2018-03-17 07:13:53'       
"SELECT ship.Name, ship.Flag FROM Ship WHERE ship.Ship_ID NOT IN (SELECT captain.Ship_ID FROM captain WHERE captain.Rank = 'Midshipman'       )       "
"SELECT DISTINCT count(DISTINCT paper.paperId), writes.authorId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' GROUP BY writes.authorId   ORDER BY count( paper.paperId) DESC   "
SELECT member.Member_Name FROM member WHERE member.Party_ID = '3'     INTERSECT SELECT member.Member_Name FROM member WHERE member.Party_ID = '1'         
SELECT products.Product_Name FROM Products  GROUP BY products.Product_Name HAVING avg( products.Product_Price) < 1000000     
SELECT wine.Name FROM wine WHERE wine.Year < (SELECT min( wine.Year) FROM wine WHERE wine.Winery = 'Brander'       )       
SELECT count( *) FROM Students JOIN Student_Course_Registrations ON students.student_id = Student_Course_Registrations.student_id JOIN Courses ON Student_Course_Registrations.course_id = courses.course_id WHERE courses.course_name = 'English'       
SELECT physician.Name FROM Physician JOIN Patient ON physician.EmployeeID = T2.PCP  GROUP BY physician.Name HAVING count( *) > 1     
SELECT course.title FROM course WHERE course.dept_name = 'Statistics'     INTERSECT SELECT course.title FROM course WHERE course.dept_name = 'Psychology'         
SELECT representative.Name FROM representative JOIN election ON representative.Representative_ID = election.Representative_ID     ORDER BY election.Votes DESC   
"SELECT student_course_registrations.student_id, courses.course_name FROM Student_Course_Registrations JOIN Courses ON student_course_registrations.course_id = courses.course_id        "
"SELECT student.LName, student.Sex FROM Student WHERE student.StuID in (SELECT plays_games.StuID FROM Plays_Games JOIN Video_Games ON plays_games.GameID = video_games.GameID WHERE video_games.GName = '1'       )       "
SELECT count( *) FROM Accounts        
"SELECT user_profiles.name, user_profiles.partitionid FROM user_profiles JOIN tweets ON user_profiles.uid = T2.uid  GROUP BY T2.uid HAVING count( *) < 2     "
"SELECT submission.Author, acceptance.Result FROM submission JOIN Acceptance ON submission.Submission_ID = acceptance.Submission_ID        "
SELECT song.artist_name FROM song WHERE song.resolution > 500 GROUP BY song.artist_name  ORDER BY count( *) DESC LIMIT 1    
"SELECT accounts.name, checking.balance FROM ACCOUNTS JOIN CHECKING ON accounts.custid = checking.custid JOIN SAVINGS ON accounts.custid = savings.custid    ORDER BY savings.balance ASC LIMIT 1    "
"SELECT reservations.FirstName, reservations.LastName FROM Reservations WHERE reservations.Rate > 1       "
SELECT project_staff.role_code FROM Project_Staff WHERE project_staff.date_from > '1' and project_staff.date_to < '1'       
"SELECT DISTINCT author.authorId, paper.paperId FROM author JOIN writes ON author.authorId = writes.authorId JOIN paper ON writes.paperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE author.authorName = '1' and key_phrase.keyphraseName = '1'       "
SELECT count( *) FROM Accounts        
SELECT course.title FROM course WHERE course.course_id in (SELECT prerequisite.course_id FROM prereq JOIN course ON prerequisite.prereq_id = course.course_id WHERE course.title = 'Differential Geometry'       )       
SELECT match_season.Player FROM match_season WHERE match_season.College = 'UCLA'       
SELECT people.Name FROM people     ORDER BY people.Name ASC   
SELECT count( *) FROM employee        
SELECT dorm.dorm_name FROM Dorm    ORDER BY dorm.student_capacity DESC LIMIT 1    
"SELECT documents.document_name, documents.access_count FROM Documents     ORDER BY documents.document_name ASC   "
SELECT DISTINCT count(DISTINCT user.name) FROM user JOIN review ON user.user_id = review.user_id JOIN business ON review.business_id = business.business_id WHERE business.city = 'Pittsburgh' and business.name = 'Sushi Too'       
SELECT event.Name FROM event    ORDER BY event.Year DESC LIMIT 1    
SELECT station.id FROM station WHERE station.lat > 37.4       EXCEPT SELECT status.station_id FROM status  GROUP BY status.station_id HAVING min( status.bikes_available) < 7     
SELECT DISTINCT count(DISTINCT accounts.customer_id) FROM Accounts        
"SELECT DISTINCT artist.artist_name, artist.country FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.rating > 9       "
SELECT max( wine.Price) FROM wine JOIN appellations ON wine.Appelation = appellations.Appelation WHERE appellations.Area = 'Central Coast' and wine.Year < 2005       
SELECT DISTINCT count(DISTINCT movie.title) FROM movie WHERE movie.release_year = 2013       
SELECT DISTINCT party.Year FROM party WHERE party.Governor = 'Eliot Spitzer'       
SELECT count( *) FROM Characteristics JOIN Product_Characteristics ON characteristics.characteristic_id = Product_Characteristics.characteristic_id JOIN Products ON Product_Characteristics.product_id = products.product_id WHERE products.product_name = 'sesame'       
"SELECT school.Denomination, count( *) FROM school  GROUP BY school.Denomination   ORDER BY count( *) DESC   "
"SELECT count( *), claims.Claim_ID FROM Settlements JOIN Claims ON settlements.Claim_ID = claims.Claim_ID  GROUP BY claims.Claim_ID  ORDER BY claims.Date_Claim_Settled DESC LIMIT 1    "
"SELECT reference_product_categories.unit_of_measure, reference_product_categories.product_category_code FROM Ref_Product_Categories JOIN Products ON reference_product_categories.product_category_code = products.product_category_code WHERE products.product_name = 'chervil'       "
"SELECT airport.International_Passengers, airport.Domestic_Passengers FROM airport WHERE airport.Airport_Name = 'London Heathrow'       "
SELECT DISTINCT paper.paperId FROM paper JOIN journal ON paper.journalId = journal.journalId WHERE journal.journalName = '1' and paper.year = 1       
"SELECT sum( settlements.Settlement_Amount), avg( settlements.Settlement_Amount) FROM Settlements        "
SELECT manufacturers.Founder FROM Manufacturers WHERE manufacturers.Name = 'Sony'       
SELECT count( *) FROM PROFESSOR WHERE professor.PROF_HIGH_DEGREE = '1' or professor.PROF_HIGH_DEGREE = '1'       
SELECT club.ClubName FROM Club JOIN Member_of_club ON club.ClubID = member_of_club.ClubID JOIN Student ON member_of_club.StuID = student.StuID WHERE student.Major = 600 GROUP BY club.ClubName  ORDER BY count( *) DESC LIMIT 1    
SELECT person.age FROM Person WHERE person.job = 'doctor' and person.name = 'Zach'       
SELECT elimination.Time FROM Elimination WHERE elimination.Eliminated_By = 'Punk' or elimination.Eliminated_By = 'Orton'       
SELECT vocals.Type FROM Vocals JOIN Band ON vocals.Bandmate = band.Id JOIN Performance ON band.Id = Performance.Bandmate JOIN Songs ON Performance.SongId = songs.SongId WHERE band.Firstname = '1' and songs.Title = '1'       
"SELECT documents_with_expenses.Budget_Type_Code, count( *) FROM Documents_with_Expenses JOIN Documents ON documents_with_expenses.Document_ID = documents.Document_ID  GROUP BY documents_with_expenses.Budget_Type_Code      "
SELECT scientists.Name FROM Scientists JOIN AssignedTo ON scientists.SSN = AssignedTo.Scientist JOIN Projects ON AssignedTo.Project = projects.Code WHERE projects.Name = '1'     INTERSECT SELECT scientists.Name FROM Scientists JOIN AssignedTo ON scientists.SSN = AssignedTo.Scientist JOIN Projects ON AssignedTo.Project = projects.Code WHERE projects.Name = '1'         
SELECT lake.lake_name FROM lake WHERE lake.area > 1 and lake.state_name = '1'       
"SELECT project_staff.date_from, project_staff.date_to FROM Project_Staff WHERE project_staff.project_id in (SELECT project_staff.project_id FROM Project_Staff JOIN Projects ON project_staff.project_id = projects.project_id  GROUP BY project_staff.project_id  ORDER BY count( *) DESC LIMIT 1    )      UNION SELECT project_staff.date_from, project_staff.date_to FROM Project_Staff WHERE project_staff.role_code = '1'        "
SELECT mountain.mountain_name FROM mountain WHERE mountain.mountain_altitude = (SELECT max( mountain.mountain_altitude) FROM mountain        )       
"SELECT employees.EMPLOYEE_ID, employees.JOB_ID FROM employees WHERE employees.SALARY < (SELECT min( employees.SALARY) FROM employees WHERE employees.JOB_ID = 'MK_MAN'       )       "
"SELECT courses.course_name, count( *) FROM Courses JOIN Student_Course_Registrations ON courses.course_id = Student_Course_Registrations.course_id JOIN Students ON Student_Course_Registrations.student_id = students.student_id  GROUP BY courses.course_name      "
SELECT * FROM employees WHERE employees.DEPARTMENT_ID = 1       
SELECT DISTINCT paper.paperId FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 1 and venue.venueName = '1'       
SELECT count( *) FROM classroom WHERE classroom.building = 'Lamberton' and classroom.capacity < 50       
SELECT catalog_contents.catalog_entry_name FROM Catalog_Contents WHERE catalog_contents.product_stock_number like '%2%'       
SELECT city.city_name FROM city WHERE city.population = (SELECT max( city.population) FROM city WHERE city.state_name = '1'       ) and city.state_name = '1'       
SELECT faculty.Fname FROM Faculty WHERE faculty.Rank = 'Professor'    ORDER BY faculty.Fname ASC   
"SELECT faculty.Fname, faculty.Lname FROM Faculty JOIN Course ON faculty.FacID = course.Instructor  GROUP BY course.Instructor  ORDER BY count( *) DESC LIMIT 1    "
SELECT device.Software_Platform FROM device  GROUP BY device.Software_Platform  ORDER BY count( *) DESC LIMIT 1    
SELECT DISTINCT key_phrase.keyphraseId FROM keyphrase JOIN paperKeyphrase ON key_phrase.keyphraseId = paperKeyphrase.keyphraseId JOIN paper ON paperKeyphrase.paperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Luke Zettlemoyer'       
SELECT event.Name FROM event     ORDER BY event.Year DESC   
SELECT city.city_name FROM city WHERE city.population = (SELECT max( city.population) FROM city        )       
SELECT club.ClubLocation FROM Club WHERE club.ClubName = 'Pen and Paper Gaming'       
SELECT river.length FROM river WHERE river.river_name = '1'       
"SELECT competition.Competition_type, count( *) FROM competition  GROUP BY competition.Competition_type      "
SELECT tracks.name FROM tracks JOIN playlist_tracks ON tracks.id = playlist_tracks.track_id JOIN playlists ON playlist_tracks.playlist_id = playlists.id WHERE playlists.name = 'Movies'     INTERSECT SELECT tracks.name FROM tracks JOIN playlist_tracks ON tracks.id = playlist_tracks.track_id JOIN playlists ON playlist_tracks.playlist_id = playlists.id WHERE playlists.name = 'Music'         
"SELECT procedures.Name, procedures.Cost FROM Procedures     ORDER BY procedures.Cost DESC   "
SELECT film.Studio FROM film  GROUP BY film.Studio HAVING avg( film.Gross_in_dollar) >= 4500000     
"SELECT submission.College, count( *) FROM submission  GROUP BY submission.College      "
SELECT DISTINCT count(DISTINCT financial_transactions.transaction_type) FROM Financial_Transactions        
SELECT count( *) FROM state        
"SELECT employees.JOB_ID, employees.HIRE_DATE FROM employees WHERE employees.HIRE_DATE between '2007-11-05' AND '2009-07-05'       "
"SELECT avg( wine.Price), avg( wine.Cases) FROM wine WHERE wine.Year = 2009 and wine.Grape = 'Zinfandel'       "
SELECT DISTINCT wine.Name FROM wine JOIN appellations ON wine.Appelation = appellations.Appelation WHERE appellations.Area = 'North Coast'       
"SELECT claims.Claim_ID, claims.Date_Claim_Made, count( *) FROM Claims JOIN Settlements ON claims.Claim_ID = settlements.Claim_ID  GROUP BY settlements.Claim_ID  ORDER BY count( *) DESC LIMIT 1    "
"SELECT accounts.account_id, accounts.date_account_opened, accounts.account_name, accounts.other_account_details FROM Accounts        "
SELECT author.name FROM author JOIN writes ON author.aid = writes.aid JOIN publication ON writes.pid = publication.pid JOIN journal ON publication.jid = journal.jid WHERE journal.name = 'PVLDB' and publication.year = 2010       
"SELECT accounts.account_id, accounts.customer_id, accounts.account_name FROM Accounts        "
SELECT count( *) FROM Papers        
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Peter Mertens' and author.authorName = 'Dina Barbian'       
"SELECT transactions.investor_id, investors.Investor_details FROM Transactions JOIN Investors ON transactions.investor_id = investors.investor_id  GROUP BY transactions.investor_id  ORDER BY count( *) DESC LIMIT 1    "
SELECT student.Fname FROM Student WHERE student.city_code = 'PHL' and student.Age between 20 AND 25       
SELECT DISTINCT wine.Name FROM wine WHERE wine.Price > (SELECT min( wine.Price) FROM wine WHERE wine.Winery = 'John Anthony'       )       
SELECT captain.Name FROM captain WHERE captain.Rank = 'Midshipman' or captain.Rank = 'Lieutenant'       
"SELECT DISTINCT key_phrase.keyphraseName, sum(DISTINCT paper.numCitedBy) FROM keyphrase JOIN paperKeyphrase ON key_phrase.keyphraseId = paperKeyphrase.keyphraseId JOIN paper ON paperKeyphrase.paperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Brian DeRenzi' GROUP BY key_phrase.keyphraseName   ORDER BY sum( paper.numCitedBy) DESC   "
SELECT DISTINCT product.product_name FROM Product     ORDER BY product.product_name ASC   
"SELECT min( track.Seating), max( track.Seating), avg( track.Seating) FROM track        "
"SELECT characteristics.characteristic_name, characteristics.other_characteristic_details, characteristics.characteristic_data_type FROM Characteristics        EXCEPT SELECT characteristics.characteristic_name, characteristics.other_characteristic_details, characteristics.characteristic_data_type FROM Characteristics JOIN Product_Characteristics ON characteristics.characteristic_id = T3.characteristic_id        "
SELECT DISTINCT match_season.Position FROM match_season JOIN country ON match_season.Country = country.Country_id WHERE country.Capital = 'Dublin'       
"SELECT files.duration, files.file_size, files.formats FROM files JOIN song ON files.f_id = song.f_id WHERE song.genre_is = '1'    ORDER BY song.song_name ASC   "
"SELECT aircraft.name, aircraft.distance FROM aircraft        "
SELECT avg( track.UnitPrice) FROM Track JOIN Genre ON track.GenreId = genre.GenreId WHERE genre.Name = 'Rock'       
"SELECT manufacturers.Name, manufacturers.Headquarter, manufacturers.Revenue FROM Manufacturers     ORDER BY manufacturers.Revenue DESC   "
SELECT college.cName FROM College WHERE college.enr > 18000    ORDER BY college.cName ASC   
"SELECT companies.Industry, count( *) FROM Companies  GROUP BY companies.Industry      "
SELECT student_tests_taken.date_test_taken FROM Student_Tests_Taken WHERE student_tests_taken.test_result = 'Pass'       
SELECT DISTINCT paper.paperId FROM paper WHERE paper.title = '1'       
SELECT count( *) FROM Movie JOIN Rating ON movie.mID = rating.mID WHERE rating.stars > 3       
SELECT DISTINCT writes.authorId FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Ameet Soni' and author.authorName = 'Ras Bodik'       
"SELECT trip.start_station_name, trip.start_station_id FROM trip WHERE trip.start_date like '%1%' GROUP BY trip.start_station_name, trip.start_station_id  ORDER BY count( *) DESC LIMIT 1    "
SELECT count( *) FROM region        
SELECT driver.Name FROM driver WHERE driver.Driver_ID NOT IN (SELECT school_bus.Driver_ID FROM school_bus        )       
"SELECT college.cName, college.enr FROM College WHERE college.enr > 10000 and college.state = 'LA'       "
SELECT ship.Type FROM ship WHERE ship.Tonnage > 6000     INTERSECT SELECT ship.Type FROM ship WHERE ship.Tonnage < 4000         
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
SELECT student.LName FROM Student WHERE student.Sex = 'F' and student.city_code = 'BAL'      UNION SELECT student.LName FROM Student WHERE student.Sex = 'M' and student.Age < 20        
SELECT DISTINCT list.Classroom FROM list WHERE list.Grade = 4       
SELECT count( *) FROM state        
"SELECT individuals.individual_first_name, individuals.individual_middle_name, individuals.individual_last_name FROM Individuals     ORDER BY individuals.individual_last_name ASC   "
SELECT match.Venue FROM match JOIN hosting_city ON match.Match_ID = hosting_city.Match_ID JOIN city ON hosting_city.Host_City = city.City_ID WHERE city.City = 'Nanjing ( Jiangsu )' and match.Competition = '1994 FIFA World Cup qualification'       
SELECT artist.Famous_Title FROM artist JOIN volume ON artist.Artist_ID = volume.Artist_ID WHERE volume.Weeks_on_Top > 2     INTERSECT SELECT artist.Famous_Title FROM artist JOIN volume ON artist.Artist_ID = volume.Artist_ID WHERE volume.Weeks_on_Top < 2         
SELECT university.Founded FROM university    ORDER BY university.Enrollment DESC LIMIT 1    
SELECT customers.customer_id FROM Customers JOIN Orders ON customers.customer_id = orders.customer_id  GROUP BY customers.customer_id  ORDER BY count( *) DESC LIMIT 1    
"SELECT company.Company, count( *) FROM company JOIN station_company ON company.Company_ID = station_company.Company_ID JOIN gas_station ON station_company.Station_ID = gas_station.Station_ID  GROUP BY company.Company      "
SELECT DISTINCT order_items.product_id FROM Order_Items JOIN Orders ON order_items.order_id = orders.order_id WHERE orders.date_order_placed >= '1975-01-01' and orders.date_order_placed <= '1976-01-01'       
"SELECT city.City, city.GDP FROM city    ORDER BY city.GDP ASC LIMIT 1    "
SELECT count( *) FROM PROFESSOR JOIN DEPARTMENT ON professor.DEPT_CODE = department.DEPT_CODE WHERE department.DEPT_NAME = 'Accounting'       
SELECT DISTINCT papers.title FROM Papers JOIN Authorship ON papers.paperID = Authorship.paperID JOIN Inst ON Authorship.instID = institution.instID WHERE institution.name = 'Indiana University'       
SELECT * FROM employees WHERE employees.HIRE_DATE < '2002-06-21'       
SELECT count( *) FROM regions        
SELECT college.state FROM College JOIN Tryout ON college.cName = tryout.cName WHERE tryout.pPos = '1'     INTERSECT SELECT college.state FROM College JOIN Tryout ON college.cName = tryout.cName WHERE tryout.pPos = '1'         
SELECT pilot.Position FROM pilot WHERE pilot.Join_Year < 2000     INTERSECT SELECT pilot.Position FROM pilot WHERE pilot.Join_Year > 2005         
SELECT locations.Location_Name FROM Locations WHERE locations.Location_Name like '%film%'       
SELECT products_booked.product_id FROM Products_Booked  GROUP BY products_booked.product_id HAVING count( *) = 3     
"SELECT user_profiles.name, user_profiles.email FROM user_profiles    ORDER BY user_profiles.followers ASC LIMIT 1    "
SELECT count( *) FROM author        
SELECT reference_shipping_agents.shipping_agent_name FROM Ref_Shipping_Agents        
SELECT faculty.Faculty FROM faculty JOIN Campuses ON faculty.Campus = campuses.Id WHERE faculty.Year = 2004 and campuses.Campus = 'San Francisco State University'       
"SELECT student_tests_taken.test_result, count( *) FROM Student_Tests_Taken  GROUP BY student_tests_taken.test_result   ORDER BY count( *) DESC   "
SELECT match_season.Position FROM match_season JOIN team ON match_season.Team = team.Team_id WHERE team.Name = 'Ryley Goldner'       
SELECT state.state_name FROM state WHERE state.state_name NOT IN (SELECT border_info.state_name FROM border_info        )       
SELECT sum( district.City_Population) FROM district    ORDER BY district.City_Area DESC LIMIT 1    
SELECT customers.country FROM customers WHERE customers.first_name = 'Roberto' and customers.last_name = 'Almeida'       
SELECT count( *) FROM Products JOIN Product_Characteristics ON products.product_id = Product_Characteristics.product_id JOIN Characteristics ON Product_Characteristics.characteristic_id = characteristics.characteristic_id WHERE characteristics.characteristic_name = 'hot'       
SELECT DISTINCT products.product_name FROM Products JOIN Complaints ON products.product_id = complaints.product_id  GROUP BY products.product_name  ORDER BY count( *) ASC LIMIT 1    
SELECT song.song_name FROM song     ORDER BY song.resolution ASC   
"SELECT users.user_name, users.password FROM Users JOIN Roles ON users.role_code = roles.role_code  GROUP BY users.role_code  ORDER BY count( *) DESC LIMIT 1    "
SELECT highlow.state_name FROM highlow WHERE highlow.highest_elevation = (SELECT max( highlow.highest_elevation) FROM highlow WHERE highlow.state_name in (SELECT river.traverse FROM river WHERE river.river_name = '1'       )       )       
SELECT count( *) FROM ACCOUNTS JOIN SAVINGS ON accounts.custid = savings.custid WHERE savings.balance > (SELECT avg( savings.balance) FROM SAVINGS        )       
SELECT state.population FROM state JOIN border_info ON state.state_name = border_info.border WHERE border_info.state_name = '1'       
SELECT river.river_name FROM river WHERE river.river_name NOT IN (SELECT river.river_name FROM river WHERE river.traverse = '1'       )       
SELECT DISTINCT customer.FirstName FROM Customer JOIN Invoice ON customer.CustomerId = T2.CustomerId WHERE customer.Country = 'Brazil'       
"SELECT count( *), department.SCHOOL_CODE FROM CLASS JOIN EMPLOYEE ON class.PROF_NUM = EMPLOYEE.EMP_NUM JOIN DEPARTMENT ON EMPLOYEE.EMP_NUM = department.EMP_NUM  GROUP BY department.SCHOOL_CODE      "
SELECT customer.cust_name FROM customer WHERE customer.acc_type = '1'     INTERSECT SELECT customer.cust_name FROM customer WHERE customer.acc_type = '1'         
SELECT DISTINCT songs.Title FROM Songs JOIN Vocals ON songs.SongId = T2.SongId        EXCEPT SELECT songs.Title FROM Songs JOIN Vocals ON songs.SongId = vocals.SongId WHERE vocals.Type = '1'       
SELECT count( *) FROM Album JOIN Artist ON album.ArtistId = artist.ArtistId WHERE artist.Name = 'Metallica'       
SELECT faculty.Room FROM Faculty WHERE faculty.Rank = 'Professor' and faculty.Building = 'NEB'       
"SELECT artist.artist_name, count( *) FROM artist  GROUP BY artist.artist_name  ORDER BY count( *) DESC LIMIT 1    "
"SELECT student.Fname, student.LName FROM Student JOIN Member_of_club ON student.StuID = Member_of_club.StuID JOIN Club ON Member_of_club.ClubID = club.ClubID WHERE club.ClubName = 'Hopkins Student Enterprises' and student.Sex = 'M'       "
SELECT count( *) FROM STUDENT JOIN ENROLL ON student.STU_NUM = T3.STU_NUM JOIN CLASS ON T3.CLASS_CODE = class.CLASS_CODE JOIN DEPARTMENT ON student.DEPT_CODE = department.DEPT_CODE WHERE department.DEPT_NAME = 'Accounting'       
SELECT count( *) FROM Songs        
"SELECT employee.EMP_FNAME, employee.EMP_LNAME FROM EMPLOYEE    ORDER BY employee.EMP_DOB ASC LIMIT 1    "
SELECT lots.lot_details FROM Lots JOIN Transactions_Lots ON lots.lot_id = T3.lot_id JOIN Transactions ON T3.transaction_id = transactions.transaction_id WHERE transactions.share_count < '50'       
SELECT faculty.Faculty FROM faculty JOIN Campuses ON faculty.Campus = Campuses.Id JOIN degrees ON Campuses.Id = degrees.Campus WHERE faculty.Year = 2001   ORDER BY degrees.Degrees ASC LIMIT 1    
SELECT business.name FROM business WHERE business.rating < 2 and business.state = 'Texas'       
SELECT files.f_id FROM files    ORDER BY files.duration DESC LIMIT 1    
SELECT DISTINCT customers.customer_details FROM Customers JOIN Orders ON customers.customer_id = orders.customer_id WHERE orders.order_status = 'On Road'       
SELECT customers.customer_name FROM Customers JOIN Orders ON customers.customer_id = T2.customer_id  GROUP BY customers.customer_name HAVING count( *) <= 2     
SELECT DISTINCT count(DISTINCT college.state) FROM College WHERE college.enr < (SELECT avg( college.enr) FROM College        )       
SELECT faculty.Room FROM Faculty WHERE faculty.Rank = 'Professor' and faculty.Building = 'NEB'       
SELECT tourist_attractions.How_to_Get_There FROM Tourist_Attractions  GROUP BY tourist_attractions.How_to_Get_There  ORDER BY count( *) DESC LIMIT 1    
SELECT people.Name FROM people WHERE people.Height < (SELECT avg( people.Height) FROM people        )       
SELECT business.name FROM business JOIN category ON business.business_id = category.business_id JOIN review ON business.business_id = review.business_id JOIN user ON review.user_id = user.user_id WHERE business.city = '1' and category.category_name = '1' and user.name = '1'       
"SELECT roles.role_description, employees.role_code, count( *) FROM Roles JOIN Employees ON roles.role_code = employees.role_code  GROUP BY employees.role_code      "
"SELECT orders.order_id, orders.customer_id FROM Orders    ORDER BY orders.date_order_placed ASC LIMIT 1    "
SELECT count( *) FROM actor        
SELECT count( *) FROM Addresses WHERE addresses.state_province_county = 'Colorado'       
"SELECT station.name, station.lat, station.city FROM station    ORDER BY station.lat ASC LIMIT 1    "
"SELECT album.Title, track.AlbumId FROM Album JOIN Track ON album.AlbumId = track.AlbumId WHERE track.UnitPrice > 1       "
SELECT locations.Other_Details FROM Locations WHERE locations.Location_Name = 'UK Gallery'       
SELECT river.river_name FROM river WHERE river.traverse = '1'       
SELECT avg( player.height) FROM player JOIN player_college ON player.player_id = player_college.player_id JOIN college ON player_college.college_id = college.college_id WHERE college.name_full = 'Yale University'       
SELECT * FROM Albums WHERE albums.Year = 2012       
SELECT avg( club_rank.Gold) FROM club_rank        
SELECT election.Delegate FROM election WHERE election.District = 1       
SELECT mountain.Name FROM mountain     ORDER BY mountain.Name ASC   
SELECT race.Class FROM race  GROUP BY race.Class  ORDER BY count( *) DESC LIMIT 1    
SELECT channel.Name FROM channel WHERE channel.Owner != 'CCTV'       
SELECT shop.Shop_Name FROM shop     ORDER BY shop.Open_Year ASC   
"SELECT department.DEPT_NAME, department.DEPT_ADDRESS, count( *) FROM DEPARTMENT JOIN STUDENT ON department.DEPT_CODE = student.DEPT_CODE  GROUP BY student.DEPT_CODE  ORDER BY count( *) DESC LIMIT 1    "
SELECT product.product_name FROM Product JOIN Problems ON product.product_id = problems.product_id  GROUP BY product.product_name  ORDER BY count( *) DESC LIMIT 1    
SELECT publication.title FROM publication JOIN writes ON publication.pid = writes.pid JOIN author ON writes.aid = author.aid JOIN conference ON publication.cid = conference.cid WHERE author.name = '1' and conference.name = '1' and publication.year > 1       
SELECT count( *) FROM member WHERE member.Address != 'Hartford'       
"SELECT catalog_contents.catalog_entry_name, catalog_contents.capacity FROM Catalog_Contents WHERE catalog_contents.price_in_dollars > 700       "
SELECT company.Headquarters FROM company WHERE company.Industry = 'Banking'     INTERSECT SELECT company.Headquarters FROM company WHERE company.Industry = 'Oil and gas'         
SELECT rooms.roomName FROM Rooms     ORDER BY rooms.basePrice ASC   
"SELECT employees.FIRST_NAME, employees.LAST_NAME FROM employees WHERE employees.SALARY > (SELECT employees.SALARY FROM employees WHERE employees.EMPLOYEE_ID = 163       )       "
"SELECT member.Member_Name, party.Party_name FROM member JOIN party ON member.Party_ID = party.Party_ID        "
SELECT team.name FROM team JOIN home_game ON team.team_id = home_game.team_id WHERE home_game.year = 1980   ORDER BY home_game.attendance ASC LIMIT 1    
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN cite ON paper.paperId = T3.citingPaperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
SELECT songs.Title FROM Songs JOIN Tracklists ON songs.SongId = Tracklists.SongId JOIN Albums ON Tracklists.AlbumId = albums.AId WHERE albums.Label = 'Universal Music Group'       
"SELECT max( customers.amount_outstanding), min( customers.amount_outstanding), avg( customers.amount_outstanding) FROM Customers        "
SELECT musical.Nominee FROM musical WHERE musical.Award = 'Tony Award'     INTERSECT SELECT musical.Nominee FROM musical WHERE musical.Award = 'Drama Desk Award'         
SELECT documents_with_expenses.Budget_Type_Code FROM Documents_with_Expenses  GROUP BY documents_with_expenses.Budget_Type_Code  ORDER BY count( *) DESC LIMIT 1    
"SELECT phone.Carrier, count( *) FROM phone  GROUP BY phone.Carrier      "
SELECT count( *) FROM venue        
SELECT sports_info.StuID FROM SportsInfo  GROUP BY sports_info.StuID HAVING sum( sports_info.HoursPerWeek) > 10     
SELECT college.state FROM College JOIN Tryout ON college.cName = tryout.cName WHERE tryout.pPos = '1'       EXCEPT SELECT college.state FROM College JOIN Tryout ON college.cName = tryout.cName WHERE tryout.pPos = '1'       
SELECT faculty.Lname FROM Faculty JOIN Faculty_Participates_in ON faculty.FacID = Faculty_Participates_in.FacID JOIN Activity ON Faculty_Participates_in.actid = activity.actid WHERE activity.activity_name = 'Canoeing'     INTERSECT SELECT faculty.Lname FROM Faculty JOIN Faculty_Participates_in ON faculty.FacID = Faculty_Participates_in.FacID JOIN Activity ON Faculty_Participates_in.actid = activity.actid WHERE activity.activity_name = 'Kayaking'         
SELECT organizations.organization_name FROM Organizations     ORDER BY organizations.date_formed ASC   
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN cite ON paper.paperId = T3.citingPaperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Daniel Jurafsky'       
"SELECT projects.Name, projects.Hours FROM Projects JOIN AssignedTo ON projects.Code = T3.Project JOIN Scientists ON T3.Scientist = scientists.SSN  GROUP BY T3.Project  ORDER BY count( *) DESC LIMIT 1    "
SELECT video_games.GName FROM Video_Games WHERE video_games.GType = '1'       
SELECT railway.Location FROM railway  GROUP BY railway.Location HAVING count( *) > 1     
"SELECT addresses.City_Town, count( *) FROM Addresses JOIN Drama_Workshop_Groups ON addresses.Address_ID = drama_workshop_groups.Address_ID  GROUP BY addresses.City_Town      "
SELECT DISTINCT paper.paperId FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 1 and venue.venueName = '1'       
SELECT * FROM jobs JOIN employees ON jobs.JOB_ID = employees.JOB_ID WHERE employees.SALARY >= 12000       
"SELECT ship.Type, ship.Nationality FROM ship        "
SELECT film.Studio FROM film  GROUP BY film.Studio HAVING avg( film.Gross_in_dollar) >= 4500000     
SELECT hotels.price_range FROM Hotels WHERE hotels.star_rating_code = '5'       
"SELECT branch.Name, branch.Address_road, branch.City FROM branch     ORDER BY branch.Open_year ASC   "
SELECT visitors.Tourist_Details FROM Visitors        
SELECT entrepreneur.Investor FROM entrepreneur  GROUP BY entrepreneur.Investor HAVING count( *) >= 2     
SELECT count( *) FROM teachers WHERE teachers.FirstName = 'LORIA' and teachers.LastName = 'ONDERSMA'       
SELECT cinema.Location FROM cinema WHERE cinema.Capacity > 300 GROUP BY cinema.Location HAVING count( *) >= 2     
SELECT river.river_name FROM river  GROUP BY river.river_name  ORDER BY count( river.traverse) DESC LIMIT 1    
"SELECT max( grade_conversion.gradepoint), min( grade_conversion.gradepoint) FROM Gradeconversion        "
SELECT DISTINCT paper.journalId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Takashi Matsumoto'       
SELECT count( city.city_name) FROM city WHERE city.population > 1 and city.state_name = '1'       
"SELECT musical.Name, count( *) FROM musical JOIN actor  GROUP BY musical.Name      "
SELECT count( *) FROM department WHERE department.Department_ID NOT IN (SELECT management.department_ID FROM management        )       
SELECT count( *) FROM Student JOIN Lives_in ON student.StuID = Lives_in.stuid JOIN Dorm ON Lives_in.dormid = dorm.dormid WHERE dorm.dorm_name = 'Smith Hall' and student.Sex = 'F'       
SELECT documents.document_name FROM Documents JOIN Document_Sections ON documents.document_code = T2.document_code  GROUP BY documents.document_name  ORDER BY count( *) DESC LIMIT 1    
SELECT neighbourhood.neighbourhood_name FROM neighbourhood JOIN business ON neighbourhood.business_id = business.business_id JOIN category ON business.business_id = category.business_id WHERE business.city = '1' and category.category_name = '1' and category.category_name = '1'       
"SELECT election.Delegate, party.Party FROM election JOIN party ON election.Party = party.Party_ID        "
SELECT problems.problem_id FROM Problems WHERE problems.date_problem_reported < '1978-06-26'       
"SELECT DISTINCT list.Classroom, list.Grade FROM list        "
"SELECT film.title, inventory.inventory_id FROM film JOIN inventory ON film.film_id = inventory.film_id  GROUP BY inventory.film_id  ORDER BY count( *) DESC LIMIT 1    "
SELECT count( *) FROM venue        
SELECT count( *) FROM Voting_record        
"SELECT trip.start_station_id, trip.start_station_name FROM trip  GROUP BY trip.start_station_id, trip.start_station_name HAVING count( *) >= 200     "
"SELECT min( county_public_safety.Crime_rate), max( county_public_safety.Crime_rate) FROM county_public_safety        "
SELECT count( *) FROM Products JOIN Ref_Colors ON products.color_code = reference_colors.color_code JOIN Product_Characteristics ON products.product_id = Product_Characteristics.product_id JOIN Characteristics ON Product_Characteristics.characteristic_id = characteristics.characteristic_id WHERE reference_colors.color_description = 'red' and characteristics.characteristic_name = 'slow'       
"SELECT ship.Type, avg( ship.Tonnage) FROM ship  GROUP BY ship.Type      "
SELECT count( *) FROM Staff JOIN Addresses ON staff.staff_address_id = addresses.address_id WHERE addresses.state_province_county = 'Georgia'       
SELECT DISTINCT allergy_type.Allergy FROM Allergy_Type WHERE allergy_type.AllergyType = 'food'       
SELECT people.Name FROM people     ORDER BY people.Weight ASC   
"SELECT sum( university.Enrollment), university.Affiliation FROM university WHERE university.Founded > 1850 GROUP BY university.Affiliation      "
SELECT products.product_category_code FROM Products WHERE products.product_name = 'flax'       
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = 'Question Answering'       
"SELECT address.address, customer.email FROM address JOIN customer ON address.address_id = customer.address_id WHERE customer.first_name = 'LINDA'       "
SELECT reservations.Kids FROM Reservations WHERE reservations.FirstName = 'ROY' and reservations.LastName = 'SWEAZY'       
SELECT river.traverse FROM river WHERE river.river_name = '1'       
"SELECT employees.DEPARTMENT_ID, sum( employees.SALARY) FROM employees  GROUP BY employees.DEPARTMENT_ID HAVING count( *) >= 2     "
SELECT DISTINCT count(DISTINCT airports.city) FROM airports WHERE airports.country = 'Greenland'       
"SELECT count( *), sum( dorm.student_capacity), dorm.gender FROM Dorm  GROUP BY dorm.gender      "
"SELECT market.Country, film_market_estimation.Year FROM market JOIN film_market_estimation ON market.Market_ID = film_market_estimation.Market_ID        "
SELECT mill.name FROM mill WHERE mill.location != 'Donceel'       
SELECT party.Party_name FROM party JOIN party_events ON party.Party_ID = T2.Party_ID  GROUP BY party.Party_name HAVING count( *) >= 2     
SELECT reference_colors.color_description FROM Ref_Colors JOIN Products ON reference_colors.color_code = products.color_code  GROUP BY reference_colors.color_description  ORDER BY count( *) ASC LIMIT 1    
SELECT DISTINCT count(DISTINCT publication.title) FROM publication JOIN writes ON publication.pid = writes.pid JOIN author ON writes.aid = author.aid JOIN conference ON publication.cid = conference.cid WHERE author.name = '1' and conference.name = '1' and publication.year > 1       
SELECT product.max_page_size FROM product  GROUP BY product.max_page_size  ORDER BY count( *) DESC LIMIT 1    
SELECT river.river_name FROM river WHERE river.traverse = (SELECT city.state_name FROM city WHERE city.population > 1 GROUP BY city.state_name  ORDER BY count( city.city_name) DESC LIMIT 1    )   ORDER BY river.length DESC LIMIT 1    
SELECT faculty.Rank FROM Faculty  GROUP BY faculty.Rank  ORDER BY count( *) ASC LIMIT 1    
SELECT count( *) FROM venue        
SELECT city.city_name FROM city WHERE city.population = (SELECT max( city.population) FROM city JOIN state ON city.state_name = T23.state_name        )       
SELECT count( *) FROM appellations WHERE appellations.County = 'Napa'       
SELECT services.Service_name FROM Services     ORDER BY services.Service_name ASC   
SELECT count( *) FROM artist        
SELECT avg( perpetrator.Injured) FROM perpetrator        
SELECT weather.date FROM weather WHERE weather.zip_code = 1 and weather.events != '1' and weather.events != '1'       
SELECT campuses.Campus FROM Campuses WHERE campuses.Year >= 1935 and campuses.Year <= 1939       
SELECT payments.payment_date FROM Payments WHERE payments.amount_paid > 300 or payments.payment_type_code = 'Check'       
SELECT course.dept_name FROM course  GROUP BY course.dept_name  ORDER BY count( *) DESC LIMIT 1    
SELECT count( *) FROM artist        
SELECT stadium.name FROM stadium WHERE stadium.Capacity < (SELECT avg( stadium.Capacity) FROM stadium        )       
"SELECT DISTINCT order_items.order_id, count(DISTINCT order_items.product_id) FROM Order_Items  GROUP BY order_items.order_id      "
SELECT DISTINCT list.Grade FROM list WHERE list.Classroom = 103       
"SELECT wrestler.Name, wrestler.Location FROM wrestler        "
SELECT student.STU_LNAME FROM STUDENT JOIN ENROLL ON student.STU_NUM = enroll.STU_NUM WHERE enroll.ENROLL_GRADE = 'A' and enroll.CLASS_CODE = '10018'       
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and location.STREET_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
"SELECT count( *), section.semester, section.year FROM course JOIN section ON course.course_id = section.course_id  GROUP BY section.course_id      "
SELECT count( *) FROM Customers        
"SELECT airports.name, airports.city, airports.country FROM airports    ORDER BY airports.elevation ASC LIMIT 1    "
"SELECT church.Name, church.Open_Date, church.Organized_by FROM church        "
SELECT college.state FROM College JOIN Tryout ON college.cName = Tryout.cName JOIN Player ON Tryout.pID = player.pID WHERE player.pName = 'Charles'       
SELECT city.City FROM city    ORDER BY city.Regional_Population DESC LIMIT 1    
SELECT candidate.Support_rate FROM candidate    ORDER BY candidate.Support_rate DESC LIMIT 1    
SELECT student.LName FROM Student JOIN Member_of_club ON student.StuID = Member_of_club.StuID JOIN Club ON Member_of_club.ClubID = club.ClubID WHERE club.ClubName = 'Hopkins Student Enterprises'       
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1'       
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId JOIN venue ON paper.venueId = venue.venueId WHERE key_phrase.keyphraseName = 'TAIL' and venue.venueName = 'NIPS'       
SELECT count( *) FROM store        
SELECT count( *) FROM Student        
"SELECT faculty.Rank, faculty.Fname, faculty.Lname FROM Faculty        "
SELECT count( *) FROM Album JOIN Artist ON album.ArtistId = artist.ArtistId WHERE artist.Name = 'Metallica'       
SELECT reference_product_categories.product_category_description FROM Ref_Product_Categories JOIN Products ON reference_product_categories.product_category_code = products.product_category_code WHERE products.product_description like '%t%'       
"SELECT customers.customer_first_name, customers.customer_last_name, customers.customer_phone FROM Customers JOIN Customers_Cards WHERE customers_cards.card_number = '4560596484842'       "
"SELECT staff_roles.role_description, project_staff.staff_id FROM Staff_Roles JOIN Project_Staff ON staff_roles.role_code = project_staff.role_code JOIN Projects ON project_staff.project_id = projects.project_id JOIN Project_Outcomes ON projects.project_id = T4.project_id  GROUP BY project_staff.role_code  ORDER BY count( *) DESC LIMIT 1    "
SELECT DISTINCT club.ClubName FROM Club JOIN Member_of_club ON club.ClubID = Member_of_club.ClubID JOIN Student ON Member_of_club.StuID = student.StuID WHERE student.Fname = 'Davis' and student.LName = 'Steven'       
SELECT mountain.Name FROM mountain     ORDER BY mountain.Name ASC   
SELECT dorm.dorm_name FROM Dorm JOIN Has_amenity ON dorm.dormid = Has_amenity.dormid JOIN Dorm_amenity ON Has_amenity.amenid = dorm_amenity.amenid WHERE dorm_amenity.amenity_name = 'TV Lounge'     INTERSECT SELECT dorm.dorm_name FROM Dorm JOIN Has_amenity ON dorm.dormid = Has_amenity.dormid JOIN Dorm_amenity ON Has_amenity.amenid = dorm_amenity.amenid WHERE dorm_amenity.amenity_name = 'Study Room'         
"SELECT accounts.customer_id, count( *) FROM Accounts  GROUP BY accounts.customer_id      "
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Peter Mertens' and author.authorName = 'Dina Barbian'       
"SELECT orders.order_id, orders.customer_id FROM Orders    ORDER BY orders.date_order_placed ASC LIMIT 1    "
SELECT sum( discipline_enrollments.Undergraduate) FROM discipline_enrollments JOIN Campuses ON discipline_enrollments.Campus = campuses.Id WHERE discipline_enrollments.Year = 2004 and campuses.Campus = 'San Jose State University'       
"SELECT employees.Employee_Name, employees.Role_Code, employees.Date_of_Birth FROM Employees WHERE employees.Employee_Name = 'Armani'       "
SELECT member.Address FROM member WHERE member.Age < 30     INTERSECT SELECT member.Address FROM member WHERE member.Age > 40         
SELECT count( *) FROM state        
"SELECT min( student.Age), avg( student.Age), max( student.Age) FROM Student        "
SELECT * FROM College     ORDER BY college.enr ASC   
SELECT count( student_course_enrolment.course_id) FROM Student_Course_Enrolment        
"SELECT club.name, player.Player_ID FROM club JOIN player ON club.Club_ID = player.Club_ID        "
SELECT city.city_name FROM city WHERE city.population = (SELECT max( city.population) FROM city        )       
SELECT song.f_id FROM song WHERE song.resolution > (SELECT avg( song.resolution) FROM song WHERE song.genre_is = '1'       )       
"SELECT assets.asset_make, assets.asset_model, assets.asset_details FROM Assets     ORDER BY assets.asset_disposed_date ASC   "
SELECT temperature.Jan FROM temperature JOIN city ON temperature.City_ID = city.City_ID WHERE city.City = 'Shanghai'       
"SELECT count( *), third_party_companies.company_id FROM Assets JOIN Third_Party_Companies ON assets.supplier_company_id = third_party_companies.company_id  GROUP BY third_party_companies.company_id      "
"SELECT customers.customer_email, customers.customer_name FROM Customers WHERE customers.payment_method = 'Visa'       "
"SELECT branch.Name, count( *) FROM branch JOIN membership_register_branch ON branch.Branch_ID = membership_register_branch.Branch_ID WHERE membership_register_branch.Register_Year > '2015' GROUP BY branch.Name      "
SELECT count( *) FROM Inst        
SELECT DISTINCT drivers.forename FROM drivers JOIN driverStandings ON drivers.driverId = driver_standings.driverId WHERE driver_standings.position = 1 and driver_standings.wins = 1       
"SELECT college.cName, college.enr FROM College WHERE college.enr > 10000 and college.state = 'LA'       "
SELECT person.name FROM Person WHERE person.gender = 'male'    ORDER BY person.age ASC   
SELECT highlow.highest_point FROM highlow WHERE highlow.state_name = '1'       
SELECT count( *) FROM Customers    ORDER BY count( *) DESC LIMIT 1    
"SELECT tourist_attractions.Name, tourist_attractions.Tourist_Attraction_ID FROM Tourist_Attractions JOIN Visits ON tourist_attractions.Tourist_Attraction_ID = T2.Tourist_Attraction_ID  GROUP BY T2.Tourist_Attraction_ID HAVING count( *) <= 1     "
SELECT customers.customer_name FROM Customers JOIN Orders ON customers.customer_id = orders.customer_id  GROUP BY customers.customer_name  ORDER BY count( *) DESC LIMIT 1    
SELECT projects.project_details FROM Projects WHERE projects.organisation_id in (SELECT projects.organisation_id FROM Projects  GROUP BY projects.organisation_id  ORDER BY count( *) DESC LIMIT 1    )       
SELECT school.Denomination FROM school  GROUP BY school.Denomination HAVING count( *) > 1     
"SELECT orders.order_id, orders.order_details FROM Orders JOIN Invoices ON orders.order_id = T2.order_id  GROUP BY T2.order_id HAVING count( *) > 2     "
SELECT employee.name FROM employee WHERE employee.salary > (SELECT avg( employee.salary) FROM employee        )       
"SELECT student.Fname, student.LName FROM Student WHERE student.Age < (SELECT avg( student.Age) FROM Student        )       "
SELECT volume.Song FROM volume WHERE volume.Weeks_on_Top > 1       
SELECT activity.activity_name FROM Activity JOIN Faculty_Participates_in ON activity.actid = T3.actid JOIN Faculty ON T3.FacID = faculty.FacID  GROUP BY activity.activity_name  ORDER BY count( *) DESC LIMIT 1    
SELECT course.title FROM course JOIN section ON course.course_id = section.course_id WHERE section.building = 'Chandler' and section.semester = 'Fall' and section.year = 2010       
SELECT author.name FROM author JOIN writes ON author.aid = writes.aid JOIN publication ON writes.pid = publication.pid JOIN conference ON publication.cid = conference.cid WHERE conference.name = 'VLDB'       
SELECT DISTINCT count(DISTINCT order_items.product_id) FROM Order_Items JOIN Customer_Orders ON order_items.order_id = Customer_Orders.order_id JOIN Customers ON Customer_Orders.customer_id = customers.customer_id WHERE customers.customer_name = 'Rodrick Heaney'       
SELECT party.Party_name FROM party JOIN member ON party.Party_ID = member.Party_ID  GROUP BY party.Party_name  ORDER BY count( *) DESC LIMIT 1    
"SELECT player.Player, player.Years_Played FROM player JOIN team ON player.Team = team.Team_id WHERE team.Name = 'Columbus Crew'       "
"SELECT min( player.HS), tryout.pPos FROM Player JOIN Tryout ON player.pID = tryout.pID  GROUP BY tryout.pPos      "
SELECT tracks.name FROM tracks JOIN albums ON tracks.album_id = albums.id WHERE albums.title = '1'       
SELECT DISTINCT election.District FROM election        
SELECT highlow.highest_point FROM highlow WHERE highlow.state_name in (SELECT state.state_name FROM state WHERE state.capital = '1'       )       
"SELECT staff.first_name, staff.last_name, staff.staff_id FROM staff JOIN payment ON staff.staff_id = payment.staff_id  GROUP BY payment.staff_id  ORDER BY count( *) ASC LIMIT 1    "
SELECT publication.title FROM publication JOIN writes ON publication.pid = writes.pid JOIN author ON writes.aid = author.aid WHERE author.name = '1' and author.name = '1'   ORDER BY publication.citation_num DESC LIMIT 1    
SELECT team.Name FROM team        
SELECT course.title FROM course WHERE course.course_id in (SELECT prerequisite.prereq_id FROM prereq JOIN course ON prerequisite.prereq_id = course.course_id WHERE course.title = 'International Finance'       )       
SELECT count( *) FROM Problems JOIN Product ON problems.product_id = product.product_id WHERE product.product_name = '1'       
SELECT screen_mode.Pixels FROM screen_mode JOIN phone ON screen_mode.Graphics_mode = phone.screen_mode WHERE phone.Accreditation_type = '1'     INTERSECT SELECT screen_mode.Pixels FROM screen_mode JOIN phone ON screen_mode.Graphics_mode = phone.screen_mode WHERE phone.Accreditation_type = '1'         
SELECT song.f_id FROM song WHERE song.resolution > (SELECT avg( song.resolution) FROM song WHERE song.genre_is = '1'       )       
"SELECT web_client_accelerator.name, web_client_accelerator.Operating_system FROM Web_client_accelerator        EXCEPT SELECT web_client_accelerator.name, web_client_accelerator.Operating_system FROM Web_client_accelerator JOIN accelerator_compatible_browser ON web_client_accelerator.id = accelerator_compatible_browser.accelerator_id JOIN browser ON accelerator_compatible_browser.browser_id = browser.id WHERE browser.name = 'Opera'       "
"SELECT documents.Project_ID, count( *) FROM Documents  GROUP BY documents.Project_ID      "
SELECT count( *) FROM STUDENT JOIN ENROLL ON student.STU_NUM = ENROLL.STU_NUM JOIN CLASS ON ENROLL.CLASS_CODE = class.CLASS_CODE WHERE class.CRS_CODE = 'ACCT-211'       
SELECT keyword.keyword FROM keyword JOIN publication_keyword ON keyword.kid = publication_keyword.kid JOIN publication ON publication_keyword.pid = publication.pid JOIN conference ON publication.cid = conference.cid WHERE conference.name = 'VLDB' GROUP BY keyword.keyword HAVING count( publication.title) > '100'     
SELECT problems.product_id FROM Problems JOIN Staff ON problems.reported_by_staff_id = staff.staff_id WHERE staff.staff_first_name = 'Christop' and staff.staff_last_name = 'Berge'     INTERSECT SELECT problems.product_id FROM Problems JOIN Staff ON problems.reported_by_staff_id = staff.staff_id WHERE staff.staff_first_name = 'Ashley' and staff.staff_last_name = 'Medhurst'         
SELECT film.title FROM film WHERE film.rating = 'R'       
SELECT count( *) FROM Customers        
"SELECT max( companies.Sales_billion), min( companies.Sales_billion) FROM Companies WHERE companies.Industry != 'Banking'       "
"SELECT medicine_enzyme_interaction.interaction_type, count( *) FROM medicine_enzyme_interaction JOIN enzyme ON medicine_enzyme_interaction.enzyme_id = enzyme.id  GROUP BY medicine_enzyme_interaction.interaction_type  ORDER BY count( *) DESC LIMIT 1    "
SELECT county.County_name FROM county JOIN election ON county.County_Id = election.District WHERE election.Committee = 'Appropriations'       
SELECT DISTINCT residents.date_moved_in FROM Residents        
SELECT artist.artist_name FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.languages = 'bangla' GROUP BY artist.artist_name  ORDER BY count( *) DESC LIMIT 1    
SELECT reference_product_categories.unit_of_measure FROM Ref_Product_Categories WHERE reference_product_categories.product_category_code = 'Herbs'       
"SELECT avg( song.rating), song.languages FROM song  GROUP BY song.languages      "
SELECT business.name FROM business JOIN category ON business.business_id = category.business_id WHERE business.city = '1' and category.category_name = '1' and category.category_name = '1'       
"SELECT participants.Participant_ID, participants.Participant_Type_Code, count( *) FROM Participants JOIN Participants_in_Events ON participants.Participant_ID = Participants_in_Events.Participant_ID JOIN Events ON Participants_in_Events.Event_ID = events.Event_ID  GROUP BY participants.Participant_ID      "
"SELECT DISTINCT cite.citedPaperId, count(DISTINCT cite.citedPaperId) FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' GROUP BY cite.citedPaperId   ORDER BY count( cite.citedPaperId) DESC   "
SELECT files.f_id FROM files    ORDER BY files.duration DESC LIMIT 1    
SELECT organizations.organization_id FROM Organizations        EXCEPT SELECT organizations.parent_organization_id FROM Organizations        
SELECT stadium.name FROM stadium JOIN event ON stadium.ID = event.Stadium_ID JOIN record ON event.ID = record.Event_ID JOIN swimmer ON record.Swimmer_ID = swimmer.ID WHERE swimmer.Nationality = 'Australia'       
SELECT count( *) FROM station WHERE station.city = 'Mountain View'       
"SELECT party.Location, host.Name FROM party JOIN party_host ON party.Party_ID = party_host.Party_ID JOIN host ON party_host.Host_ID = host.Host_ID     ORDER BY host.Age ASC   "
"SELECT employees.EMPLOYEE_ID, countries.COUNTRY_NAME FROM employees JOIN departments ON employees.DEPARTMENT_ID = departments.DEPARTMENT_ID JOIN locations ON departments.LOCATION_ID = locations.LOCATION_ID JOIN countries ON locations.COUNTRY_ID = countries.COUNTRY_ID        "
SELECT rooms.decor FROM Rooms JOIN Reservations ON rooms.RoomId = T2.Room  GROUP BY rooms.decor  ORDER BY count( rooms.decor) ASC LIMIT 1    
SELECT customers.phone_number FROM Customers JOIN Complaints ON customers.customer_id = complaints.customer_id    ORDER BY complaints.date_complaint_raised DESC LIMIT 1    
SELECT student_course_enrolment.date_of_completion FROM Student_Course_Enrolment JOIN Student_Tests_Taken ON student_course_enrolment.registration_id = student_tests_taken.registration_id WHERE student_tests_taken.test_result = 'Fail'       
SELECT school.Denomination FROM school WHERE school.Founded < 1890     INTERSECT SELECT school.Denomination FROM school WHERE school.Founded > 1900         
SELECT DISTINCT city.city_name FROM city JOIN state ON city.state_name = state.state_name JOIN river ON state.state_name = T2.traverse WHERE city.population = (SELECT max( city.population) FROM city JOIN state ON city.state_name = state.state_name JOIN river ON state.state_name = T24.traverse        )       
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN cite ON paper.paperId = T3.citingPaperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Daniel Jurafsky'       
SELECT physician.Name FROM Physician JOIN Trained_In ON physician.EmployeeID = T3.Physician JOIN Procedures ON T3.Treatment = procedures.Code WHERE procedures.Cost > 5000       
"SELECT actor.Name, musical.Name FROM musical JOIN actor        "
SELECT count( *) FROM item WHERE item.i_id NOT IN (SELECT review.i_id FROM review        )       
SELECT count( *) FROM venue        
"SELECT images.image_name, images.image_url FROM Images     ORDER BY images.image_name ASC   "
SELECT customers_cards.card_type_code FROM Customers_Cards  GROUP BY customers_cards.card_type_code HAVING count( *) >= 5     
SELECT student.city_code FROM Student  GROUP BY student.city_code  ORDER BY count( *) DESC LIMIT 1    
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and location.STREET_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT person.name FROM Person WHERE person.job = 'student' and person.age = (SELECT max( person.age) FROM Person WHERE person.job = 'student'       )       
"SELECT max( grade_conversion.gradepoint), min( grade_conversion.gradepoint) FROM Gradeconversion        "
"SELECT assets.asset_id, assets.asset_details, assets.asset_make, assets.asset_model FROM Assets        "
SELECT employee.name FROM employee    ORDER BY employee.salary ASC LIMIT 1    
SELECT employee.EMP_FNAME FROM EMPLOYEE JOIN CLASS ON employee.EMP_NUM = class.PROF_NUM WHERE class.CRS_CODE = 'CIS-220'     INTERSECT SELECT employee.EMP_FNAME FROM EMPLOYEE JOIN CLASS ON employee.EMP_NUM = class.PROF_NUM WHERE class.CRS_CODE = 'QM-261'         
"SELECT basketball_match.All_Games, university.Location FROM basketball_match JOIN university ON basketball_match.School_ID = university.School_ID WHERE basketball_match.Team_Name = 'Clemson'       "
"SELECT DISTINCT physician.Name, physician.Position FROM Physician JOIN Prescribes ON physician.EmployeeID = Prescribes.Physician JOIN Medication ON Prescribes.Medication = medication.Code WHERE medication.Brand = 'X'       "
SELECT count( *) FROM team_franchise WHERE team_franchise.active = 'Y'       
SELECT channel.Name FROM channel     ORDER BY channel.Rating_in_percent DESC   
SELECT tryout.cName FROM Tryout WHERE tryout.decision = '1' and tryout.pPos = '1'       
"SELECT DISTINCT paper.paperId, paper.year FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'    ORDER BY paper.year ASC   "
SELECT residents.other_details FROM Residents WHERE residents.other_details like '%Miss%'       
SELECT count( *) FROM product        
"SELECT DISTINCT things.thing_id, things.Type_of_Thing_Code FROM Things JOIN Timed_Status_of_Things ON things.thing_id = timed_status_of_things.thing_id WHERE timed_status_of_things.Status_of_Thing_Code = 'Close' or timed_status_of_things.Date_and_Date < '2017-06-19 02:59:21'       "
SELECT apartments.apt_number FROM Apartments    ORDER BY apartments.bedroom_count DESC LIMIT 1    
SELECT program.Name FROM program        EXCEPT SELECT program.Name FROM program JOIN broadcast ON program.Program_ID = broadcast.Program_ID WHERE broadcast.Time_of_day = 'Morning'       
SELECT DISTINCT count(DISTINCT writes.paperId) FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
SELECT count( state.state_name) FROM state        
SELECT domain.name FROM domain JOIN domain_author ON domain.did = domain_author.did JOIN author ON domain_author.aid = author.aid WHERE author.name = '1'       
SELECT river.river_name FROM river WHERE river.length = (SELECT max( river.length) FROM river        )       
SELECT business.name FROM business JOIN category ON business.business_id = category.business_id WHERE business.state = '1' and category.category_name = '1'       
SELECT bookings.Status_Code FROM Bookings  GROUP BY bookings.Status_Code  ORDER BY count( *) DESC LIMIT 1    
"SELECT reviewer.name, avg( rating.stars) FROM Reviewer JOIN Rating ON reviewer.rID = rating.rID  GROUP BY reviewer.name      "
SELECT students.personal_name FROM Students        EXCEPT SELECT students.personal_name FROM Students JOIN Student_Course_Enrolment ON students.student_id = T3.student_id        
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1'       
SELECT region.Region_name FROM region     ORDER BY region.Region_name ASC   
SELECT DISTINCT visits.Visit_Date FROM Visits        
"SELECT students.personal_name, students.family_name FROM Students     ORDER BY students.family_name ASC   "
"SELECT country.Country_name, country.Capital FROM country        "
"SELECT employee.EMP_FNAME, professor.PROF_OFFICE FROM EMPLOYEE JOIN PROFESSOR ON employee.EMP_NUM = professor.EMP_NUM     ORDER BY employee.EMP_FNAME ASC   "
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT songs.Title FROM Songs JOIN Tracklists ON songs.SongId = Tracklists.SongId JOIN Albums ON Tracklists.AlbumId = albums.AId WHERE albums.Label = 'Universal Music Group'       
"SELECT count( *), employees.city FROM employees WHERE employees.title = 'IT Staff' GROUP BY employees.city      "
SELECT campuses.Campus FROM Campuses WHERE campuses.Year < 1800       
SELECT avg( college.enr) FROM College        
SELECT addresses.city FROM Addresses     ORDER BY addresses.city ASC   
SELECT count( *) FROM region        
"SELECT max( volume.Weeks_on_Top), min( volume.Weeks_on_Top) FROM volume        "
"SELECT customers.customer_first_name, customers.customer_last_name, customers.customer_phone FROM Customers JOIN Customers_Cards WHERE customers_cards.card_number = '4560596484842'       "
"SELECT movie.title, avg( rating.stars) FROM Movie JOIN Rating ON movie.mID = rating.mID  GROUP BY movie.title  ORDER BY avg( rating.stars) ASC LIMIT 1    "
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
SELECT count( *) FROM Campuses        
"SELECT sum( course.credits), course.dept_name FROM course  GROUP BY course.dept_name      "
SELECT avg( status.bikes_available) FROM status WHERE status.station_id NOT IN (SELECT station.id FROM station WHERE station.city = 'Palo Alto'       )       
"SELECT DISTINCT author.authorId, paper.paperId FROM author JOIN writes ON author.authorId = writes.authorId JOIN paper ON writes.paperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE author.authorName = '1' and key_phrase.keyphraseName = '1'       "
SELECT services.Service_name FROM Services     ORDER BY services.Service_name ASC   
"SELECT count( *), sum( dorm.student_capacity), dorm.gender FROM Dorm  GROUP BY dorm.gender      "
SELECT representative.Party FROM representative  GROUP BY representative.Party HAVING count( *) >= 3     
SELECT department.SCHOOL_CODE FROM DEPARTMENT JOIN PROFESSOR ON department.DEPT_CODE = professor.DEPT_CODE  GROUP BY department.SCHOOL_CODE  ORDER BY count( *) ASC LIMIT 1    
SELECT party.Minister FROM party WHERE party.Took_office > '1961' or party.Took_office < '1959'       
"SELECT useracct.name, avg( review.rating) FROM useracct JOIN review ON useracct.u_id = review.u_id  GROUP BY useracct.name      "
"SELECT rooms.roomName, count( *), reservations.Room FROM Rooms JOIN Reservations ON rooms.RoomId = reservations.Room  GROUP BY reservations.Room      "
SELECT sum( publication.citation_num) FROM publication JOIN journal ON publication.jid = journal.jid WHERE journal.name = 'PVLDB' and publication.year = 2005       
SELECT count( *) FROM Ref_Characteristic_Types        
SELECT DISTINCT student.Major FROM Student JOIN Voting_record ON student.StuID = T2.Class_Senator_Vote        
SELECT sum( player.Points) FROM player        
SELECT customers.customer_phone FROM Customers       UNION SELECT suppliers.supplier_phone FROM Suppliers         
SELECT elimination.Elimination_Move FROM Elimination WHERE elimination.Team = 'Team Orton'       
SELECT DISTINCT count(DISTINCT actor.name) FROM actor JOIN cast ON actor.aid = T3.aid JOIN movie WHERE movie.title = 'Saving Private Ryan'       
SELECT district.District_name FROM district    ORDER BY district.City_Population DESC LIMIT 1    
SELECT max( state.area) FROM state        
"SELECT DISTINCT count(DISTINCT student.Major), count(DISTINCT student.city_code) FROM Student        "
"SELECT addresses.City_Town, count( *) FROM Addresses JOIN Drama_Workshop_Groups ON addresses.Address_ID = drama_workshop_groups.Address_ID  GROUP BY addresses.City_Town      "
SELECT channel.Owner FROM channel    ORDER BY channel.Rating_in_percent DESC LIMIT 1    
"SELECT student.Fname, student.LName FROM Student WHERE student.city_code != 'HKG'    ORDER BY student.Age ASC   "
SELECT max( university.Enrollment) FROM university        
SELECT flight.flno FROM flight    ORDER BY flight.distance ASC LIMIT 1    
SELECT avg( documents.access_count) FROM Documents        
SELECT city.city_name FROM city WHERE city.population = (SELECT max( city.population) FROM city WHERE city.state_name = '1'       ) and city.state_name = '1'       
SELECT lessons.lesson_id FROM Lessons JOIN Staff ON lessons.staff_id = staff.staff_id WHERE staff.first_name = 'Janessa' and staff.last_name = 'Sawayn' and staff.nickname like '%s%'       
"SELECT customers.first_name, customers.last_name FROM Customers WHERE customers.amount_outstanding between 1000 AND 3000       "
SELECT department.DEPT_NAME FROM DEPARTMENT JOIN STUDENT ON department.DEPT_CODE = student.DEPT_CODE    ORDER BY student.STU_GPA ASC LIMIT 1    
"SELECT avg( people.Height), avg( people.Weight) FROM people WHERE people.Sex = 'M'       "
"SELECT web_client_accelerator.Operating_system, count( *) FROM Web_client_accelerator  GROUP BY web_client_accelerator.Operating_system      "
SELECT count( *) FROM routes WHERE routes.dst_apid in (SELECT airports.apid FROM airports WHERE airports.country = 'Canada'       ) and routes.src_apid in (SELECT airports.apid FROM airports WHERE airports.country = 'United States'       )       
SELECT catalog_contents.catalog_entry_name FROM Catalog_Contents WHERE catalog_contents.product_stock_number like '%2%'       
SELECT count( *) FROM author        
SELECT song.song_name FROM song JOIN files ON song.f_id = files.f_id WHERE files.duration like '%1%'      UNION SELECT song.song_name FROM song WHERE song.languages = '1'        
SELECT DISTINCT count(DISTINCT university.Affiliation) FROM university        
SELECT sum( entrepreneur.Money_Requested) FROM entrepreneur JOIN people ON entrepreneur.People_ID = people.People_ID WHERE people.Height > 1.85       
SELECT shop.Shop_Name FROM shop JOIN stock ON shop.Shop_ID = T2.Shop_ID  GROUP BY shop.Shop_Name HAVING count( *) > 1     
SELECT DISTINCT customer_contact_channels.channel_code FROM Customer_Contact_Channels JOIN Customers ON customer_contact_channels.customer_id = customers.customer_id WHERE customers.customer_name = 'Tillman Ernser'       
"SELECT accounts.custid, accounts.name FROM ACCOUNTS JOIN CHECKING ON accounts.custid = checking.custid WHERE checking.balance < (SELECT max( checking.balance) FROM CHECKING        )       "
SELECT DISTINCT artwork.Type FROM artwork JOIN nomination ON artwork.Artwork_ID = nomination.Artwork_ID JOIN festival_detail ON nomination.Festival_ID = festival_detail.Festival_ID WHERE festival_detail.Year = 2007       
"SELECT classroom.building, classroom.room_number FROM classroom WHERE classroom.capacity between 50 AND 100       "
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = 'Question Answering'       
"SELECT host.Name, host.Nationality FROM host    ORDER BY host.Age DESC LIMIT 1    "
"SELECT bookings.booking_id, bookings.amount_of_refund FROM Bookings JOIN Payments ON bookings.booking_id = payments.booking_id  GROUP BY payments.booking_id  ORDER BY count( *) DESC LIMIT 1    "
"SELECT tourist_attractions.Name, visits.Visit_Date FROM Tourist_Attractions JOIN Visits ON tourist_attractions.Tourist_Attraction_ID = visits.Tourist_Attraction_ID JOIN Visitors ON visits.Tourist_ID = visitors.Tourist_ID WHERE visitors.Tourist_Details = 'Vincent' or visitors.Tourist_Details = 'Vivian'       "
"SELECT invoices.billing_country, count( *) FROM invoices  GROUP BY invoices.billing_country  ORDER BY count( *) DESC LIMIT 1    "
SELECT DISTINCT student.Fname FROM Student JOIN Enrolled_in ON student.StuID = Enrolled_in.StuID JOIN Gradeconversion ON Enrolled_in.Grade = grade_conversion.lettergrade WHERE grade_conversion.gradepoint >= 3.8       
"SELECT game.Season, game.Home_team, game.Away_team FROM game        "
"SELECT flight.destination, count( *) FROM flight  GROUP BY flight.destination      "
"SELECT max( song.resolution), min( song.resolution) FROM song JOIN files ON song.f_id = files.f_id WHERE files.duration like '%1%'       "
SELECT match_season.College FROM match_season WHERE match_season.Position = 'Midfielder'     INTERSECT SELECT match_season.College FROM match_season WHERE match_season.Position = 'Defender'         
"SELECT vehicles.vehicle_id, vehicles.vehicle_details FROM Vehicles JOIN Lessons ON vehicles.vehicle_id = T2.vehicle_id  GROUP BY T2.vehicle_id  ORDER BY count( *) DESC LIMIT 1    "
SELECT DISTINCT song.song_name FROM song WHERE song.resolution > (SELECT min( song.resolution) FROM song WHERE song.languages = 'english'       )       
"SELECT teachers.first_name, teachers.last_name FROM Teachers     ORDER BY teachers.last_name ASC   "
SELECT border_info.border FROM border_info WHERE border_info.state_name = (SELECT state.state_name FROM state WHERE state.population = (SELECT max( state.population) FROM state        )       )       
SELECT DISTINCT institution.name FROM Inst JOIN Authorship ON institution.instID = Authorship.instID JOIN Authors ON Authorship.authID = authors.authID WHERE authors.fname = 'Katsuhiro' and authors.lname = 'Ueno'       
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId JOIN venue ON paper.venueId = venue.venueId WHERE author.authorName = '1' and venue.venueName = '1'       
"SELECT movie.title, rating.rID, rating.stars, min( rating.stars) FROM Movie JOIN Rating ON movie.mID = rating.mID  GROUP BY rating.mID      "
"SELECT count( *), genres.name FROM tracks JOIN genres ON tracks.genre_id = genres.id  GROUP BY genres.name      "
"SELECT count( *), professor.DEPT_CODE FROM PROFESSOR WHERE professor.PROF_HIGH_DEGREE = 'Ph.D.' GROUP BY professor.DEPT_CODE      "
SELECT count( *) FROM Documents WHERE documents.document_status_code = '1'       
SELECT river.river_name FROM river WHERE river.river_name NOT IN (SELECT river.river_name FROM river WHERE river.traverse = '1'       )       
SELECT school.Denomination FROM school  GROUP BY school.Denomination HAVING count( *) > 1     
"SELECT max( track.Milliseconds), min( track.Milliseconds) FROM Track JOIN Genre ON track.GenreId = genre.GenreId WHERE genre.Name = 'Pop'       "
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT count( *) FROM GEOGRAPHIC JOIN RESTAURANT ON geographic.CITY_NAME = restaurant.CITY_NAME WHERE geographic.REGION = '1' and restaurant.FOOD_TYPE = '1'       
"SELECT faculty.Fname, faculty.Lname, faculty.Phone FROM Faculty WHERE faculty.Sex = 'F'       "
"SELECT student_course_enrolment.date_of_enrolment, student_course_enrolment.date_of_completion FROM Student_Course_Enrolment JOIN Students ON student_course_enrolment.student_id = students.student_id WHERE students.family_name = 'Zieme' and students.personal_name = 'Bernie'       "
SELECT elimination.Team FROM Elimination  GROUP BY elimination.Team HAVING count( *) > 3     
SELECT count( *) FROM county        
"SELECT device.Software_Platform, count( *) FROM device  GROUP BY device.Software_Platform      "
SELECT count( *) FROM GEOGRAPHIC        
SELECT count( *) FROM Scientists        
"SELECT max( rating.stars), min( rating.stars) FROM Rating        "
"SELECT count( *), employees.city FROM employees WHERE employees.title = 'IT Staff' GROUP BY employees.city      "
SELECT actor.first_name FROM actor  GROUP BY actor.first_name  ORDER BY count( *) DESC LIMIT 1    
"SELECT photos.Name, photos.Description FROM Photos JOIN Tourist_Attractions ON photos.Tourist_Attraction_ID = tourist_attractions.Tourist_Attraction_ID WHERE tourist_attractions.Name = 'film festival'       "
SELECT business.name FROM business JOIN category ON business.business_id = category.business_id WHERE business.city = '1' and category.category_name = '1' and category.category_name = '1'       
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT campuses.Campus FROM Campuses JOIN faculty ON campuses.Id = faculty.Campus WHERE faculty.Year = 2002 and faculty.Faculty > (SELECT max( faculty.Faculty) FROM faculty JOIN Campuses ON faculty.Campus = campuses.Id WHERE faculty.Year = 2002 and campuses.County = 'Orange'       )       
"SELECT company.Company, company.Main_Industry FROM company WHERE company.Company_ID NOT IN (SELECT station_company.Company_ID FROM station_company        )       "
SELECT faculty.Rank FROM Faculty  GROUP BY faculty.Rank  ORDER BY count( *) ASC LIMIT 1    
SELECT DISTINCT student.Fname FROM Student        
SELECT student.StuID FROM Student        EXCEPT SELECT participates_in.stuid FROM Participates_in        
SELECT party.Comptroller FROM party JOIN election ON party.Party_ID = election.Party WHERE election.District = 1 or election.District = 2       
SELECT count( *) FROM albums JOIN artists ON albums.artist_id = sqlite_sequence.id WHERE sqlite_sequence.name = 'Billy Cobham'       
"SELECT student.Age, count( *) FROM Student  GROUP BY student.Age      "
"SELECT employees.FIRST_NAME, employees.LAST_NAME, employees.SALARY, employees.DEPARTMENT_ID, max( employees.SALARY) FROM employees  GROUP BY employees.DEPARTMENT_ID      "
SELECT avg( bridge.length_feet) FROM bridge        
SELECT mountain.mountain_name FROM mountain WHERE mountain.mountain_altitude = (SELECT max( mountain.mountain_altitude) FROM mountain        )       
"SELECT publication.Publisher, count( *) FROM publication  GROUP BY publication.Publisher      "
SELECT category.name FROM category JOIN film_category ON category.category_id = film_category.category_id JOIN film ON film_category.film_id = film.film_id WHERE film.title = 'HUNGER ROOF'       
SELECT * FROM basketball_match        
SELECT border_info.border FROM border_info WHERE border_info.state_name in (SELECT border_info.border FROM border_info WHERE border_info.state_name in (SELECT border_info.border FROM border_info WHERE border_info.state_name = '1'       )       )       
SELECT language.name FROM language JOIN film ON language.language_id = film.original_language_id WHERE film.title = 'AIRPORT POLLOCK'       
SELECT ship.Name FROM ship WHERE ship.Ship_ID NOT IN (SELECT mission.Ship_ID FROM mission        )       
SELECT captain.Rank FROM captain WHERE captain.Class = 'Cutter'     INTERSECT SELECT captain.Rank FROM captain WHERE captain.Class = 'Armed schooner'         
SELECT author.name FROM author JOIN writes ON author.aid = writes.aid JOIN publication ON writes.pid = publication.pid WHERE author.name = '1' and publication.year > 1       
SELECT reference_colors.color_description FROM Ref_Colors JOIN Products ON reference_colors.color_code = products.color_code  GROUP BY reference_colors.color_description  ORDER BY count( *) DESC LIMIT 1    
SELECT DISTINCT student.LName FROM Student JOIN Voting_record ON student.StuID = T2.Class_Senator_Vote        
"SELECT courses.subject_id, subjects.subject_name, count( *) FROM Courses JOIN Subjects ON courses.subject_id = subjects.subject_id  GROUP BY courses.subject_id   ORDER BY count( *) ASC   "
"SELECT sum( university.Enrollment), university.Affiliation FROM university  GROUP BY university.Affiliation      "
SELECT count( *) FROM election        
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Peter Mertens' and author.authorName = 'Dina Barbian'       
SELECT publication.title FROM publication JOIN journal ON publication.jid = journal.jid WHERE journal.name = 'PVLDB' and publication.citation_num > 200 and publication.year > 2000       
SELECT projects.Name FROM Projects WHERE projects.Code NOT IN (SELECT assigned_to.Project FROM AssignedTo        )       
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1'       "
SELECT song.song_name FROM song WHERE song.rating < (SELECT max( song.rating) FROM song WHERE song.genre_is = '1'       )       
SELECT count( *) FROM gas_station WHERE gas_station.Open_Year between 2000 AND 2005       
SELECT artist.Name FROM Artist        EXCEPT SELECT artist.Name FROM Artist JOIN Album ON artist.ArtistId = T3.ArtistId        
"SELECT DISTINCT count(DISTINCT paper.paperId), writes.authorId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' GROUP BY writes.authorId   ORDER BY count( paper.paperId) DESC   "
SELECT max( enzyme.OMIM) FROM enzyme        
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and location.STREET_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId JOIN venue ON paper.venueId = venue.venueId WHERE key_phrase.keyphraseName = '1' and paper.year = 1 and venue.venueName = '1'       
SELECT city.city_name FROM city WHERE city.population = (SELECT max( city.population) FROM city JOIN state ON city.state_name = T23.state_name        )       
"SELECT DISTINCT count(DISTINCT paper.paperId), writes.authorId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN venue ON paper.venueId = venue.venueId WHERE venue.venueName = '1' GROUP BY writes.authorId   ORDER BY count( paper.paperId) DESC   "
SELECT DISTINCT count(DISTINCT department.DEPT_ADDRESS) FROM DEPARTMENT WHERE department.SCHOOL_CODE = 'BUS'       
SELECT has_allergy.StuID FROM Has_Allergy JOIN Student ON has_allergy.StuID = student.StuID  GROUP BY has_allergy.StuID HAVING count( *) >= 1     
SELECT count( *) FROM race        
SELECT count( *) FROM venue        
SELECT city.Official_Name FROM city     ORDER BY city.Population DESC   
SELECT addresses.town_city FROM Addresses       UNION SELECT addresses.state_province_county FROM Addresses         
SELECT addresses.State_County FROM Addresses JOIN Stores ON addresses.Address_ID = stores.Address_ID WHERE stores.Marketing_Region_Code = 'CA'       
SELECT faculty.FacID FROM Faculty        EXCEPT SELECT student.Advisor FROM Student        
"SELECT count( *), scientists.Name FROM Projects JOIN AssignedTo ON projects.Code = AssignedTo.Project JOIN Scientists ON AssignedTo.Scientist = scientists.SSN  GROUP BY scientists.Name      "
SELECT video_games.GName FROM Video_Games JOIN Plays_Games ON video_games.GameID = Plays_Games.GameID JOIN Student ON Plays_Games.StuID = student.StuID WHERE student.LName = 'Smith' and student.Fname = 'Linda'       
SELECT count( *) FROM member        
SELECT sum( department.budget) FROM department WHERE department.dept_name = 'Marketing' or department.dept_name = 'Finance'       
SELECT ship.Name FROM Ship JOIN captain ON ship.Ship_ID = captain.Ship_ID WHERE captain.Rank = 'Midshipman'     INTERSECT SELECT ship.Name FROM Ship JOIN captain ON ship.Ship_ID = captain.Ship_ID WHERE captain.Rank = 'Lieutenant'         
SELECT department.DName FROM Department WHERE department.Building = 'Mergenthaler'       
"SELECT driver.Party, count( *) FROM driver  GROUP BY driver.Party      "
SELECT DISTINCT products.product_name FROM Products JOIN Product_Characteristics ON products.product_id = Product_Characteristics.product_id JOIN Characteristics ON Product_Characteristics.characteristic_id = characteristics.characteristic_id WHERE characteristics.characteristic_name = 'warm'       
SELECT song.song_name FROM song WHERE song.rating < (SELECT max( song.rating) FROM song WHERE song.genre_is = '1'       )       
SELECT instructor.name FROM instructor WHERE instructor.dept_name = 'Statistics'   ORDER BY instructor.salary ASC LIMIT 1    
"SELECT employee.Fname, employee.Lname, employee.Address FROM employee     ORDER BY employee.Bdate ASC   "
SELECT DISTINCT medication.Name FROM Medication     ORDER BY medication.Name ASC   
SELECT district.District_name FROM district WHERE district.City_Area > 10 or district.City_Population > 100000       
"SELECT avg( products.Price), manufacturers.Name FROM Products JOIN Manufacturers ON products.Manufacturer = manufacturers.Code  GROUP BY manufacturers.Name      "
SELECT DISTINCT paper.year FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId JOIN venue ON paper.venueId = venue.venueId WHERE author.authorName = 'Michael Stonebraker' and venue.venueName = 'VLDB'    ORDER BY paper.year ASC   
SELECT count( *) FROM Manufacturers WHERE manufacturers.Founder = 'Andy'       
SELECT count( *) FROM Financial_Transactions        
"SELECT DISTINCT files.file_size, files.formats FROM files JOIN song ON files.f_id = song.f_id WHERE song.resolution < 800       "
"SELECT student.Age, count( *) FROM Student  GROUP BY student.Age      "
SELECT DISTINCT key_phrase.keyphraseId FROM keyphrase JOIN paperKeyphrase ON key_phrase.keyphraseId = paperKeyphrase.keyphraseId JOIN paper ON paperKeyphrase.paperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Luke Zettlemoyer'       
"SELECT documents_to_be_destroyed.Destruction_Authorised_by_Employee_ID, count( *) FROM Documents_to_be_Destroyed JOIN Employees ON documents_to_be_destroyed.Destruction_Authorised_by_Employee_ID = employees.Employee_ID  GROUP BY documents_to_be_destroyed.Destruction_Authorised_by_Employee_ID      "
SELECT university.Founded FROM university    ORDER BY university.Enrollment DESC LIMIT 1    
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId JOIN venue ON paper.venueId = venue.venueId WHERE author.authorName = '1' and paper.year = 1 and venue.venueName = '1'       
SELECT DISTINCT count(DISTINCT writes.paperId) FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
SELECT customers.Customer_ID FROM Customers WHERE customers.Customer_name like '%Diana%'       
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 1 and venue.venueName = '1'       
SELECT count( *) FROM author        
SELECT manufacturers.Headquarter FROM Manufacturers WHERE manufacturers.Founder = 'James'       
SELECT DISTINCT cite.citingPaperId FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId JOIN venue ON paper.venueId = venue.venueId WHERE key_phrase.keyphraseName = '1' and venue.venueName = '1'       
SELECT DISTINCT performance.StagePosition FROM Performance JOIN Band ON performance.Bandmate = band.Id WHERE band.Firstname = 'Solveig'       
SELECT wine.Winery FROM wine    ORDER BY wine.Score ASC LIMIT 1    
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE venue.venueName = '1'       
SELECT DISTINCT count(DISTINCT papers.title) FROM Papers JOIN Authorship ON papers.paperID = Authorship.paperID JOIN Inst ON Authorship.instID = institution.instID WHERE institution.name = 'University of Pennsylvania'       
SELECT count( *) FROM venue        
SELECT city.state_name FROM city WHERE city.city_name = '1' and city.population > 1       
SELECT count( *) FROM artist        
SELECT count( *) FROM Songs JOIN Performance ON songs.SongId = performance.SongId JOIN Band ON performance.Bandmate = T3.Id WHERE songs.Title = 'Flash'       
SELECT match_season.College FROM match_season WHERE match_season.Position = 'Midfielder'     INTERSECT SELECT match_season.College FROM match_season WHERE match_season.Position = 'Defender'         
SELECT item.title FROM item JOIN review ON item.i_id = review.i_id  GROUP BY item.title  ORDER BY avg( review.rating) ASC LIMIT 1    
SELECT city.city_name FROM city WHERE city.population = (SELECT min( city.population) FROM city        )       
SELECT customers.customer_name FROM Customers WHERE customers.payment_method = (SELECT customers.payment_method FROM Customers  GROUP BY customers.payment_method  ORDER BY count( *) DESC LIMIT 1    )       
SELECT DISTINCT artist.Famous_Release_date FROM artist        
"SELECT products.product_name, count( *) FROM Products  GROUP BY products.product_name      "
SELECT count( *) FROM Student JOIN Has_Allergy ON student.StuID = Has_Allergy.StuID JOIN Allergy_Type ON Has_Allergy.Allergy = allergy_type.Allergy WHERE allergy_type.AllergyType = 'food'       
SELECT DISTINCT patient.Name FROM Patient JOIN Stay ON patient.SSN = stay.Patient JOIN Undergoes ON stay.StayID = T3.Stay WHERE stay.Room = 111       
SELECT count( *) FROM venue        
"SELECT financial_transactions.transaction_type, sum( financial_transactions.transaction_amount) FROM Financial_Transactions  GROUP BY financial_transactions.transaction_type      "
SELECT DISTINCT student.LName FROM Student JOIN Voting_record ON student.StuID = T2.Class_Senator_Vote        EXCEPT SELECT DISTINCT student.LName FROM Student WHERE student.Advisor = 2192       
SELECT catalog_contents.catalog_entry_name FROM Catalog_Contents    ORDER BY catalog_contents.height DESC LIMIT 1    
SELECT faculty.Rank FROM Faculty  GROUP BY faculty.Rank  ORDER BY count( *) ASC LIMIT 1    
SELECT count( city.city_name) FROM city WHERE city.state_name = '1'       
SELECT count( *) FROM Physician        
SELECT policies.Policy_Type_Code FROM Policies JOIN Customers ON policies.Customer_ID = customers.Customer_ID  GROUP BY policies.Policy_Type_Code HAVING count( *) > 2     
"SELECT DISTINCT teachers.FirstName, teachers.LastName FROM teachers        "
"SELECT customers.customer_name, customers.customer_phone, customers.customer_email FROM Customers JOIN Customer_Addresses ON customers.customer_id = Customer_Addresses.customer_id JOIN Addresses ON Customer_Addresses.address_id = addresses.address_id JOIN Customer_Orders ON customers.customer_id = T3.customer_id  GROUP BY T3.customer_id  ORDER BY count( *) DESC LIMIT 1    "
SELECT products.product_description FROM Products WHERE products.product_name = 'Chocolate'       
SELECT investors.Investor_details FROM Investors JOIN Transactions ON investors.investor_id = transactions.investor_id WHERE transactions.share_count > '100'       
SELECT activity.activity_name FROM Activity JOIN Faculty_Participates_in ON activity.actid = Faculty_Participates_in.actid JOIN Faculty ON Faculty_Participates_in.FacID = faculty.FacID WHERE faculty.Fname = 'Mark' and faculty.Lname = 'Giuliano'       
"SELECT rooms.roomName, rooms.decor FROM Rooms WHERE rooms.bedType = 'King'    ORDER BY rooms.basePrice ASC   "
"SELECT transactions.investor_id, investors.Investor_details FROM Transactions JOIN Investors ON transactions.investor_id = investors.investor_id  GROUP BY transactions.investor_id  ORDER BY count( *) DESC LIMIT 1    "
"SELECT airlines.country, airlines.name, count( *) FROM airlines JOIN routes ON airlines.alid = routes.alid  GROUP BY routes.alid      "
SELECT count( city.city_name) FROM city        
SELECT advisor.i_ID FROM advisor JOIN student ON advisor.s_ID = student.ID WHERE student.dept_name = 'History'       
SELECT county_public_safety.Crime_rate FROM county_public_safety JOIN city ON county_public_safety.County_ID = city.County_ID WHERE city.White > 90       
SELECT DISTINCT cite.citingPaperId FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN venue ON paper.venueId = venue.venueId WHERE venue.venueName = 'ACL' GROUP BY cite.citingPaperId HAVING count( cite.citedPaperId) < 5     
SELECT tv_series.title FROM cast JOIN actor ON T2.aid = actor.aid JOIN tv_series WHERE actor.name = 'Scott Foley'       
"SELECT rooms.RoomId, rooms.roomName FROM Rooms    ORDER BY rooms.basePrice DESC LIMIT 1    "
SELECT technician.Name FROM technician WHERE technician.technician_id NOT IN (SELECT repair_assignment.technician_id FROM repair_assignment        )       
"SELECT flight.flno, flight.distance FROM flight    ORDER BY flight.price DESC LIMIT 1    "
SELECT count( *) FROM state        
SELECT state.state_name FROM state WHERE state.area = (SELECT max( state.area) FROM state        )       
SELECT avg( status.bikes_available) FROM status WHERE status.station_id NOT IN (SELECT station.id FROM station WHERE station.city = 'Palo Alto'       )       
"SELECT player.name_first, player.name_last, manager_award.player_id FROM player JOIN manager_award ON player.player_id = manager_award.player_id  GROUP BY manager_award.player_id  ORDER BY count( *) DESC LIMIT 1    "
SELECT gas_station.Location FROM gas_station     ORDER BY gas_station.Open_Year ASC   
SELECT customers.payment_method FROM Customers  GROUP BY customers.payment_method  ORDER BY count( *) DESC LIMIT 1    
SELECT order_items.product_id FROM Order_Items  GROUP BY order_items.product_id  ORDER BY count( *) DESC LIMIT 1    
SELECT city.city_name FROM city WHERE city.population = (SELECT max( city.population) FROM city WHERE city.state_name = '1'       ) and city.state_name = '1'       
"SELECT journalist.Nationality, count( *) FROM journalist  GROUP BY journalist.Nationality      "
SELECT DISTINCT endowment.donator_name FROM endowment        
SELECT technician.Name FROM technician JOIN repair_assignment ON technician.technician_id = repair_assignment.technician_id JOIN machine ON repair_assignment.Machine_ID = machine.Machine_ID     ORDER BY machine.quality_rank ASC   
"SELECT student.city_code, count( *) FROM Student  GROUP BY student.city_code      "
SELECT count( *) FROM Student        
SELECT count( river.traverse) FROM river WHERE river.river_name = '1'       
"SELECT tourist_attractions.Name, visits.Tourist_Attraction_ID FROM Tourist_Attractions JOIN Visits ON tourist_attractions.Tourist_Attraction_ID = visits.Tourist_Attraction_ID  GROUP BY visits.Tourist_Attraction_ID HAVING count( *) >= 2     "
SELECT shop.Shop_Name FROM shop JOIN stock ON shop.Shop_ID = T3.Shop_ID  GROUP BY shop.Shop_Name  ORDER BY count( *) DESC LIMIT 1    
"SELECT submission.Author, submission.College FROM submission        "
SELECT buildings.name FROM buildings WHERE buildings.Status = 'on-hold'    ORDER BY buildings.Stories ASC   
SELECT files.formats FROM files  GROUP BY files.formats  ORDER BY count( *) DESC LIMIT 1    
SELECT count( *) FROM CLASS        
SELECT submission.Author FROM submission WHERE submission.College = 'Florida' or submission.College = 'Temple'       
SELECT journalist.Nationality FROM journalist  GROUP BY journalist.Nationality  ORDER BY count( *) DESC LIMIT 1    
SELECT review.text FROM review JOIN business ON review.business_id = business.business_id JOIN category ON business.business_id = category.business_id JOIN user ON review.user_id = user.user_id WHERE category.category_name = '1' and category.category_name = '1' and user.name = '1'       
SELECT publication.Publication_Date FROM publication     ORDER BY publication.Price DESC   
"SELECT submission.College, count( *) FROM submission  GROUP BY submission.College      "
SELECT count( *) FROM customers WHERE customers.state = 'CA'       
SELECT count( *) FROM Services        
"SELECT documents.document_name, documents.access_count FROM Documents    ORDER BY documents.access_count DESC LIMIT 1    "
"SELECT game.id, game.Score, game.Date FROM game JOIN injury_accident ON game.id = T2.game_id  GROUP BY T2.game_id HAVING count( *) >= 2     "
SELECT sum( faculty.Faculty) FROM faculty WHERE faculty.Year = 2002       
SELECT sum( manufacturers.Revenue) FROM Manufacturers WHERE manufacturers.Headquarter = 'Tokyo' or manufacturers.Headquarter = 'Taiwan'       
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Peter Mertens' and author.authorName = 'Dina Barbian'       
"SELECT products.product_name, products.product_price FROM Products JOIN Regular_Order_Products ON products.product_id = T2.product_id  GROUP BY T2.product_id  ORDER BY count( *) DESC LIMIT 1    "
SELECT DISTINCT customers.payment_method FROM Customers        
"SELECT voting_record.Election_Cycle, count( *) FROM Voting_record  GROUP BY voting_record.Election_Cycle      "
SELECT state.state_name FROM state WHERE state.population = (SELECT min( state.population) FROM state        )       
SELECT city.population FROM city WHERE city.city_name = '1'       
SELECT dorm_amenity.amenity_name FROM Dorm_amenity JOIN Has_amenity ON dorm_amenity.amenid = T3.amenid JOIN Dorm ON T3.dormid = Dorm.dormid JOIN Lives_in ON Dorm.dormid = lives_in.dormid  GROUP BY dorm_amenity.amenity_name  ORDER BY count( *) DESC LIMIT 1    
SELECT staff.date_of_birth FROM Staff WHERE staff.first_name = 'Janessa' and staff.last_name = 'Sawayn'       
"SELECT count( *), airports.name FROM routes JOIN airports ON routes.src_apid = airports.apid  GROUP BY airports.name      "
"SELECT avg( captain.age), min( captain.age), captain.Class FROM captain  GROUP BY captain.Class      "
SELECT DISTINCT count(DISTINCT publication.title) FROM publication JOIN writes ON publication.pid = writes.pid JOIN author ON writes.aid = author.aid WHERE author.name = '1' and publication.year > 1       
"SELECT cinema.Name, cinema.Openning_year FROM cinema     ORDER BY cinema.Openning_year DESC   "
SELECT invoice.InvoiceDate FROM Invoice JOIN Customer ON invoice.CustomerId = customer.CustomerId WHERE customer.FirstName = 'Astrid' and customer.LastName = 'Gruber'       
SELECT customers.phone_number FROM Customers       UNION SELECT staff.phone_number FROM Staff         
SELECT count( *) FROM device        
"SELECT gas_station.Location, count( *) FROM gas_station  GROUP BY gas_station.Location   ORDER BY count( *) ASC   "
"SELECT max( company.Market_Value_in_Billion), min( company.Market_Value_in_Billion) FROM company        "
SELECT party.Party FROM party WHERE party.Party_ID NOT IN (SELECT election.Party FROM election        )       
"SELECT gas_station.Station_ID, gas_station.Location, gas_station.Manager_Name FROM gas_station     ORDER BY gas_station.Open_Year ASC   "
SELECT shop.Shop_Name FROM shop JOIN stock ON shop.Shop_ID = stock.Shop_ID  GROUP BY shop.Shop_Name  ORDER BY sum( stock.Quantity) DESC LIMIT 1    
SELECT papers.title FROM Papers WHERE papers.title like '%ML%'       
SELECT count( *) FROM Addresses WHERE addresses.zip_postcode = '197'       
SELECT aircraft.name FROM aircraft JOIN certificate ON aircraft.aid = certificate.aid JOIN employee ON certificate.eid = employee.eid WHERE employee.name = 'John Williams'       
"SELECT claims.Claim_ID, claims.Date_Claim_Made, claims.Date_Claim_Settled FROM Claims JOIN Settlements ON claims.Claim_ID = T2.Claim_ID  GROUP BY T2.Claim_ID HAVING count( *) = 1     "
SELECT book.Title FROM book JOIN publication ON book.Book_ID = publication.Book_ID     ORDER BY publication.Price DESC   
"SELECT checking.balance, accounts.name FROM CHECKING JOIN ACCOUNTS ON checking.custid = accounts.custid JOIN SAVINGS ON accounts.custid = savings.custid    ORDER BY savings.balance ASC LIMIT 1    "
SELECT DISTINCT customers.payment_method FROM Customers        
SELECT manufacturers.Name FROM Manufacturers WHERE manufacturers.Revenue < (SELECT min( manufacturers.Revenue) FROM Manufacturers WHERE manufacturers.Headquarter = 'Austin'       )       
"SELECT category.name, film_category.category_id, count( *) FROM category JOIN film_category ON category.category_id = film_category.category_id  GROUP BY film_category.category_id      "
SELECT club.ClubName FROM Club        
SELECT aircraft.aid FROM aircraft WHERE aircraft.distance > 1000       
SELECT DISTINCT paper.venueId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Daniella Coelho'       
SELECT author.name FROM author JOIN writes ON author.aid = writes.aid JOIN publication ON writes.pid = publication.pid WHERE publication.title = '1'       
"SELECT person_friend.name, avg( person.age) FROM PersonFriend JOIN Person ON person_friend.friend = person.name  GROUP BY person_friend.name  ORDER BY avg( person.age) DESC LIMIT 1    "
"SELECT DISTINCT paper.paperId, paper.year FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       "
SELECT count( *) FROM Faculty WHERE faculty.Rank = 'Professor' and faculty.Building = 'NEB'       
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = 'Question Answering'       
"SELECT avg( player.HS), max( player.HS), min( player.HS) FROM Player        "
SELECT department.DName FROM Department WHERE department.Building = 'Mergenthaler'       
SELECT count( *) FROM state        
SELECT DISTINCT grapes.Grape FROM grapes JOIN wine ON grapes.Grape = wine.Grape WHERE grapes.Color = '1' and wine.Score > 1       
"SELECT employees.Role_Code, count( *) FROM Employees  GROUP BY employees.Role_Code      "
SELECT problems.problem_id FROM Problems JOIN Staff ON problems.reported_by_staff_id = T2.staff_id WHERE problems.date_problem_reported < (SELECT min( problems.date_problem_reported) FROM Problems JOIN Staff ON problems.reported_by_staff_id = staff.staff_id WHERE staff.staff_first_name = 'Lysanne' and staff.staff_last_name = 'Turcotte'       )       
"SELECT sum( student.STU_HRS), student.DEPT_CODE FROM STUDENT  GROUP BY student.DEPT_CODE      "
"SELECT count( *), captain.Rank FROM captain  GROUP BY captain.Rank      "
"SELECT track.Name, track.Seating FROM track WHERE track.Year_Opened > 2000    ORDER BY track.Seating ASC   "
SELECT * FROM Albums WHERE albums.Year = 2010       
SELECT DISTINCT count(DISTINCT publication.title) FROM publication JOIN journal ON publication.jid = journal.jid WHERE journal.name = 'PVLDB' and publication.year < 2000       
SELECT count( *) FROM Documents_with_Expenses        
SELECT students.student_id FROM Students WHERE students.student_id NOT IN (SELECT student_course_attendance.student_id FROM Student_Course_Attendance        )       
SELECT river.river_name FROM river WHERE river.traverse in (SELECT state.state_name FROM state WHERE state.area = (SELECT max( state.area) FROM state        )       )       
SELECT count( *) FROM customers JOIN employees ON customers.support_rep_id = employees.id WHERE employees.first_name = 'Steve' and employees.last_name = 'Johnson'       
"SELECT customer.first_name, customer.last_name, customer.customer_id FROM customer JOIN payment ON customer.customer_id = payment.customer_id  GROUP BY payment.customer_id  ORDER BY sum( payment.amount) ASC LIMIT 1    "
"SELECT user_profiles.name, user_profiles.followers FROM user_profiles     ORDER BY user_profiles.followers DESC   "
SELECT count( *) FROM party_events        
SELECT tracks.name FROM tracks JOIN invoice_lines ON tracks.id = invoice_lines.track_id JOIN invoices ON invoice_lines.invoice_id = invoices.id JOIN customers ON invoices.customer_id = customers.id WHERE customers.first_name = 'Daan' and customers.last_name = 'Peeters'       
SELECT addresses.city FROM Addresses JOIN Staff ON addresses.address_id = staff.staff_address_id WHERE staff.first_name = 'Janessa' and staff.last_name = 'Sawayn'       
SELECT DISTINCT author.authorName FROM author JOIN writes ON author.authorId = writes.authorId JOIN paper ON writes.paperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName like '%1%'       
SELECT river.traverse FROM river        
SELECT DISTINCT paper.paperId FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 1 and venue.venueName = '1'       
SELECT DISTINCT paper.venueId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1' and paper.year = 1       
SELECT count( *) FROM school        
"SELECT problem_log.problem_log_id, problem_log.log_entry_date FROM Problem_Log WHERE problem_log.problem_id = 10       "
SELECT count( *) FROM Customers WHERE customers.Customer_name = 'Dayana Robel'       
SELECT submission.Author FROM submission WHERE submission.Submission_ID NOT IN (SELECT acceptance.Submission_ID FROM Acceptance        )       
SELECT DISTINCT branch.City FROM branch WHERE branch.membership_amount >= '100'       
SELECT DISTINCT races.name FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Spain' and races.year > 2000       
SELECT documents.document_name FROM Documents WHERE documents.document_code NOT IN (SELECT document_sections.document_code FROM Document_Sections        )       
SELECT DISTINCT count(DISTINCT cite.citedPaperId) FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
SELECT state.state_name FROM state WHERE state.state_name in (SELECT border_info.border FROM border_info WHERE border_info.state_name = '1'       )   ORDER BY state.population DESC LIMIT 1    
"SELECT DISTINCT count(DISTINCT tip.text), tip.month FROM tip  GROUP BY tip.month      "
SELECT count( *) FROM Addresses        
SELECT roles.role_description FROM Roles WHERE roles.role_code = (SELECT users.role_code FROM Users JOIN Roles ON users.role_code = roles.role_code WHERE users.user_login = '1' GROUP BY users.role_code  ORDER BY count( *) DESC LIMIT 1    )       
SELECT count( *) FROM airports WHERE airports.name like '%1%'       
SELECT student.Advisor FROM Student WHERE student.StuID = 1004       
SELECT financial_transactions.account_id FROM Financial_Transactions  GROUP BY financial_transactions.account_id  ORDER BY count( *) DESC LIMIT 1    
SELECT DISTINCT addresses.city FROM Addresses JOIN People_Addresses ON addresses.address_id = T2.address_id        
SELECT mountain.Range FROM mountain  GROUP BY mountain.Range  ORDER BY count( *) DESC LIMIT 1    
SELECT count( *) FROM Dorm_amenity        
SELECT reference_product_categories.unit_of_measure FROM Ref_Product_Categories JOIN Products ON reference_product_categories.product_category_code = products.product_category_code WHERE products.product_name = 'cumin'       
"SELECT customers.Customer_Details, customers.Customer_ID FROM Customers JOIN Customer_Policies ON customers.Customer_ID = T2.Customer_ID  GROUP BY T2.Customer_ID HAVING count( *) > 1     "
SELECT DISTINCT list.Grade FROM list WHERE list.Classroom = 105       
"SELECT student.Fname, student.LName, grade_conversion.gradepoint FROM Student JOIN Enrolled_in ON student.StuID = Enrolled_in.StuID JOIN Gradeconversion ON Enrolled_in.Grade = grade_conversion.lettergrade        "
"SELECT employee.EMP_LNAME, employee.EMP_HIREDATE FROM EMPLOYEE JOIN PROFESSOR ON employee.EMP_NUM = professor.EMP_NUM WHERE professor.PROF_OFFICE = 'DRE 102'       "
SELECT degrees.Year FROM degrees  GROUP BY degrees.Year  ORDER BY sum( degrees.Degrees) DESC LIMIT 1    
SELECT addresses.city FROM Addresses WHERE addresses.zip_postcode = '255'       
"SELECT scientists.Name, projects.Name, projects.Hours FROM Scientists JOIN AssignedTo ON scientists.SSN = AssignedTo.Scientist JOIN Projects ON AssignedTo.Project = projects.Code     ORDER BY projects.Name ASC   "
SELECT reference_document_types.Document_Type_Description FROM Ref_Document_Types WHERE reference_document_types.Document_Type_Name = 'Film'       
SELECT avg( entrepreneur.Money_Requested) FROM entrepreneur        
SELECT employee.EMP_FNAME FROM EMPLOYEE WHERE employee.EMP_JOBCODE = 'PROF'    ORDER BY employee.EMP_DOB ASC   
SELECT state.population FROM state WHERE state.state_name = '1'       
"SELECT accounts.account_id, accounts.date_account_opened, accounts.account_name, accounts.other_account_details FROM Accounts JOIN Customers ON accounts.customer_id = customers.customer_id WHERE customers.customer_first_name = 'Meaghan'       "
"SELECT storm.Name, count( *) FROM storm JOIN affected_region ON storm.Storm_ID = affected_region.Storm_ID  GROUP BY storm.Name      "
SELECT visits_restaurant.Time FROM Visits_Restaurant JOIN Student ON visits_restaurant.StuID = student.StuID JOIN Restaurant ON visits_restaurant.ResID = restaurant.ResID WHERE student.Fname = 'Linda' and student.LName = 'Smith' and restaurant.ResName = 'Subway'       
SELECT count( *) FROM state        
SELECT DISTINCT races.name FROM races WHERE races.year between 2014 AND 2017       
"SELECT roles.Role_Code, roles.Role_Name, roles.Role_Description FROM Roles        "
SELECT count( *) FROM Companies        
SELECT instructor.name FROM instructor    ORDER BY instructor.salary DESC LIMIT 1    
SELECT sum( projects.Hours) FROM Projects JOIN AssignedTo ON projects.Code = AssignedTo.Project JOIN Scientists ON AssignedTo.Scientist = scientists.SSN WHERE scientists.Name = 'Michael Rogers' or scientists.Name = 'Carol Smith'       
SELECT count( *) FROM Movie WHERE movie.year < 2000       
SELECT count( *) FROM Products WHERE products.product_category_code = 'Seeds'       
SELECT instructor.name FROM instructor WHERE instructor.salary > (SELECT max( instructor.salary) FROM instructor WHERE instructor.dept_name = 'Biology'       )       
"SELECT avg( student.Age), max( student.Age), student.Sex FROM Student  GROUP BY student.Sex      "
SELECT border_info.border FROM border_info WHERE border_info.state_name = (SELECT state.state_name FROM state WHERE state.area = (SELECT min( state.area) FROM state        )       )       
SELECT documents.Project_ID FROM Documents  GROUP BY documents.Project_ID  ORDER BY count( *) ASC LIMIT 1    
SELECT vocals.Type FROM Vocals JOIN Band ON vocals.Bandmate = band.Id JOIN Performance ON band.Id = Performance.Bandmate JOIN Songs ON Performance.SongId = songs.SongId WHERE band.Firstname = '1' and songs.Title = '1'       
"SELECT exhibition.Theme, exhibition.Year FROM exhibition WHERE exhibition.Ticket_Price < 15       "
"SELECT county.County_name, count( *) FROM county  GROUP BY county.County_name      "
"SELECT DISTINCT cite.citedPaperId, count(DISTINCT cite.citedPaperId) FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' GROUP BY cite.citedPaperId   ORDER BY count( cite.citedPaperId) DESC   "
SELECT sports_info.StuID FROM SportsInfo  GROUP BY sports_info.StuID HAVING sum( sports_info.HoursPerWeek) > 10     
SELECT count( *) FROM Statements        
SELECT organization.name FROM organization WHERE organization.continent = 'North America'       
"SELECT documents_to_be_destroyed.Destruction_Authorised_by_Employee_ID, count( *) FROM Documents_to_be_Destroyed JOIN Employees ON documents_to_be_destroyed.Destruction_Authorised_by_Employee_ID = employees.Employee_ID  GROUP BY documents_to_be_destroyed.Destruction_Authorised_by_Employee_ID      "
SELECT city.Name FROM city WHERE city.County_ID = (SELECT county_public_safety.County_ID FROM county_public_safety    ORDER BY county_public_safety.Police_officers DESC LIMIT 1    )       
"SELECT DISTINCT count(DISTINCT department.DEPT_ADDRESS), department.SCHOOL_CODE FROM DEPARTMENT  GROUP BY department.SCHOOL_CODE      "
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
"SELECT DISTINCT author.authorName, paper.paperId FROM author JOIN writes ON author.authorId = writes.authorId JOIN paper ON writes.paperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE author.authorName != '1' and key_phrase.keyphraseName = '1'       "
SELECT employees.EMAIL FROM employees WHERE employees.COMMISSION_PCT = null and employees.SALARY between 7000 AND 12000 and employees.DEPARTMENT_ID = 50       
SELECT count( *) FROM Projects JOIN Project_Outcomes ON projects.project_id = project_outcomes.project_id WHERE project_outcomes.outcome_code = 'Patent'       
SELECT advisor.i_ID FROM advisor JOIN student ON advisor.s_ID = student.ID WHERE student.dept_name = 'History'       
SELECT manager.Working_year_starts FROM manager     ORDER BY manager.Level DESC   
"SELECT DISTINCT count(DISTINCT paper.paperId), writes.authorId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN venue ON paper.venueId = venue.venueId WHERE venue.venueName = 'ACL' GROUP BY writes.authorId      "
"SELECT instructor.name, instructor.salary FROM instructor JOIN department ON instructor.dept_name = department.dept_name JOIN student ON department.dept_name = student.dept_name WHERE student.dept_name = 'History'       "
SELECT count( *) FROM film WHERE film.Title like '%Dummy%'       
"SELECT DISTINCT circulation_history.document_id, count(DISTINCT circulation_history.employee_id) FROM Circulation_History  GROUP BY circulation_history.document_id      "
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId JOIN venue ON paper.venueId = venue.venueId WHERE key_phrase.keyphraseName = '1' and paper.year = 1 and venue.venueName = '1'       
SELECT count( *) FROM chip_model WHERE chip_model.WiFi = '1'       
SELECT state.capital FROM state WHERE state.state_name = '1'       
"SELECT employees.Employee_Name, employees.Role_Code, employees.Date_of_Birth FROM Employees WHERE employees.Employee_Name = 'Armani'       "
SELECT pilot.Name FROM pilot     ORDER BY pilot.Name ASC   
SELECT city.city_name FROM city WHERE city.population > 1 and city.state_name = '1'       
SELECT DISTINCT races.name FROM races WHERE races.year between 2014 AND 2017       
SELECT city.city_name FROM city WHERE city.population > 1 and city.state_name = '1'       
SELECT papers.title FROM Papers JOIN Authorship ON papers.paperID = Authorship.paperID JOIN Authors ON Authorship.authID = authors.authID WHERE authors.fname = 'Olin' and authors.lname = 'Shivers'       
"SELECT reference_budget_codes.Budget_Type_Code, reference_budget_codes.Budget_Type_Description FROM Ref_Budget_Codes        "
SELECT count( *) FROM Physician        
"SELECT student_course_enrolment.student_id, students.personal_name FROM Student_Course_Enrolment JOIN Students ON student_course_enrolment.student_id = students.student_id  GROUP BY student_course_enrolment.student_id HAVING count( *) >= 2     "
"SELECT book_club.Year, book_club.Book_Title, book_club.Publisher FROM book_club     ORDER BY book_club.Year DESC   "
SELECT river.traverse FROM river WHERE river.river_name = '1'       
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paperDataset JOIN dataset JOIN paper WHERE dataset.datasetName like '%ImageNet%'       
SELECT documents.receipt_date FROM Documents WHERE documents.document_id = 3       
SELECT DISTINCT region.Region_name FROM region     ORDER BY region.Label ASC   
SELECT county.County_name FROM county JOIN election ON county.County_Id = T2.District  GROUP BY county.County_name HAVING count( *) >= 2     
SELECT DISTINCT student.name FROM student JOIN takes ON student.ID = takes_classes.ID WHERE takes_classes.year = 2009 or takes_classes.year = 2010       
SELECT DISTINCT count(DISTINCT department.SCHOOL_CODE) FROM DEPARTMENT        
SELECT avg( documents.access_count) FROM Documents    ORDER BY count( *) ASC LIMIT 1    
"SELECT student_addresses.address_id, addresses.zip_postcode FROM Student_Addresses JOIN Addresses ON student_addresses.address_id = addresses.address_id    ORDER BY student_addresses.monthly_rental DESC LIMIT 1    "
SELECT city.state_name FROM city WHERE city.city_name = '1'       
SELECT city.city_name FROM city WHERE city.population = (SELECT max( city.population) FROM city        )       
SELECT volume.Song FROM volume JOIN artist ON volume.Artist_ID = artist.Artist_ID WHERE artist.Age >= 32       
SELECT max( state.area) FROM state        
SELECT enzyme.name FROM enzyme WHERE enzyme.name like '%ALA%'       
SELECT sum( rooms.maxOccupancy) FROM Rooms WHERE rooms.decor = '1'       
SELECT avg( player.HS) FROM Player        
SELECT avg( film.Gross_in_dollar) FROM film        
SELECT city.City FROM city JOIN hosting_city ON city.City_ID = T2.Host_City  GROUP BY city.City  ORDER BY count( *) DESC LIMIT 1    
SELECT count( *) FROM Products WHERE products.product_category_code = 'Spices' and products.typical_buying_price > '1000'       
SELECT albums.title FROM albums JOIN tracks ON albums.id = tracks.album_id WHERE tracks.name = 'Balls to the Wall'       
SELECT products.Name FROM Products WHERE products.Price <= 200       
SELECT gymnast.Total_Points FROM gymnast     ORDER BY gymnast.Floor_Exercise_Points DESC   
SELECT count( *) FROM Album        
"SELECT sum( school.Enrollment), avg( school.Enrollment) FROM School        "
SELECT count( state.state_name) FROM state        
"SELECT bookings.Planned_Delivery_Date, bookings.Actual_Delivery_Date FROM Bookings        "
SELECT state.state_name FROM state WHERE state.state_name in (SELECT border_info.border FROM border_info WHERE border_info.state_name = '1'       )   ORDER BY state.population DESC LIMIT 1    
"SELECT sports_info.StuID, count( *), sum( sports_info.GamesPlayed) FROM SportsInfo  GROUP BY sports_info.StuID      "
SELECT avg( invoices.Order_Quantity) FROM Invoices WHERE invoices.payment_method_code = 'MasterCard'       
SELECT film_market_estimation.Type FROM film_market_estimation WHERE film_market_estimation.Year = 1995       
SELECT count( *) FROM exhibition WHERE exhibition.Year >= 2005       
SELECT wine.Name FROM wine WHERE wine.Year = 2008       
"SELECT rating.mID, avg( rating.stars) FROM Rating WHERE rating.mID NOT IN (SELECT rating.mID FROM Rating JOIN Reviewer ON rating.rID = reviewer.rID WHERE reviewer.name = 'Brittany Harris'       ) GROUP BY rating.mID      "
SELECT problems.problem_id FROM Problems JOIN Staff ON problems.reported_by_staff_id = staff.staff_id WHERE staff.staff_last_name = 'Bosco'       
SELECT avg( state.population) FROM state        
SELECT weather.zip_code FROM weather  GROUP BY weather.zip_code HAVING avg( weather.mean_humidity) < 70   INTERSECT SELECT trip.zip_code FROM trip  GROUP BY trip.zip_code HAVING count( *) >= 100       
SELECT entrepreneur.Investor FROM entrepreneur WHERE entrepreneur.Money_Requested > 140000     INTERSECT SELECT entrepreneur.Investor FROM entrepreneur WHERE entrepreneur.Money_Requested < 120000         
SELECT wrestler.Name FROM wrestler WHERE wrestler.Days_held < '100'       
SELECT apartments.apt_type_code FROM Apartments WHERE apartments.bathroom_count > 1 GROUP BY apartments.apt_type_code  ORDER BY count( *) DESC LIMIT 1    
SELECT count( *) FROM venue        
"SELECT company.Headquarters, count( *) FROM company  GROUP BY company.Headquarters      "
"SELECT student_addresses.student_id, students.first_name FROM Student_Addresses JOIN Students ON student_addresses.student_id = students.student_id  GROUP BY student_addresses.student_id  ORDER BY avg( student_addresses.monthly_rental) DESC LIMIT 1    "
SELECT count( *) FROM EMPLOYEE        
SELECT program.Name FROM program WHERE program.Origin != 'Beijing'       
SELECT DISTINCT count(DISTINCT election.Delegate) FROM election JOIN county ON election.District = county.County_Id WHERE county.Population > 50000       
SELECT count( *) FROM church WHERE church.Open_Date < 1850       
"SELECT draft_copies.document_id, count( *) FROM Draft_Copies  GROUP BY draft_copies.document_id HAVING count( *) > 1     "
SELECT player.birth_country FROM player  GROUP BY player.birth_country  ORDER BY count( *) ASC LIMIT 1    
"SELECT hotels.pets_allowed_yn, avg( hotels.price_range) FROM Hotels  GROUP BY hotels.pets_allowed_yn      "
"SELECT customers.first_name, customers.last_name FROM Customers        "
SELECT DISTINCT district.District_name FROM district     ORDER BY district.City_Area DESC   
SELECT gymnast.Total_Points FROM gymnast JOIN people ON gymnast.Gymnast_ID = people.People_ID    ORDER BY people.Age ASC LIMIT 1    
SELECT count( *) FROM state        
SELECT sum( state.area) FROM state        
SELECT customer.cust_name FROM customer WHERE customer.credit_score < (SELECT avg( customer.credit_score) FROM customer        )       
"SELECT player.name_first, player.name_last, player.player_id, count( *) FROM player  GROUP BY player.player_id  ORDER BY count( *) DESC LIMIT 1    "
SELECT DISTINCT count(DISTINCT movie.title) FROM cast JOIN actor ON T2.aid = actor.aid JOIN movie WHERE actor.name = 'Shahab Hosseini'       
"SELECT employee.EMP_LNAME, professor.PROF_OFFICE FROM EMPLOYEE JOIN PROFESSOR ON employee.EMP_NUM = professor.EMP_NUM JOIN DEPARTMENT ON professor.DEPT_CODE = department.DEPT_CODE WHERE department.DEPT_NAME = 'History'       "
"SELECT max( files.duration), max( song.resolution), song.languages FROM files JOIN song ON files.f_id = song.f_id  GROUP BY song.languages   ORDER BY song.languages ASC   "
"SELECT band.Firstname, band.Lastname FROM Band JOIN Performance ON band.Id = performance.Bandmate JOIN Songs ON performance.SongId = songs.SongId WHERE songs.Title = '1' and performance.StagePosition = '1'       "
SELECT device.Carrier FROM device WHERE device.Software_Platform != 'Android'       
SELECT restaurant_type.ResTypeName FROM Restaurant_Type        
"SELECT faculty.Fname, faculty.Lname FROM Faculty JOIN Faculty_Participates_in ON faculty.FacID = T3.FacID JOIN Activity ON T3.actid = activity.actid  GROUP BY T3.FacID  ORDER BY count( *) DESC LIMIT 1    "
SELECT staff.last_name FROM Staff WHERE staff.email_address like '%wrau%'       
SELECT elimination.Team FROM Elimination  GROUP BY elimination.Team HAVING count( *) > 3     
SELECT count( *) FROM Visits JOIN Visitors ON visits.Tourist_ID = visitors.Tourist_ID WHERE visitors.Tourist_ID NOT IN (SELECT visits.Tourist_ID FROM Visits        )       
SELECT DISTINCT count(DISTINCT writes.paperId) FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
"SELECT event.Venue, event.Name FROM event    ORDER BY event.Event_Attendance DESC LIMIT 1    "
"SELECT movie.Title, book_club.Book_Title FROM movie JOIN culture_company ON movie.movie_id = culture_company.movie_id JOIN book_club ON culture_company.book_club_id = book_club.book_club_id WHERE culture_company.Incorporated_in = 'China'       "
"SELECT exhibition.Theme, artist.Name FROM exhibition JOIN artist ON exhibition.Artist_ID = artist.Artist_ID WHERE exhibition.Ticket_Price > (SELECT avg( exhibition.Ticket_Price) FROM exhibition        )       "
SELECT device.Carrier FROM device JOIN stock ON device.Device_ID = T2.Device_ID  GROUP BY device.Carrier HAVING count( *) > 1     
SELECT people.Name FROM people JOIN wedding ON people.People_ID = wedding.Female_ID WHERE wedding.Year = 2016 and people.Is_Male = 'F' and people.Country = 'Canada'       
SELECT count( *) FROM author        
SELECT DISTINCT key_phrase.keyphraseId FROM keyphrase JOIN paperKeyphrase ON key_phrase.keyphraseId = paperKeyphrase.keyphraseId JOIN paper ON paperKeyphrase.paperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Luke Zettlemoyer'       
SELECT player.pName FROM Player JOIN Tryout ON player.pID = T2.pID     ORDER BY player.pName ASC   
"SELECT companies.Industry, count( *) FROM Companies  GROUP BY companies.Industry      "
"SELECT employee.name, employee.salary FROM employee WHERE employee.eid = 242518965       "
"SELECT DISTINCT cite.citedPaperId, count(DISTINCT cite.citingPaperId) FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = 'Artificial Intelligence' GROUP BY cite.citedPaperId   ORDER BY count( cite.citingPaperId) DESC   "
SELECT artist.Famous_Title FROM artist JOIN volume ON artist.Artist_ID = volume.Artist_ID WHERE volume.Weeks_on_Top > 2     INTERSECT SELECT artist.Famous_Title FROM artist JOIN volume ON artist.Artist_ID = volume.Artist_ID WHERE volume.Weeks_on_Top < 2         
SELECT count( *) FROM debate        
SELECT company.Name FROM company WHERE company.Sales_in_Billion > 200    ORDER BY company.Sales_in_Billion DESC   
"SELECT employees.FIRST_NAME, employees.LAST_NAME, employees.SALARY FROM employees JOIN departments ON employees.DEPARTMENT_ID = departments.DEPARTMENT_ID JOIN locations ON departments.LOCATION_ID = locations.LOCATION_ID WHERE locations.CITY = 'London'       "
SELECT university.Primary_conference FROM university JOIN basketball_match ON university.School_ID = basketball_match.School_ID    ORDER BY basketball_match.ACC_Percent ASC LIMIT 1    
SELECT reference_colors.color_description FROM Ref_Colors JOIN Products ON reference_colors.color_code = products.color_code  GROUP BY reference_colors.color_description  ORDER BY count( *) ASC LIMIT 1    
SELECT river.traverse FROM river WHERE river.river_name = '1'       
"SELECT chip_model.WiFi, screen_mode.Type FROM chip_model JOIN phone ON chip_model.Model_name = phone.chip_model JOIN screen_mode ON phone.screen_mode = screen_mode.Graphics_mode WHERE phone.Hardware_Model_name = 'LG-P760'       "
"SELECT ship.Name, ship.Class FROM Ship WHERE ship.Ship_ID NOT IN (SELECT captain.Ship_ID FROM captain        )       "
SELECT staff_department_assignments.department_id FROM Staff_Department_Assignments  GROUP BY staff_department_assignments.department_id  ORDER BY count( *) ASC LIMIT 1    
SELECT review.text FROM review WHERE review.rating < 1       
SELECT cinema.Location FROM cinema WHERE cinema.Openning_year = 2010     INTERSECT SELECT cinema.Location FROM cinema WHERE cinema.Openning_year = 2011         
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1'       
SELECT stadium.name FROM stadium JOIN event ON stadium.ID = event.Stadium_ID  GROUP BY stadium.name  ORDER BY count( *) DESC LIMIT 1    
SELECT count( *) FROM Inst        
SELECT customers.customer_name FROM Customers JOIN Customer_Orders ON customers.customer_id = Customer_Orders.customer_id JOIN Order_Items ON Customer_Orders.order_id = order_items.order_id  GROUP BY customers.customer_name  ORDER BY sum( order_items.order_quantity) DESC LIMIT 1    
SELECT shop.Shop_Name FROM shop JOIN stock ON shop.Shop_ID = stock.Shop_ID  GROUP BY shop.Shop_Name  ORDER BY sum( stock.Quantity) DESC LIMIT 1    
"SELECT film.Studio, count( *) FROM film  GROUP BY film.Studio      "
"SELECT affiliated_with.Physician, affiliated_with.Department FROM Affiliated_With WHERE affiliated_with.PrimaryAffiliation = 1       "
SELECT marketing_regions.Marketing_Region_Descriptrion FROM Marketing_Regions WHERE marketing_regions.Marketing_Region_Name = 'China'       
SELECT count( *) FROM Person        
SELECT people.Birth_Date FROM people     ORDER BY people.Height ASC   
SELECT publication.title FROM publication WHERE publication.citation_num > 200 and publication.year > 2000       
SELECT state.state_name FROM state WHERE state.area = (SELECT max( state.area) FROM state        )       
SELECT count( *) FROM author        
SELECT count( *) FROM author        
SELECT camera_lens.name FROM camera_lens JOIN photos ON camera_lens.id = T2.camera_lens_id WHERE camera_lens.brand = 'Sigma' or camera_lens.brand = 'Olympus'       
SELECT count( *) FROM Documents        
SELECT avg( documents.access_count) FROM Documents    ORDER BY count( *) ASC LIMIT 1    
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT instructor.name FROM instructor WHERE instructor.name like '%dar%'       
SELECT debate.Venue FROM debate     ORDER BY debate.Num_of_Audience ASC   
SELECT rooms.roomName FROM Rooms WHERE rooms.bedType = 'King' or rooms.bedType = 'Queen'       
SELECT DISTINCT count(DISTINCT cite.citedPaperId) FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Mirella Lapata'       
SELECT school.Location FROM school JOIN player ON school.School_ID = T2.School_ID  GROUP BY school.Location HAVING count( *) > 1     
SELECT count( *) FROM Customers JOIN Accounts WHERE customers.customer_first_name = 'Art' and customers.customer_last_name = 'Turcotte'       
SELECT count( *) FROM customer WHERE customer.active = 1       
SELECT sum( college.enr) FROM College        
"SELECT max( county.Population), min( county.Population) FROM county        "
SELECT product.product FROM store JOIN store_product ON store.Store_ID = T3.Store_ID JOIN product WHERE store.Store_Name = 'Miramichi'       
SELECT track.Year_Opened FROM track WHERE track.Seating between 4000 AND 5000       
"SELECT transactions.investor_id, count( *) FROM Transactions WHERE transactions.transaction_type_code = 'SALE' GROUP BY transactions.investor_id      "
SELECT avg( track.UnitPrice) FROM Track JOIN Genre ON track.GenreId = genre.GenreId WHERE genre.Name = 'Jazz'       
"SELECT avg( movie.Budget_million), max( movie.Budget_million), min( movie.Budget_million) FROM movie WHERE movie.Year < 2000       "
SELECT flight.flno FROM flight WHERE flight.distance > 2000       
SELECT count( *) FROM Ref_Document_Types        
SELECT avg( documents.access_count) FROM Documents JOIN Document_Functional_Areas ON documents.document_code = Document_Functional_Areas.document_code JOIN Functional_Areas ON Document_Functional_Areas.functional_area_code = functional_areas.functional_area_code WHERE functional_areas.functional_area_description = 'Acknowledgement'       
"SELECT staff.staff_id, staff.staff_gender FROM Staff JOIN Staff_Department_Assignments ON staff.staff_id = staff_department_assignments.staff_id WHERE staff_department_assignments.job_title_code = 'Department Manager'       "
SELECT station.id FROM station WHERE station.city = 'San Francisco'     INTERSECT SELECT status.station_id FROM status  GROUP BY status.station_id HAVING avg( status.bikes_available) > 10       
SELECT DISTINCT voting_record.Secretary_Vote FROM Voting_record WHERE voting_record.Election_Cycle = 'Fall'       
"SELECT flight.origin, count( *) FROM flight  GROUP BY flight.origin      "
SELECT DISTINCT customers_cards.card_type_code FROM Customers_Cards        
"SELECT DISTINCT pit_stops.driverId, pit_stops.stop FROM pitStops WHERE pit_stops.duration > (SELECT min( pit_stops.duration) FROM pitStops WHERE pit_stops.raceId = 841       )       "
SELECT state.state_name FROM state WHERE state.density = (SELECT max( state.density) FROM state        )       
SELECT employees.Employee_ID FROM Employees        EXCEPT SELECT documents_to_be_destroyed.Destroyed_by_Employee_ID FROM Documents_to_be_Destroyed        
SELECT airports.name FROM airports JOIN routes ON airports.apid = routes.src_apid WHERE airports.country = 'China' GROUP BY airports.name  ORDER BY count( *) DESC LIMIT 1    
SELECT count( *) FROM teachers JOIN list WHERE list.FirstName = 'CHRISSY' and list.LastName = 'NABOZNY'       
SELECT sum( checkin.count) FROM checkin JOIN business ON checkin.business_id = business.business_id JOIN category ON business.business_id = category.business_id WHERE business.city = '1' and category.category_name = '1' and category.category_name = '1'       
SELECT city.state_name FROM city  GROUP BY city.state_name  ORDER BY avg( city.population) ASC LIMIT 1    
SELECT DISTINCT count(DISTINCT certificate.eid) FROM certificate        
"SELECT shop.Address, shop.Shop_ID FROM shop JOIN happy_hour ON shop.Shop_ID = happy_hour.Shop_ID WHERE happy_hour.Month = 'May'       "
"SELECT roles.Role_Code, roles.Role_Name, roles.Role_Description FROM Roles        "
"SELECT DISTINCT person.name, person.age FROM Person JOIN PersonFriend ON person.name = person_friend.friend WHERE person_friend.friend = 'Dan' or person_friend.friend = 'Alice'       "
SELECT aircraft.name FROM aircraft JOIN certificate ON aircraft.aid = T2.aid WHERE aircraft.distance > 5000 GROUP BY aircraft.name   ORDER BY count( *) ASC   
SELECT customers.customer_name FROM Customers JOIN Orders ON customers.customer_id = orders.customer_id WHERE orders.date_order_placed >= '2009-01-01' and orders.date_order_placed <= '2010-01-01'       
"SELECT people.Name, people.Country FROM people WHERE people.Age < (SELECT avg( people.Age) FROM people        )       "
SELECT cinema.Location FROM cinema WHERE cinema.Capacity > 300 GROUP BY cinema.Location HAVING count( *) > 1     
SELECT student.StuID FROM Student WHERE student.Age = (SELECT max( student.Age) FROM Student        )       
SELECT sum( sports_info.GamesPlayed) FROM SportsInfo        
"SELECT staff_roles.role_description, project_staff.staff_id FROM Staff_Roles JOIN Project_Staff ON staff_roles.role_code = project_staff.role_code JOIN Projects ON project_staff.project_id = Projects.project_id JOIN Project_Outcomes ON Projects.project_id = project_outcomes.project_id  GROUP BY project_staff.role_code  ORDER BY count( *) DESC LIMIT 1    "
"SELECT avg( flight.distance), avg( flight.price) FROM flight WHERE flight.origin = 'Los Angeles'       "
"SELECT takes_classes.semester, takes_classes.year FROM takes JOIN student ON takes_classes.ID = student.ID  GROUP BY takes_classes.ID  ORDER BY count( *) ASC LIMIT 1    "
SELECT business.name FROM business JOIN category ON business.business_id = category.business_id JOIN review ON business.business_id = review.business_id JOIN user ON review.user_id = user.user_id WHERE category.category_name = 'Bars' and user.name = 'Patrick'       
SELECT reviewer.rID FROM Reviewer WHERE reviewer.name like '%Mike%'       
SELECT river.traverse FROM river WHERE river.length = (SELECT min( river.length) FROM river        )       
SELECT river.river_name FROM river WHERE river.traverse = '1'       
SELECT DISTINCT count(DISTINCT cite.citingPaperId) FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1' and author.authorName = '1'       
SELECT manufacturer.Name FROM manufacturer JOIN furniture_manufacte ON manufacturer.Manufacturer_ID = furniture_manufacte.Manufacturer_ID JOIN furniture ON furniture_manufacte.Furniture_ID = furniture.Furniture_ID WHERE furniture.Num_of_Component < 6     INTERSECT SELECT manufacturer.Name FROM manufacturer JOIN furniture_manufacte ON manufacturer.Manufacturer_ID = furniture_manufacte.Manufacturer_ID JOIN furniture ON furniture_manufacte.Furniture_ID = furniture.Furniture_ID WHERE furniture.Num_of_Component > 10         
"SELECT count( *), classroom.building FROM classroom WHERE classroom.capacity > 50 GROUP BY classroom.building      "
"SELECT customers.customer_name, customer_contact_channels.active_from_date FROM Customers JOIN Customer_Contact_Channels ON customers.customer_id = customer_contact_channels.customer_id WHERE customer_contact_channels.channel_code = '1'       "
SELECT DISTINCT performance.StagePosition FROM Performance JOIN Band ON performance.Bandmate = band.Id WHERE band.Firstname = 'Solveig'       
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Liwen Xiong' and paper.year = 2015       
SELECT people.Name FROM people WHERE people.People_ID NOT IN (SELECT entrepreneur.People_ID FROM entrepreneur        )       
"SELECT customers.customer_name, customer_orders.order_date FROM Customers JOIN Customer_Orders ON customers.customer_id = customer_orders.customer_id WHERE customer_orders.order_status = 'Delivered'       "
SELECT match_season.College FROM match_season JOIN team ON match_season.Team = team.Team_id  GROUP BY match_season.College HAVING count( *) >= 2     
SELECT count( *) FROM School        
"SELECT game.Season, stadium.name FROM game JOIN stadium ON game.stadium_id = stadium.id JOIN injury_accident ON game.id = injury_accident.game_id WHERE injury_accident.Injury = 'Foot injury' or injury_accident.Injury = 'Knee problem'       "
SELECT customer_master_index.cmi_details FROM Customer_Master_Index JOIN CMI_Cross_References ON customer_master_index.master_customer_id = cmi_cross_references.master_customer_id WHERE cmi_cross_references.source_system_code = 'Tax'       
SELECT drama_workshop_groups.Store_Name FROM Drama_Workshop_Groups        
"SELECT manufacturer.Name, manufacturer.Manufacturer_ID FROM manufacturer     ORDER BY manufacturer.Open_Year ASC   "
SELECT products.product_name FROM Products JOIN Ref_Colors ON products.color_code = reference_colors.color_code WHERE reference_colors.color_description = 'white'       
"SELECT drivers.surname, drivers.driverId FROM drivers JOIN pitStops ON drivers.driverId = pit_stops.driverId  GROUP BY pit_stops.driverId HAVING count( *) = 11   INTERSECT SELECT drivers.surname, drivers.driverId FROM drivers JOIN results ON drivers.driverId = T4.driverId  GROUP BY drivers.driverId HAVING count( *) > 5       "
SELECT apartments.apt_number FROM Apartments JOIN Apartment_Bookings ON apartments.apt_id = apartment_bookings.apt_id WHERE apartment_bookings.booking_status_code = 'Confirmed'     INTERSECT SELECT apartments.apt_number FROM Apartments JOIN Apartment_Bookings ON apartments.apt_id = apartment_bookings.apt_id WHERE apartment_bookings.booking_status_code = 'Provisional'         
"SELECT avg( airports.elevation), airports.country FROM airports  GROUP BY airports.country      "
"SELECT reference_document_types.Document_Type_Name, reference_document_types.Document_Type_Description, documents.Document_Date FROM Ref_Document_Types JOIN Documents ON reference_document_types.Document_Type_Code = documents.Document_Type_Code        "
SELECT count( *) FROM building WHERE building.Height_feet > (SELECT avg( building.Height_feet) FROM building        ) or building.Floors > (SELECT avg( building.Floors) FROM building        )       
"SELECT DISTINCT count(DISTINCT paper.paperId), paper.year FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE venue.venueName = 'NIPS' GROUP BY paper.year   ORDER BY count( paper.paperId) DESC   "
"SELECT DISTINCT count(DISTINCT paper.paperId), key_phrase.keyphraseId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 2015 and venue.venueName = 'NIPS' GROUP BY key_phrase.keyphraseId   ORDER BY count( paper.paperId) DESC   "
SELECT DISTINCT count(DISTINCT representative.Party) FROM representative        
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = 'Question Answering'       
SELECT city.Name FROM city WHERE city.County_ID in (SELECT county_public_safety.County_ID FROM county_public_safety WHERE county_public_safety.Crime_rate < 100       )       
SELECT count( *) FROM Person        
SELECT count( *) FROM course WHERE course.course_id NOT IN (SELECT prerequisite.course_id FROM prereq        )       
SELECT medication.Name FROM Medication JOIN Prescribes ON medication.Code = Prescribes.Medication JOIN Patient ON Prescribes.Patient = Patient.SSN JOIN Stay ON Patient.SSN = stay.Patient WHERE stay.Room = 111       
SELECT buildings.name FROM buildings     ORDER BY buildings.Height DESC   
"SELECT movie.title, avg( rating.stars) FROM Movie JOIN Rating ON movie.mID = rating.mID  GROUP BY movie.title  ORDER BY avg( rating.stars) DESC LIMIT 1    "
SELECT count( *) FROM Apartment_Buildings        
SELECT dorm_amenity.amenity_name FROM Dorm_amenity JOIN Has_amenity ON dorm_amenity.amenid = T3.amenid JOIN Dorm ON T3.dormid = Dorm.dormid JOIN Lives_in ON Dorm.dormid = lives_in.dormid  GROUP BY dorm_amenity.amenity_name  ORDER BY count( *) DESC LIMIT 1    
SELECT mountain.Country FROM mountain WHERE mountain.Height > 5600     INTERSECT SELECT mountain.Country FROM mountain WHERE mountain.Height < 5200         
SELECT DISTINCT wine.Name FROM wine     ORDER BY wine.Name ASC   
SELECT film.title FROM film WHERE film.special_features like '%Deleted Scenes%'       
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' and paper.year > 1       
SELECT count( *) FROM Member_of_club JOIN Club ON member_of_club.ClubID = club.ClubID JOIN Student ON member_of_club.StuID = student.StuID WHERE club.ClubName = 'Bootup Baltimore' and student.Age < 18       
SELECT tourist_attractions.Name FROM Tourist_Attractions JOIN Visits ON tourist_attractions.Tourist_Attraction_ID = Visits.Tourist_Attraction_ID JOIN Visitors ON Visits.Tourist_ID = visitors.Tourist_ID WHERE visitors.Tourist_Details = 'Alison'       EXCEPT SELECT tourist_attractions.Name FROM Tourist_Attractions JOIN Visits ON tourist_attractions.Tourist_Attraction_ID = Visits.Tourist_Attraction_ID JOIN Visitors ON Visits.Tourist_ID = visitors.Tourist_ID WHERE visitors.Tourist_Details = 'Rosalind'       
SELECT mountain.state_name FROM mountain WHERE mountain.mountain_altitude = (SELECT max( mountain.mountain_altitude) FROM mountain        )       
SELECT count( *) FROM exhibition WHERE exhibition.Year >= 2005       
SELECT addresses.city FROM Addresses WHERE addresses.zip_postcode = '255'       
SELECT count( *) FROM Services        
SELECT student.LName FROM Student WHERE student.Sex = 'F'    ORDER BY student.Age DESC   
"SELECT people.Height, people.Weight FROM people     ORDER BY people.Height DESC   "
SELECT count( *) FROM employees WHERE employees.country = 'Canada'       
"SELECT customers.customer_name, customers.customer_phone FROM Customers WHERE customers.customer_id NOT IN (SELECT mailshot_customers.customer_id FROM Mailshot_Customers        )       "
SELECT user.name FROM user JOIN review ON user.user_id = review.user_id JOIN business ON review.business_id = business.business_id JOIN category ON business.business_id = category.business_id WHERE category.category_name = '1'       
SELECT publication.title FROM publication JOIN domain_publication ON publication.pid = domain_publication.pid JOIN domain ON domain_publication.did = domain.did WHERE domain.name = 'Databases' and publication.year > 2000   ORDER BY publication.citation_num DESC LIMIT 1    
"SELECT claims.Amount_Settled, claims.Amount_Claimed FROM Claims    ORDER BY claims.Amount_Settled ASC LIMIT 1    "
SELECT store.Store_Name FROM store JOIN store_district ON store.Store_ID = store_district.Store_ID WHERE store_district.District_ID = (SELECT district.District_ID FROM district    ORDER BY district.City_Population DESC LIMIT 1    )       
SELECT happy_hour.Month FROM happy_hour  GROUP BY happy_hour.Month HAVING count( *) > 2     
SELECT publication.citation_num FROM publication WHERE publication.title = '1'       
"SELECT visits.Visit_Date, visits.Visit_Details FROM Visits JOIN Visitors ON visits.Tourist_ID = visitors.Tourist_ID WHERE visitors.Tourist_Details = 'Vincent'       "
SELECT ship.Flag FROM Ship  GROUP BY ship.Flag  ORDER BY count( *) DESC LIMIT 1    
SELECT count( *) FROM Student        
"SELECT products.product_name, products.typical_buying_price, products.typical_selling_price FROM Products JOIN Ref_Colors ON products.color_code = reference_colors.color_code WHERE reference_colors.color_description = 'yellow'       "
SELECT count( *) FROM Student JOIN Lives_in ON student.StuID = Lives_in.stuid JOIN Dorm ON Lives_in.dormid = dorm.dormid WHERE dorm.gender = 'M'       
"SELECT DISTINCT list.Grade, count(DISTINCT list.Classroom), count(DISTINCT *) FROM list  GROUP BY list.Grade      "
SELECT DISTINCT count(DISTINCT instruments.Instrument) FROM Instruments JOIN Songs ON instruments.SongId = songs.SongId WHERE songs.Title = 'Le Pop'       
SELECT border_info.border FROM border_info WHERE border_info.state_name = '1'       
SELECT aircraft.name FROM aircraft JOIN flight ON aircraft.aid = T2.aid  GROUP BY aircraft.name HAVING count( *) >= 2     
SELECT count( *) FROM Roles        
"SELECT premises.premises_type, customer_addresses.address_type_code FROM Premises JOIN Customer_Addresses ON premises.premise_id = customer_addresses.premise_id        "
SELECT count( *) FROM All_Documents        
SELECT checking.balance FROM CHECKING     ORDER BY checking.balance ASC   
"SELECT climber.Name, mountain.Height FROM climber JOIN mountain ON climber.Mountain_ID = mountain.Mountain_ID        "
SELECT avg( customer.credit_score) FROM customer WHERE customer.cust_ID NOT IN (SELECT loan.cust_ID FROM loan        )       
SELECT item.title FROM item JOIN review ON item.i_id = review.i_id WHERE review.rating > (SELECT avg( review.rating) FROM review        )       
SELECT instruments.Instrument FROM Instruments JOIN Songs ON instruments.SongId = songs.SongId JOIN Performance ON songs.SongId = T3.SongId JOIN Band ON T3.Bandmate = band.Id WHERE band.Lastname = 'Heilo' and songs.Title = 'Le Pop'       
SELECT DISTINCT song.song_name FROM song WHERE song.resolution > (SELECT min( song.resolution) FROM song WHERE song.languages = 'english'       )       
"SELECT list.Classroom, count( *) FROM list WHERE list.Grade = 4 GROUP BY list.Classroom      "
SELECT people.Name FROM people JOIN perpetrator ON people.People_ID = perpetrator.People_ID WHERE perpetrator.Country != 'China'       
"SELECT DISTINCT cite.citedPaperId, count(DISTINCT cite.citedPaperId) FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' GROUP BY cite.citedPaperId   ORDER BY count( cite.citedPaperId) DESC   "
SELECT reservations.Adults FROM Reservations WHERE reservations.CheckIn = '2010-10-23' and reservations.FirstName = 'CONRAD' and reservations.LastName = 'SELBIG'       
SELECT river.river_name FROM river  GROUP BY river.river_name  ORDER BY count( river.traverse) DESC LIMIT 1    
SELECT max( highlow.highest_elevation) FROM highlow        
"SELECT guests.guest_first_name, guests.guest_last_name FROM Guests        "
"SELECT avg( rating.stars), movie.title FROM Rating JOIN Movie ON rating.mID = movie.mID WHERE movie.year = (SELECT min( movie.year) FROM Movie        ) GROUP BY movie.title      "
SELECT count( *) FROM railway        
SELECT hotels.other_hotel_details FROM Hotels    ORDER BY hotels.price_range DESC LIMIT 1    
"SELECT employees.FIRST_NAME, employees.LAST_NAME, employees.SALARY FROM employees WHERE employees.FIRST_NAME like '%m%'       "
SELECT DISTINCT services.service_type_code FROM Services JOIN Organizations ON services.organization_id = organizations.organization_id WHERE organizations.organization_details = 'Denesik and Sons Party'       
SELECT catalogs.date_of_latest_revision FROM Catalogs  GROUP BY catalogs.date_of_latest_revision HAVING count( *) > 1     
SELECT DISTINCT student.STU_FNAME FROM STUDENT JOIN ENROLL ON student.STU_NUM = enroll.STU_NUM WHERE enroll.ENROLL_GRADE = 'C'       
"SELECT student.STU_GPA, student.STU_PHONE, student.STU_FNAME FROM STUDENT    ORDER BY student.STU_GPA DESC LIMIT 1    "
SELECT DISTINCT paper.paperId FROM paperDataset JOIN dataset JOIN paper WHERE dataset.datasetName = 'WebKB'       
"SELECT DISTINCT paper.journalId, paper.year FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'    ORDER BY paper.year DESC   "
SELECT policies.Policy_Type_Code FROM Policies  GROUP BY policies.Policy_Type_Code  ORDER BY count( *) DESC LIMIT 1    
SELECT claims_processing_stages.Claim_Status_Name FROM Claims_Processing_Stages JOIN Claims_Processing  GROUP BY claims_processing_stages.Claim_Status_Name  ORDER BY count( *) DESC LIMIT 1    
"SELECT DISTINCT cite.citedPaperId, count(DISTINCT cite.citedPaperId) FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' GROUP BY cite.citedPaperId   ORDER BY count( cite.citedPaperId) DESC   "
SELECT company.Name FROM company WHERE company.Industry = 'Banking' or company.Industry = 'Retailing'       
SELECT city.state_name FROM city WHERE city.city_name = '1'       
SELECT student.Major FROM Student WHERE student.Sex = 'F' GROUP BY student.Major  ORDER BY count( *) DESC LIMIT 1    
SELECT DISTINCT characteristics.characteristic_name FROM Characteristics        
SELECT river.river_name FROM river  GROUP BY river.river_name  ORDER BY count( river.traverse) DESC LIMIT 1    
"SELECT company.Headquarters, count( *) FROM company  GROUP BY company.Headquarters      "
SELECT customers.customer_name FROM Customers WHERE customers.customer_name like '%Alex%'       
SELECT highlow.highest_elevation FROM highlow WHERE highlow.highest_point = '1'       
SELECT host.Nationality FROM host  GROUP BY host.Nationality  ORDER BY count( *) DESC LIMIT 1    
SELECT avg( apartments.room_count) FROM Apartments WHERE apartments.apt_type_code = 'Studio'       
SELECT DISTINCT count(DISTINCT match_season.College) FROM match_season JOIN team ON match_season.Team = team.Team_id WHERE team.Name = 'Columbus Crew'       
SELECT tracks.name FROM tracks JOIN playlist_tracks ON tracks.id = playlist_tracks.track_id JOIN playlists ON playlist_tracks.playlist_id = playlists.id WHERE playlists.name = 'Movies'     INTERSECT SELECT tracks.name FROM tracks JOIN playlist_tracks ON tracks.id = playlist_tracks.track_id JOIN playlists ON playlist_tracks.playlist_id = playlists.id WHERE playlists.name = 'Music'         
"SELECT swimmer.meter_200, swimmer.meter_300 FROM swimmer WHERE swimmer.Nationality = 'Australia'       "
SELECT count( *) FROM state        
SELECT district.Headquartered_City FROM district JOIN store_district ON district.District_ID = store_district.District_ID JOIN store ON store_district.Store_ID = store.Store_ID WHERE store.Store_Name = 'Blackville'       
SELECT count( *) FROM gas_station WHERE gas_station.Open_Year between 2000 AND 2005       
SELECT DISTINCT count(DISTINCT tip.text) FROM tip JOIN user ON tip.user_id = user.user_id WHERE tip.month = 'April' and user.name = 'Michelle'       
SELECT DISTINCT count(DISTINCT organization.name) FROM organization        
SELECT DISTINCT count(DISTINCT stadium.City) FROM stadium WHERE stadium.Opening_year < 2006       
SELECT available_policies.Customer_Phone FROM Available_Policies        
SELECT city.Census_Ranking FROM city WHERE city.Status != 'Village'       
SELECT instructor.ID FROM instructor        EXCEPT SELECT teaches.ID FROM teaches        
SELECT city.state_name FROM city WHERE city.population = (SELECT max( city.population) FROM city WHERE city.state_name = '1'       ) and city.state_name = '1'       
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1'       
SELECT river.river_name FROM river WHERE river.length > 1 and river.traverse = '1'       
"SELECT department.Creation, department.Name, department.Budget_in_Billions FROM department        "
SELECT trucks.truck_details FROM Trucks     ORDER BY trucks.truck_licence_number ASC   
SELECT DISTINCT count(DISTINCT class.CLASS_CODE) FROM CLASS        
SELECT count( *) FROM club        
SELECT person.name FROM Person WHERE person.gender = 'male' and person.age = (SELECT min( person.age) FROM Person WHERE person.gender = 'male'       )       
SELECT avg( wine.Price) FROM wine JOIN appellations ON wine.Appelation = appellations.Appelation WHERE appellations.County = 'Sonoma'       
"SELECT authors.fname, authors.lname FROM Authors JOIN Authorship ON authors.authID = Authorship.authID JOIN Papers ON Authorship.paperID = papers.paperID WHERE papers.title = '1'       "
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1' and paper.year = 1       
SELECT faculty.Faculty FROM faculty JOIN Campuses ON faculty.Campus = campuses.Id WHERE faculty.Year = 2004 and campuses.Campus = 'San Francisco State University'       
"SELECT accounts.account_id, accounts.date_account_opened, accounts.account_name, accounts.other_account_details FROM Accounts        "
"SELECT district.Headquartered_City, count( *) FROM district JOIN store_district ON district.District_ID = store_district.District_ID  GROUP BY district.Headquartered_City      "
SELECT state.state_name FROM state WHERE state.population = (SELECT max( state.population) FROM state        )       
SELECT elimination.Elimination_Move FROM Elimination WHERE elimination.Team = 'Team Orton'       
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Peter Mertens' and author.authorName = 'Dina Barbian'       
SELECT avg( player.Points) FROM player JOIN club ON player.Club_ID = club.Club_ID WHERE club.name = 'AIB'       
SELECT count( *) FROM Tasks        
"SELECT assets.asset_id, assets.asset_details FROM Assets JOIN Fault_Log ON assets.asset_id = fault_log.asset_id  GROUP BY fault_log.asset_id HAVING count( *) = 2   INTERSECT SELECT assets.asset_id, assets.asset_details FROM Assets JOIN Fault_Log ON assets.asset_id = T4.asset_id  GROUP BY T4.asset_id HAVING count( *) < 2       "
"SELECT player.pName, player.HS FROM Player WHERE player.HS < 1500       "
SELECT movie.title FROM actor JOIN cast ON actor.aid = T3.aid JOIN movie WHERE actor.nationality = 'China' GROUP BY movie.title  ORDER BY count( actor.name) DESC LIMIT 1    
"SELECT DISTINCT author.authorId, paper.paperId FROM author JOIN writes ON author.authorId = writes.authorId JOIN paper ON writes.paperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE author.authorName = '1' and key_phrase.keyphraseName = '1'       "
SELECT performance.Location FROM performance WHERE performance.Attendance > 2000     INTERSECT SELECT performance.Location FROM performance WHERE performance.Attendance < 1000         
"SELECT physician.Name, count( *) FROM Physician JOIN Patient ON physician.EmployeeID = patient.PCP  GROUP BY physician.Name      "
"SELECT documents.grant_id, count( *) FROM Documents  GROUP BY documents.grant_id  ORDER BY count( *) DESC LIMIT 1    "
SELECT products.product_name FROM Products        EXCEPT SELECT products.product_name FROM Products JOIN Order_Items ON products.product_id = T3.product_id        
"SELECT claims.Amount_Settled, claims.Amount_Claimed FROM Claims    ORDER BY claims.Amount_Claimed DESC LIMIT 1    "
"SELECT people.Name, entrepreneur.Company FROM people JOIN entrepreneur ON people.People_ID = entrepreneur.People_ID     ORDER BY entrepreneur.Money_Requested ASC   "
SELECT student.city_code FROM Student WHERE student.LName = 'Kim'       
SELECT count( *) FROM Reviewer        
SELECT DISTINCT song.artist_name FROM song WHERE song.languages = 'english'       EXCEPT SELECT DISTINCT song.artist_name FROM song WHERE song.rating > 8       
"SELECT count( *), student.Sex FROM Student WHERE student.Age > (SELECT avg( student.Age) FROM Student        ) GROUP BY student.Sex      "
SELECT climber.Name FROM climber     ORDER BY climber.Points DESC   
"SELECT list.FirstName, list.LastName FROM list JOIN teachers WHERE teachers.FirstName = 'OTHA' and teachers.LastName = 'MOYER'       "
SELECT count( *) FROM Activity        
SELECT storm.Name FROM storm JOIN affected_region ON storm.Storm_ID = affected_region.Storm_ID JOIN region ON affected_region.Region_id = region.Region_id WHERE region.Region_name = 'Afghanistan'     INTERSECT SELECT storm.Name FROM storm JOIN affected_region ON storm.Storm_ID = affected_region.Storm_ID JOIN region ON affected_region.Region_id = region.Region_id WHERE region.Region_name = 'Albania'         
"SELECT customers.first_name, customers.last_name FROM customers JOIN invoices ON customers.id = invoices.customer_id    ORDER BY invoices.total ASC LIMIT 1    "
SELECT count( *) FROM farm        
SELECT course.CName FROM Course WHERE course.Days = 'MTW'       
"SELECT students.cell_mobile_number, students.email_address FROM Students        "
SELECT count( *) FROM circuits        
SELECT member.Card_Number FROM member WHERE member.Hometown like '%Kentucky%'       
"SELECT transactions.investor_id, avg( transactions.share_count) FROM Transactions  GROUP BY transactions.investor_id   ORDER BY avg( transactions.share_count) ASC   "
SELECT count( *) FROM Ref_Characteristic_Types        
SELECT device.Software_Platform FROM device  GROUP BY device.Software_Platform   ORDER BY count( *) DESC   
"SELECT company.Name, people.Name FROM company JOIN employment ON company.Company_ID = employment.Company_ID JOIN people ON employment.People_ID = people.People_ID        "
SELECT courses.course_description FROM Courses WHERE courses.course_name = 'database'       
SELECT sum( payment.amount) FROM payment        
"SELECT player.name_first, player.name_last FROM player WHERE player.weight > 220 or player.height < 75       "
SELECT DISTINCT count(DISTINCT volume.Artist_ID) FROM volume        
SELECT count( *) FROM Track JOIN Genre ON track.GenreId = genre.GenreId WHERE genre.Name = '1'       
SELECT actor.name FROM actor JOIN cast ON actor.aid = T3.aid JOIN movie WHERE actor.gender = '1' and movie.title = '1'       
SELECT count( *) FROM Club        
SELECT highlow.highest_point FROM highlow WHERE highlow.state_name in (SELECT border_info.border FROM border_info WHERE border_info.state_name = '1'       )       
SELECT border_info.border FROM border_info WHERE border_info.state_name = '1'       
SELECT count( *) FROM actor        
SELECT highlow.lowest_point FROM highlow WHERE highlow.state_name = '1'       
SELECT river.river_name FROM river WHERE river.traverse in (SELECT border_info.border FROM border_info WHERE border_info.state_name in (SELECT state.state_name FROM state WHERE state.population = (SELECT max( state.population) FROM state        )       )       )       
SELECT count( *) FROM Authors        
SELECT DISTINCT papers.title FROM Papers JOIN Authorship ON papers.paperID = Authorship.paperID JOIN Inst ON Authorship.instID = institution.instID WHERE institution.name = 'Google'       
"SELECT employee.EMP_FNAME, class.CLASS_ROOM FROM EMPLOYEE JOIN CLASS ON employee.EMP_NUM = class.PROF_NUM JOIN DEPARTMENT ON employee.EMP_NUM = department.EMP_NUM JOIN PROFESSOR ON department.DEPT_CODE = T4.DEPT_CODE WHERE department.DEPT_NAME = 'Accounting'       "
"SELECT customers.customer_name, customers.customer_phone, customers.customer_email FROM Customers JOIN Customer_Addresses ON customers.customer_id = Customer_Addresses.customer_id JOIN Addresses ON Customer_Addresses.address_id = addresses.address_id JOIN Customer_Orders ON customers.customer_id = T3.customer_id  GROUP BY T3.customer_id  ORDER BY count( *) DESC LIMIT 1    "
SELECT avg( csu_fees.CampusFee) FROM csu_fees WHERE csu_fees.Year = 2005       
"SELECT apartments.apt_type_code, count( *) FROM Apartments  GROUP BY apartments.apt_type_code   ORDER BY count( *) ASC   "
SELECT DISTINCT products.product_name FROM Products     ORDER BY products.product_name ASC   
SELECT device.Software_Platform FROM device  GROUP BY device.Software_Platform  ORDER BY count( *) DESC LIMIT 1    
SELECT avg( people.Age) FROM people JOIN gymnast ON people.People_ID = T2.Gymnast_ID        
SELECT state.state_name FROM state        
"SELECT DISTINCT paper.journalId, venue.venueId FROM paper JOIN venue ON paper.venueId = venue.venueId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Peter Mertens'       "
SELECT count( *) FROM station WHERE station.city = 'Mountain View'       
SELECT DISTINCT count(DISTINCT class.CLASS_SECTION) FROM CLASS WHERE class.CRS_CODE = 'ACCT-211'       
"SELECT player.name_first, player.name_last FROM player JOIN player_award ON player.player_id = player_award.player_id WHERE player_award.year = 1960     INTERSECT SELECT player.name_first, player.name_last FROM player JOIN player_award ON player.player_id = player_award.player_id WHERE player_award.year = 1961         "
SELECT count( *) FROM tweets        
SELECT sum( documents.access_count) FROM Documents    ORDER BY count( *) DESC LIMIT 1    
SELECT DISTINCT count(DISTINCT sports_info.StuID) FROM SportsInfo        
SELECT shipments.order_id FROM Shipments WHERE shipments.shipment_date > '2000-01-01'       
SELECT count( *) FROM actor        
SELECT count( *) FROM Songs JOIN Instruments ON songs.SongId = instruments.SongId WHERE instruments.Instrument = '1'       
SELECT count( *) FROM phone WHERE phone.Company_name = 'Nokia Corporation'       
SELECT count( *) FROM Activity JOIN Faculty_Participates_in ON activity.actid = Faculty_Participates_in.actid JOIN Faculty ON Faculty_Participates_in.FacID = faculty.FacID WHERE faculty.Fname = 'Mark' and faculty.Lname = 'Giuliano'       
"SELECT employees.first_name, employees.last_name FROM employees    ORDER BY employees.birth_date DESC LIMIT 1    "
SELECT DISTINCT count(DISTINCT teaches.ID) FROM teaches        
SELECT count( *) FROM Courses JOIN Student_Course_Registrations ON courses.course_id = Student_Course_Registrations.course_id JOIN Student_Course_Attendance ON Student_Course_Registrations.student_id = student_course_attendance.student_id WHERE student_course_attendance.student_id = 171       
SELECT student_course_enrolment.date_of_enrolment FROM Student_Course_Enrolment JOIN Student_Tests_Taken ON student_course_enrolment.registration_id = student_tests_taken.registration_id WHERE student_tests_taken.test_result = 'Pass'       
SELECT DISTINCT count(DISTINCT author.name) FROM author JOIN writes ON author.aid = writes.aid JOIN publication ON writes.pid = publication.pid JOIN journal ON publication.jid = journal.jid WHERE journal.name = 'PVLDB'       
SELECT avg( product.pages_per_minute_color) FROM product        
SELECT mountain.Country FROM mountain WHERE mountain.Height > 5000       
SELECT count( *) FROM inventory WHERE inventory.store_id = 1       
SELECT roller_coaster.Status FROM roller_coaster WHERE roller_coaster.Length > 3300 or roller_coaster.Height > 100       
SELECT customers.Customer_name FROM Customers        EXCEPT SELECT customers.Customer_name FROM Customers JOIN Customers_Policies ON customers.Customer_ID = Customers_Policies.Customer_ID JOIN First_Notification_of_Loss ON Customers_Policies.Customer_ID = T3.Customer_ID        
SELECT DISTINCT key_phrase.keyphraseId FROM keyphrase JOIN paperKeyphrase ON key_phrase.keyphraseId = paperKeyphrase.keyphraseId JOIN paper ON paperKeyphrase.paperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Luke Zettlemoyer'       
SELECT department.DName FROM Department JOIN Minor_in ON department.DNO = T3.DNO JOIN Student ON T3.StuID = student.StuID  GROUP BY department.DName  ORDER BY count( *) DESC LIMIT 1    
SELECT count( *) FROM Apartment_Bookings        
SELECT count( *) FROM Settlements        
"SELECT employee.EMP_FNAME, employee.EMP_LNAME FROM EMPLOYEE JOIN PROFESSOR ON employee.EMP_NUM = T2.EMP_NUM JOIN DEPARTMENT ON T2.DEPT_CODE = department.DEPT_CODE WHERE department.DEPT_NAME = 'Biology'       "
"SELECT royal_family.Royal_Family_Details, tourist_attractions.How_to_Get_There FROM Royal_Family JOIN Tourist_Attractions ON royal_family.Royal_Family_ID = tourist_attractions.Tourist_Attraction_ID        "
SELECT DISTINCT paper.venueId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Daniella Coelho'       
SELECT player.pName FROM Player JOIN Tryout ON player.pID = tryout.pID WHERE tryout.cName = (SELECT college.cName FROM College    ORDER BY college.enr DESC LIMIT 1    )       
SELECT highlow.state_name FROM highlow WHERE highlow.highest_elevation = (SELECT max( highlow.highest_elevation) FROM highlow        )       
"SELECT customers.customer_id, customers.customer_first_name, customers.customer_last_name, customers.customer_phone FROM Customers        "
SELECT wrestler.Name FROM wrestler    ORDER BY wrestler.Days_held ASC LIMIT 1    
SELECT artist.artist_name FROM artist WHERE artist.country = 'UK'     INTERSECT SELECT song.artist_name FROM song WHERE song.languages = 'english'         
"SELECT count( *), airports.country FROM airports  GROUP BY airports.country   ORDER BY count( *) DESC   "
SELECT count( *) FROM buildings        
SELECT DISTINCT count(DISTINCT cite.citedPaperId) FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
SELECT count( *) FROM architect WHERE architect.gender = 'female'       
SELECT student.StuID FROM Student        EXCEPT SELECT plays_games.StuID FROM Plays_Games        
SELECT faculty.Building FROM Faculty  GROUP BY faculty.Building  ORDER BY count( *) DESC LIMIT 1    
"SELECT city.Status, avg( city.Population) FROM city  GROUP BY city.Status      "
SELECT count( *) FROM Characteristics        
"SELECT max( rating.stars), min( rating.stars) FROM Rating        "
"SELECT DISTINCT suppliers.supplier_name, suppliers.supplier_phone FROM Suppliers JOIN Product_Suppliers ON suppliers.supplier_id = Product_Suppliers.supplier_id JOIN Products ON Product_Suppliers.product_id = products.product_id WHERE products.product_name = '1'       "
SELECT avg( player.weight) FROM Player        
"SELECT city.city, count( *), address.city_id FROM city JOIN address ON city.city_id = address.city_id  GROUP BY address.city_id  ORDER BY count( *) DESC LIMIT 1    "
SELECT DISTINCT count(DISTINCT user.name) FROM user JOIN review ON user.user_id = review.user_id JOIN business ON review.business_id = business.business_id WHERE business.name = 'Bistro Di Napoli' and review.year = 2015       
"SELECT reference_document_types.Document_Type_Code, reference_document_types.Document_Type_Name FROM Ref_Document_Types        "
SELECT party.Party FROM party WHERE party.Party_ID NOT IN (SELECT election.Party FROM election        )       
"SELECT enzyme.name, enzyme.Location FROM enzyme        "
"SELECT cmi_cross_references.cmi_cross_ref_id, cmi_cross_references.master_customer_id, count( *) FROM CMI_Cross_References JOIN Business_Rates ON cmi_cross_references.cmi_cross_ref_id = business_rates.cmi_cross_ref_id  GROUP BY business_rates.cmi_cross_ref_id      "
SELECT elimination.Time FROM Elimination WHERE elimination.Eliminated_By = 'Punk' or elimination.Eliminated_By = 'Orton'       
SELECT reference_budget_codes.Budget_Type_Description FROM Ref_Budget_Codes WHERE reference_budget_codes.Budget_Type_Code = 'ORG'       
SELECT county_public_safety.Crime_rate FROM county_public_safety     ORDER BY county_public_safety.Police_officers ASC   
SELECT technician.Starting_Year FROM technician WHERE technician.Team = 'CLE'     INTERSECT SELECT technician.Starting_Year FROM technician WHERE technician.Team = 'CWS'         
SELECT characteristics.characteristic_name FROM Characteristics JOIN Product_Characteristics ON characteristics.characteristic_id = Product_Characteristics.characteristic_id JOIN Products ON Product_Characteristics.product_id = products.product_id WHERE products.product_name = 'sesame' and characteristics.characteristic_type_code = 'Grade'       
SELECT count( *) FROM Ref_Calendar        
SELECT pilot.Name FROM pilot WHERE pilot.Age >= 25       
SELECT avg( player.height) FROM player JOIN player_college ON player.player_id = player_college.player_id JOIN college ON player_college.college_id = college.college_id WHERE college.name_full = 'Yale University'       
SELECT students.student_details FROM Students JOIN Student_Course_Registrations ON students.student_id = T3.student_id JOIN Courses ON T3.course_id = courses.course_id  GROUP BY students.student_details  ORDER BY count( *) DESC LIMIT 1    
SELECT address.address FROM address JOIN store ON address.address_id = store.address_id WHERE store.store_id = 1       
SELECT instructor.name FROM instructor JOIN advisor ON instructor.ID = T2.i_ID  GROUP BY instructor.name HAVING count( *) > 1     
SELECT DISTINCT count(DISTINCT publication.title) FROM publication WHERE publication.year > 2000       
SELECT DISTINCT count(DISTINCT course.course_id) FROM course WHERE course.dept_name = 'Physics'       
SELECT faculty.Lname FROM Faculty WHERE faculty.Building = 'Barton'    ORDER BY faculty.Lname ASC   
SELECT sum( college.enr) FROM College WHERE college.cName NOT IN (SELECT tryout.cName FROM Tryout WHERE tryout.pPos = 'goalie'       )       
SELECT DISTINCT papers.title FROM Papers JOIN Authorship ON papers.paperID = Authorship.paperID JOIN Inst ON Authorship.instID = institution.instID WHERE institution.name = 'Indiana University'       
SELECT state.state_name FROM state WHERE state.density = (SELECT min( state.density) FROM state        )       
"SELECT avg( manufacturers.Revenue), max( manufacturers.Revenue), sum( manufacturers.Revenue) FROM Manufacturers        "
"SELECT mailshot_campaigns.product_category, count( *) FROM Mailshot_Campaigns  GROUP BY mailshot_campaigns.product_category      "
SELECT count( *) FROM venue        
SELECT employee.EMP_FNAME FROM EMPLOYEE JOIN CLASS ON employee.EMP_NUM = class.PROF_NUM WHERE class.CRS_CODE = 'CIS-220'     INTERSECT SELECT employee.EMP_FNAME FROM EMPLOYEE JOIN CLASS ON employee.EMP_NUM = class.PROF_NUM WHERE class.CRS_CODE = 'QM-261'         
SELECT journal.name FROM journal JOIN publication ON journal.jid = publication.jid JOIN publication_keyword ON publication.pid = publication_keyword.pid JOIN keyword ON publication_keyword.kid = keyword.kid WHERE keyword.keyword = 'Relational Database' GROUP BY journal.name  ORDER BY count( publication.title) DESC LIMIT 1    
"SELECT member.Name, college.College_Location FROM member JOIN college ON member.College_ID = college.College_ID     ORDER BY member.Name ASC   "
"SELECT reference_budget_codes.Budget_Type_Code, reference_budget_codes.Budget_Type_Description, documents_with_expenses.Document_ID FROM Ref_Budget_Codes JOIN Documents_with_Expenses ON reference_budget_codes.Budget_Type_Code = documents_with_expenses.Budget_Type_Code        "
"SELECT party.Party_Theme, party.Location FROM party        "
SELECT count( *) FROM appellations WHERE appellations.County = 'Napa'       
SELECT film.Title FROM film JOIN film_market_estimation ON film.Film_ID = film_market_estimation.Film_ID    ORDER BY film_market_estimation.High_Estimate DESC LIMIT 1    
"SELECT player.name_first, player.name_last FROM player JOIN all_star ON player.player_id = all_star.player_id WHERE all_star.year = 1998       "
SELECT staff_roles.role_description FROM Staff_Roles WHERE staff_roles.role_code = '1'       
SELECT mountain.Height FROM mountain JOIN climber ON mountain.Mountain_ID = climber.Mountain_ID    ORDER BY climber.Points DESC LIMIT 1    
SELECT count( *) FROM venue        
"SELECT employees.EMPLOYEE_ID, employees.JOB_ID FROM employees WHERE employees.SALARY < (SELECT min( employees.SALARY) FROM employees WHERE employees.JOB_ID = 'MK_MAN'       )       "
SELECT reviewer.name FROM Reviewer JOIN Rating ON reviewer.rID = T2.rID  GROUP BY reviewer.name HAVING count( *) >= 3     
"SELECT DISTINCT count(DISTINCT paper.paperId), writes.authorId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 2007 and venue.venueName = 'CVPR' GROUP BY writes.authorId   ORDER BY count( paper.paperId) DESC   "
"SELECT storm.Name, storm.Damage_millions_USD FROM storm     ORDER BY storm.Max_speed DESC   "
SELECT state.population FROM state WHERE state.state_name in (SELECT river.traverse FROM river WHERE river.river_name = '1'       )       
SELECT writer.name FROM writer JOIN written_by ON writer.wid = T2.wid JOIN movie WHERE movie.title = 'The Truman Show'       
SELECT DISTINCT voting_record.President_Vote FROM Voting_record WHERE voting_record.Registration_Date = '08/30/2015'       
SELECT person_friend.name FROM PersonFriend JOIN Person ON person_friend.friend = person.name  GROUP BY person_friend.name HAVING count( *) = 1     
SELECT DISTINCT nurse.Name FROM Nurse JOIN On_Call ON nurse.EmployeeID = T2.Nurse        
SELECT course_authors_and_tutors.login_name FROM Course_Authors_and_Tutors      INTERSECT SELECT students.login_name FROM Students          
SELECT count( *) FROM state        
"SELECT faculty.Fname, faculty.Lname FROM Faculty JOIN Member_of ON faculty.FacID = member_of.FacID WHERE member_of.DNO = 520       "
"SELECT reference_product_categories.product_category_description, reference_product_categories.unit_of_measure FROM Ref_Product_Categories WHERE reference_product_categories.product_category_code = 'Herbs'       "
SELECT routes.rid FROM routes WHERE routes.dst_apid in (SELECT airports.apid FROM airports WHERE airports.country = 'United States'       ) and routes.src_apid in (SELECT airports.apid FROM airports WHERE airports.country = 'United States'       )       
"SELECT list.FirstName, list.LastName FROM list JOIN teachers WHERE teachers.FirstName = 'MARROTTE' and teachers.LastName = 'KIRK'       "
SELECT DISTINCT count(DISTINCT entrepreneur.Company) FROM entrepreneur        
SELECT products.product_name FROM Products JOIN Ref_Colors ON products.color_code = reference_colors.color_code JOIN Ref_Product_Categories ON products.product_category_code = reference_product_categories.product_category_code WHERE reference_colors.color_description = 'white' and reference_product_categories.unit_of_measure != 'Handful'       
"SELECT film.title, film.film_id, film.description FROM film JOIN film_actor ON film.film_id = T3.film_id  GROUP BY T3.film_id  ORDER BY count( *) DESC LIMIT 1    "
SELECT user_profiles.name FROM user_profiles WHERE user_profiles.email like '%superstar%' or user_profiles.email like '%edu%'       
SELECT artist.country FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE artist.gender = 'Female' and song.languages = 'bangla'       
SELECT list.FirstName FROM list WHERE list.Classroom = 108       
SELECT DISTINCT party.Year FROM party WHERE party.Governor = 'Eliot Spitzer'       
"SELECT customers.email_address, customers.phone_number FROM Customers WHERE customers.customer_id NOT IN (SELECT complaints.customer_id FROM Complaints        )       "
SELECT count( *) FROM Track JOIN MediaType ON track.MediaTypeId = media_type.MediaTypeId WHERE media_type.Name = '1'       
SELECT parties.party_email FROM Parties JOIN Party_Services ON parties.party_id = T2.customer_id  GROUP BY parties.party_email  ORDER BY count( *) DESC LIMIT 1    
"SELECT avg( products.Price), manufacturers.Name FROM Products JOIN Manufacturers ON products.Manufacturer = manufacturers.Code  GROUP BY manufacturers.Name      "
SELECT papers.title FROM Papers JOIN Authorship ON papers.paperID = Authorship.paperID JOIN Authors ON Authorship.authID = authors.authID WHERE authors.fname = 'Stephanie' and authors.lname = 'Weirich'       
"SELECT employee.EMP_LNAME, professor.PROF_OFFICE FROM EMPLOYEE JOIN PROFESSOR ON employee.EMP_NUM = professor.EMP_NUM JOIN DEPARTMENT ON professor.DEPT_CODE = department.DEPT_CODE WHERE department.DEPT_NAME = 'History'       "
SELECT student.LName FROM Student JOIN Member_of_club ON student.StuID = Member_of_club.StuID JOIN Club ON Member_of_club.ClubID = club.ClubID WHERE club.ClubName = 'Hopkins Student Enterprises'       
SELECT course_authors_and_tutors.personal_name FROM Course_Authors_and_Tutors      INTERSECT SELECT students.personal_name FROM Students          
SELECT district.District_name FROM district WHERE district.City_Area > 10 or district.City_Population > 100000       
SELECT media_types.name FROM media_types        
SELECT artwork.Name FROM artwork JOIN nomination ON artwork.Artwork_ID = nomination.Artwork_ID JOIN festival_detail ON nomination.Festival_ID = festival_detail.Festival_ID     ORDER BY festival_detail.Year ASC   
SELECT count( *) FROM routes WHERE routes.dst_apid in (SELECT airports.apid FROM airports WHERE airports.country = 'Canada'       ) and routes.src_apid in (SELECT airports.apid FROM airports WHERE airports.country = 'United States'       )       
SELECT allergy_type.AllergyType FROM Allergy_Type  GROUP BY allergy_type.AllergyType  ORDER BY count( *) DESC LIMIT 1    
SELECT business.full_address FROM business WHERE business.city = 'Los Angeles' and business.name = 'Walmart'       
SELECT vocals.Type FROM Vocals JOIN Band ON vocals.Bandmate = band.Id WHERE band.Lastname = 'Heilo' GROUP BY vocals.Type  ORDER BY count( *) DESC LIMIT 1    
SELECT authors.lname FROM Authors JOIN Authorship ON authors.authID = Authorship.authID JOIN Papers ON Authorship.paperID = papers.paperID WHERE papers.title = 'Binders Unbound'       
SELECT student.STU_FNAME FROM STUDENT JOIN ENROLL ON student.STU_NUM = enroll.STU_NUM JOIN CLASS ON enroll.CLASS_CODE = class.CLASS_CODE WHERE class.CRS_CODE = 'ACCT-211' and enroll.ENROLL_GRADE = 'C'       
SELECT sum( home_game.games) FROM home_game JOIN team ON home_game.team_id = team.team_id WHERE team.name = 'Boston Red Stockings' and home_game.year between 1990 AND 2000       
SELECT count( *) FROM Club JOIN Member_of_club ON club.ClubID = Member_of_club.ClubID JOIN Student ON Member_of_club.StuID = student.StuID WHERE student.Fname = 'Tracy' and student.LName = 'Kim'       
SELECT sum( rooms.beds) FROM Rooms WHERE rooms.bedType = 'King'       
SELECT salary.salary FROM salary WHERE salary.year = 2001   ORDER BY salary.salary DESC LIMIT 1    
SELECT review.text FROM review JOIN user ON review.user_id = user.user_id WHERE review.rating > 4 and user.name = 'Patrick'       
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and location.STREET_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
"SELECT aircraft.name, count( *) FROM aircraft JOIN flight ON aircraft.aid = flight.aid  GROUP BY aircraft.name      "
"SELECT products.product_name, reference_colors.color_description, products.product_description FROM Products JOIN Ref_Colors ON products.color_code = reference_colors.color_code WHERE products.product_category_code = 'Herbs'       "
"SELECT max( candidate.Support_rate), min( candidate.Consider_rate), min( candidate.Oppose_rate) FROM candidate        "
"SELECT min( invoices.Order_Quantity), avg( invoices.Order_Quantity), max( invoices.Order_Quantity) FROM Invoices        "
SELECT sum( customer.acc_bal) FROM customer WHERE customer.state = 'Utah' or customer.state = 'Texas'       
"SELECT wrestler.Reign, wrestler.Days_held FROM wrestler        "
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT wine.Name FROM wine WHERE wine.Year < (SELECT min( wine.Year) FROM wine WHERE wine.Winery = 'Brander'       )       
SELECT transactions.date_of_transaction FROM Transactions WHERE transactions.share_count >= '100' or transactions.amount_of_transaction >= 100       
"SELECT DISTINCT paper_key_phrase.keyphraseId, paper.year FROM paperKeyphrase JOIN paper ON paper_key_phrase.paperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'    ORDER BY paper.year ASC   "
SELECT perpetrator.Date FROM perpetrator     ORDER BY perpetrator.Killed DESC   
"SELECT max( track.Milliseconds), min( track.Milliseconds) FROM Track        "
SELECT review.text FROM review JOIN business ON review.business_id = business.business_id JOIN category ON business.business_id = category.business_id WHERE business.review_count > 100 and category.category_name = 'Pet Groomers'       
SELECT DISTINCT count(DISTINCT products.product_type_code) FROM Products        
"SELECT artist.artist_name, artist.country FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.resolution > 1 GROUP BY song.artist_name HAVING count( *) >= 1     "
SELECT enzyme.name FROM enzyme JOIN medicine_enzyme_interaction ON enzyme.id = medicine_enzyme_interaction.enzyme_id JOIN medicine ON medicine_enzyme_interaction.medicine_id = medicine.id WHERE medicine.name = '1' and medicine_enzyme_interaction.interaction_type = '1'       
SELECT sum( order_items.order_quantity) FROM Order_Items JOIN Customer_Orders ON order_items.order_id = customer_orders.order_id WHERE customer_orders.order_status = 'Cancelled'       
"SELECT classroom.building, classroom.room_number FROM classroom WHERE classroom.capacity between 50 AND 100       "
SELECT count( *) FROM aircraft        
SELECT album.Title FROM Album JOIN Track ON album.AlbumId = Track.AlbumId JOIN Genre ON Track.GenreId = genre.GenreId WHERE genre.Name = 'Reggae'     INTERSECT SELECT album.Title FROM Album JOIN Track ON album.AlbumId = Track.AlbumId JOIN Genre ON Track.GenreId = genre.GenreId WHERE genre.Name = 'Rock'         
SELECT count( *) FROM submission        
SELECT addresses.state_province_county FROM Addresses WHERE addresses.line_1_number_building like '%6862 Kaitlyn Knolls%'       
SELECT instructor.name FROM instructor JOIN department ON instructor.dept_name = department.dept_name JOIN student ON department.dept_name = student.dept_name WHERE student.dept_name = '1'    ORDER BY student.tot_cred ASC   
SELECT people.Name FROM people    ORDER BY people.Age DESC LIMIT 1    
SELECT artist.Name FROM artist        EXCEPT SELECT artist.Name FROM artist JOIN exhibition ON artist.Artist_ID = exhibition.Artist_ID WHERE exhibition.Year = 2004       
SELECT apartments.apt_type_code FROM Apartments WHERE apartments.bathroom_count > 1 GROUP BY apartments.apt_type_code  ORDER BY count( *) DESC LIMIT 1    
SELECT DISTINCT video_games.GType FROM Video_Games        
SELECT DISTINCT count(DISTINCT web_client_accelerator.Client) FROM Web_client_accelerator        
SELECT payments.Payment_Method_Code FROM Payments  GROUP BY payments.Payment_Method_Code  ORDER BY count( *) ASC LIMIT 1    
SELECT avg( checking.balance) FROM CHECKING        
"SELECT DISTINCT cite.citedPaperId, count(DISTINCT cite.citedPaperId) FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 2010 and venue.venueName = 'EMNLP' GROUP BY cite.citedPaperId   ORDER BY count( cite.citedPaperId) DESC   "
"SELECT DISTINCT customers_cards.card_type_code, count(DISTINCT customers_cards.customer_id) FROM Customers_Cards  GROUP BY customers_cards.card_type_code      "
"SELECT university.Enrollment, university.Primary_conference FROM university    ORDER BY university.Founded ASC LIMIT 1    "
"SELECT faculty.Fname, faculty.Lname FROM Faculty WHERE faculty.Rank = 'Instructor'       "
SELECT manufacturers.Name FROM Manufacturers        EXCEPT SELECT manufacturers.Name FROM Manufacturers JOIN Products ON manufacturers.Code = products.Manufacturer WHERE products.Name = 'DVD drive'       
"SELECT accounts.Statement_ID, statements.Statement_Details FROM Accounts JOIN Statements ON accounts.Statement_ID = statements.Statement_ID  GROUP BY accounts.Statement_ID  ORDER BY count( *) DESC LIMIT 1    "
SELECT sum( state.area) FROM state        
SELECT companies.Headquarters FROM Companies  GROUP BY companies.Headquarters HAVING count( *) > 2     
SELECT count( *) FROM Activity        
SELECT phone.Name FROM phone JOIN phone_market ON phone.Phone_ID = phone_market.Phone_ID JOIN market ON phone_market.Market_ID = market.Market_ID WHERE market.Num_of_shops > 50       
SELECT avg( market.Number_cities) FROM market JOIN film_market_estimation ON market.Market_ID = film_market_estimation.Market_ID WHERE film_market_estimation.Low_Estimate > 10000       
"SELECT player.name_first, player.name_last FROM player WHERE player.death_year = ''       "
SELECT degrees.Degrees FROM degrees JOIN Campuses ON degrees.Campus = campuses.Id WHERE campuses.Campus = 'San Jose State University' and degrees.Year = 2000       
SELECT max( highlow.highest_elevation) FROM highlow        
SELECT documents.Document_ID FROM Documents WHERE documents.Document_Type_Code = 'CV'       EXCEPT SELECT documents_with_expenses.Document_ID FROM Documents_with_Expenses        
SELECT phone.Name FROM phone WHERE phone.Phone_ID NOT IN (SELECT phone_market.Phone_ID FROM phone_market        )       
SELECT count( *) FROM wrestler        
SELECT count( *) FROM circuits        
SELECT count( *) FROM Ref_Colors WHERE reference_colors.color_code NOT IN (SELECT products.color_code FROM Products        )       
SELECT DISTINCT election.District FROM election        
"SELECT ref_attraction_types.Attraction_Type_Description, tourist_attractions.Attraction_Type_Code FROM Ref_Attraction_Types JOIN Tourist_Attractions ON ref_attraction_types.Attraction_Type_Code = tourist_attractions.Attraction_Type_Code  GROUP BY tourist_attractions.Attraction_Type_Code  ORDER BY count( *) DESC LIMIT 1    "
SELECT reference_transaction_types.transaction_type_description FROM Ref_Transaction_Types WHERE reference_transaction_types.transaction_type_code = 'PUR'       
"SELECT count( *), financial_transactions.account_id FROM Financial_Transactions  GROUP BY financial_transactions.account_id      "
"SELECT min( apartments.bathroom_count), max( apartments.bathroom_count) FROM Apartments        "
SELECT DISTINCT count(DISTINCT member.Level) FROM member        
SELECT sum( airport.Domestic_Passengers) FROM airport WHERE airport.Airport_Name like '%London%'       
"SELECT claims.Amount_Settled, claims.Amount_Claimed FROM Claims    ORDER BY claims.Amount_Settled ASC LIMIT 1    "
"SELECT DISTINCT player.player_name, player.birthday FROM Player JOIN Player_Attributes ON player.player_api_id = player_attributes.player_api_id    ORDER BY player_attributes.potential DESC LIMIT 1    "
SELECT state.density FROM state WHERE state.state_name = '1'       
"SELECT college.name_full, college.college_id FROM college JOIN player_college ON college.college_id = T3.college_id  GROUP BY T3.college_id  ORDER BY count( *) DESC LIMIT 1    "
SELECT city.City FROM city JOIN temperature ON city.City_ID = temperature.City_ID    ORDER BY temperature.Feb DESC LIMIT 1    
"SELECT customers.customer_first_name, customers.customer_last_name FROM Customers        EXCEPT SELECT customers.customer_first_name, customers.customer_last_name FROM Customers JOIN Accounts        "
SELECT authors.fname FROM Authors JOIN Authorship ON authors.authID = Authorship.authID JOIN Papers ON Authorship.paperID = papers.paperID WHERE papers.title like '%Functional%'       
"SELECT person.name, person.age, person.job FROM Person JOIN PersonFriend ON person.name = person_friend.friend WHERE person_friend.friend = 'Alice' and person_friend.year = (SELECT max( person_friend.year) FROM PersonFriend WHERE person_friend.friend = 'Alice'       )       "
"SELECT customers_cards.date_valid_from, customers_cards.date_valid_to FROM Customers_Cards WHERE customers_cards.card_number = '4560596484842'       "
SELECT count( *) FROM routes JOIN airlines ON routes.alid = airlines.alid WHERE airlines.name = 'American Airlines'       
SELECT film.title FROM film WHERE film.length > 100 or film.rating = 'PG'       EXCEPT SELECT film.title FROM film WHERE film.replacement_cost > 200       
SELECT business.city FROM business WHERE business.name = 'Taj Mahal'       
SELECT district.Headquartered_City FROM district JOIN store_district ON district.District_ID = store_district.District_ID JOIN store ON store_district.Store_ID = store.Store_ID WHERE store.Store_Name = 'Blackville'       
SELECT tracks.composer FROM tracks WHERE tracks.name = 'Fast As a Shark'       
"SELECT customers.payment_method_code, count( *) FROM Customers  GROUP BY customers.payment_method_code      "
"SELECT documents.Document_Type_Code, documents.Document_Name, documents.Document_Description FROM Documents WHERE documents.Document_Name = 'Noel CV' or documents.Document_Name = 'King Book'       "
SELECT state.area FROM state WHERE state.state_name = '1'       
SELECT DISTINCT paper.paperId FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 1 and venue.venueName = '1'       
SELECT student.STU_FNAME FROM STUDENT JOIN ENROLL ON student.STU_NUM = ENROLL.STU_NUM JOIN CLASS ON ENROLL.CLASS_CODE = class.CLASS_CODE WHERE class.CRS_CODE = 'ACCT-211'       
SELECT mountain.Name FROM mountain WHERE mountain.Mountain_ID NOT IN (SELECT climber.Mountain_ID FROM climber        )       
"SELECT staff.Name, staff.Other_Details FROM Staff        "
"SELECT student.Fname, student.LName FROM Student        "
SELECT movie.director FROM Movie WHERE movie.title = 'Avatar'       
SELECT count( *) FROM Student JOIN Has_Allergy ON student.StuID = has_allergy.StuID WHERE student.Sex = '1' and has_allergy.Allergy = '1' or has_allergy.Allergy = '1'       
"SELECT course.CRS_CREDIT, course.CRS_DESCRIPTION FROM COURSE WHERE course.CRS_CODE = 'CIS-220'       "
SELECT count( *) FROM address WHERE address.district = 'California'       
"SELECT avg( results.fastestLapSpeed), races.name, races.year FROM results JOIN races ON results.raceId = races.raceId WHERE races.year > 1 GROUP BY results.raceId   ORDER BY races.year ASC   "
SELECT count( *) FROM Attribute_Definitions        
SELECT companies.Industry FROM Companies  GROUP BY companies.Industry   ORDER BY count( *) DESC   
SELECT student.name FROM student JOIN takes ON student.ID = T2.ID JOIN section ON T2.course_id = section.course_id JOIN course ON section.course_id = course.course_id WHERE course.dept_name = 'Statistics'       
SELECT max( perpetrator.Year) FROM perpetrator        
SELECT instructor.name FROM instructor JOIN department ON instructor.dept_name = department.dept_name JOIN student ON department.dept_name = student.dept_name    ORDER BY student.tot_cred DESC LIMIT 1    
SELECT products.product_type_code FROM Products  GROUP BY products.product_type_code HAVING count( *) >= 2     
SELECT count( *) FROM ACCOUNTS        
SELECT min( body_builder.Snatch) FROM body_builder        
SELECT candidate.Poll_Source FROM candidate    ORDER BY candidate.Oppose_rate DESC LIMIT 1    
SELECT state.state_name FROM state WHERE state.area = (SELECT max( state.area) FROM state        )       
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 1 and venue.venueName = '1'       
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId JOIN venue ON paper.venueId = venue.venueId WHERE key_phrase.keyphraseName = 'TAIL' and venue.venueName = 'NIPS'       
"SELECT locations.COUNTRY_ID, count( *) FROM locations JOIN countries ON locations.COUNTRY_ID = countries.COUNTRY_ID  GROUP BY locations.COUNTRY_ID      "
SELECT dorm_amenity.amenity_name FROM Dorm_amenity JOIN Has_amenity ON dorm_amenity.amenid = Has_amenity.amenid JOIN Dorm ON Has_amenity.dormid = dorm.dormid WHERE dorm.dorm_name = 'Smith Hall'    ORDER BY dorm_amenity.amenity_name ASC   
SELECT project_staff.date_to FROM Project_Staff    ORDER BY project_staff.date_to DESC LIMIT 1    
"SELECT problem_log.problem_log_id, problem_log.problem_id FROM Problem_Log    ORDER BY problem_log.log_entry_date ASC LIMIT 1    "
SELECT count( *) FROM roller_coaster        
SELECT artist.Name FROM artist        EXCEPT SELECT artist.Name FROM artist JOIN exhibition ON artist.Artist_ID = exhibition.Artist_ID WHERE exhibition.Year = 2004       
SELECT company.Headquarters FROM company WHERE company.Main_Industry = '1'     INTERSECT SELECT company.Headquarters FROM company WHERE company.Main_Industry = '1'         
"SELECT medicine.name, medicine.Trade_Name FROM medicine WHERE medicine.FDA_approved = '1'       "
SELECT count( *) FROM Scientists WHERE scientists.SSN NOT IN (SELECT assigned_to.Scientist FROM AssignedTo        )       
SELECT count( *) FROM Student JOIN Lives_in ON student.StuID = Lives_in.stuid JOIN Dorm ON Lives_in.dormid = dorm.dormid WHERE dorm.gender = 'M'       
"SELECT count( *), projects.Name FROM Scientists JOIN AssignedTo ON scientists.SSN = AssignedTo.Scientist JOIN Projects ON AssignedTo.Project = projects.Code WHERE projects.Hours > 300 GROUP BY projects.Name      "
SELECT customers.Customer_name FROM Customers        EXCEPT SELECT customers.Customer_name FROM Customers JOIN Customers_Policies ON customers.Customer_ID = Customers_Policies.Customer_ID JOIN First_Notification_of_Loss ON Customers_Policies.Customer_ID = T3.Customer_ID        
"SELECT party.Party_name, count( *) FROM party JOIN member ON party.Party_ID = member.Party_ID  GROUP BY party.Party_name      "
SELECT products.product_type_code FROM Products  GROUP BY products.product_type_code HAVING avg( products.product_price) > (SELECT avg( products.product_price) FROM Products        )     
"SELECT reference_calendar.Calendar_Date, reference_calendar.Day_Number FROM Ref_Calendar        "
"SELECT drivers.driverId, drivers.forename, drivers.surname FROM drivers JOIN lapTimes ON drivers.driverId = lap_times.driverId WHERE lap_times.position = 1 GROUP BY lap_times.driverId HAVING count( *) >= 2     "
SELECT journal.homepage FROM journal WHERE journal.name = 'PVLDB'       
SELECT sum( order_items.Order_Quantity) FROM Order_Items JOIN Products ON order_items.Product_ID = products.Product_ID WHERE products.Product_Name = 'photo'       
SELECT count( *) FROM Songs        
"SELECT products.product_name, sum( order_items.product_quantity) FROM Products JOIN Order_Items ON products.product_id = order_items.product_id  GROUP BY products.product_name      "
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT highlow.state_name FROM highlow WHERE highlow.highest_elevation > (SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name = '1'       )       
SELECT bank.bname FROM bank JOIN loan ON bank.branch_ID = loan.branch_ID JOIN customer ON bank.branch_ID = customer.branch_ID WHERE customer.credit_score < 100 GROUP BY bank.bname  ORDER BY sum( loan.amount) DESC LIMIT 1    
"SELECT workshop.Date, workshop.Venue FROM workshop     ORDER BY workshop.Venue ASC   "
SELECT club.ClubName FROM Club WHERE club.ClubLocation = 'AKW'       
"SELECT browser.id, browser.market_share FROM browser WHERE browser.name = 'Safari'       "
SELECT instructor.name FROM instructor WHERE instructor.salary > (SELECT min( instructor.salary) FROM instructor WHERE instructor.dept_name = 'Biology'       )       
SELECT avg( companies.Profits_billion) FROM Companies        
SELECT DISTINCT count(DISTINCT actor.last_name) FROM actor        
SELECT organisations.organisation_type FROM Organisations JOIN Research_Staff ON organisations.organisation_id = research_staff.employer_organisation_id  GROUP BY organisations.organisation_type  ORDER BY count( *) DESC LIMIT 1    
SELECT DISTINCT physician.Name FROM Physician JOIN Prescribes ON physician.EmployeeID = Prescribes.Physician JOIN Medication ON Prescribes.Medication = medication.Code WHERE medication.Name = 'Thesisin'       
SELECT count( *) FROM song JOIN files ON song.f_id = files.f_id WHERE files.duration like '%1%'       
"SELECT publication.year, sum( publication.citation_num) FROM publication JOIN journal ON publication.jid = journal.jid WHERE journal.name = 'PVLDB' GROUP BY publication.year      "
SELECT DISTINCT key_phrase.keyphraseId FROM keyphrase JOIN paperKeyphrase ON key_phrase.keyphraseId = paperKeyphrase.keyphraseId JOIN paper ON paperKeyphrase.paperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Luke Zettlemoyer'       
"SELECT accounts.account_id, accounts.customer_id, accounts.account_name FROM Accounts        "
"SELECT DISTINCT customers_cards.card_type_code, count(DISTINCT customers_cards.customer_id) FROM Customers_Cards  GROUP BY customers_cards.card_type_code      "
SELECT avg( product.pages_per_minute_color) FROM product        
"SELECT university.School, university.Location FROM university WHERE university.Affiliation = '1'       "
SELECT count( *) FROM product        
SELECT DISTINCT journal.journalId FROM journal JOIN paper ON journal.journalId = paper.journalId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
SELECT avg( products.product_price) FROM Products WHERE products.product_type_code = 'Clothes'       
SELECT scientists.Name FROM Scientists WHERE scientists.SSN NOT IN (SELECT assigned_to.Scientist FROM AssignedTo        )       
SELECT count( *) FROM Person WHERE person.age > (SELECT max( person.age) FROM Person WHERE person.job = 'engineer'       )       
"SELECT customers.email_address, customers.phone_number FROM Customers WHERE customers.customer_id NOT IN (SELECT complaints.customer_id FROM Complaints        )       "
SELECT city.city_name FROM city WHERE city.population = (SELECT max( city.population) FROM city        )       
SELECT catalog_structure.catalog_level_name FROM Catalog_Structure JOIN Catalog_Contents ON catalog_structure.catalog_level_number = catalog_contents.catalog_level_number    ORDER BY catalog_contents.price_in_dollars ASC LIMIT 1    
"SELECT instructor.name, teaches.course_id FROM instructor JOIN teaches ON instructor.ID = teaches.ID WHERE instructor.dept_name = 'Art'       "
SELECT count( *) FROM Player WHERE player.HS > 1000       
SELECT DISTINCT customers.Customer_Details FROM Customers JOIN Policies ON customers.Customer_ID = policies.Customer_ID WHERE policies.Policy_Type_Code = 'Deputy' or policies.Policy_Type_Code = 'Uniform'       
"SELECT museums.Museum_Details, tourist_attractions.Opening_Hours FROM Museums JOIN Tourist_Attractions ON museums.Museum_ID = tourist_attractions.Tourist_Attraction_ID        "
SELECT follows.f1 FROM follows JOIN user_profiles ON follows.f2 = user_profiles.uid WHERE user_profiles.name = 'Mary' or user_profiles.name = 'Susan'       
SELECT vocals.Type FROM Vocals JOIN Songs ON vocals.SongId = songs.SongId WHERE songs.Title = 'Badlands'       
SELECT branch.Name FROM branch    ORDER BY branch.membership_amount DESC LIMIT 1    
"SELECT circuits.circuitId, circuits.location FROM circuits WHERE circuits.country = 'France' or circuits.country = 'Belgium'       "
SELECT reservations.Adults FROM Reservations WHERE reservations.CheckIn = '2010-10-23' and reservations.FirstName = 'CONRAD' and reservations.LastName = 'SELBIG'       
SELECT addresses.town_city FROM Addresses       UNION SELECT addresses.state_province_county FROM Addresses         
"SELECT school.Location, school_details.Nickname FROM school JOIN school_details ON school.School_ID = school_details.School_ID        "
SELECT course.CName FROM Course JOIN Enrolled_in ON course.CID = T2.CID  GROUP BY course.CName HAVING count( *) >= 5     
"SELECT shop.Shop_ID, shop.Address FROM shop WHERE shop.Score < (SELECT avg( shop.Score) FROM shop        )       "
"SELECT project_staff.project_id, count( *) FROM Project_Staff JOIN Projects ON project_staff.project_id = projects.project_id  GROUP BY project_staff.project_id   ORDER BY count( *) ASC   "
SELECT DISTINCT products.product_details FROM Products        
"SELECT DISTINCT count(DISTINCT movie.title), movie.release_year FROM cast JOIN actor ON T2.aid = actor.aid JOIN movie WHERE actor.name = 'Brad Pitt' GROUP BY movie.release_year      "
"SELECT furniture.Name, furniture.Furniture_ID FROM furniture    ORDER BY furniture.Market_Rate DESC LIMIT 1    "
SELECT tryout.cName FROM Tryout WHERE tryout.pPos = '1'       EXCEPT SELECT tryout.cName FROM Tryout WHERE tryout.pPos = '1'       
SELECT city.population FROM city WHERE city.city_name = (SELECT state.capital FROM state WHERE state.area = (SELECT max( state.area) FROM state        )       )       
SELECT documents.Document_Date FROM Documents JOIN Documents_with_Expenses ON documents.Document_ID = documents_with_expenses.Document_ID WHERE documents_with_expenses.Budget_Type_Code = 'GV'     INTERSECT SELECT documents.Document_Date FROM Documents JOIN Documents_with_Expenses ON documents.Document_ID = documents_with_expenses.Document_ID WHERE documents_with_expenses.Budget_Type_Code = 'SF'         
"SELECT DISTINCT files.file_size, files.formats FROM files JOIN song ON files.f_id = song.f_id WHERE song.resolution < 800       "
"SELECT customers.first_name, customers.last_name FROM customers JOIN invoices ON customers.id = invoices.customer_id    ORDER BY invoices.invoice_date DESC LIMIT 1    "
SELECT stadium.Average_Attendance FROM stadium WHERE stadium.Capacity_Percentage > 100       
SELECT count( *) FROM GEOGRAPHIC        
"SELECT apartment_bookings.booking_start_date, apartment_bookings.booking_end_date FROM Apartment_Bookings        "
SELECT physician.Name FROM Physician JOIN Patient ON physician.EmployeeID = T2.PCP  GROUP BY physician.Name HAVING count( *) > 1     
SELECT publication.title FROM publication JOIN domain_publication ON publication.pid = domain_publication.pid JOIN domain ON domain_publication.did = domain.did WHERE domain.name = 'Databases' and publication.citation_num > 200       
SELECT avg( student.Age) FROM Student JOIN Member_of_club ON student.StuID = Member_of_club.StuID JOIN Club ON Member_of_club.ClubID = club.ClubID WHERE club.ClubName = 'Tennis Club'       
"SELECT employee.name, employee.salary FROM employee JOIN certificate ON employee.eid = T3.eid  GROUP BY T3.eid  ORDER BY count( *) DESC LIMIT 1    "
"SELECT DISTINCT cite.citedPaperId, count(DISTINCT cite.citingPaperId) FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 1 and venue.venueName = '1' GROUP BY cite.citedPaperId   ORDER BY count( cite.citingPaperId) DESC   "
SELECT state.capital FROM state WHERE state.area = (SELECT min( state.area) FROM state        )       
"SELECT farm_competition.Year, city.Official_Name FROM farm_competition JOIN city ON farm_competition.Host_city_ID = city.City_ID        "
SELECT hosting_city.Year FROM hosting_city JOIN city ON hosting_city.Host_City = city.City_ID WHERE city.City = 'Taizhou ( Zhejiang )'       
SELECT count( *) FROM author        
SELECT DISTINCT allergy_type.Allergy FROM Allergy_Type WHERE allergy_type.AllergyType = 'food'       
SELECT actor.name FROM actor JOIN cast ON actor.aid = T3.aid JOIN movie WHERE actor.nationality = 'Canada' and movie.title = 'James Bond'       
"SELECT program.Name, program.Origin, program.Owner FROM program        "
SELECT count( *) FROM Addresses        
SELECT captain.Rank FROM captain WHERE captain.Class = 'Cutter'     INTERSECT SELECT captain.Rank FROM captain WHERE captain.Class = 'Armed schooner'         
SELECT count( *) FROM venue        
SELECT user.name FROM user JOIN review ON user.user_id = review.user_id JOIN business ON review.business_id = business.business_id JOIN tip ON business.business_id = tip.business_id WHERE business.name = 'Barrio Cafe' and tip.year = 2015       
"SELECT DISTINCT suppliers.supplier_name, suppliers.supplier_phone FROM Suppliers JOIN Product_Suppliers ON suppliers.supplier_id = Product_Suppliers.supplier_id JOIN Products ON Product_Suppliers.product_id = products.product_id WHERE products.product_name = '1'       "
SELECT count( *) FROM Lessons JOIN Customers ON lessons.customer_id = customers.customer_id WHERE customers.first_name = 'Ray'       
SELECT count( *) FROM results JOIN races ON results.raceId = races.raceId WHERE races.name = 'Australian Grand Prix' and races.year = 2009       
SELECT reference_colors.color_description FROM Ref_Colors JOIN Products ON reference_colors.color_code = products.color_code WHERE products.product_name = 'catnip'       
SELECT actor.name FROM actor WHERE actor.birth_city = 'Tehran'       
SELECT count( *) FROM College        
"SELECT max( wine.Price), max( wine.Score), wine.Year FROM wine  GROUP BY wine.Year      "
SELECT DISTINCT student.Major FROM Student JOIN Voting_record ON student.StuID = T2.Class_Senator_Vote        
SELECT customers.customer_id FROM Customers JOIN Orders ON customers.customer_id = orders.customer_id WHERE orders.order_status = 'On Road'     INTERSECT SELECT customers.customer_id FROM Customers JOIN Orders ON customers.customer_id = orders.customer_id WHERE orders.order_status = 'Shipped'         
SELECT DISTINCT count(DISTINCT publication.title) FROM publication JOIN writes ON publication.pid = writes.pid JOIN author ON writes.aid = author.aid JOIN journal ON publication.jid = journal.jid WHERE author.name = '1' and journal.name = '1' and publication.year > 1       
"SELECT products.product_category_code, products.typical_buying_price FROM Products WHERE products.product_name = 'cumin'       "
"SELECT useracct.name, avg( trust.trust) FROM useracct JOIN trust ON useracct.u_id = trust.target_u_id  GROUP BY useracct.name      "
SELECT state.population FROM state WHERE state.state_name = '1'       
SELECT count( city.city_name) FROM city        
SELECT count( *) FROM Bookings        
SELECT state.state_name FROM state WHERE state.state_name NOT IN (SELECT border_info.state_name FROM border_info        )       
SELECT count( *) FROM artist WHERE artist.Age > 46 and artist.Year_Join > 1990       
"SELECT avg( student.Age), dorm.dorm_name FROM Student JOIN Lives_in ON student.StuID = Lives_in.stuid JOIN Dorm ON Lives_in.dormid = dorm.dormid  GROUP BY dorm.dorm_name      "
SELECT business.name FROM business JOIN category ON business.business_id = category.business_id WHERE business.rating = 1 and category.category_name = '1' and category.category_name = '1'       
"SELECT count( *), files.formats FROM artist JOIN files ON artist.artist_name = files.artist_name  GROUP BY files.formats      "
SELECT actor.first_name FROM actor  GROUP BY actor.first_name  ORDER BY count( *) DESC LIMIT 1    
SELECT count( *) FROM Physician        
SELECT DISTINCT club.ClubName FROM Club JOIN Member_of_club ON club.ClubID = Member_of_club.ClubID JOIN Student ON Member_of_club.StuID = student.StuID WHERE student.city_code = 'HOU'       
"SELECT customers.customer_name, customers.customer_id FROM Customers WHERE customers.customer_address like '%TN%'       "
SELECT count( *) FROM Patient WHERE patient.SSN NOT IN (SELECT prescribes.Patient FROM Prescribes JOIN Medication ON prescribes.Medication = medication.Code WHERE medication.Name = 'Procrastin-X'       )       
"SELECT DISTINCT count(DISTINCT products.Name), manufacturers.Headquarter FROM Products JOIN Manufacturers ON products.Manufacturer = manufacturers.Code  GROUP BY manufacturers.Headquarter      "
SELECT count( *) FROM GEOGRAPHIC        
SELECT sum( claims.Amount_Claimed) FROM Claims        
"SELECT tourist_attractions.Name, tourist_attractions.Opening_Hours FROM Tourist_Attractions WHERE tourist_attractions.How_to_Get_There = '1' or tourist_attractions.How_to_Get_There = '1'       "
SELECT business.name FROM business JOIN review ON business.business_id = review.business_id JOIN user ON review.user_id = user.user_id WHERE user.name = 'Niloofar'       
SELECT person.name FROM Person        EXCEPT SELECT person_friend.name FROM PersonFriend        
SELECT count( *) FROM author        
"SELECT races.name, races.date FROM races    ORDER BY races.date DESC LIMIT 1    "
SELECT music_festival.Result FROM music_festival  GROUP BY music_festival.Result  ORDER BY count( *) DESC LIMIT 1    
SELECT products.Product_Name FROM Products JOIN Products_in_Events ON products.Product_ID = T2.Product_ID JOIN Events ON T2.Event_ID = events.Event_ID  GROUP BY products.Product_Name HAVING count( *) >= 2     
SELECT count( *) FROM GEOGRAPHIC        
SELECT count( *) FROM Apartment_Buildings        
SELECT DISTINCT count(DISTINCT enrolled_in.StuID) FROM Enrolled_in WHERE enrolled_in.Grade = 'B'       
SELECT organisations.organisation_details FROM Organisations JOIN Organisation_Types ON organisations.organisation_type = organisation_types.organisation_type WHERE organisation_types.organisation_type_description = 'Sponsor'    ORDER BY organisations.organisation_details ASC   
SELECT school.Type FROM school  GROUP BY school.Type HAVING count( *) = 2     
SELECT * FROM job_history JOIN employees ON job_history.EMPLOYEE_ID = employees.EMPLOYEE_ID WHERE employees.SALARY >= 12000       
SELECT DISTINCT count(DISTINCT assigned_to.Scientist) FROM AssignedTo        
SELECT DISTINCT cite.citingPaperId FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN venue ON paper.venueId = venue.venueId WHERE venue.venueName = 'ACL' GROUP BY cite.citingPaperId HAVING count( cite.citedPaperId) < 5     
"SELECT protein.protein_name, institution.Institution FROM protein JOIN Institution ON protein.Institution_id = institution.Institution_id        "
"SELECT country.Name, country.Population FROM country JOIN roller_coaster ON country.Country_ID = roller_coaster.Country_ID    ORDER BY roller_coaster.Height DESC LIMIT 1    "
SELECT DISTINCT paper.venueId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1' and paper.year = 1       
"SELECT university.School, university.Nickname FROM university     ORDER BY university.Founded ASC   "
SELECT keyword.keyword FROM keyword JOIN publication_keyword ON keyword.kid = publication_keyword.kid JOIN publication ON publication_keyword.pid = publication.pid JOIN writes ON publication.pid = writes.pid JOIN author ON writes.aid = author.aid WHERE author.name = '1' GROUP BY keyword.keyword  ORDER BY count( publication.title) DESC LIMIT 1    
SELECT appointment.AppointmentID FROM Appointment    ORDER BY appointment.Start DESC LIMIT 1    
SELECT count( *) FROM Songs JOIN Instruments ON songs.SongId = instruments.SongId WHERE instruments.Instrument = 'drums'       
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = 'Question Answering'       
SELECT DISTINCT count(DISTINCT department.DEPT_NAME) FROM DEPARTMENT        
SELECT authors.fname FROM Authors WHERE authors.lname = 'Ueno'       
"SELECT web_client_accelerator.name, web_client_accelerator.Operating_system FROM Web_client_accelerator WHERE web_client_accelerator.Connection != 'Broadband'       "
"SELECT party.Comptroller, count( *) FROM party  GROUP BY party.Comptroller  ORDER BY count( *) DESC LIMIT 1    "
SELECT csu_fees.CampusFee FROM csu_fees JOIN Campuses ON csu_fees.Campus = campuses.Id WHERE campuses.Campus = 'San Jose State University' and csu_fees.Year = 2000       
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and restaurant.RATING > 1       "
SELECT DISTINCT count(DISTINCT match_season.Team) FROM match_season        
SELECT DISTINCT customers.customer_name FROM Customers JOIN Customer_Orders ON customers.customer_id = Customer_Orders.customer_id JOIN Order_Items ON Customer_Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = products.product_id WHERE products.product_name = 'keyboard'       
SELECT products.product_details FROM Products JOIN Order_Items ON products.product_id = T2.product_id  GROUP BY products.product_details  ORDER BY count( *) DESC LIMIT 1    
SELECT all_documents.Date_Stored FROM All_Documents WHERE all_documents.Document_Name = 'Marry CV'       
SELECT customers.customer_name FROM Customers JOIN Orders ON customers.customer_id = T2.customer_id  GROUP BY customers.customer_name HAVING count( *) <= 2     
SELECT music_festival.Date_of_ceremony FROM music_festival WHERE music_festival.Category = 'Best Song' and music_festival.Result = 'Awarded'       
SELECT papers.title FROM Papers WHERE papers.title like '%Database%'       
SELECT student.Sex FROM Student WHERE student.Fname = 'Linda' and student.LName = 'Smith'       
"SELECT count( *), airports.name FROM routes JOIN airports ON routes.src_apid = airports.apid  GROUP BY airports.name      "
"SELECT course_authors_and_tutors.login_name, course_authors_and_tutors.family_name FROM Course_Authors_and_Tutors        "
"SELECT storm.Name, storm.Max_speed FROM storm JOIN affected_region ON storm.Storm_ID = T3.Storm_ID  GROUP BY T3.Storm_ID  ORDER BY count( *) DESC LIMIT 1    "
SELECT count( *) FROM body_builder JOIN people ON body_builder.People_ID = people.People_ID WHERE people.People_ID NOT IN (SELECT body_builder.People_ID FROM body_builder        )       
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' and paper.year = 1       
"SELECT medicine.id, medicine.Trade_Name FROM medicine JOIN medicine_enzyme_interaction ON medicine.id = T2.medicine_id  GROUP BY medicine.id HAVING count( *) >= 3     "
"SELECT aircraft.name, aircraft.distance FROM aircraft WHERE aircraft.aid = 12       "
SELECT DISTINCT writes.authorId FROM writes JOIN paper ON writes.paperId = paper.paperId JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 1 and venue.venueName = '1'       
SELECT count( *) FROM Products WHERE products.Price >= 180       
SELECT wine.Name FROM wine JOIN appellations ON wine.Appelation = appellations.Appelation WHERE appellations.County = 'Monterey' and wine.Price < 50       
SELECT dorm_amenity.amenity_name FROM Dorm_amenity JOIN Has_amenity ON dorm_amenity.amenid = Has_amenity.amenid JOIN Dorm ON Has_amenity.dormid = dorm.dormid WHERE dorm.dorm_name = 'Smith Hall'       
"SELECT employee.name, employee.salary FROM employee     ORDER BY employee.salary ASC   "
"SELECT behavior_incident.date_incident_start, behavior_incident.date_incident_end FROM Behavior_Incident JOIN Students ON behavior_incident.student_id = students.student_id WHERE students.last_name = 'Fahey'       "
SELECT authors.lname FROM Authors JOIN Authorship ON authors.authID = Authorship.authID JOIN Papers ON Authorship.paperID = papers.paperID WHERE papers.title like '%Monadic%'       
SELECT DISTINCT count(DISTINCT timed_status_of_things.Status_of_Thing_Code) FROM Timed_Status_of_Things        
"SELECT course_authors_and_tutors.address_line_1, courses.author_id FROM Course_Authors_and_Tutors JOIN Courses ON course_authors_and_tutors.author_id = courses.author_id  GROUP BY courses.author_id HAVING count( *) >= 2     "
SELECT count( *) FROM CLASS        
"SELECT employees.DEPARTMENT_ID, avg( employees.SALARY) FROM employees WHERE employees.COMMISSION_PCT != 1 GROUP BY employees.DEPARTMENT_ID      "
SELECT count( *) FROM venue        
SELECT files.f_id FROM files WHERE files.formats = '1'       
SELECT max( manager.Level) FROM manager WHERE manager.Country != 'Australia'       
SELECT editor.Name FROM editor    ORDER BY editor.Age ASC LIMIT 1    
SELECT vocals.Type FROM Vocals JOIN Band ON vocals.Bandmate = band.Id JOIN Performance ON band.Id = Performance.Bandmate JOIN Songs ON Performance.SongId = songs.SongId WHERE band.Lastname = 'Heilo' and songs.Title = 'Der Kapitan'       
SELECT document_structures.document_structure_description FROM Document_Structures JOIN Documents ON document_structures.document_structure_code = documents.document_structure_code  GROUP BY document_structures.document_structure_description  ORDER BY count( *) DESC LIMIT 1    
SELECT street_markets.Market_Details FROM Street_Markets JOIN Tourist_Attractions ON street_markets.Market_ID = tourist_attractions.Tourist_Attraction_ID WHERE tourist_attractions.How_to_Get_There = 'walk' or tourist_attractions.How_to_Get_There = 'bus'       
SELECT publication.title FROM publication JOIN writes ON publication.pid = writes.pid JOIN author ON writes.aid = author.aid JOIN journal ON publication.jid = journal.jid WHERE author.name = '1' and journal.name = '1' and publication.citation_num > 1       
SELECT DISTINCT paper.paperId FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE paper.title like '%1%' and paper.year = 1 and venue.venueName = '1'       
"SELECT film.Title, film_market_estimation.Type FROM film JOIN film_market_estimation ON film.Film_ID = film_market_estimation.Film_ID        "
SELECT publication.title FROM publication JOIN writes ON publication.pid = writes.pid JOIN author ON writes.aid = author.aid JOIN journal ON publication.jid = journal.jid WHERE author.name = '1' and journal.name = '1'       
SELECT camera_lens.name FROM camera_lens WHERE camera_lens.name like '%Digital%'       
SELECT orders.date_order_placed FROM Orders JOIN Shipments ON orders.order_id = shipments.order_id WHERE shipments.shipment_tracking_number = '3452'       
SELECT count( *) FROM Lessons WHERE lessons.lesson_status_code = '1'       
"SELECT products.product_category_code, products.typical_buying_price FROM Products WHERE products.product_name = 'cumin'       "
"SELECT max( wine.Price), max( wine.Score) FROM wine WHERE wine.Appelation = 'St. Helena'       "
"SELECT student.Fname, student.Age FROM Student WHERE student.StuID in (SELECT sports_info.StuID FROM SportsInfo WHERE sports_info.SportName = 'Football'       )       "
SELECT musical.Name FROM musical WHERE musical.Musical_ID NOT IN (SELECT actor.Musical_ID FROM actor        )       
SELECT highlow.state_name FROM highlow WHERE highlow.highest_elevation = (SELECT max( highlow.highest_elevation) FROM highlow        )       
"SELECT count( *), block.BlockFloor FROM Room JOIN Block ON room.BlockFloor = block.BlockFloor  GROUP BY block.BlockFloor      "
"SELECT student_course_enrolment.date_of_enrolment, student_course_enrolment.date_of_completion FROM Student_Course_Enrolment JOIN Students ON student_course_enrolment.student_id = students.student_id WHERE students.personal_name = 'Karson'       "
SELECT DISTINCT film.Director FROM film        
SELECT DISTINCT count(DISTINCT publication.title) FROM publication JOIN conference ON publication.cid = conference.cid WHERE conference.name = 'VLDB' and publication.year < 2000       
SELECT DISTINCT writes.paperId FROM writes JOIN paper ON writes.paperId = paper.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'    ORDER BY paper.year DESC   
SELECT student.Major FROM Student  GROUP BY student.Major  ORDER BY count( *) DESC LIMIT 1    
SELECT people.first_name FROM People     ORDER BY people.first_name ASC   
SELECT state.state_name FROM state WHERE state.area = (SELECT max( state.area) FROM state        )       
SELECT river.river_name FROM river WHERE river.length = (SELECT max( river.length) FROM river        )       
SELECT avg( student.Age) FROM Student WHERE student.StuID in (SELECT has_allergy.StuID FROM Has_Allergy JOIN Allergy_Type ON has_allergy.Allergy = allergy_type.Allergy WHERE allergy_type.AllergyType = 'food'       )       
SELECT DISTINCT count(DISTINCT affected_region.Region_id) FROM affected_region        
SELECT count( *) FROM Customers WHERE customers.Customer_name = 'Dayana Robel'       
SELECT count( *) FROM Vocals JOIN Songs ON vocals.SongId = songs.SongId WHERE songs.Title = 'Le Pop'       
SELECT grants.grant_amount FROM Grants JOIN Documents ON grants.grant_id = documents.grant_id WHERE documents.sent_date < '1986-08-26 20:49:27'     INTERSECT SELECT grants.grant_amount FROM Grants WHERE grants.grant_end_date > '1989-03-16 18:27:16'         
SELECT student.name FROM student JOIN advisor ON student.ID = T2.s_ID  GROUP BY student.name HAVING count( *) > 1     
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 1 and venue.venueName = '1'       
"SELECT person.name, person.job FROM Person     ORDER BY person.name ASC   "
SELECT DISTINCT people.Hometown FROM people        EXCEPT SELECT DISTINCT people.Hometown FROM people JOIN gymnast ON people.People_ID = T3.Gymnast_ID        
SELECT publication.title FROM publication JOIN conference ON publication.cid = conference.cid JOIN publication_keyword ON publication.pid = publication_keyword.pid JOIN keyword ON publication_keyword.kid = keyword.kid WHERE conference.name = 'VLDB' and keyword.keyword = 'Information Retrieval'       
SELECT staff.date_left_staff FROM Staff WHERE staff.first_name = 'Janessa' and staff.last_name = 'Sawayn'       
"SELECT workshop.Date, workshop.Venue FROM workshop     ORDER BY workshop.Venue ASC   "
SELECT artist.Famous_Release_date FROM artist    ORDER BY artist.Age DESC LIMIT 1    
SELECT county.County_name FROM county    ORDER BY county.Population ASC LIMIT 1    
SELECT count( *) FROM CLASS JOIN EMPLOYEE ON class.PROF_NUM = employee.EMP_NUM WHERE employee.EMP_LNAME = 'Graztevski'       
SELECT business.name FROM business WHERE business.rating = 3.5       
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId JOIN venue ON paper.venueId = venue.venueId WHERE key_phrase.keyphraseName = '1' and paper.year = 1 and venue.venueName = '1'       
SELECT mill.name FROM mill WHERE mill.name like '%Moulin%'       
SELECT review.text FROM review JOIN business ON review.business_id = business.business_id WHERE business.rating = 2.5       
"SELECT hall_of_fame.yearid, count( *) FROM hall_of_fame  GROUP BY hall_of_fame.yearid      "
SELECT station.Location FROM station  GROUP BY station.Location  ORDER BY count( *) DESC LIMIT 1    
"SELECT drivers.forename, drivers.surname FROM drivers JOIN lapTimes ON drivers.driverId = lap_times.driverId    ORDER BY lap_times.milliseconds ASC LIMIT 1    "
SELECT count( *) FROM venue        
SELECT students.personal_name FROM Students        EXCEPT SELECT students.personal_name FROM Students JOIN Student_Course_Enrolment ON students.student_id = T3.student_id        
SELECT company.Headquarters FROM company WHERE company.Main_Industry = 'Banking'     INTERSECT SELECT company.Headquarters FROM company WHERE company.Main_Industry = 'Oil and gas'         
"SELECT cinema.Name, sum( schedule.Show_times_per_day) FROM cinema JOIN schedule ON cinema.Cinema_ID = schedule.Cinema_ID  GROUP BY cinema.Name      "
SELECT city.population FROM city WHERE city.population = (SELECT max( city.population) FROM city        )       
"SELECT DISTINCT cite.citedPaperId, count(DISTINCT cite.citedPaperId) FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1' GROUP BY cite.citedPaperId   ORDER BY count( cite.citedPaperId) DESC   "
"SELECT technician.Name, machine.Machine_series FROM technician JOIN repair_assignment ON technician.technician_id = repair_assignment.technician_id JOIN machine ON repair_assignment.Machine_ID = machine.Machine_ID        "
SELECT campuses.Campus FROM Campuses WHERE campuses.Location = 'Northridge' and campuses.County = 'Los Angeles'      UNION SELECT campuses.Campus FROM Campuses WHERE campuses.Location = 'San Francisco' and campuses.County = 'San Francisco'        
SELECT DISTINCT available_policies.policy_type_code FROM Available_Policies JOIN Customers_Policies ON available_policies.Policy_ID = Customers_Policies.Policy_ID JOIN Customers ON Customers_Policies.Customer_ID = customers.Customer_ID WHERE customers.Customer_name = (SELECT customers.Customer_name FROM Customers JOIN Customers_Policies ON customers.Customer_ID = T24.Customer_ID  GROUP BY customers.Customer_name  ORDER BY count( *) DESC LIMIT 1    )       
SELECT avg( station.long) FROM station WHERE station.id NOT IN (SELECT status.station_id FROM status  GROUP BY status.station_id HAVING max( status.bikes_available) > 10     )       
SELECT city.City FROM city JOIN temperature ON city.City_ID = temperature.City_ID WHERE temperature.Mar < 1       
SELECT college.state FROM College JOIN Tryout ON college.cName = tryout.cName WHERE tryout.pPos = 'striker'       
SELECT documents.Document_ID FROM Documents WHERE documents.Document_Type_Code = 'CV'       EXCEPT SELECT documents_with_expenses.Document_ID FROM Documents_with_Expenses        
"SELECT music_festival.Result, count( *) FROM music_festival  GROUP BY music_festival.Result   ORDER BY count( *) DESC   "
"SELECT technician.Team, count( *) FROM technician  GROUP BY technician.Team      "
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId JOIN venue ON paper.venueId = venue.venueId WHERE key_phrase.keyphraseName = '1' and paper.year = 1 and venue.venueName = '1'       
SELECT region.Region_name FROM region JOIN affected_region ON region.Region_id = affected_region.Region_id JOIN storm ON affected_region.Storm_ID = storm.Storm_ID    ORDER BY storm.Number_Deaths DESC LIMIT 1    
SELECT user_profiles.partitionid FROM user_profiles WHERE user_profiles.name = 'Iron Man'       
SELECT count( *) FROM technician        
SELECT count( *) FROM Courses        
SELECT ship.Nationality FROM ship  GROUP BY ship.Nationality HAVING count( *) > 2     
SELECT * FROM Albums WHERE albums.Year = 2010       
SELECT people.Height FROM people JOIN perpetrator ON people.People_ID = perpetrator.People_ID     ORDER BY perpetrator.Injured DESC   
SELECT DISTINCT book_club.Publisher FROM book_club        
SELECT state.state_name FROM state WHERE state.population = (SELECT max( state.population) FROM state        )       
SELECT documents.Document_Type_Code FROM Documents  GROUP BY documents.Document_Type_Code HAVING count( *) < 3     
SELECT sum( order_items.order_quantity) FROM Order_Items JOIN Customer_Orders ON order_items.order_id = Customer_Orders.order_id JOIN Customers ON Customer_Orders.customer_id = customers.customer_id WHERE customers.customer_name = 'Rodrick Heaney'       
SELECT avg( track.Milliseconds) FROM Track JOIN Genre ON track.GenreId = genre.GenreId WHERE genre.Name = 'Latin' or genre.Name = 'Pop'       
SELECT user.name FROM user JOIN tip ON user.user_id = T2.user_id JOIN business ON T2.business_id = business.business_id WHERE business.city = 'Dallas'       
"SELECT medicine.Trade_Name, count( *) FROM medicine  GROUP BY medicine.Trade_Name      "
SELECT count( *) FROM Bookings        
SELECT DISTINCT artist.Famous_Release_date FROM artist        
SELECT reviewer.name FROM Reviewer JOIN Rating ON reviewer.rID = rating.rID WHERE rating.stars > 3       
SELECT course.CName FROM Course WHERE course.Credits = 3      UNION SELECT course.CName FROM Course WHERE course.Credits = 1 and course.Hours = '4'        
SELECT camera_lens.brand FROM camera_lens JOIN photos ON camera_lens.id = photos.camera_lens_id JOIN mountain ON photos.mountain_id = mountain.id WHERE mountain.Range = 'Toubkal Atlas'     INTERSECT SELECT camera_lens.brand FROM camera_lens JOIN photos ON camera_lens.id = photos.camera_lens_id JOIN mountain ON photos.mountain_id = mountain.id WHERE mountain.Range = 'Lasta Massif'         
SELECT DISTINCT count(DISTINCT management.temporary_acting) FROM management        
"SELECT DISTINCT author.authorId, paper.paperId FROM author JOIN writes ON author.authorId = writes.authorId JOIN paper ON writes.paperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE author.authorName = '1' and key_phrase.keyphraseName = '1'       "
SELECT buildings.name FROM buildings WHERE buildings.Status = 'on-hold'    ORDER BY buildings.Stories ASC   
"SELECT min( branch.membership_amount), max( branch.membership_amount) FROM branch WHERE branch.Open_year = '2011' or branch.City = 'London'       "
SELECT count( *) FROM Tryout WHERE tryout.decision = '1'       
SELECT * FROM instructor     ORDER BY instructor.salary ASC   
SELECT train.Name FROM train JOIN train_station ON train.Train_ID = train_station.Train_ID WHERE train_station.Station_ID NOT IN (SELECT station.Station_ID FROM station JOIN train_station ON station.Station_ID = T24.Station_ID WHERE station.Location = 'London'       )       
SELECT count( river.river_name) FROM river WHERE river.traverse in (SELECT border_info.border FROM border_info WHERE border_info.state_name = '1'       )       
SELECT count( *) FROM Manufacturers WHERE manufacturers.Headquarter = 'Tokyo' or manufacturers.Headquarter = 'Beijing'       
SELECT count( *) FROM Rooms WHERE rooms.RoomId NOT IN (SELECT DISTINCT reservations.Room FROM Reservations        )       
SELECT physician.Name FROM Physician        EXCEPT SELECT physician.Name FROM Physician JOIN Appointment ON physician.EmployeeID = T3.Physician        
SELECT city.city_name FROM city WHERE city.state_name = '1'       
"SELECT min( products.product_price), max( products.product_price), avg( products.product_price) FROM Products        "
SELECT count( *) FROM review        
"SELECT weather.date, weather.cloud_cover FROM weather    ORDER BY weather.cloud_cover DESC LIMIT 1    "
SELECT albums.title FROM albums JOIN tracks ON albums.id = tracks.album_id WHERE tracks.name = '1'       
SELECT songs.Title FROM Songs JOIN Performance ON songs.SongId = T2.SongId JOIN Band ON T2.Bandmate = band.Id WHERE band.Firstname = 'Marianne'       
"SELECT documents.document_id, documents.receipt_date FROM Documents        "
SELECT election.Committee FROM election JOIN party ON election.Party = party.Party_ID WHERE party.Party = '1'     INTERSECT SELECT election.Committee FROM election JOIN party ON election.Party = party.Party_ID WHERE party.Party = '1'         
SELECT count( *) FROM Student        
SELECT customers.last_name FROM Customers      INTERSECT SELECT staff.last_name FROM Staff          
SELECT course.title FROM course JOIN department ON course.dept_name = department.dept_name  GROUP BY course.title HAVING count( *) > 1     
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1'       
"SELECT wine.Name, wine.Score FROM wine        "
SELECT pilot.Name FROM pilot WHERE pilot.Pilot_Id NOT IN (SELECT match.Winning_Pilot FROM match WHERE match.Country = 'Australia'       )       
"SELECT products.Name, products.Price FROM Products WHERE products.Price >= 180    ORDER BY products.Price ASC   "
"SELECT city.Official_Name, city.Status FROM city    ORDER BY city.Population DESC LIMIT 1    "
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
"SELECT addresses.state_province_county, count( *) FROM Addresses  GROUP BY addresses.state_province_county      "
"SELECT player.Team, school.Location FROM player JOIN school ON player.School_ID = school.School_ID        "
SELECT customers.date_of_birth FROM Customers WHERE customers.customer_status_code = 'Good Customer'       
SELECT course.CName FROM Course WHERE course.Days = 'MTW'       
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Peter Mertens' and author.authorName = 'Dina Barbian'       
SELECT airports.name FROM airports JOIN routes ON airports.apid = routes.src_apid WHERE airports.country = 'China' GROUP BY airports.name  ORDER BY count( *) DESC LIMIT 1    
SELECT festival_detail.Num_of_Audience FROM festival_detail WHERE festival_detail.Year = 2008 or festival_detail.Year = 2010       
"SELECT student.STU_FNAME, student.STU_LNAME, student.STU_GPA FROM STUDENT WHERE student.STU_GPA > 3   ORDER BY student.STU_DOB DESC LIMIT 1    "
"SELECT count( *), class.CRS_CODE FROM COURSE JOIN CLASS ON course.CRS_CODE = class.CRS_CODE  GROUP BY class.CRS_CODE      "
SELECT count( *) FROM routes JOIN airports ON routes.src_apid = airports.apid WHERE airports.country = 'Canada'       
SELECT DISTINCT documents_to_be_destroyed.Destroyed_by_Employee_ID FROM Documents_to_be_Destroyed        
SELECT state.state_name FROM state WHERE state.density = (SELECT min( state.density) FROM state        )       
"SELECT count( *), users.role_code FROM Users  GROUP BY users.role_code      "
"SELECT parts.part_name, parts.part_id FROM Parts JOIN Part_Faults ON parts.part_id = T2.part_id  GROUP BY T2.part_id HAVING count( *) > 2     "
SELECT DISTINCT count(DISTINCT state.state_name) FROM state WHERE state.state_name NOT IN (SELECT river.traverse FROM river        )       
SELECT count( *) FROM actor        
SELECT count( *) FROM Member_of_club JOIN Club ON member_of_club.ClubID = club.ClubID JOIN Student ON member_of_club.StuID = student.StuID WHERE club.ClubName = 'Bootup Baltimore' and student.Age > 18       
"SELECT avg( person.age), person.gender FROM Person  GROUP BY person.gender      "
SELECT user_profiles.name FROM user_profiles JOIN follows ON user_profiles.uid = T2.f2  GROUP BY user_profiles.name HAVING count( *) > (SELECT count( *) FROM follows JOIN user_profiles ON follows.f2 = user_profiles.uid WHERE user_profiles.name = 'Tyler Swift'       )     
SELECT count( *) FROM Physician        
SELECT captain.Rank FROM captain        EXCEPT SELECT captain.Rank FROM captain WHERE captain.Class = '1'       
"SELECT building.Name, building.Height_feet FROM building JOIN Institution ON building.building_id = institution.building_id WHERE institution.Founded > 1880 GROUP BY institution.building_id HAVING count( *) >= 2     "
SELECT count( *) FROM Document_Types        
SELECT sum( state.population) FROM state        
"SELECT courses.subject_id, subjects.subject_name, count( *) FROM Courses JOIN Subjects ON courses.subject_id = subjects.subject_id  GROUP BY courses.subject_id      "
SELECT count( *) FROM country WHERE country.Country_ID NOT IN (SELECT roller_coaster.Country_ID FROM roller_coaster WHERE roller_coaster.Length > 3000       )       
"SELECT DISTINCT count(DISTINCT products.Name), manufacturers.Headquarter FROM Products JOIN Manufacturers ON products.Manufacturer = manufacturers.Code  GROUP BY manufacturers.Headquarter      "
SELECT state.population FROM state WHERE state.state_name = '1'       
SELECT competition.Competition_type FROM competition  GROUP BY competition.Competition_type HAVING count( *) <= 5     
SELECT count( *) FROM RESTAURANT JOIN GEOGRAPHIC ON restaurant.CITY_NAME = geographic.CITY_NAME WHERE geographic.REGION = '1' and restaurant.FOOD_TYPE = '1'       
SELECT count( *) FROM GEOGRAPHIC        
SELECT airport.name FROM airport WHERE airport.Country != 'Iceland'       
SELECT aircraft.Aircraft FROM aircraft JOIN match ON aircraft.Aircraft_ID = T2.Winning_Aircraft  GROUP BY aircraft.Aircraft HAVING count( *) >= 2     
SELECT DISTINCT publication.Publisher FROM publication WHERE publication.Price > 5000000       
SELECT participates_in.stuid FROM Participates_in JOIN Activity ON participates_in.actid = activity.actid WHERE activity.activity_name = 'Canoeing'     INTERSECT SELECT participates_in.stuid FROM Participates_in JOIN Activity ON participates_in.actid = activity.actid WHERE activity.activity_name = 'Kayaking'         
SELECT conference.name FROM conference JOIN publication ON conference.cid = publication.cid WHERE publication.title = '1'       
SELECT documents.document_name FROM Documents  GROUP BY documents.document_name  ORDER BY count( *) DESC LIMIT 1  INTERSECT SELECT documents.document_name FROM Documents  GROUP BY documents.document_name  ORDER BY count( *) DESC LIMIT 1      
SELECT staff_roles.role_description FROM Staff_Roles WHERE staff_roles.role_code = '1'       
SELECT count( *) FROM trip JOIN station WHERE station.city = 'Mountain View' and station.city = 'Palo Alto'       
SELECT manufacturers.Name FROM Manufacturers        EXCEPT SELECT manufacturers.Name FROM Manufacturers JOIN Products ON manufacturers.Code = products.Manufacturer WHERE products.Name = 'DVD drive'       
SELECT DISTINCT count(DISTINCT city.Status) FROM city        
"SELECT employee.eid, employee.name FROM employee    ORDER BY employee.salary DESC LIMIT 1    "
SELECT count( *) FROM CLASS        
SELECT student.name FROM student WHERE student.dept_name = 'History'   ORDER BY student.tot_cred DESC LIMIT 1    
SELECT editor.Name FROM editor     ORDER BY editor.Age ASC   
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE restaurant.CITY_NAME in (SELECT geographic.CITY_NAME FROM GEOGRAPHIC WHERE geographic.REGION = '1'       ) and restaurant.RATING > 1       "
SELECT allergy_type.AllergyType FROM Allergy_Type  GROUP BY allergy_type.AllergyType  ORDER BY count( *) ASC LIMIT 1    
SELECT river.river_name FROM river WHERE river.length = (SELECT max( river.length) FROM river WHERE river.traverse = '1'       ) and river.traverse = '1'       
SELECT clients.Customer_Name FROM Clients        EXCEPT SELECT clients.Customer_Name FROM Clients JOIN Bookings ON clients.Client_ID = T3.Customer_ID        
SELECT aircraft.name FROM aircraft JOIN flight ON aircraft.aid = flight.aid WHERE flight.flno = 99       
"SELECT party.Party_name, count( *) FROM party JOIN party_events ON party.Party_ID = party_events.Party_ID  GROUP BY party.Party_name      "
SELECT actor.Name FROM actor WHERE actor.age != 20       
"SELECT count( *), projects.Name FROM Scientists JOIN AssignedTo ON scientists.SSN = AssignedTo.Scientist JOIN Projects ON AssignedTo.Project = projects.Code  GROUP BY projects.Name      "
SELECT count( *) FROM postseason JOIN team WHERE team.name = 'Boston Red Stockings' and postseason.year = 2009       
"SELECT employees.Role_Code, count( *) FROM Employees  GROUP BY employees.Role_Code      "
SELECT count( *) FROM Person WHERE person.gender = 'female'       
SELECT department.Dname FROM department     ORDER BY department.Mgr_start_date ASC   
"SELECT student.Major, avg( student.Age), min( student.Age), max( student.Age) FROM Student  GROUP BY student.Major      "
"SELECT count( *), student.Major FROM Student  GROUP BY student.Major      "
SELECT DISTINCT drivers.forename FROM drivers     ORDER BY drivers.forename ASC   
SELECT DISTINCT paper.paperId FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 1 and venue.venueName = '1'       
SELECT races.name FROM races WHERE races.year between 2009 AND 2011       
SELECT apartment_buildings.building_short_name FROM Apartment_Buildings WHERE apartment_buildings.building_manager = 'Emma'       
"SELECT county.County_name, county.Population FROM county        "
SELECT count( *) FROM Inst        
SELECT artist.Famous_Title FROM artist JOIN volume ON artist.Artist_ID = volume.Artist_ID WHERE volume.Weeks_on_Top > 2       
SELECT DISTINCT count(DISTINCT allergy_type.AllergyType) FROM Allergy_Type        
SELECT student.StuID FROM Student        EXCEPT SELECT plays_games.StuID FROM Plays_Games        
SELECT film.Studio FROM film WHERE film.Director = 'Nicholas Meyer'     INTERSECT SELECT film.Studio FROM film WHERE film.Director = 'Walter Hill'         
SELECT writer.name FROM writer JOIN written_by ON writer.wid = T2.wid JOIN movie WHERE movie.title = 'The Truman Show'       
"SELECT departments.DEPARTMENT_NAME, locations.CITY, locations.STATE_PROVINCE FROM departments JOIN locations ON departments.LOCATION_ID = locations.LOCATION_ID        "
SELECT appellations.County FROM appellations JOIN wine ON appellations.Appelation = T2.Appelation  GROUP BY appellations.County HAVING count( *) <= 3     
"SELECT company.Name, count( *) FROM company JOIN employment ON company.Company_ID = employment.Company_ID JOIN people ON employment.People_ID = T3.People_ID  GROUP BY company.Name      "
SELECT bank.bname FROM bank JOIN loan ON bank.branch_ID = loan.branch_ID  GROUP BY bank.bname  ORDER BY sum( loan.amount) DESC LIMIT 1    
"SELECT manufacturers.Name, max( manufacturers.Revenue), manufacturers.Headquarter FROM Manufacturers  GROUP BY manufacturers.Headquarter      "
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
"SELECT avg( rating.stars), movie.title FROM Rating JOIN Movie ON rating.mID = movie.mID WHERE movie.year = (SELECT min( movie.year) FROM Movie        ) GROUP BY movie.title      "
SELECT avg( documents.access_count) FROM Documents        
"SELECT faculty.Fname, faculty.Lname FROM Faculty WHERE faculty.Sex = 'M' and faculty.Building = 'NEB'       "
"SELECT customer_orders.order_id, customer_orders.customer_id FROM Customer_Orders WHERE customer_orders.order_status_code = 'Cancelled'    ORDER BY customer_orders.order_date ASC   "
"SELECT institution.Type, count( *), sum( institution.Enrollment) FROM Institution  GROUP BY institution.Type      "
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = 'Question Answering'       
SELECT highlow.state_name FROM highlow WHERE highlow.highest_elevation > (SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name = '1'       )       
SELECT campuses.Campus FROM Campuses WHERE campuses.Year = 1958       
SELECT city.City FROM city JOIN hosting_city ON city.City_ID = hosting_city.Host_City WHERE hosting_city.Year > 2010       
SELECT count( *) FROM Lessons JOIN Staff ON lessons.staff_id = staff.staff_id WHERE staff.first_name like '%a%'       
SELECT river.river_name FROM river WHERE river.length = (SELECT min( river.length) FROM river        )       
SELECT dorm.dorm_name FROM Dorm    ORDER BY dorm.student_capacity DESC LIMIT 1    
"SELECT match_result.Club_ID, match_result.Gold FROM match_result JOIN club ON match_result.Club_ID = club.Club_ID JOIN coach ON club.Club_ID = T3.Club_ID  GROUP BY match_result.Rank  ORDER BY count( *) DESC LIMIT 1    "
SELECT university.School FROM university WHERE university.Founded > 1 or university.Affiliation = '1'       
SELECT publication.Publisher FROM publication WHERE publication.Price > 10000000     INTERSECT SELECT publication.Publisher FROM publication WHERE publication.Price < 5000000         
"SELECT airports.name, airports.city, airports.country, airports.elevation FROM airports WHERE airports.city = 'New York'       "
"SELECT city.Status, avg( city.Population) FROM city  GROUP BY city.Status      "
"SELECT staff.staff_first_name, staff.staff_last_name FROM Staff JOIN Problems ON staff.staff_id = Problems.reported_by_staff_id JOIN Product ON Problems.product_id = product.product_id WHERE product.product_name = 'rem'       EXCEPT SELECT staff.staff_first_name, staff.staff_last_name FROM Staff JOIN Problems ON staff.staff_id = Problems.reported_by_staff_id JOIN Product ON Problems.product_id = product.product_id WHERE product.product_name = 'aut'       "
SELECT sum( publication.citation_num) FROM publication JOIN journal ON publication.jid = journal.jid WHERE journal.name = 'PVLDB'       
SELECT products.product_name FROM Products WHERE products.product_type_code = 'Hardware'   ORDER BY products.product_price DESC LIMIT 1    
SELECT catalog_contents.catalog_entry_name FROM Catalog_Contents    ORDER BY catalog_contents.capacity ASC LIMIT 1    
SELECT scientists.Name FROM Scientists JOIN AssignedTo ON scientists.SSN = T2.Scientist        
SELECT people.Name FROM people JOIN gymnast ON people.People_ID = T2.Gymnast_ID WHERE people.Hometown != 'Santo Domingo'       
SELECT genre.Name FROM Genre        
"SELECT accounts.account_name, accounts.other_account_details FROM Accounts JOIN Customers ON accounts.customer_id = customers.customer_id WHERE customers.customer_first_name = 'Meaghan' and customers.customer_last_name = 'Keeling'       "
SELECT student.Major FROM Student  GROUP BY student.Major  ORDER BY count( *) DESC LIMIT 1    
"SELECT avg( products.Price), products.Manufacturer FROM Products  GROUP BY products.Manufacturer      "
SELECT student.STU_FNAME FROM STUDENT JOIN ENROLL ON student.STU_NUM = ENROLL.STU_NUM JOIN CLASS ON ENROLL.CLASS_CODE = class.CLASS_CODE WHERE class.CRS_CODE = 'ACCT-211'       
SELECT avg( stock.Quantity) FROM stock        
SELECT author.name FROM author JOIN writes ON author.aid = writes.aid JOIN publication ON writes.pid = publication.pid JOIN conference ON publication.cid = conference.cid WHERE conference.name = 'VLDB' and publication.year < 2002 and publication.year > 1995       
SELECT DISTINCT count(DISTINCT actor.name) FROM actor JOIN cast ON actor.aid = cast.aid JOIN copyright ON cast.msid = copyright.msid JOIN directed_by ON copyright.msid = directed_by.msid JOIN director ON directed_by.did = director.did JOIN movie WHERE actor.nationality = 'Iran' and director.name = 'Jim Jarmusch'       
SELECT avg( volume.Weeks_on_Top) FROM volume JOIN artist ON volume.Artist_ID = artist.Artist_ID WHERE artist.Age <= 25       
"SELECT user_profiles.name, count( *) FROM user_profiles JOIN tweets ON user_profiles.uid = tweets.uid  GROUP BY user_profiles.name HAVING count( *) > 1     "
SELECT highlow.lowest_point FROM highlow WHERE highlow.lowest_elevation = (SELECT min( highlow.lowest_elevation) FROM highlow        )       
SELECT count( *) FROM GEOGRAPHIC        
SELECT musical.Nominee FROM musical WHERE musical.Award = 'Tony Award'     INTERSECT SELECT musical.Nominee FROM musical WHERE musical.Award = 'Drama Desk Award'         
SELECT * FROM employees WHERE employees.EMPLOYEE_ID NOT IN (SELECT job_history.EMPLOYEE_ID FROM job_history        )       
"SELECT locations.COUNTRY_ID, count( *) FROM locations JOIN countries ON locations.COUNTRY_ID = countries.COUNTRY_ID  GROUP BY locations.COUNTRY_ID      "
SELECT product.product_name FROM Product JOIN Problems ON product.product_id = Problems.product_id JOIN Staff ON Problems.reported_by_staff_id = staff.staff_id WHERE staff.staff_first_name = 'Lacey' and staff.staff_last_name = 'Bosco'     INTERSECT SELECT product.product_name FROM Product JOIN Problems ON product.product_id = Problems.product_id JOIN Staff ON Problems.reported_by_staff_id = staff.staff_id WHERE staff.staff_first_name = 'Kenton' and staff.staff_last_name = 'Champlin'         
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1' and paper.year = 1       
SELECT city.City FROM city WHERE city.Regional_Population > 10000000       
SELECT city.Official_Name FROM city WHERE city.City_ID NOT IN (SELECT farm_competition.Host_city_ID FROM farm_competition        )       
SELECT count( *) FROM Customers        
SELECT DISTINCT genres.name FROM genres        
SELECT reference_document_types.Document_Type_Name FROM Ref_Document_Types JOIN All_Documents ON reference_document_types.Document_Type_Code = all_documents.Document_Type_Code WHERE all_documents.Document_Name = 'How to read a book'       
SELECT DISTINCT invoices.invoice_details FROM Invoices WHERE invoices.invoice_date < '1989-09-03' or invoices.invoice_date > '2007-12-25'       
"SELECT products.product_name, count( *) FROM Products  GROUP BY products.product_name      "
SELECT DISTINCT count(DISTINCT camera_lens.brand) FROM camera_lens        
SELECT documents.document_type_code FROM Documents WHERE documents.document_name = 'David CV'       
"SELECT band.Firstname, band.Lastname FROM Band JOIN Performance ON band.Id = T3.Bandmate JOIN Songs ON T3.SongId = songs.SongId WHERE songs.Title = 'Badlands'       "
"SELECT avg( shop.Num_of_staff), avg( shop.Score) FROM shop        "
SELECT student.Fname FROM Student WHERE student.StuID NOT IN (SELECT enrolled_in.StuID FROM Enrolled_in        )       
"SELECT DISTINCT pit_stops.driverId, pit_stops.stop FROM pitStops WHERE pit_stops.duration < (SELECT max( pit_stops.duration) FROM pitStops WHERE pit_stops.raceId = 841       )       "
SELECT count( *) FROM bank        
SELECT highlow.lowest_point FROM highlow WHERE highlow.state_name = '1'       
SELECT sports_info.StuID FROM SportsInfo      INTERSECT SELECT plays_games.StuID FROM Plays_Games          
SELECT city.city_name FROM city WHERE city.population > 1       
SELECT staff.nickname FROM Staff WHERE staff.first_name = 'Janessa' and staff.last_name = 'Sawayn'       
SELECT DISTINCT cite.citingPaperId FROM cite JOIN paper ON cite.citingPaperId = T2.paperId  GROUP BY cite.citingPaperId HAVING count( cite.citedPaperId) >= 5     
"SELECT employee.EMP_FNAME, professor.PROF_OFFICE FROM EMPLOYEE JOIN PROFESSOR ON employee.EMP_NUM = professor.EMP_NUM JOIN DEPARTMENT ON professor.DEPT_CODE = department.DEPT_CODE WHERE department.DEPT_NAME = 'History' and professor.PROF_HIGH_DEGREE != 'Ph.D.'       "
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = geographic.CITY_NAME JOIN RESTAURANT ON geographic.CITY_NAME = restaurant.CITY_NAME WHERE geographic.REGION = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT count( *) FROM Products JOIN Product_Characteristics ON products.product_id = Product_Characteristics.product_id JOIN Characteristics ON Product_Characteristics.characteristic_id = characteristics.characteristic_id WHERE characteristics.characteristic_name = 'hot'       
"SELECT customers.email_address, customers.date_of_birth FROM Customers WHERE customers.first_name = 'Carole'       "
SELECT student.city_code FROM Student  GROUP BY student.city_code  ORDER BY count( *) DESC LIMIT 1    
SELECT DISTINCT count(DISTINCT writes.paperId) FROM writes JOIN author ON writes.authorId = author.authorId JOIN paper ON writes.paperId = paper.paperId WHERE author.authorName = '1' and paper.year = 1       
SELECT count( *) FROM Projects JOIN Project_Staff ON projects.project_id = project_staff.project_id WHERE project_staff.role_code = '1' or project_staff.date_from < '1'       
SELECT rating.rID FROM Rating        EXCEPT SELECT rating.rID FROM Rating WHERE rating.stars = 4       
SELECT DISTINCT documents_to_be_destroyed.Destroyed_by_Employee_ID FROM Documents_to_be_Destroyed        
SELECT city.city_name FROM city WHERE city.state_name = '1'       
SELECT products.product_name FROM Products JOIN Ref_Colors ON products.color_code = reference_colors.color_code JOIN Product_Characteristics ON products.product_id = Product_Characteristics.product_id JOIN Characteristics ON Product_Characteristics.characteristic_id = characteristics.characteristic_id WHERE reference_colors.color_description = 'red' and characteristics.characteristic_name = 'fast'       
SELECT culture_company.Company_name FROM culture_company JOIN book_club ON culture_company.book_club_id = book_club.book_club_id WHERE book_club.Publisher = 'Alyson'       
SELECT sum( college.enr) FROM College        
"SELECT movie.director, movie.title FROM Movie JOIN Rating ON movie.mID = rating.mID WHERE rating.stars = 5       "
SELECT city.Name FROM city    ORDER BY city.White DESC LIMIT 1    
SELECT river.river_name FROM river WHERE river.traverse in (SELECT highlow.state_name FROM highlow WHERE highlow.lowest_elevation = (SELECT min( highlow.lowest_elevation) FROM highlow        )       )       
SELECT department.DEPT_NAME FROM DEPARTMENT JOIN COURSE ON department.DEPT_CODE = course.DEPT_CODE JOIN CLASS ON course.CRS_CODE = T3.CRS_CODE  GROUP BY department.DEPT_NAME  ORDER BY sum( course.CRS_CREDIT) DESC LIMIT 1    
SELECT sports_info.StuID FROM SportsInfo      INTERSECT SELECT plays_games.StuID FROM Plays_Games          
SELECT person.name FROM Person        EXCEPT SELECT person_friend.name FROM PersonFriend JOIN Person ON person_friend.friend = person.name WHERE person.job = 'student'       
SELECT film.Studio FROM film        EXCEPT SELECT film.Studio FROM film WHERE film.Director = 'Walter Hill'       
SELECT DISTINCT count(DISTINCT songs.Title) FROM Songs JOIN Vocals ON songs.SongId = vocals.SongId WHERE vocals.Type = '1'       
SELECT artist.country FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE artist.gender = 'Female' and song.languages = 'bangla'       
SELECT dorm.dorm_name FROM Dorm        EXCEPT SELECT dorm.dorm_name FROM Dorm JOIN Has_amenity ON dorm.dormid = Has_amenity.dormid JOIN Dorm_amenity ON Has_amenity.amenid = dorm_amenity.amenid WHERE dorm_amenity.amenity_name = 'TV Lounge'       
"SELECT railway.Location, count( *) FROM railway  GROUP BY railway.Location      "
"SELECT phone.Accreditation_type, count( *) FROM phone  GROUP BY phone.Accreditation_type      "
SELECT river.river_name FROM river  GROUP BY river.river_name  ORDER BY count( river.traverse) DESC LIMIT 1    
SELECT count( *) FROM All_Documents WHERE all_documents.Document_Type_Code = 'CV' or all_documents.Document_Type_Code = 'BK'       
"SELECT products.Name, products.Price FROM Products        "
"SELECT course.title, instructor.name FROM course JOIN department ON course.dept_name = department.dept_name JOIN instructor ON department.dept_name = instructor.dept_name JOIN teaches ON instructor.ID = teaches.ID WHERE teaches.year = 2008    ORDER BY course.title ASC   "
"SELECT film.Title, film.Director FROM film WHERE film.Film_ID NOT IN (SELECT film_market_estimation.Film_ID FROM film_market_estimation JOIN market ON film_market_estimation.Market_ID = market.Market_ID WHERE market.Country = 'China'       )       "
SELECT apartments.apt_type_code FROM Apartments  GROUP BY apartments.apt_type_code  ORDER BY count( *) DESC LIMIT 1    
SELECT state.population FROM state WHERE state.state_name in (SELECT river.traverse FROM river WHERE river.river_name = '1'       )       
SELECT artist.Name FROM Artist WHERE artist.Name like '%a%'       
SELECT shops.Shop_Details FROM Shops JOIN Tourist_Attractions ON shops.Shop_ID = tourist_attractions.Tourist_Attraction_ID WHERE tourist_attractions.How_to_Get_There = 'walk'       
SELECT customers.customer_name FROM Customers JOIN Orders ON customers.customer_id = orders.customer_id  GROUP BY customers.customer_name  ORDER BY count( *) DESC LIMIT 1    
SELECT count( *) FROM Vehicles        
SELECT customers.payment_method FROM Customers  GROUP BY customers.payment_method  ORDER BY count( *) DESC LIMIT 1    
SELECT people.Birth_Place FROM people  GROUP BY people.Birth_Place  ORDER BY count( *) DESC LIMIT 1    
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' and paper.year = 1       
SELECT DISTINCT count(DISTINCT volume.Artist_ID) FROM volume        
SELECT * FROM Course     ORDER BY course.Credits ASC   
SELECT song.song_name FROM song WHERE song.languages = 'english'       
SELECT customer.cust_name FROM customer JOIN bank ON customer.branch_ID = bank.branch_ID JOIN loan ON bank.branch_ID = loan.branch_ID WHERE loan.loan_type = 'Mortgages'     INTERSECT SELECT customer.cust_name FROM customer JOIN bank ON customer.branch_ID = bank.branch_ID JOIN loan ON bank.branch_ID = loan.branch_ID WHERE loan.loan_type = 'Auto'         
SELECT roles.role_description FROM Roles JOIN Employees ON roles.role_code = employees.role_code WHERE employees.employee_name = 'Koby'       
"SELECT count( *), student.city_code FROM Student  GROUP BY student.city_code HAVING count( *) > 1     "
SELECT perpetrator.Country FROM perpetrator WHERE perpetrator.Injured > 50     INTERSECT SELECT perpetrator.Country FROM perpetrator WHERE perpetrator.Injured < 20         
SELECT count( *) FROM Apartment_Buildings        
SELECT employees.PHONE_NUMBER FROM employees WHERE employees.SALARY between 8000 AND 12000       
SELECT DISTINCT player.player_name FROM Player JOIN Player_Attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.crossing > 1 and player_attributes.preferred_foot = '1'       
SELECT department.Head FROM Department  GROUP BY department.Head  ORDER BY count( department.DepartmentID) ASC LIMIT 1    
SELECT river.river_name FROM river WHERE river.length = (SELECT max( river.length) FROM river        )       
SELECT procedures.Name FROM Procedures JOIN Trained_In ON procedures.Code = T2.Treatment JOIN Physician ON T2.Physician = physician.EmployeeID WHERE physician.Name = 'John Wen'       
"SELECT school.Denomination, count( *) FROM school  GROUP BY school.Denomination   ORDER BY count( *) DESC   "
"SELECT company.Company, company.Rank FROM company     ORDER BY company.Sales_billion DESC   "
SELECT DISTINCT count(DISTINCT student.Advisor) FROM Student        
"SELECT aircraft.Aircraft, count( *) FROM aircraft  GROUP BY aircraft.Aircraft      "
SELECT stadium.name FROM stadium WHERE stadium.ID NOT IN (SELECT event.Stadium_ID FROM event        )       
"SELECT medicine_enzyme_interaction.interaction_type, count( *) FROM medicine_enzyme_interaction JOIN enzyme ON medicine_enzyme_interaction.enzyme_id = enzyme.id  GROUP BY medicine_enzyme_interaction.interaction_type  ORDER BY count( *) DESC LIMIT 1    "
"SELECT university.Enrollment, university.Primary_conference FROM university    ORDER BY university.Founded ASC LIMIT 1    "
SELECT count( *) FROM branch WHERE branch.membership_amount > (SELECT avg( branch.membership_amount) FROM branch        )       
"SELECT branch.City, count( *) FROM branch WHERE branch.Open_year < '2010' GROUP BY branch.City      "
SELECT student.StuID FROM Student        EXCEPT SELECT has_allergy.StuID FROM Has_Allergy        
SELECT election.Delegate FROM election JOIN county ON election.District = county.County_Id WHERE county.Population < 100000       
SELECT * FROM chip_model        
SELECT document_locations.Location_Code FROM Document_Locations  GROUP BY document_locations.Location_Code  ORDER BY count( *) DESC LIMIT 1    
SELECT perpetrator.Location FROM perpetrator    ORDER BY perpetrator.Killed DESC LIMIT 1    
SELECT bank.bname FROM bank    ORDER BY bank.no_of_customers DESC LIMIT 1    
SELECT employees.Employee_ID FROM Employees        EXCEPT SELECT documents_to_be_destroyed.Destruction_Authorised_by_Employee_ID FROM Documents_to_be_Destroyed        
SELECT count( *) FROM Track JOIN Genre ON track.GenreId = genre.GenreId WHERE genre.Name = 'Rock'       
SELECT count( *) FROM PROFESSOR JOIN DEPARTMENT ON professor.DEPT_CODE = department.DEPT_CODE WHERE department.DEPT_NAME = 'Accounting' or department.DEPT_NAME = 'Biology'       
"SELECT DISTINCT count(DISTINCT paper.paperId), writes.authorId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' GROUP BY writes.authorId   ORDER BY count( paper.paperId) DESC   "
"SELECT claims.Claim_ID, count( *) FROM Claims JOIN Settlements ON claims.Claim_ID = settlements.Claim_ID  GROUP BY claims.Claim_ID      "
SELECT people.Height FROM people JOIN body_builder ON people.People_ID = body_builder.People_ID WHERE body_builder.Total < 315       
SELECT address.address FROM address JOIN staff ON address.address_id = staff.address_id WHERE staff.first_name = 'Elsa'       
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Su-In Lee' and paper.year < 2012       
SELECT DISTINCT customers.Customer_Details FROM Customers JOIN Policies ON customers.Customer_ID = policies.Customer_ID WHERE policies.Policy_Type_Code = '1' or policies.Policy_Type_Code = '1'       
SELECT person_friend.friend FROM PersonFriend JOIN Person ON person_friend.friend = person.name WHERE person_friend.name = '1' and person.gender = '1' and person.job = '1'       
"SELECT editor.Name, journal.Theme FROM editor JOIN journal_committee ON editor.Editor_ID = journal_committee.Editor_ID JOIN journal ON journal_committee.Journal_ID = journal.Journal_ID        "
SELECT ship.Name FROM Ship     ORDER BY ship.Built_Year ASC   
SELECT DISTINCT faculty.Rank FROM Faculty        
SELECT count( *) FROM Dorm        
SELECT book_club.Publisher FROM book_club  GROUP BY book_club.Publisher  ORDER BY count( *) DESC LIMIT 1    
SELECT party.Party_name FROM party JOIN member ON party.Party_ID = member.Party_ID  GROUP BY party.Party_name  ORDER BY count( *) DESC LIMIT 1    
SELECT candidate.Poll_Source FROM candidate  GROUP BY candidate.Poll_Source  ORDER BY count( *) DESC LIMIT 1    
SELECT faculty.FacID FROM Faculty        EXCEPT SELECT faculty_participates_in.FacID FROM Faculty_Participates_in        
SELECT body_builder.Total FROM body_builder     ORDER BY body_builder.Total ASC   
SELECT state.area FROM state WHERE state.capital = '1'       
SELECT DISTINCT region.Region_name FROM region     ORDER BY region.Label ASC   
SELECT actor.name FROM actor WHERE actor.nationality = 'Afghanistan'       
SELECT course.course_id FROM course        EXCEPT SELECT prerequisite.course_id FROM prereq        
"SELECT avg( people.Weight), min( people.Weight), people.Sex FROM people  GROUP BY people.Sex      "
SELECT count( *) FROM phone        
"SELECT guests.guest_first_name, guests.guest_last_name FROM Guests JOIN Apartment_Bookings ON guests.guest_id = apartment_bookings.guest_id WHERE apartment_bookings.booking_status_code = 'Confirmed'       "
SELECT customers.customer_id FROM Customers        EXCEPT SELECT accounts.customer_id FROM Accounts        
SELECT county.County_name FROM county    ORDER BY county.Population DESC LIMIT 1    
SELECT DISTINCT count(DISTINCT affected_region.Region_id) FROM affected_region        
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
SELECT DISTINCT count(DISTINCT tryout.pPos) FROM Tryout        
SELECT DISTINCT count(DISTINCT customers_cards.card_type_code) FROM Customers_Cards        
SELECT region.Region_name FROM region WHERE region.Region_name != 'Denmark'       
SELECT author.name FROM organization JOIN author WHERE organization.name = '1'       
SELECT DISTINCT paper.paperId FROM paperDataset JOIN dataset JOIN paper WHERE dataset.datasetName = '1'       
SELECT people.Name FROM people JOIN entrepreneur ON people.People_ID = T2.People_ID        
SELECT player.pName FROM Player JOIN Tryout ON player.pID = tryout.pID WHERE tryout.decision = '1' and tryout.pPos = '1'       
"SELECT payments.Payment_Method_Code, payments.Date_Payment_Made, payments.Amount_Payment FROM Payments     ORDER BY payments.Date_Payment_Made ASC   "
SELECT count( *) FROM Student WHERE student.Age = 18       
"SELECT sum( manufacturers.Revenue), manufacturers.Name FROM Manufacturers  GROUP BY manufacturers.Name      "
SELECT instructor.name FROM instructor WHERE instructor.dept_name = '1' and instructor.salary > 1       
SELECT border_info.border FROM border_info WHERE border_info.state_name = '1'       
SELECT culture_company.Company_name FROM culture_company JOIN movie ON culture_company.movie_id = movie.movie_id WHERE movie.Year = 1999       
SELECT max( wine.Price) FROM wine JOIN appellations ON wine.Appelation = appellations.Appelation WHERE appellations.Area = 'Central Coast' and wine.Year < 2005       
SELECT user_profiles.name FROM user_profiles    ORDER BY user_profiles.followers DESC LIMIT 1    
SELECT avg( files.duration) FROM files JOIN song ON files.f_id = song.f_id WHERE files.formats = 'mp3' and song.resolution < 800       
SELECT faculty.FacID FROM Faculty WHERE faculty.Sex = 'M'       
SELECT DISTINCT student.Fname FROM Student JOIN Voting_record ON student.StuID = T2.Class_Senator_Vote        EXCEPT SELECT DISTINCT student.Fname FROM Student WHERE student.city_code = 'PIT'       
"SELECT student.Fname, student.Sex FROM Student WHERE student.StuID in (SELECT has_allergy.StuID FROM Has_Allergy WHERE has_allergy.Allergy = '1'       )       "
"SELECT wine.Grape, wine.Winery, wine.Year FROM wine WHERE wine.Price > 100    ORDER BY wine.Year ASC   "
SELECT count( *) FROM College        
"SELECT count( *), accounts.name FROM CHECKING JOIN ACCOUNTS ON checking.custid = accounts.custid  GROUP BY accounts.name      "
SELECT candidate.Candidate_ID FROM candidate    ORDER BY candidate.Oppose_rate ASC LIMIT 1    
SELECT csu_fees.CampusFee FROM csu_fees JOIN Campuses ON csu_fees.Campus = campuses.Id WHERE campuses.Campus = 'San Francisco State University' and csu_fees.Year = 2000       
SELECT * FROM election        
SELECT DISTINCT station.name FROM station JOIN status ON station.id = status.station_id WHERE status.bikes_available = 7       
SELECT company.Name FROM company     ORDER BY company.Sales_in_Billion ASC   
SELECT count( *) FROM STUDENT JOIN ENROLL ON student.STU_NUM = ENROLL.STU_NUM JOIN CLASS ON ENROLL.CLASS_CODE = class.CLASS_CODE WHERE class.CRS_CODE = 'ACCT-211'       
SELECT channel.Name FROM channel     ORDER BY channel.Rating_in_percent DESC   
"SELECT DISTINCT paper.paperId, paper.year FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1'    ORDER BY paper.year DESC   "
"SELECT accounts.account_name, financial_transactions.account_id, count( *) FROM Accounts JOIN Financial_Transactions ON accounts.account_id = financial_transactions.account_id  GROUP BY financial_transactions.account_id      "
SELECT apartments.apt_number FROM Apartments    ORDER BY apartments.bedroom_count DESC LIMIT 1    
SELECT city.population FROM city WHERE city.city_name = '1'       
SELECT project_staff.date_to FROM Project_Staff    ORDER BY project_staff.date_to DESC LIMIT 1    
SELECT useracct.name FROM useracct JOIN review ON useracct.u_id = review.u_id    ORDER BY review.rating DESC LIMIT 1    
SELECT airports.city FROM airports  GROUP BY airports.city HAVING count( *) > 2  ORDER BY count( *) ASC   
"SELECT activity.activity_name, count( *) FROM Activity JOIN Faculty_Participates_in ON activity.actid = Faculty_Participates_in.actid JOIN Faculty ON Faculty_Participates_in.FacID = faculty.FacID  GROUP BY activity.activity_name      "
"SELECT allergy_type.AllergyType, count( *) FROM Allergy_Type  GROUP BY allergy_type.AllergyType      "
SELECT highlow.highest_point FROM highlow WHERE highlow.state_name = '1'       
SELECT section.year FROM section JOIN course ON section.course_id = course.course_id  GROUP BY section.year  ORDER BY count( *) DESC LIMIT 1    
SELECT employees.employee_name FROM Employees        EXCEPT SELECT employees.employee_name FROM Employees JOIN Circulation_History ON employees.employee_id = T3.employee_id        
SELECT bank.bname FROM bank JOIN loan ON bank.branch_ID = loan.branch_ID JOIN customer ON bank.branch_ID = customer.branch_ID WHERE customer.credit_score < 100 GROUP BY bank.bname  ORDER BY sum( loan.amount) DESC LIMIT 1    
SELECT transactions.date_of_transaction FROM Transactions WHERE transactions.transaction_type_code = 'SALE'       
SELECT DISTINCT count(DISTINCT business.name) FROM business JOIN category ON business.business_id = category.business_id JOIN neighbourhood ON business.business_id = neighbourhood.business_id WHERE business.city = '1' and category.category_name = '1' and neighbourhood.neighbourhood_name = '1'       
"SELECT employees.EMPLOYEE_ID, employees.SALARY FROM employees WHERE employees.MANAGER_ID = (SELECT employees.EMPLOYEE_ID FROM employees WHERE employees.FIRST_NAME = 'Payam'       )       "
"SELECT instructor.name, instructor.salary FROM instructor WHERE instructor.salary < (SELECT avg( instructor.salary) FROM instructor WHERE instructor.dept_name = 'Physics'       )       "
"SELECT problem_log.problem_log_id, problem_log.log_entry_description FROM Problem_Log        "
SELECT avg( flight.price) FROM flight WHERE flight.origin = 'Los Angeles' and flight.destination = 'Honolulu'       
SELECT business.name FROM business JOIN category ON business.business_id = category.business_id JOIN neighbourhood ON business.business_id = neighbourhood.business_id WHERE business.city = '1' and category.category_name = '1' and category.category_name = '1' and neighbourhood.neighbourhood_name = '1'       
SELECT instructor.name FROM instructor WHERE instructor.dept_name = '1' and instructor.salary > 1       
"SELECT student.Fname, student.LName FROM Student JOIN Participates_in ON student.StuID = Participates_in.stuid JOIN Activity ON Participates_in.actid = Activity.actid JOIN Faculty_Participates_in ON Activity.actid = Faculty_Participates_in.actid JOIN Faculty ON Faculty_Participates_in.FacID = faculty.FacID WHERE faculty.Fname = 'Michael' and faculty.Lname = 'Goodrich'       "
SELECT count( *) FROM Student WHERE student.Age > 18 and student.StuID NOT IN (SELECT has_allergy.StuID FROM Has_Allergy JOIN Allergy_Type ON has_allergy.Allergy = allergy_type.Allergy WHERE allergy_type.AllergyType = 'food' or allergy_type.AllergyType = 'animal'       )       
"SELECT accounts.name, savings.balance FROM ACCOUNTS JOIN SAVINGS ON accounts.custid = savings.custid JOIN CHECKING ON accounts.custid = T3.custid WHERE savings.balance < 1       "
SELECT locations.Location_Name FROM Locations WHERE locations.Location_Name like '%film%'       
"SELECT church.Open_Date, count( *) FROM church  GROUP BY church.Open_Date      "
SELECT reference_locations.Location_Code FROM Ref_Locations WHERE reference_locations.Location_Name = 'Canada'       
SELECT artist.Name FROM Artist WHERE artist.Name like '%a%'       
SELECT count( *) FROM company        
SELECT river.river_name FROM river  GROUP BY river.river_name  ORDER BY count( river.traverse) DESC LIMIT 1    
SELECT claims.Date_Claim_Made FROM Claims    ORDER BY claims.Date_Claim_Made ASC LIMIT 1    
SELECT DISTINCT count(DISTINCT parties.payment_method_code) FROM Parties        
SELECT count( *) FROM classroom WHERE classroom.building != 'Lamberton'       
SELECT state.capital FROM state JOIN highlow ON state.state_name = highlow.state_name WHERE highlow.highest_elevation = (SELECT max( highlow.highest_elevation) FROM highlow        )       
SELECT highlow.lowest_point FROM highlow WHERE highlow.state_name = '1'       
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' and paper.year = 1       
SELECT state.state_name FROM state WHERE state.density = (SELECT min( state.density) FROM state        )       
SELECT count( *) FROM Faculty WHERE faculty.Sex = 'F' and faculty.Rank = 'Professor'       
SELECT river.river_name FROM river WHERE river.length = (SELECT max( river.length) FROM river WHERE river.traverse = '1'       ) and river.traverse = '1'       
SELECT third_party_companies.company_name FROM Third_Party_Companies JOIN Maintenance_Contracts ON third_party_companies.company_id = maintenance_contracts.maintenance_contract_company_id    ORDER BY maintenance_contracts.contract_start_date ASC LIMIT 1    
SELECT company.Headquarters FROM company  GROUP BY company.Headquarters HAVING count( *) >= 2     
SELECT movie.director FROM Movie WHERE movie.director != 'null' GROUP BY movie.director HAVING count( *) = 1     
SELECT DISTINCT list.LastName FROM list JOIN teachers WHERE list.Grade = 3 and teachers.FirstName != 'COVIN' and teachers.LastName != 'JEROME'       
"SELECT sum( channel.Rating_in_percent), channel.Owner FROM channel  GROUP BY channel.Owner      "
SELECT count( *) FROM College        
SELECT DISTINCT count(DISTINCT writes.paperId) FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
SELECT job_history.JOB_ID FROM job_history JOIN jobs ON job_history.JOB_ID = jobs.JOB_ID WHERE job_history.END_DATE > '300' GROUP BY job_history.JOB_ID HAVING count( *) >= 2     
"SELECT products.Name, products.Price FROM Products WHERE products.Price >= 180    ORDER BY products.Price ASC   "
"SELECT furniture.Name, furniture_manufacte.Price_in_Dollar FROM furniture JOIN furniture_manufacte ON furniture.Furniture_ID = furniture_manufacte.Furniture_ID        "
"SELECT employees.FIRST_NAME, departments.DEPARTMENT_NAME FROM employees JOIN departments ON employees.DEPARTMENT_ID = departments.DEPARTMENT_ID        "
SELECT DISTINCT paper.paperId FROM paper WHERE paper.title = '1'       
SELECT submission.College FROM submission  GROUP BY submission.College  ORDER BY count( *) DESC LIMIT 1    
SELECT project_staff.date_from FROM Project_Staff    ORDER BY project_staff.date_from ASC LIMIT 1    
"SELECT faculty.Fname, faculty.Lname FROM Faculty JOIN Course ON faculty.FacID = course.Instructor WHERE course.CName = '1'       "
SELECT avg( apartments.room_count) FROM Apartments JOIN Apartment_Bookings ON apartments.apt_id = apartment_bookings.apt_id WHERE apartment_bookings.booking_status_code = 'Provisional'       
SELECT DISTINCT movie.title FROM Movie        EXCEPT SELECT movie.title FROM Movie JOIN Rating ON movie.mID = Rating.mID JOIN Reviewer ON Rating.rID = reviewer.rID WHERE reviewer.name = 'Chris Jackson'       
SELECT count( *) FROM postseason WHERE postseason.year = 1885 and postseason.ties = 1       
SELECT reference_service_types.Service_Type_Description FROM Ref_Service_Types JOIN Services ON reference_service_types.Service_Type_Code = services.Service_Type_Code WHERE services.Product_Price > 100       
SELECT airlines.country FROM airlines  GROUP BY airlines.country  ORDER BY count( *) DESC LIMIT 1    
SELECT elimination.Time FROM Elimination JOIN wrestler ON elimination.Wrestler_ID = wrestler.Wrestler_ID WHERE wrestler.Days_held > '50'       
SELECT river.river_name FROM river WHERE river.country_name != '1'       
SELECT basketball_match.ACC_Percent FROM basketball_match    ORDER BY basketball_match.ACC_Percent DESC LIMIT 1    
SELECT river.river_name FROM river WHERE river.traverse in (SELECT city.state_name FROM city WHERE city.population = (SELECT max( city.population) FROM city        )       )       
SELECT count( *) FROM teachers WHERE teachers.FirstName = 'KAWA' and teachers.LastName = 'GORDON'       
SELECT tracks.composer FROM tracks WHERE tracks.name = 'Fast As a Shark'       
SELECT campuses.Campus FROM Campuses JOIN faculty ON campuses.Id = faculty.Campus WHERE faculty.Year = 2002 and faculty.Faculty > (SELECT max( faculty.Faculty) FROM faculty JOIN Campuses ON faculty.Campus = campuses.Id WHERE faculty.Year = 2002 and campuses.County = 'Orange'       )       
SELECT highlow.lowest_elevation FROM highlow WHERE highlow.state_name = '1'       
SELECT sum( channel.Share_in_percent) FROM channel WHERE channel.Owner = 'CCTV'       
SELECT orders.date_order_placed FROM Orders JOIN Shipments ON orders.order_id = shipments.order_id WHERE shipments.invoice_number = 10       
SELECT section.course_id FROM section WHERE section.semester = 'Fall' and section.year = 2009      UNION SELECT section.course_id FROM section WHERE section.semester = 'Spring' and section.year = 2010        
SELECT * FROM Products WHERE products.Price between 60 AND 120       
"SELECT technician.Name, count( *) FROM technician JOIN repair_assignment ON technician.technician_id = repair_assignment.technician_id  GROUP BY technician.Name      "
"SELECT count( *), block.BlockFloor FROM Room JOIN Block ON room.BlockFloor = block.BlockFloor  GROUP BY block.BlockFloor      "
"SELECT count( *), product.product_id FROM Problems JOIN Product ON problems.product_id = product.product_id WHERE problems.date_problem_reported > '1986-11-13' GROUP BY product.product_id      "
SELECT reviewer.name FROM Reviewer       UNION SELECT movie.title FROM Movie         
SELECT DISTINCT count(DISTINCT class.CRS_CODE) FROM CLASS        
SELECT video_games.GName FROM Video_Games JOIN Plays_Games ON video_games.GameID = plays_games.GameID  GROUP BY video_games.GName  ORDER BY sum( plays_games.Hours_Played) DESC LIMIT 1    
SELECT DISTINCT locations.Location_Name FROM Locations        
SELECT count( *) FROM GEOGRAPHIC        
SELECT albums.title FROM albums JOIN artists ON albums.artist_id = sqlite_sequence.id WHERE sqlite_sequence.name like '%Led%'       
SELECT DISTINCT paper.year FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1'    ORDER BY paper.year ASC   
SELECT avg( user_profiles.followers) FROM user_profiles WHERE user_profiles.uid NOT IN (SELECT tweets.uid FROM tweets        )       
SELECT races.name FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Spain' and races.year > 2017       
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1'       
SELECT customers.customer_name FROM Customers        
SELECT channel.Name FROM channel JOIN broadcast ON channel.Channel_ID = broadcast.Channel_ID WHERE broadcast.Time_of_day = 'Morning'     INTERSECT SELECT channel.Name FROM channel JOIN broadcast ON channel.Channel_ID = broadcast.Channel_ID WHERE broadcast.Time_of_day = 'Night'         
SELECT sum( bank.no_of_customers) FROM bank        
"SELECT editor.Name, journal.Theme FROM editor JOIN journal_committee ON editor.Editor_ID = journal_committee.Editor_ID JOIN journal ON journal_committee.Journal_ID = journal.Journal_ID        "
SELECT farm_competition.Theme FROM farm_competition     ORDER BY farm_competition.Year ASC   
SELECT addresses.zip_postcode FROM Addresses JOIN Staff ON addresses.address_id = staff.staff_address_id WHERE staff.first_name = 'Janessa' and staff.last_name = 'Sawayn'       
"SELECT avg( catalog_contents.price_in_euros), min( catalog_contents.price_in_euros) FROM Catalog_Contents        "
SELECT state.state_name FROM state WHERE state.area = (SELECT max( state.area) FROM state        )       
"SELECT book_club.Year, book_club.Book_Title, book_club.Publisher FROM book_club     ORDER BY book_club.Year DESC   "
SELECT DISTINCT writes.authorId FROM writes JOIN paper ON writes.paperId = paper.paperId JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 1 and venue.venueName = '1'       
SELECT city.city_name FROM city WHERE city.population = (SELECT min( city.population) FROM city        )       
SELECT DISTINCT count(DISTINCT parties.payment_method_code) FROM Parties        
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' and paper.year = 1       
"SELECT documents_with_expenses.Budget_Type_Code, count( *) FROM Documents_with_Expenses JOIN Documents ON documents_with_expenses.Document_ID = documents.Document_ID  GROUP BY documents_with_expenses.Budget_Type_Code      "
SELECT customers.customer_name FROM Customers JOIN Customer_Orders ON customers.customer_id = T2.customer_id WHERE customers.payment_method_code = 'Credit Card' GROUP BY customers.customer_name HAVING count( *) > 2     
SELECT manufacturers.Name FROM Manufacturers WHERE manufacturers.Revenue between 100 AND 150       
SELECT count( city.city_name) FROM city WHERE city.population > 1 and city.state_name = '1'       
SELECT DISTINCT voting_record.Secretary_Vote FROM Voting_record WHERE voting_record.Election_Cycle = 'Fall'       
"SELECT avg( student.Age), dorm.dorm_name FROM Student JOIN Lives_in ON student.StuID = Lives_in.stuid JOIN Dorm ON Lives_in.dormid = dorm.dormid  GROUP BY dorm.dorm_name      "
SELECT * FROM Course_Authors_and_Tutors     ORDER BY course_authors_and_tutors.personal_name ASC   
SELECT DISTINCT count(DISTINCT drama_workshop_groups.Currency_Code) FROM Drama_Workshop_Groups        
SELECT student.city_code FROM Student WHERE student.Fname = 'Linda' and student.LName = 'Smith'       
"SELECT institution.Institution, count( *) FROM Institution JOIN protein ON institution.Institution_id = protein.Institution_id  GROUP BY institution.Institution      "
SELECT DISTINCT wine.Name FROM wine     ORDER BY wine.Price ASC   
SELECT DISTINCT count(DISTINCT writes.paperId) FROM writes JOIN author ON writes.authorId = author.authorId JOIN paper ON writes.paperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE author.authorName = 'Ed Desmond' and key_phrase.keyphraseName = 'Semantic Parsing'       
SELECT people.Name FROM people JOIN debate_people ON people.People_ID = T2.Negative  GROUP BY people.Name HAVING count( *) >= 2     
"SELECT DISTINCT count(DISTINCT paper.paperId), writes.authorId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN venue ON paper.venueId = venue.venueId WHERE venue.venueName = 'ACL' GROUP BY writes.authorId      "
SELECT actor.name FROM actor JOIN cast ON actor.aid = cast.aid WHERE cast.role = 1       
SELECT neighbourhood.neighbourhood_name FROM neighbourhood JOIN business ON neighbourhood.business_id = business.business_id JOIN category ON business.business_id = category.business_id WHERE business.city = '1' and business.rating < 1 and category.category_name = '1' and category.category_name = '1'       
SELECT instruments.Instrument FROM Instruments JOIN Band ON instruments.BandmateId = band.Id WHERE band.Lastname = 'Heilo'       
SELECT city.population FROM city WHERE city.population = (SELECT max( city.population) FROM city WHERE city.state_name = '1'       ) and city.state_name = '1'       
"SELECT music_festival.Date_of_ceremony, music_festival.Result FROM music_festival        "
"SELECT students.personal_name, students.family_name FROM Students     ORDER BY students.family_name ASC   "
"SELECT count( *), constructor_standings.constructorId FROM races JOIN constructorStandings ON races.raceId = constructor_standings.raceId  GROUP BY constructor_standings.constructorId      "
"SELECT city.Name, county_public_safety.Name FROM city JOIN county_public_safety ON city.County_ID = county_public_safety.County_ID        "
SELECT companies.name FROM Companies WHERE companies.Headquarters != 'USA'       
SELECT count( *) FROM list        
SELECT DISTINCT count(DISTINCT movie.title) FROM cast JOIN actor ON T2.aid = actor.aid JOIN movie WHERE actor.name = 'Shahab Hosseini'       
SELECT customers.company FROM customers WHERE customers.first_name = 'Eduardo' and customers.last_name = 'Martins'       
SELECT basketball_match.Team_Name FROM basketball_match JOIN university ON basketball_match.School_ID = university.School_ID WHERE university.Enrollment < (SELECT avg( university.Enrollment) FROM university        )       
"SELECT film.title, inventory.inventory_id FROM film JOIN inventory ON film.film_id = inventory.film_id  GROUP BY inventory.film_id  ORDER BY count( *) DESC LIMIT 1    "
"SELECT projects.project_details, projects.project_id FROM Projects JOIN Project_Outcomes ON projects.project_id = T2.project_id  GROUP BY T2.project_id  ORDER BY count( *) DESC LIMIT 1    "
SELECT airports.country FROM airports    ORDER BY airports.elevation DESC LIMIT 1    
SELECT roller_coaster.Speed FROM roller_coaster    ORDER BY roller_coaster.Length DESC LIMIT 1    
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId JOIN venue ON paper.venueId = venue.venueId WHERE key_phrase.keyphraseName = '1' and paper.year = 1 and venue.venueName = '1'       
"SELECT max( student.Age), min( student.Age) FROM Student WHERE student.Major = 600       "
SELECT count( *) FROM aircraft WHERE aircraft.distance between 1000 AND 5000       
SELECT count( *) FROM enzyme WHERE enzyme.id NOT IN (SELECT medicine_enzyme_interaction.enzyme_id FROM medicine_enzyme_interaction        )       
SELECT student.Advisor FROM Student  GROUP BY student.Advisor HAVING count( *) > 2     
SELECT student_course_enrolment.date_of_enrolment FROM Student_Course_Enrolment JOIN Courses ON student_course_enrolment.course_id = courses.course_id WHERE courses.course_name = 'Spanish'       
"SELECT customers.customer_status_code, count( *) FROM Customers  GROUP BY customers.customer_status_code      "
"SELECT employees.FIRST_NAME, employees.DEPARTMENT_ID FROM employees WHERE employees.LAST_NAME = 'McEwen'       "
"SELECT actor.first_name, actor.last_name FROM actor JOIN film_actor ON actor.actor_id = T2.actor_id  GROUP BY actor.actor_id HAVING count( *) > 30     "
"SELECT technician.Team, technician.Starting_Year FROM technician        "
SELECT DISTINCT key_phrase.keyphraseId FROM keyphrase JOIN paperKeyphrase ON key_phrase.keyphraseId = paperKeyphrase.keyphraseId JOIN paper ON paperKeyphrase.paperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Luke Zettlemoyer'       
SELECT avg( body_builder.Snatch) FROM body_builder        
"SELECT avg( station.lat), avg( station.long) FROM station WHERE station.city = 'San Jose'       "
"SELECT rooms.roomName, count( *), reservations.Room FROM Rooms JOIN Reservations ON rooms.RoomId = reservations.Room  GROUP BY reservations.Room      "
SELECT county.County_name FROM county     ORDER BY county.County_name DESC   
SELECT student.Advisor FROM Student WHERE student.city_code = 'BAL'       
"SELECT people.first_name, people.last_name FROM People JOIN Candidates ON people.person_id = T2.candidate_id        "
"SELECT reference_document_types.Document_Type_Code, reference_document_types.Document_Type_Name, reference_document_types.Document_Type_Description FROM Ref_Document_Types        "
"SELECT faculty.Rank, faculty.Sex, count( *) FROM Faculty  GROUP BY faculty.Sex      "
SELECT DISTINCT nurse.Name FROM Nurse     ORDER BY nurse.Name ASC   
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and location.STREET_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT assessment_notes.date_of_notes FROM Assessment_Notes        
"SELECT customers.email_address, customers.date_of_birth FROM Customers WHERE customers.first_name = 'Carole'       "
"SELECT publication.year, sum( publication.citation_num) FROM publication WHERE publication.title = '1' GROUP BY publication.year      "
SELECT count( *) FROM venue        
SELECT match_season.Player FROM match_season WHERE match_season.College = 'UCLA'       
"SELECT checking.balance, savings.balance, accounts.name FROM CHECKING JOIN ACCOUNTS ON checking.custid = accounts.custid JOIN SAVINGS ON accounts.custid = savings.custid        "
"SELECT head.head_ID, head.name FROM head WHERE head.name like '%Ha%'       "
SELECT count( *) FROM RESTAURANT JOIN GEOGRAPHIC ON restaurant.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN LOCATION ON GEOGRAPHIC.CITY_NAME = location.CITY_NAME WHERE location.CITY_NAME = '1' and restaurant.FOOD_TYPE = '1'       
SELECT DISTINCT count(DISTINCT allergy_type.AllergyType) FROM Allergy_Type        
"SELECT count( *), class.CLASS_ROOM FROM CLASS  GROUP BY class.CLASS_ROOM HAVING count( *) >= 2     "
SELECT state.density FROM state WHERE state.state_name = '1'       
SELECT customers.customer_name FROM Customers JOIN Orders ON customers.customer_id = Orders.customer_id JOIN Order_Items ON Orders.order_id = order_items.order_id JOIN Products ON order_items.product_id = products.product_id WHERE order_items.order_item_status = '1' and products.product_name = '1' GROUP BY customers.customer_name HAVING count( *) >= 1     
SELECT DISTINCT orders.order_id FROM Orders     ORDER BY orders.date_order_placed ASC   
SELECT avg( projects.Hours) FROM Projects        
"SELECT sum( customer.acc_bal), customer.state FROM customer WHERE customer.credit_score > 100 GROUP BY customer.state      "
SELECT student.Fname FROM Student     ORDER BY student.Age DESC   
SELECT * FROM departments WHERE departments.DEPARTMENT_NAME = 'Marketing'       
SELECT count( *) FROM Staff WHERE staff.first_name = 'Ludie'       
"SELECT DISTINCT count(DISTINCT paper.paperId), writes.authorId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' and paper.year > 1 GROUP BY writes.authorId   ORDER BY count( paper.paperId) DESC   "
"SELECT sum( channel.Rating_in_percent), channel.Owner FROM channel  GROUP BY channel.Owner      "
SELECT count( *) FROM flight WHERE flight.Velocity > 200       
SELECT customers_cards.card_type_code FROM Customers_Cards  GROUP BY customers_cards.card_type_code  ORDER BY count( *) DESC LIMIT 1    
SELECT DISTINCT competition.Year FROM competition WHERE competition.Competition_type != 'Tournament'       
SELECT avg( bank.no_of_customers) FROM bank WHERE bank.state = 'Utah'       
"SELECT employees.FIRST_NAME, employees.LAST_NAME, employees.EMPLOYEE_ID, countries.COUNTRY_NAME FROM employees JOIN departments ON employees.DEPARTMENT_ID = departments.DEPARTMENT_ID JOIN locations ON departments.LOCATION_ID = locations.LOCATION_ID JOIN countries ON locations.COUNTRY_ID = countries.COUNTRY_ID        "
"SELECT technician.Name, machine.Machine_series FROM technician JOIN repair_assignment ON technician.technician_id = repair_assignment.technician_id JOIN machine ON repair_assignment.Machine_ID = machine.Machine_ID        "
SELECT avg( apartments.room_count) FROM Apartments WHERE apartments.apt_type_code = 'Studio'       
SELECT buildings.Stories FROM buildings    ORDER BY buildings.Height DESC LIMIT 1    
"SELECT address.phone, address.postal_code FROM address WHERE address.address = '1031 Daugavpils Parkway'       "
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and location.STREET_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
"SELECT match_season.Season, match_season.Player, team.Name FROM match_season JOIN team ON match_season.Team = team.Team_id        "
"SELECT accounts.account_name, accounts.other_account_details FROM Accounts JOIN Customers ON accounts.customer_id = customers.customer_id WHERE customers.customer_first_name = 'Meaghan' and customers.customer_last_name = 'Keeling'       "
"SELECT DISTINCT voting_record.President_Vote, voting_record.Vice_President_Vote FROM Voting_record        "
SELECT appellations.County FROM appellations JOIN wine ON appellations.Appelation = T2.Appelation  GROUP BY appellations.County HAVING count( *) <= 3     
SELECT count( border_info.border) FROM border_info WHERE border_info.state_name = '1'       
SELECT delivery_routes.route_name FROM Delivery_Routes     ORDER BY delivery_routes.route_name ASC   
SELECT customers.customer_name FROM Customers JOIN Customer_Orders ON customers.customer_id = Customer_Orders.customer_id JOIN Order_Items ON Customer_Orders.order_id = order_items.order_id WHERE order_items.order_quantity = (SELECT max( order_items.order_quantity) FROM Order_Items        )       
SELECT customer.store_id FROM customer  GROUP BY customer.store_id  ORDER BY count( *) DESC LIMIT 1    
SELECT region.Region_name FROM region WHERE region.Region_id NOT IN (SELECT affected_region.Region_id FROM affected_region        )       
"SELECT dorm.dorm_name, dorm.gender FROM Dorm WHERE dorm.student_capacity > 300 or dorm.student_capacity < 100       "
SELECT student.Advisor FROM Student  GROUP BY student.Advisor HAVING count( *) > 2     
"SELECT customers.customer_id, customers.customer_name FROM Customers WHERE customers.customer_address like '%WY%' and customers.payment_method_code != 'Credit Card'       "
SELECT member.Level FROM member  GROUP BY member.Level  ORDER BY count( *) DESC LIMIT 1    
SELECT DISTINCT patient.Name FROM Patient JOIN Stay ON patient.SSN = stay.Patient JOIN Undergoes ON stay.StayID = T3.Stay WHERE stay.Room = 111       
"SELECT artist.artist_name, artist.country FROM artist JOIN song ON artist.artist_name = song.artist_name    ORDER BY song.rating DESC LIMIT 1    "
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and location.STREET_NAME = '1'       "
SELECT sum( invoices.total) FROM invoices WHERE invoices.billing_city = 'Chicago' and invoices.billing_state = 'IL'       
SELECT album.Title FROM Album     ORDER BY album.Title ASC   
SELECT film.Studio FROM film WHERE film.Director = 'Nicholas Meyer'     INTERSECT SELECT film.Studio FROM film WHERE film.Director = 'Walter Hill'         
SELECT avg( station.long) FROM station WHERE station.id NOT IN (SELECT status.station_id FROM status  GROUP BY status.station_id HAVING max( status.bikes_available) > 10     )       
SELECT class.CLASS_CODE FROM CLASS WHERE class.CLASS_ROOM = 'KLR209'       
SELECT sum( district.City_Population) FROM district WHERE district.City_Area > (SELECT avg( district.City_Area) FROM district        )       
SELECT state.area FROM state WHERE state.state_name = '1'       
SELECT tracks.name FROM tracks JOIN playlist_tracks ON tracks.id = playlist_tracks.track_id JOIN playlists ON playlist_tracks.playlist_id = playlists.id WHERE playlists.name = 'Movies'       EXCEPT SELECT tracks.name FROM tracks JOIN playlist_tracks ON tracks.id = playlist_tracks.track_id JOIN playlists ON playlist_tracks.playlist_id = playlists.id WHERE playlists.name = 'Music'       
SELECT DISTINCT apartments.apt_number FROM Apartments JOIN Apartment_Bookings ON apartments.apt_id = apartment_bookings.apt_id WHERE apartment_bookings.booking_status_code = 'Confirmed'       
SELECT employee.EMP_FNAME FROM EMPLOYEE WHERE employee.EMP_JOBCODE = '1'    ORDER BY employee.EMP_DOB ASC   
SELECT DISTINCT player.player_name FROM Player JOIN Player_Attributes ON player.player_api_id = player_attributes.player_api_id    ORDER BY player_attributes.overall_rating DESC LIMIT 1    
SELECT customers.town_city FROM Customers WHERE customers.customer_type_code = 'Good Credit Rating' GROUP BY customers.town_city  ORDER BY count( *) ASC LIMIT 1    
"SELECT team.name, postseason.team_id_winner FROM postseason JOIN team WHERE postseason.year = 2008 GROUP BY postseason.team_id_winner  ORDER BY count( *) DESC LIMIT 1    "
SELECT DISTINCT college.state FROM College JOIN Tryout ON college.cName = tryout.cName WHERE tryout.decision = 'yes'       
SELECT appellations.Area FROM appellations JOIN wine ON appellations.Appelation = wine.Appelation WHERE wine.Year < 2010 GROUP BY appellations.Area  ORDER BY count( *) DESC LIMIT 1    
SELECT conference.name FROM conference JOIN publication ON conference.cid = publication.cid JOIN publication_keyword ON publication.pid = publication_keyword.pid JOIN keyword ON publication_keyword.kid = keyword.kid WHERE keyword.keyword = 'Relational Database' GROUP BY conference.name  ORDER BY count( publication.title) DESC LIMIT 1    
SELECT customers.company FROM customers WHERE customers.first_name = 'Eduardo' and customers.last_name = 'Martins'       
SELECT student.Fname FROM Student WHERE student.Age > 20       
"SELECT student.Fname, student.LName FROM Student WHERE student.Major = 600       "
SELECT tracks.name FROM tracks JOIN playlist_tracks ON tracks.id = playlist_tracks.track_id JOIN playlists ON playlist_tracks.playlist_id = playlists.id WHERE playlists.name = 'Movies'       
SELECT DISTINCT count(DISTINCT movie.title) FROM movie WHERE movie.release_year = 2013       
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and location.STREET_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT products.product_details FROM Products WHERE products.product_details like '%Latte%' or products.product_details like '%Americano%'       
SELECT DISTINCT catalog_contents.catalog_entry_name FROM Catalog_Contents        
SELECT review.text FROM review JOIN user ON review.user_id = user.user_id WHERE user.name = 'Niloofar'       
SELECT documents.document_name FROM Documents JOIN Document_Sections ON documents.document_code = T2.document_code  GROUP BY documents.document_name  ORDER BY count( *) DESC LIMIT 1    
SELECT album.Title FROM Album JOIN Artist ON album.ArtistId = artist.ArtistId WHERE artist.Name = 'AC/DC'       
SELECT DISTINCT count(DISTINCT business.name) FROM business JOIN category ON business.business_id = category.business_id WHERE business.city = 'Dallas' and business.rating > 3.5 and category.category_name = 'Bars'       
"SELECT race.Name, race.Date, track.Name FROM race JOIN track ON race.Track_ID = track.Track_ID        "
SELECT grants.grant_start_date FROM Grants JOIN Documents ON grants.grant_id = Documents.grant_id JOIN Document_Types ON Documents.document_type_code = document_types.document_type_code WHERE document_types.document_description = 'Regular'     INTERSECT SELECT grants.grant_start_date FROM Grants JOIN Documents ON grants.grant_id = Documents.grant_id JOIN Document_Types ON Documents.document_type_code = document_types.document_type_code WHERE document_types.document_description = 'Initial Application'         
SELECT document_types.document_type_code FROM Document_Types WHERE document_types.document_description like '%Initial%'       
"SELECT department.dept_name, department.building FROM department    ORDER BY department.budget DESC LIMIT 1    "
"SELECT ship.Name, ship.Type, ship.Flag FROM Ship    ORDER BY ship.Built_Year DESC LIMIT 1    "
SELECT count( *) FROM candidate        
SELECT DISTINCT count(DISTINCT wedding.Church_ID) FROM wedding WHERE wedding.Year = 2016       
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' and paper.year = 1       
SELECT avg( college.enr) FROM College WHERE college.state = 'FL'       
SELECT keyword.keyword FROM keyword JOIN domain_keyword ON keyword.kid = domain_keyword.kid JOIN domain ON domain_keyword.did = domain.did WHERE domain.name = 'Databases'       
SELECT products.Name FROM Products JOIN Manufacturers ON products.Manufacturer = manufacturers.Code WHERE manufacturers.Name = 'Creative Labs'     INTERSECT SELECT products.Name FROM Products JOIN Manufacturers ON products.Manufacturer = manufacturers.Code WHERE manufacturers.Name = 'Sony'         
SELECT DISTINCT paper.year FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE author.authorName = '1' and key_phrase.keyphraseName = '1'       
"SELECT bank.city, bank.state FROM bank WHERE bank.bname = 'morningside'       "
"SELECT customers_policies.Date_Opened, customers_policies.Date_Closed FROM Customers_Policies JOIN Customers ON customers_policies.Customer_ID = customers.Customer_ID WHERE customers.Customer_name like '%Diana%'       "
SELECT DISTINCT track.UnitPrice FROM Track        
"SELECT customer.state, customer.acc_type, customer.credit_score FROM customer WHERE customer.no_of_loans = 0       "
SELECT state.state_name FROM state WHERE state.density = (SELECT min( state.density) FROM state        )       
"SELECT bank.bname, bank.city FROM bank JOIN loan ON bank.branch_ID = loan.branch_ID WHERE loan.loan_type = 'Business'       "
SELECT count( *) FROM Vocals JOIN Songs ON vocals.SongId = songs.SongId WHERE songs.Title = 'Demon Kitty Rag'       
SELECT city.city_name FROM city WHERE city.population = (SELECT max( city.population) FROM city WHERE city.state_name = '1'       ) and city.state_name = '1'       
SELECT sum( manufacturers.Revenue) FROM Manufacturers WHERE manufacturers.Headquarter = 'Tokyo' or manufacturers.Headquarter = 'Taiwan'       
SELECT people.Sex FROM people JOIN candidate ON people.People_ID = candidate.People_ID  GROUP BY people.Sex  ORDER BY avg( candidate.Unsure_rate) DESC LIMIT 1    
SELECT avg( review.rating) FROM review WHERE review.year = 2014       
"SELECT student.Fname, student.LName FROM Student JOIN Lives_in ON student.StuID = lives_in.stuid WHERE lives_in.dormid in (SELECT has_amenity.dormid FROM Has_amenity JOIN Dorm_amenity ON has_amenity.amenid = dorm_amenity.amenid WHERE dorm_amenity.amenity_name = 'TV Lounge'       )       "
"SELECT problem_log.problem_log_id, problem_log.problem_id FROM Problem_Log    ORDER BY problem_log.log_entry_date ASC LIMIT 1    "
"SELECT station.city, count( *) FROM station  GROUP BY station.city HAVING count( *) >= 15     "
SELECT DISTINCT count(DISTINCT captain.Rank) FROM captain        
"SELECT member.Name, branch.Name FROM member JOIN purchase ON member.Member_ID = purchase.Member_ID JOIN branch ON purchase.Branch_ID = branch.Branch_ID JOIN membership_register_branch ON branch.Branch_ID = membership_register_branch.Branch_ID     ORDER BY membership_register_branch.Register_Year ASC   "
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT count( river.river_name) FROM river WHERE river.traverse = '1'       
SELECT addresses.City_Town FROM Addresses        EXCEPT SELECT addresses.City_Town FROM Addresses JOIN Performers ON addresses.Address_ID = T3.Address_ID        
SELECT dorm.dorm_name FROM Dorm        EXCEPT SELECT dorm.dorm_name FROM Dorm JOIN Has_amenity ON dorm.dormid = Has_amenity.dormid JOIN Dorm_amenity ON Has_amenity.amenid = dorm_amenity.amenid WHERE dorm_amenity.amenity_name = 'TV Lounge'       
SELECT albums.title FROM albums        
"SELECT count( *), student.DEPT_CODE FROM STUDENT  GROUP BY student.DEPT_CODE      "
"SELECT movie.title, movie.director FROM Movie JOIN Rating ON movie.mID = rating.mID WHERE rating.stars > (SELECT avg( rating.stars) FROM Rating JOIN Movie ON rating.mID = movie.mID WHERE movie.director = 'James Cameron'       )       "
SELECT count( *) FROM artist WHERE artist.Age > 46 and artist.Year_Join > 1990       
"SELECT company.Name, people.Name FROM company JOIN employment ON company.Company_ID = employment.Company_ID JOIN people ON employment.People_ID = people.People_ID     ORDER BY employment.Year_working ASC   "
SELECT financial_transactions.transaction_type FROM Financial_Transactions  GROUP BY financial_transactions.transaction_type  ORDER BY sum( financial_transactions.transaction_amount) DESC LIMIT 1    
SELECT DISTINCT count(DISTINCT device.Software_Platform) FROM device        
SELECT count( *) FROM invoices JOIN customers ON invoices.customer_id = customers.id WHERE customers.first_name = 'Lucas' and customers.last_name = 'Mancini'       
"SELECT camera_lens.brand, camera_lens.name FROM camera_lens     ORDER BY camera_lens.max_aperture DESC   "
SELECT DISTINCT paper.year FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1'    ORDER BY paper.year ASC   
SELECT faculty.FacID FROM Faculty        EXCEPT SELECT faculty_participates_in.FacID FROM Faculty_Participates_in        
"SELECT checking.balance, savings.balance, accounts.name FROM CHECKING JOIN ACCOUNTS ON checking.custid = accounts.custid JOIN SAVINGS ON accounts.custid = savings.custid     ORDER BY checking.balance DESC   "
SELECT count( city.city_name) FROM city WHERE city.population > 1 and city.state_name = '1'       
SELECT department.Name FROM Department  GROUP BY department.Name  ORDER BY count( department.DepartmentID) DESC LIMIT 1    
SELECT movie.title FROM Movie WHERE movie.director = 'James Cameron' and movie.year > 2000       
SELECT student.StuID FROM Student        EXCEPT SELECT has_allergy.StuID FROM Has_Allergy        
SELECT complaints.complaint_status_code FROM Complaints  GROUP BY complaints.complaint_status_code HAVING count( *) > 3     
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = 'Question Answering'       
SELECT count( *) FROM race        
SELECT DISTINCT count(DISTINCT drama_workshop_groups.Currency_Code) FROM Drama_Workshop_Groups        
SELECT DISTINCT songs.Title FROM Songs JOIN Vocals ON songs.SongId = T2.SongId        EXCEPT SELECT songs.Title FROM Songs JOIN Vocals ON songs.SongId = vocals.SongId WHERE vocals.Type = '1'       
SELECT highlow.highest_elevation FROM highlow JOIN state ON highlow.state_name = state.state_name WHERE state.area = (SELECT max( state.area) FROM state        )       
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId JOIN venue ON paper.venueId = venue.venueId WHERE key_phrase.keyphraseName = '1' and paper.year = 1 and venue.venueName = '1'       
SELECT DISTINCT count(DISTINCT keyword.keyword) FROM keyword JOIN domain_keyword ON keyword.kid = domain_keyword.kid JOIN domain ON domain_keyword.did = domain.did WHERE domain.name = 'Databases'       
"SELECT cmi_cross_references.source_system_code, cmi_cross_references.master_customer_id, parking_fines.council_tax_id FROM CMI_Cross_References JOIN Parking_Fines ON cmi_cross_references.cmi_cross_ref_id = parking_fines.cmi_cross_ref_id        "
SELECT artist.Famous_Title FROM artist WHERE artist.Artist = 'Triumfall'       
SELECT count( *) FROM Problems JOIN Product ON problems.product_id = product.product_id WHERE product.product_name = 'voluptatem'       
SELECT customer.cust_name FROM customer JOIN bank ON customer.branch_ID = bank.branch_ID JOIN loan ON bank.branch_ID = loan.branch_ID WHERE loan.loan_type = 'Mortgages'     INTERSECT SELECT customer.cust_name FROM customer JOIN bank ON customer.branch_ID = bank.branch_ID JOIN loan ON bank.branch_ID = loan.branch_ID WHERE loan.loan_type = 'Auto'         
"SELECT students.first_name, students.last_name FROM Students JOIN Addresses ON students.address_id = addresses.address_id WHERE addresses.state_province_county = 'Wisconsin'       "
SELECT count( *) FROM GEOGRAPHIC        
SELECT gymnast.Total_Points FROM gymnast JOIN people ON gymnast.Gymnast_ID = people.People_ID    ORDER BY people.Age ASC LIMIT 1    
"SELECT actor.first_name, actor.last_name FROM actor JOIN film_actor ON actor.actor_id = T2.actor_id  GROUP BY actor.actor_id HAVING count( *) > 30     "
SELECT member.Country FROM member  GROUP BY member.Country  ORDER BY count( *) DESC LIMIT 1    
SELECT course.title FROM course WHERE course.course_id in (SELECT prerequisite.course_id FROM prereq JOIN course ON prerequisite.prereq_id = course.course_id WHERE course.title = 'Differential Geometry'       )       
SELECT channel.Name FROM channel WHERE channel.Owner != 'CCTV'       
SELECT DISTINCT writes.authorId FROM writes JOIN paper ON writes.paperId = paper.paperId WHERE paper.year = 2015       
SELECT vehicles.vehicle_details FROM Vehicles WHERE vehicles.vehicle_id = 1       
SELECT publication.title FROM publication JOIN writes ON publication.pid = writes.pid JOIN author ON writes.aid = author.aid JOIN journal ON publication.jid = journal.jid WHERE author.name = '1' and journal.name = '1' and publication.year > 1       
SELECT director.nationality FROM director WHERE director.name = '1'       
"SELECT customer_events.Customer_Event_ID, customer_events.property_id FROM Customer_Events JOIN Customer_Event_Notes ON customer_events.Customer_Event_ID = T2.Customer_Event_ID  GROUP BY T2.Customer_Event_ID HAVING count( *) between 1 AND 3     "
SELECT courses.course_name FROM Courses JOIN Course_Authors_and_Tutors ON courses.author_id = course_authors_and_tutors.author_id WHERE course_authors_and_tutors.personal_name = 'Julio'       
SELECT count( *) FROM Documents JOIN Ref_Shipping_Agents ON documents.shipping_agent_code = reference_shipping_agents.shipping_agent_code WHERE reference_shipping_agents.shipping_agent_name = 'USPS'       
SELECT sum( grants.grant_amount) FROM Grants JOIN Organisations ON grants.organisation_id = Organisations.organisation_id JOIN Organisation_Types ON Organisations.organisation_type = organisation_types.organisation_type WHERE organisation_types.organisation_type_description = 'Research'       
SELECT count( *) FROM Course WHERE course.Credits > 2       
"SELECT film.Title, film.Director FROM film WHERE film.Film_ID NOT IN (SELECT film_market_estimation.Film_ID FROM film_market_estimation JOIN market ON film_market_estimation.Market_ID = market.Market_ID WHERE market.Country = 'China'       )       "
"SELECT max( weekly_weather.low_temperature), avg( weekly_weather.precipitation) FROM weekly_weather JOIN station ON weekly_weather.station_id = station.id WHERE station.network_name = 'Amersham'       "
"SELECT train.train_number, train.name FROM train     ORDER BY train.time ASC   "
SELECT manufacturers.Founder FROM Manufacturers WHERE manufacturers.Name = 'Sony'       
SELECT avg( review.rating) FROM review JOIN user ON review.user_id = user.user_id WHERE user.name = 'Michelle'       
SELECT river.river_name FROM river WHERE river.traverse in (SELECT highlow.state_name FROM highlow WHERE highlow.lowest_elevation = (SELECT min( highlow.lowest_elevation) FROM highlow        )       )       
SELECT captain.Name FROM captain    ORDER BY captain.age ASC LIMIT 1    
"SELECT max( procedures.Cost), min( procedures.Cost), avg( procedures.Cost) FROM Procedures        "
"SELECT min( files.duration), min( song.rating), song.genre_is FROM files JOIN song ON files.f_id = song.f_id  GROUP BY song.genre_is   ORDER BY song.genre_is ASC   "
SELECT entrepreneur.Company FROM entrepreneur     ORDER BY entrepreneur.Money_Requested DESC   
SELECT * FROM instructor     ORDER BY instructor.salary ASC   
SELECT people.Name FROM people WHERE people.People_ID NOT IN (SELECT employment.People_ID FROM employment        )       
SELECT film.title FROM film WHERE film.special_features like '%Deleted Scenes%'       
SELECT count( *) FROM venue        
SELECT movie.release_year FROM movie WHERE movie.title = 'The Imitation Game'       
SELECT shop.Shop_Name FROM shop WHERE shop.Shop_ID NOT IN (SELECT stock.Shop_ID FROM stock        )       
SELECT count( *) FROM Customers WHERE customers.customer_id NOT IN (SELECT accounts.customer_id FROM Accounts        )       
SELECT DISTINCT paper.journalId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = 'Temporal Data'       
SELECT competition.Country FROM competition        EXCEPT SELECT competition.Country FROM competition WHERE competition.Competition_type = '1'       
SELECT DISTINCT count(DISTINCT sports_info.StuID) FROM SportsInfo        
"SELECT DISTINCT author.authorId, paper.paperId FROM author JOIN writes ON author.authorId = writes.authorId JOIN paper ON writes.paperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE author.authorName = '1' and key_phrase.keyphraseName = '1'       "
SELECT students.date_of_latest_logon FROM Students WHERE students.family_name = 'Jaskolski' or students.family_name = 'Langosh'       
"SELECT student.Fname, student.LName, grade_conversion.gradepoint FROM Student JOIN Enrolled_in ON student.StuID = Enrolled_in.StuID JOIN Gradeconversion ON Enrolled_in.Grade = grade_conversion.lettergrade        "
"SELECT body_builder.Snatch, body_builder.Clean_Jerk FROM body_builder     ORDER BY body_builder.Snatch ASC   "
SELECT student.Major FROM Student  GROUP BY student.Major  ORDER BY count( *) DESC LIMIT 1    
SELECT movie.title FROM Movie WHERE movie.year > (SELECT max( movie.year) FROM Movie WHERE movie.director = 'Steven Spielberg'       )       
SELECT flight.flno FROM flight    ORDER BY flight.distance ASC LIMIT 1    
"SELECT avg( employee.salary), max( employee.salary) FROM employee        "
SELECT invoice.InvoiceDate FROM Invoice JOIN Customer ON invoice.CustomerId = customer.CustomerId WHERE customer.FirstName = 'Astrid' and customer.LastName = 'Gruber'       
"SELECT premises.premises_type, premises.premise_details FROM Premises     ORDER BY premises.premises_type ASC   "
"SELECT DISTINCT count(DISTINCT paper.paperId), paper.year FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE venue.venueName = 'NIPS' GROUP BY paper.year   ORDER BY count( paper.paperId) DESC   "
SELECT count( *) FROM region        
"SELECT DISTINCT student.Fname, student.LName FROM Student JOIN Voting_record ON student.StuID = T2.Class_Senator_Vote WHERE student.Sex = 'F'       "
SELECT employee.City FROM Employee JOIN Customer ON employee.EmployeeId = customer.SupportRepId WHERE customer.PostalCode = '70174'       
SELECT video_games.GType FROM Video_Games WHERE video_games.GName = '1'       
"SELECT sum( university.Enrollment), university.Affiliation FROM university WHERE university.Founded > 1850 GROUP BY university.Affiliation      "
SELECT wrestler.Name FROM wrestler    ORDER BY wrestler.Days_held ASC LIMIT 1    
"SELECT DISTINCT count(DISTINCT cite.citedPaperId), paper.year FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1' GROUP BY paper.year      "
SELECT employee.EMP_FNAME FROM EMPLOYEE JOIN CLASS ON employee.EMP_NUM = T2.PROF_NUM  GROUP BY employee.EMP_FNAME HAVING count( *) > 1     
SELECT count( *) FROM Student        
SELECT state.population FROM state WHERE state.state_name in (SELECT river.traverse FROM river WHERE river.river_name = '1'       )       
SELECT stay.Patient FROM Stay WHERE stay.Room = 111   ORDER BY stay.StayStart DESC LIMIT 1    
SELECT reservations.Kids FROM Reservations WHERE reservations.FirstName = '1' and reservations.LastName = '1'       
"SELECT products.product_type_code, products.product_name FROM Products WHERE products.product_price > 1000 or products.product_price < 500       "
SELECT volume.Issue_Date FROM volume    ORDER BY volume.Weeks_on_Top ASC LIMIT 1    
SELECT business.name FROM business WHERE business.rating > 4.5       
SELECT employee.name FROM employee        EXCEPT SELECT employee.name FROM employee JOIN certificate ON employee.eid = certificate.eid JOIN aircraft ON certificate.aid = aircraft.aid WHERE aircraft.name = 'Boeing 737-800'       
SELECT DISTINCT paper.journalId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Takashi Matsumoto'       
SELECT student.Advisor FROM Student  GROUP BY student.Advisor  ORDER BY count( *) DESC LIMIT 1    
SELECT wine.Name FROM wine WHERE wine.Year = 2008       
SELECT count( *) FROM Artist WHERE artist.ArtistId NOT IN (SELECT album.ArtistId FROM Album        )       
"SELECT customers.customer_name, addresses.city, customer_address_history.date_from, customer_address_history.date_to FROM Customers JOIN Customer_Address_History ON customers.customer_id = customer_address_history.customer_id JOIN Addresses ON customer_address_history.address_id = addresses.address_id        "
SELECT region.Region_name FROM region WHERE region.Region_name != 'Denmark'       
SELECT department.DName FROM Department        EXCEPT SELECT department.DName FROM Department JOIN Minor_in ON department.DNO = T3.DNO        
SELECT count( *) FROM Rooms        
SELECT count( *) FROM Apartment_Buildings        
"SELECT party.Minister, party.Party_name FROM party     ORDER BY party.Took_office DESC   "
SELECT DISTINCT customers.customer_name FROM Customers JOIN Customer_Orders ON customers.customer_id = customer_orders.customer_id WHERE customer_orders.order_status_code = 'Pending'    ORDER BY customer_orders.customer_id ASC   
SELECT employees.Role_Code FROM Employees  GROUP BY employees.Role_Code  ORDER BY count( *) ASC LIMIT 1    
SELECT sum( home_game.attendance) FROM home_game JOIN team ON home_game.team_id = team.team_id WHERE team.name = 'Boston Red Stockings' and home_game.year between 2000 AND 2010       
"SELECT avg( captain.age), min( captain.age), captain.Class FROM captain  GROUP BY captain.Class      "
SELECT customers.Customer_Details FROM Customers JOIN Policies ON customers.Customer_ID = policies.Customer_ID  GROUP BY customers.Customer_Details  ORDER BY count( *) DESC LIMIT 1    
SELECT count( *) FROM Employees        
SELECT stadium.Country FROM stadium WHERE stadium.Capacity > 60000     INTERSECT SELECT stadium.Country FROM stadium WHERE stadium.Capacity < 50000         
"SELECT count( *), product.product_name FROM Problems JOIN Product ON problems.product_id = product.product_id  GROUP BY product.product_name  ORDER BY count( *) DESC LIMIT 1    "
"SELECT avg( catalog_contents.price_in_euros), min( catalog_contents.price_in_euros) FROM Catalog_Contents        "
"SELECT band.Firstname, band.Lastname FROM Band JOIN Performance ON band.Id = T3.Bandmate JOIN Songs ON T3.SongId = songs.SongId WHERE songs.Title = 'Le Pop'       "
"SELECT phone.Hardware_Model_name, phone.Company_name FROM phone JOIN screen_mode ON phone.screen_mode = screen_mode.Graphics_mode WHERE screen_mode.Type = 'Graphics'       "
SELECT actor.name FROM actor JOIN cast ON actor.aid = cast.aid JOIN copyright ON cast.msid = copyright.msid JOIN directed_by ON copyright.msid = directed_by.msid JOIN director ON directed_by.did = director.did JOIN movie WHERE director.name = 'Quentin Tarantino'   ORDER BY movie.release_year DESC LIMIT 1    
SELECT movie.title FROM Movie WHERE movie.year = (SELECT max( movie.year) FROM Movie        )       
SELECT editor.Age FROM editor  GROUP BY editor.Age  ORDER BY count( *) DESC LIMIT 1    
"SELECT scientists.Name, projects.Name, projects.Hours FROM Scientists JOIN AssignedTo ON scientists.SSN = AssignedTo.Scientist JOIN Projects ON AssignedTo.Project = projects.Code     ORDER BY projects.Name ASC   "
"SELECT tourist_attractions.Name, visits.Visit_Date FROM Tourist_Attractions JOIN Visits ON tourist_attractions.Tourist_Attraction_ID = visits.Tourist_Attraction_ID JOIN Visitors ON visits.Tourist_ID = visitors.Tourist_ID WHERE visitors.Tourist_Details = 'Vincent' or visitors.Tourist_Details = 'Vivian'       "
SELECT count( *) FROM purchase JOIN member ON purchase.Member_ID = member.Member_ID WHERE member.Level = 6       
"SELECT track.Name, track.Location FROM track JOIN race ON track.Track_ID = T2.Track_ID  GROUP BY T2.Track_ID HAVING count( *) = 1     "
SELECT volume.Issue_Date FROM volume JOIN artist ON volume.Artist_ID = artist.Artist_ID WHERE artist.Artist = 'Gorgoroth'       
"SELECT count( *), student.dept_name FROM student  GROUP BY student.dept_name      "
SELECT author.name FROM author JOIN writes ON author.aid = writes.aid JOIN publication ON writes.pid = publication.pid JOIN domain_publication ON publication.pid = domain_publication.pid JOIN domain ON domain_publication.did = domain.did JOIN organization WHERE domain.name = '1' and T3.name = '1' GROUP BY author.name  ORDER BY sum( publication.citation_num) DESC LIMIT 1    
SELECT count( city.state_name) FROM city WHERE city.city_name = '1'       
SELECT actor.name FROM actor WHERE actor.birth_year > 1980 and actor.nationality = 'Italy'       
SELECT DISTINCT count(DISTINCT tryout.cName) FROM Tryout        
"SELECT customers.customer_id, customers.customer_details FROM Customers JOIN Customer_Events ON customers.customer_id = T2.customer_id  GROUP BY T2.customer_id HAVING count( *) >= 3     "
SELECT DISTINCT count(DISTINCT characteristics.characteristic_name) FROM Characteristics JOIN Product_Characteristics ON characteristics.characteristic_id = Product_Characteristics.characteristic_id JOIN Products ON Product_Characteristics.product_id = products.product_id WHERE products.product_name = '1'       
SELECT count( *) FROM Ship        
SELECT count( *) FROM park WHERE park.city = 'Atlanta'       
SELECT DISTINCT assets.asset_model FROM Assets        
"SELECT checking.balance, savings.balance, accounts.name FROM CHECKING JOIN ACCOUNTS ON checking.custid = accounts.custid JOIN SAVINGS ON accounts.custid = savings.custid     ORDER BY checking.balance DESC   "
SELECT airports.name FROM airports JOIN routes ON airports.apid = routes.src_apid WHERE airports.country = 'China' GROUP BY airports.name  ORDER BY count( *) DESC LIMIT 1    
SELECT payments.Payment_Method_Code FROM Payments  GROUP BY payments.Payment_Method_Code  ORDER BY count( *) ASC LIMIT 1    
"SELECT shop.Shop_Name, device.Carrier FROM shop JOIN stock ON shop.Shop_ID = stock.Shop_ID JOIN device ON stock.Device_ID = device.Device_ID        "
SELECT river.river_name FROM river WHERE river.length = (SELECT max( river.length) FROM river WHERE river.traverse = '1'       ) and river.traverse = '1'       
SELECT student_course_registrations.student_id FROM Student_Course_Registrations JOIN Courses ON student_course_registrations.course_id = courses.course_id  GROUP BY student_course_registrations.student_id  ORDER BY count( *) ASC LIMIT 1    
SELECT DISTINCT player.player_name FROM Player JOIN Player_Attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.overall_rating > (SELECT avg( player_attributes.overall_rating) FROM Player_Attributes        )       
SELECT shipments.order_id FROM Shipments WHERE shipments.shipment_tracking_number = '3452'       
SELECT count( *) FROM Rooms JOIN Reservations ON rooms.RoomId = reservations.Room WHERE reservations.FirstName = 'ROY' and reservations.LastName = 'SWEAZY'       
SELECT customers.customer_name FROM Customers JOIN Customer_Orders ON customers.customer_id = customer_orders.customer_id WHERE customer_orders.order_status_code = '1'     INTERSECT SELECT customers.customer_name FROM Customers JOIN Customer_Orders ON customers.customer_id = customer_orders.customer_id WHERE customer_orders.order_status_code = '1'         
SELECT climber.Time FROM climber JOIN mountain ON climber.Mountain_ID = mountain.Mountain_ID WHERE mountain.Country = 'Uganda'       
SELECT count( *) FROM pilot        
"SELECT transactions.date_of_transaction, transactions.share_count FROM Transactions        "
SELECT match_season.Player FROM match_season JOIN country ON match_season.Country = country.Country_id WHERE country.Country_name = 'Indonesia'       
"SELECT DISTINCT voting_record.President_Vote, voting_record.Vice_President_Vote FROM Voting_record        "
SELECT college.cName FROM College WHERE college.enr < 13000 and college.state = 'AZ'      UNION SELECT college.cName FROM College WHERE college.enr > 15000 and college.state = 'LA'        
"SELECT departments.DEPARTMENT_NAME, count( *) FROM departments JOIN employees ON departments.DEPARTMENT_ID = employees.DEPARTMENT_ID  GROUP BY departments.DEPARTMENT_NAME      "
SELECT city.Status FROM city JOIN farm_competition ON city.City_ID = T2.Host_city_ID  GROUP BY city.Status  ORDER BY count( *) DESC LIMIT 1    
SELECT state.state_name FROM state WHERE state.population = (SELECT max( state.population) FROM state        )       
SELECT DISTINCT mill.type FROM mill JOIN architect ON mill.architect_id = architect.id WHERE architect.nationality = 'American' or architect.nationality = 'Canadian'       
SELECT count( *) FROM author        
SELECT park.park_name FROM park JOIN home_game ON park.park_id = home_game.park_id WHERE home_game.year = 2008   ORDER BY home_game.attendance DESC LIMIT 1    
SELECT count( *) FROM Club        
SELECT faculty.Lname FROM Faculty WHERE faculty.Building = 'Barton'    ORDER BY faculty.Lname ASC   
"SELECT customers.customer_first_name, customers.customer_last_name FROM Customers JOIN Accounts ON customers.customer_id = accounts.customer_id WHERE accounts.account_name = '900'       "
"SELECT list.Classroom, count( *) FROM list  GROUP BY list.Classroom      "
"SELECT song.song_name, song.releasedate FROM song    ORDER BY song.releasedate DESC LIMIT 1    "
SELECT playlists.name FROM playlists        
SELECT transactions.investor_id FROM Transactions JOIN Investors ON transactions.investor_id = T2.investor_id  GROUP BY transactions.investor_id HAVING count( *) >= 2     
SELECT student.StuID FROM Student WHERE student.Advisor = 1121       
SELECT DISTINCT paper_key_phrase.keyphraseId FROM paperKeyphrase JOIN paper ON paper_key_phrase.paperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Christof Dallermassl' and paper.year = 2000       
SELECT checking.balance FROM CHECKING JOIN ACCOUNTS ON checking.custid = accounts.custid WHERE accounts.name like '%ee%'       
"SELECT person_friend.name, avg( person.age) FROM PersonFriend JOIN Person ON person_friend.friend = person.name  GROUP BY person_friend.name  ORDER BY avg( person.age) DESC LIMIT 1    "
"SELECT DISTINCT count(DISTINCT paper.paperId), writes.authorId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN venue ON paper.venueId = venue.venueId WHERE venue.venueName = '1' GROUP BY writes.authorId   ORDER BY count( paper.paperId) DESC   "
SELECT festival_detail.Festival_Name FROM festival_detail    ORDER BY festival_detail.Year DESC LIMIT 1    
SELECT count( *) FROM ACCOUNTS        
SELECT count( *) FROM trip JOIN station WHERE station.city != 'San Francisco'       
SELECT count( *) FROM storm        
SELECT count( river.river_name) FROM river WHERE river.length > 1 and river.traverse = '1'       
SELECT performers.Customer_Phone FROM Performers WHERE performers.Customer_Name = 'Ashley'       
SELECT DISTINCT count(DISTINCT customer_orders.customer_id) FROM Customer_Orders WHERE customer_orders.order_status = 'Cancelled'       
"SELECT screen_mode.Char_cells, screen_mode.Pixels, screen_mode.Hardware_colours FROM screen_mode JOIN phone ON screen_mode.Graphics_mode = phone.screen_mode WHERE phone.Hardware_Model_name = 'LG-P760'       "
SELECT state.state_name FROM state JOIN highlow ON state.state_name = T2.state_name        
"SELECT student.Advisor, count( *) FROM Student  GROUP BY student.Advisor      "
SELECT papers.title FROM Papers JOIN Authorship ON papers.paperID = Authorship.paperID JOIN Authors ON Authorship.authID = authors.authID WHERE authors.fname = 'Stephanie' and authors.lname = 'Weirich'       
SELECT count( *) FROM Products JOIN Ref_Colors ON products.color_code = reference_colors.color_code JOIN Product_Characteristics ON products.product_id = Product_Characteristics.product_id JOIN Characteristics ON Product_Characteristics.characteristic_id = characteristics.characteristic_id WHERE reference_colors.color_description = 'white' or characteristics.characteristic_name = 'hot'       
"SELECT customers.first_name, customers.last_name FROM Customers JOIN Addresses ON customers.customer_address_id = addresses.address_id WHERE addresses.city = 'Lockmanfurt'       "
"SELECT DISTINCT list.Classroom, count(DISTINCT list.Grade) FROM list  GROUP BY list.Classroom      "
SELECT physician.Name FROM Physician JOIN Trained_In ON physician.EmployeeID = T3.Physician JOIN Procedures ON T3.Treatment = procedures.Code WHERE procedures.Cost > 5000       
SELECT course.title FROM course WHERE course.course_id in (SELECT prerequisite.prereq_id FROM prereq JOIN course ON prerequisite.prereq_id = course.course_id WHERE course.title = 'Mobile Computing'       )       
"SELECT artist.Name, artist.Country FROM artist JOIN exhibition ON artist.Artist_ID = exhibition.Artist_ID  GROUP BY exhibition.Artist_ID  ORDER BY count( *) DESC LIMIT 1    "
SELECT department.Creation FROM department  GROUP BY department.Creation  ORDER BY count( *) DESC LIMIT 1    
SELECT state.state_name FROM state WHERE state.area = (SELECT max( state.area) FROM state        )       
SELECT DISTINCT count(DISTINCT department.DEPT_NAME) FROM DEPARTMENT        
"SELECT apartment_bookings.booking_start_date, apartment_bookings.booking_end_date FROM Apartment_Bookings        "
SELECT DISTINCT count(DISTINCT review.u_id) FROM review        
SELECT DISTINCT documents_to_be_destroyed.Destruction_Authorised_by_Employee_ID FROM Documents_to_be_Destroyed        
SELECT mountain.mountain_name FROM mountain WHERE mountain.state_name = '1'       
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
SELECT products.Product_Type_Code FROM Products WHERE products.Product_Price > 4500     INTERSECT SELECT products.Product_Type_Code FROM Products WHERE products.Product_Price < 3000         
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
SELECT DISTINCT student.Major FROM Student        
SELECT avg( documents.access_count) FROM Documents JOIN Document_Functional_Areas ON documents.document_code = Document_Functional_Areas.document_code JOIN Functional_Areas ON Document_Functional_Areas.functional_area_code = functional_areas.functional_area_code WHERE functional_areas.functional_area_description = 'Acknowledgement'       
SELECT count( *) FROM Ref_Document_Types        
SELECT city.city_name FROM city WHERE city.population = (SELECT max( city.population) FROM city WHERE city.state_name = '1'       ) and city.state_name = '1'       
SELECT DISTINCT count(DISTINCT keyword.keyword) FROM keyword JOIN publication_keyword ON keyword.kid = publication_keyword.kid JOIN publication ON publication_keyword.pid = publication.pid JOIN journal ON publication.jid = journal.jid WHERE journal.name = 'PVLDB'       
SELECT count( city.city_name) FROM city WHERE city.population > 1 and city.state_name in (SELECT border_info.border FROM border_info WHERE border_info.state_name = '1'       )       
SELECT people.Name FROM people     ORDER BY people.Name ASC   
SELECT match.Venue FROM match     ORDER BY match.Date DESC   
SELECT station.id FROM station WHERE station.city = 'San Francisco'     INTERSECT SELECT status.station_id FROM status  GROUP BY status.station_id HAVING avg( status.bikes_available) > 10       
SELECT authors.fname FROM Authors     ORDER BY authors.fname ASC   
SELECT movie.title FROM movie WHERE movie.release_year = 2015       
SELECT technician.Team FROM technician  GROUP BY technician.Team HAVING count( *) >= 2     
SELECT media_type.Name FROM MediaType JOIN Track ON media_type.MediaTypeId = track.MediaTypeId  GROUP BY media_type.Name  ORDER BY count( *) ASC LIMIT 1    
SELECT student_course_attendance.student_id FROM Student_Course_Attendance JOIN Student_Course_Registrations ON student_course_attendance.student_id = Student_Course_Registrations.student_id JOIN Courses ON Student_Course_Registrations.course_id = courses.course_id WHERE courses.course_name = 'statistics'    ORDER BY student_course_attendance.date_of_attendance ASC   
"SELECT avg( financial_transactions.transaction_amount), sum( financial_transactions.transaction_amount) FROM Financial_Transactions        "
SELECT movie.title FROM Movie JOIN Rating ON movie.mID = rating.mID WHERE rating.stars between 3 AND 5       
SELECT course_authors_and_tutors.address_line_1 FROM Course_Authors_and_Tutors        
"SELECT results.driverId, drivers.forename FROM results JOIN drivers ON results.driverId = drivers.driverId JOIN races ON results.raceId = races.raceId WHERE races.name = 'Australian Grand Prix'     INTERSECT SELECT results.driverId, drivers.forename FROM results JOIN drivers ON results.driverId = drivers.driverId JOIN races ON results.raceId = races.raceId WHERE races.name = 'Chinese Grand Prix'         "
SELECT state.state_name FROM state WHERE state.capital = '1'       
SELECT DISTINCT count(DISTINCT room.RoomType) FROM Room        
"SELECT customers_cards.card_type_code, count( *) FROM Customers_Cards  GROUP BY customers_cards.card_type_code      "
SELECT people.first_name FROM People     ORDER BY people.first_name ASC   
SELECT available_policies.policy_type_code FROM Available_Policies  GROUP BY available_policies.policy_type_code  ORDER BY count( *) DESC LIMIT 1    
SELECT county_public_safety.Location FROM county_public_safety  GROUP BY county_public_safety.Location  ORDER BY count( *) DESC LIMIT 1    
SELECT publication.year FROM publication WHERE publication.title = '1'       
SELECT * FROM item        
SELECT files.f_id FROM files WHERE files.formats = 'mp4'     INTERSECT SELECT song.f_id FROM song WHERE song.resolution < 1000         
SELECT tourist_attractions.Name FROM Tourist_Attractions JOIN Visits ON tourist_attractions.Tourist_Attraction_ID = Visits.Tourist_Attraction_ID JOIN Visitors ON Visits.Tourist_ID = visitors.Tourist_ID WHERE visitors.Tourist_Details = 'Vincent'       
"SELECT people.Name, people.Sex FROM people JOIN candidate ON people.People_ID = candidate.People_ID    ORDER BY candidate.Support_rate DESC LIMIT 1    "
"SELECT dorm.student_capacity, dorm.gender FROM Dorm WHERE dorm.dorm_name like '%Donor%'       "
SELECT musical.Nominee FROM musical  GROUP BY musical.Nominee HAVING count( *) > 2     
SELECT roller_coaster.Name FROM roller_coaster     ORDER BY roller_coaster.Length ASC   
SELECT match_season.College FROM match_season JOIN team ON match_season.Team = team.Team_id  GROUP BY match_season.College  ORDER BY count( *) DESC LIMIT 1    
SELECT count( *) FROM Movie WHERE movie.year < 2000       
SELECT DISTINCT river.traverse FROM river WHERE river.length = (SELECT DISTINCT max(DISTINCT river.length) FROM river        )       
SELECT student.Fname FROM Student JOIN Lives_in ON student.StuID = Lives_in.stuid JOIN Dorm ON Lives_in.dormid = dorm.dormid WHERE dorm.dorm_name = 'Smith Hall'       
"SELECT roles.Role_Name, roles.Role_Description FROM Roles WHERE roles.Role_Code = 'MG'       "
SELECT school.Denomination FROM school WHERE school.Founded < 1890     INTERSECT SELECT school.Denomination FROM school WHERE school.Founded > 1900         
SELECT DISTINCT count(DISTINCT routes.dst_apid) FROM routes JOIN airlines ON routes.alid = airlines.alid WHERE airlines.name = 'American Airlines'       
SELECT sum( checkin.count) FROM checkin JOIN business ON checkin.business_id = business.business_id JOIN neighbourhood ON business.business_id = neighbourhood.business_id WHERE neighbourhood.neighbourhood_name = 'Brighton Heights'       
SELECT count( *) FROM Customers        
"SELECT submission.Author, acceptance.Result FROM submission JOIN Acceptance ON submission.Submission_ID = acceptance.Submission_ID        "
SELECT state.density FROM state        
SELECT physician.Name FROM Physician JOIN Appointment ON physician.EmployeeID = T2.Physician        
"SELECT match.Location, aircraft.Aircraft FROM match JOIN aircraft ON match.Winning_Aircraft = aircraft.Aircraft_ID        "
SELECT producer.name FROM producer JOIN made_by ON producer.pid = made_by.pid JOIN copyright ON made_by.msid = copyright.msid JOIN cast ON copyright.msid = cast.msid JOIN actor ON cast.aid = actor.aid JOIN movie WHERE actor.name = 'Kate Winslet'       
SELECT technician.Name FROM technician WHERE technician.Age = 36 or technician.Age = 37       
SELECT hotels.other_hotel_details FROM Hotels    ORDER BY hotels.price_range DESC LIMIT 1    
SELECT count( *) FROM Student WHERE student.Age > 18 and student.StuID NOT IN (SELECT has_allergy.StuID FROM Has_Allergy JOIN Allergy_Type ON has_allergy.Allergy = allergy_type.Allergy WHERE allergy_type.AllergyType = 'food' or allergy_type.AllergyType = 'animal'       )       
"SELECT medicine.Trade_Name, count( *) FROM medicine  GROUP BY medicine.Trade_Name      "
SELECT customers.email_address FROM Customers JOIN Complaints ON customers.customer_id = complaints.customer_id  GROUP BY customers.email_address  ORDER BY count( *) ASC LIMIT 1    
SELECT member.Level FROM member  GROUP BY member.Level  ORDER BY count( *) DESC LIMIT 1    
SELECT customers.Customer_ID FROM Customers WHERE customers.Customer_name like '%Diana%'       
SELECT count( *) FROM venue        
SELECT enzyme.name FROM enzyme WHERE enzyme.Product != 'Heme'       
SELECT shipments.order_id FROM Shipments WHERE shipments.shipment_date = (SELECT max( shipments.shipment_date) FROM Shipments        )       
SELECT count( *) FROM list        
SELECT video_games.GType FROM Video_Games  GROUP BY video_games.GType  ORDER BY count( *) ASC LIMIT 1    
SELECT count( *) FROM state        
SELECT count( *) FROM employee WHERE employee.salary between 100000 AND 200000       
SELECT ship.Type FROM ship WHERE ship.Tonnage > 6000     INTERSECT SELECT ship.Type FROM ship WHERE ship.Tonnage < 4000         
SELECT addresses.State_County FROM Addresses JOIN Stores ON addresses.Address_ID = stores.Address_ID WHERE stores.Marketing_Region_Code = 'CA'       
SELECT DISTINCT movie.director FROM Movie JOIN Rating ON movie.mID = Rating.mID JOIN Reviewer ON Rating.rID = reviewer.rID WHERE reviewer.name = 'Sarah Martinez'       
SELECT count( *) FROM state        
"SELECT users.user_name, users.password FROM Users JOIN Roles ON users.role_code = roles.role_code  GROUP BY users.role_code  ORDER BY count( *) DESC LIMIT 1    "
SELECT club.ClubDesc FROM Club WHERE club.ClubName = 'Tennis Club'       
SELECT river.river_name FROM river WHERE river.length = (SELECT min( river.length) FROM river        )       
SELECT count( *) FROM Video_Games        
SELECT count( *) FROM GEOGRAPHIC        
SELECT sum( tip.likes) FROM tip JOIN user ON tip.user_id = user.user_id WHERE user.name = 'Niloofar'       
SELECT DISTINCT club.ClubName FROM Club JOIN Member_of_club ON club.ClubID = Member_of_club.ClubID JOIN Student ON Member_of_club.StuID = student.StuID WHERE student.city_code = 'BAL'       
SELECT count( *) FROM city WHERE city.County_ID in (SELECT county_public_safety.County_ID FROM county_public_safety WHERE county_public_safety.Population > 20000       )       
SELECT candidate.Poll_Source FROM candidate    ORDER BY candidate.Oppose_rate DESC LIMIT 1    
SELECT basketball_match.ACC_Percent FROM basketball_match    ORDER BY basketball_match.ACC_Percent DESC LIMIT 1    
SELECT artist.Age FROM artist        
SELECT tracks.unit_price FROM tracks WHERE tracks.name = 'Fast As a Shark'       
SELECT count( *) FROM GEOGRAPHIC        
SELECT count( *) FROM Student JOIN Lives_in ON student.StuID = Lives_in.stuid JOIN Dorm ON Lives_in.dormid = dorm.dormid WHERE dorm.dorm_name = 'Smith Hall' and student.Sex = 'F'       
SELECT count( state.state_name) FROM state        
SELECT count( *) FROM state        
SELECT publication.title FROM publication JOIN publication_keyword ON publication.pid = publication_keyword.pid JOIN keyword ON publication_keyword.kid = keyword.kid WHERE keyword.keyword = 'Natural Language'       
SELECT sum( documents.access_count) FROM Documents    ORDER BY count( *) DESC LIMIT 1    
SELECT count( *) FROM Customers WHERE customers.customer_id NOT IN (SELECT accounts.customer_id FROM Accounts        )       
"SELECT exhibition.Theme, artist.Name FROM exhibition JOIN artist ON exhibition.Artist_ID = artist.Artist_ID WHERE exhibition.Ticket_Price > (SELECT avg( exhibition.Ticket_Price) FROM exhibition        )       "
SELECT catalog_structure.catalog_level_name FROM Catalog_Structure JOIN Catalog_Contents ON catalog_structure.catalog_level_number = catalog_contents.catalog_level_number    ORDER BY catalog_contents.price_in_dollars ASC LIMIT 1    
"SELECT max( bridge.length_meters), architect.name FROM bridge JOIN architect ON bridge.architect_id = architect.id  GROUP BY architect.name      "
SELECT count( *) FROM venue        
SELECT products.Product_Name FROM Products     ORDER BY products.Product_Price ASC   
SELECT DISTINCT count(DISTINCT claims_processing.Claim_Outcome_Code) FROM Claims_Processing        
SELECT highlow.lowest_point FROM highlow WHERE highlow.state_name in (SELECT river.traverse FROM river WHERE river.river_name = '1'       )   ORDER BY highlow.lowest_elevation ASC LIMIT 1    
SELECT instructor.name FROM instructor JOIN department ON instructor.dept_name = department.dept_name JOIN course ON department.dept_name = course.dept_name JOIN section ON course.course_id = section.course_id JOIN teaches ON section.course_id = T3.course_id WHERE course.title = '1'       
SELECT station.Name FROM station JOIN train_station ON station.Station_ID = T2.Station_ID  GROUP BY station.Name HAVING count( *) >= 2     
SELECT airports.name FROM airports WHERE airports.city = 'Goroka'       
SELECT sum( state.area) FROM state        
SELECT DISTINCT count(DISTINCT author.name) FROM author JOIN domain_author ON author.aid = domain_author.aid JOIN domain ON domain_author.did = domain.did JOIN organization WHERE domain.name = '1' and T2.name = '1'       
SELECT state.state_name FROM state WHERE state.population = (SELECT max( state.population) FROM state        )       
SELECT count( *) FROM salary JOIN team WHERE team.name = 'Boston Red Stockings' and salary.year = 2000       
"SELECT employees.FIRST_NAME, employees.LAST_NAME, employees.HIRE_DATE FROM employees WHERE employees.DEPARTMENT_ID = (SELECT employees.DEPARTMENT_ID FROM employees WHERE employees.FIRST_NAME = 'Clara'       )       "
"SELECT max( results.fastestLapSpeed), races.name, races.year FROM results JOIN races ON results.raceId = races.raceId WHERE races.year > 1 GROUP BY results.raceId   ORDER BY races.year ASC   "
SELECT product_suppliers.product_id FROM Product_Suppliers    ORDER BY product_suppliers.total_amount_purchased DESC LIMIT 1    
SELECT avg( artist.Age) FROM artist        
SELECT count( *) FROM Student WHERE student.Sex = 'M' and student.StuID in (SELECT has_allergy.StuID FROM Has_Allergy JOIN Allergy_Type ON has_allergy.Allergy = allergy_type.Allergy WHERE allergy_type.AllergyType = 'food'       )       
SELECT problems.problem_id FROM Problems JOIN Product ON problems.product_id = product.product_id WHERE product.product_name = 'voluptatem' and problems.date_problem_reported > '1995'       
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Liwen Xiong' and paper.year = 2015       
SELECT sum( projects.Hours) FROM Projects        
"SELECT movie.title, rating.mID FROM Movie JOIN Rating ON movie.mID = rating.mID  GROUP BY rating.mID  ORDER BY count( *) DESC LIMIT 1    "
SELECT actor.name FROM actor JOIN cast ON actor.aid = cast.aid JOIN movie WHERE cast.role = Alan Turing and movie.title = 'The Imitation Game'       
"SELECT music_festival.Result, count( *) FROM music_festival  GROUP BY music_festival.Result   ORDER BY count( *) DESC   "
SELECT instructor.name FROM instructor JOIN department ON instructor.dept_name = department.dept_name JOIN course ON department.dept_name = course.dept_name JOIN section ON course.course_id = section.course_id JOIN teaches ON section.course_id = T3.course_id WHERE course.title = '1'       
"SELECT player.Player, player.Years_Played FROM player        "
SELECT count( *) FROM venue        
SELECT actor.name FROM actor JOIN cast ON actor.aid = cast.aid JOIN movie WHERE cast.role = Alan Turing and movie.title = 'The Imitation Game'       
SELECT pilot.Name FROM pilot WHERE pilot.Pilot_Id NOT IN (SELECT match.Winning_Pilot FROM match WHERE match.Country = 'Australia'       )       
SELECT DISTINCT count(DISTINCT songs.Title) FROM Songs JOIN Vocals ON songs.SongId = vocals.SongId WHERE vocals.Type = '1'       
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId JOIN venue ON paper.venueId = venue.venueId WHERE key_phrase.keyphraseName = '1' and paper.year = 1 and venue.venueName = '1'       
SELECT sum( bank.no_of_customers) FROM bank        
SELECT river.length FROM river WHERE river.length = (SELECT max( river.length) FROM river        )       
SELECT DISTINCT instruments.Instrument FROM Instruments        
"SELECT employees.first_name, employees.last_name FROM employees JOIN customers ON employees.id = customers.support_rep_id  GROUP BY employees.reports_to  ORDER BY count( *) DESC LIMIT 1    "
SELECT captain.Name FROM captain WHERE captain.Rank = 'Midshipman' or captain.Rank = 'Lieutenant'       
"SELECT people.Hometown, count( *) FROM people JOIN gymnast ON people.People_ID = gymnast.Gymnast_ID  GROUP BY people.Hometown      "
SELECT problems.problem_description FROM Problems JOIN Staff ON problems.reported_by_staff_id = staff.staff_id WHERE staff.staff_first_name = 'Christop'       
"SELECT sum( claim_headers.Amount_Piad), avg( claim_headers.Amount_Piad) FROM Claim_Headers        "
"SELECT DISTINCT cite.citedPaperId, count(DISTINCT cite.citedPaperId) FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' GROUP BY cite.citedPaperId   ORDER BY count( cite.citedPaperId) DESC   "
SELECT count( *) FROM GEOGRAPHIC        
"SELECT wrestler.Name, elimination.Elimination_Move FROM wrestler JOIN Elimination ON wrestler.Wrestler_ID = elimination.Wrestler_ID        "
SELECT products.product_name FROM Products        EXCEPT SELECT products.product_name FROM Products JOIN Order_Items ON products.product_id = T3.product_id        
"SELECT artist.artist_name, count( *) FROM artist  GROUP BY artist.artist_name  ORDER BY count( *) DESC LIMIT 1    "
SELECT participates_in.stuid FROM Participates_in      INTERSECT SELECT student.StuID FROM Student WHERE student.Age < 20         
SELECT river.river_name FROM river WHERE river.length = (SELECT max( river.length) FROM river WHERE river.traverse = '1'       ) and river.traverse = '1'       
SELECT avg( wine.Price) FROM wine WHERE wine.Appelation NOT IN (SELECT appellations.Appelation FROM appellations JOIN wine ON appellations.Appelation = T23.Appelation WHERE appellations.County = 'Sonoma'       )       
SELECT races.name FROM races WHERE races.year = 2017       
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' and paper.journalId >= 1       
SELECT races.name FROM races WHERE races.time > '1' or races.time < '1'       
"SELECT album.Title, track.AlbumId, count( *) FROM Album JOIN Track ON album.AlbumId = track.AlbumId  GROUP BY track.AlbumId      "
SELECT cinema.Location FROM cinema WHERE cinema.Openning_year >= 2010 GROUP BY cinema.Location  ORDER BY count( *) DESC LIMIT 1    
"SELECT employees.FIRST_NAME, employees.LAST_NAME, employees.SALARY FROM employees WHERE employees.FIRST_NAME like '%m%'       "
SELECT DISTINCT customer_addresses.address_type_code FROM Customer_Addresses        
SELECT branch.Name FROM branch JOIN purchase ON branch.Branch_ID = purchase.Branch_ID JOIN member ON purchase.Member_ID = member.Member_ID WHERE member.Hometown = '1'     INTERSECT SELECT branch.Name FROM branch JOIN purchase ON branch.Branch_ID = purchase.Branch_ID JOIN member ON purchase.Member_ID = member.Member_ID WHERE member.Hometown = '1'         
SELECT DISTINCT count(DISTINCT bank.city) FROM bank        
"SELECT editor.Age, count( *) FROM editor  GROUP BY editor.Age      "
SELECT instructor.dept_name FROM instructor  GROUP BY instructor.dept_name  ORDER BY avg( instructor.salary) DESC LIMIT 1    
"SELECT DISTINCT authors.fname, authors.lname FROM Authors JOIN Authorship ON authors.authID = Authorship.authID JOIN Inst ON Authorship.instID = institution.instID WHERE institution.name = 'University of Oxford'       "
"SELECT DISTINCT author.authorName, paper.paperId FROM author JOIN writes ON author.authorId = writes.authorId JOIN paper ON writes.paperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE author.authorName != '1' and key_phrase.keyphraseName = '1'       "
SELECT count( *) FROM park WHERE park.state = 'NY'       
SELECT club.name FROM club     ORDER BY club.Start_year ASC   
SELECT avg( apartments.room_count) FROM Apartments JOIN Apartment_Bookings ON apartments.apt_id = apartment_bookings.apt_id WHERE apartment_bookings.booking_status_code = 'Provisional'       
SELECT course.CName FROM Course WHERE course.Credits = 1       
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Liwen Xiong' and paper.year = 2015       
"SELECT count( *), dorm.dormid FROM Dorm WHERE dorm.student_capacity > 100 GROUP BY dorm.dormid      "
SELECT DISTINCT physician.Name FROM Physician JOIN Prescribes ON physician.EmployeeID = Prescribes.Physician JOIN Medication ON Prescribes.Medication = medication.Code WHERE medication.Name = 'Thesisin'       
SELECT river.length FROM river WHERE river.river_name = '1'       
SELECT state.capital FROM state WHERE state.state_name in (SELECT river.traverse FROM river WHERE river.length = (SELECT max( river.length) FROM river        )       )       
SELECT instruments.Instrument FROM Instruments  GROUP BY instruments.Instrument  ORDER BY count( *) DESC LIMIT 1    
"SELECT DISTINCT order_items.product_id, count(DISTINCT order_items.order_id) FROM Order_Items  GROUP BY order_items.product_id      "
"SELECT sum( course.CRS_CREDIT), course.DEPT_CODE FROM COURSE JOIN CLASS ON course.CRS_CODE = T2.CRS_CODE  GROUP BY course.DEPT_CODE      "
SELECT city.city_name FROM city WHERE city.state_name = '1'       
SELECT avg( party.Number_of_hosts) FROM party        
"SELECT company.Main_Industry, count( *) FROM company  GROUP BY company.Main_Industry  ORDER BY sum( company.Market_Value) DESC LIMIT 1    "
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1'       "
SELECT papers.title FROM Papers JOIN Authorship ON papers.paperID = authorship_count.paperID JOIN Inst ON authorship_count.instID = institution.instID JOIN Authors ON authorship_count.authID = authors.authID WHERE institution.country = 'USA' and authorship_count.authOrder = 2 and authors.lname = 'Turon'       
SELECT count( *) FROM customer WHERE customer.active = 1       
SELECT count( state.state_name) FROM state        
SELECT artist.Name FROM artist    ORDER BY artist.Year_Join DESC LIMIT 1    
SELECT producer.name FROM producer JOIN made_by ON producer.pid = made_by.pid JOIN copyright ON made_by.msid = copyright.msid JOIN directed_by ON copyright.msid = directed_by.msid JOIN director ON directed_by.did = director.did JOIN movie  GROUP BY producer.name  ORDER BY count( director.name) DESC LIMIT 1    
SELECT count( city.city_name) FROM city        
"SELECT department.DName, department.Room FROM Department JOIN Course ON department.DNO = course.DNO WHERE course.CName = 'INTRODUCTION TO COMPUTER SCIENCE'       "
SELECT club.ClubDesc FROM Club WHERE club.ClubName = 'Pen and Paper Gaming'       
SELECT wine.Name FROM wine WHERE wine.Price > (SELECT max( wine.Price) FROM wine WHERE wine.Year = 2006       )       
SELECT * FROM employees WHERE employees.SALARY between (SELECT min( employees.SALARY) FROM employees        )       
SELECT activity.activity_name FROM Activity JOIN Faculty_Participates_in ON activity.actid = Faculty_Participates_in.actid JOIN Faculty ON Faculty_Participates_in.FacID = faculty.FacID WHERE faculty.Fname = 'Mark' and faculty.Lname = 'Giuliano'       
SELECT count( *) FROM Student        
SELECT city.population FROM city WHERE city.city_name = '1'       
SELECT musical.Nominee FROM musical WHERE musical.Award = '1' or musical.Award = '1'       
SELECT climber.Name FROM climber     ORDER BY climber.Points DESC   
SELECT DISTINCT wrestler.Reign FROM wrestler WHERE wrestler.Location != '1'       
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = 'Question Answering'       
SELECT city.Official_Name FROM city     ORDER BY city.Population DESC   
SELECT document_structures.document_structure_description FROM Document_Structures JOIN Documents ON document_structures.document_structure_code = documents.document_structure_code  GROUP BY document_structures.document_structure_description  ORDER BY count( *) DESC LIMIT 1    
"SELECT player.name_first, player.name_last, player.player_id FROM player JOIN player_award ON player.player_id = player_award.player_id  GROUP BY player_award.player_id  ORDER BY count( *) DESC LIMIT 1    "
SELECT count( *) FROM Products WHERE products.product_id NOT IN (SELECT order_items.product_id FROM Order_Items        )       
SELECT DISTINCT count(DISTINCT author.name) FROM author JOIN writes ON author.aid = writes.aid JOIN publication ON writes.pid = publication.pid WHERE publication.title = '1'       
SELECT employee.name FROM employee JOIN certificate ON employee.eid = certificate.eid JOIN aircraft ON certificate.aid = aircraft.aid WHERE aircraft.distance > 5000 GROUP BY employee.name  ORDER BY count( *) DESC LIMIT 1    
SELECT DISTINCT individuals.individual_last_name FROM Individuals JOIN Organization_Contact_Individuals ON individuals.individual_id = T2.individual_id        
"SELECT min( instructor.salary), instructor.dept_name FROM instructor  GROUP BY instructor.dept_name HAVING avg( instructor.salary) > (SELECT avg( instructor.salary) FROM instructor        )     "
SELECT avg( student.Age) FROM Student JOIN Voting_record ON student.StuID = voting_record.Class_Senator_Vote WHERE student.Sex = 'F' and voting_record.Election_Cycle = 'Spring'       
"SELECT student_course_enrolment.student_id, students.login_name FROM Student_Course_Enrolment JOIN Students ON student_course_enrolment.student_id = students.student_id JOIN Courses ON student_course_enrolment.course_id = courses.course_id  GROUP BY student_course_enrolment.student_id  ORDER BY count( *) DESC LIMIT 1    "
"SELECT employees.first_name, employees.last_name, count( employees.reports_to) FROM employees  GROUP BY employees.last_name  ORDER BY count( employees.reports_to) DESC LIMIT 1    "
SELECT weather.date FROM weather WHERE weather.zip_code = 94107 and weather.events != 'Fog' and weather.events != 'Rain'       
SELECT sum( lessons.lesson_time) FROM Lessons JOIN Staff ON lessons.staff_id = staff.staff_id WHERE staff.first_name = 'Janessa' and staff.last_name = 'Sawayn'       
SELECT movie.title FROM cast JOIN actor ON T2.aid = actor.aid JOIN movie WHERE actor.name = 'Robin Wright'       
SELECT count( *) FROM Ref_Characteristic_Types        
"SELECT country.Country_name, count( *) FROM country JOIN match_season ON country.Country_id = match_season.Country JOIN team ON match_season.Team = team.Team_id  GROUP BY country.Country_name      "
"SELECT party.Party_Theme, party.Location FROM party        "
SELECT DISTINCT tryout.cName FROM Tryout     ORDER BY tryout.cName ASC   
"SELECT avg( wine.Price), wine.Year FROM wine  GROUP BY wine.Year      "
SELECT county_public_safety.Name FROM county_public_safety     ORDER BY county_public_safety.Population DESC   
"SELECT pilot.Pilot_name, count( *) FROM pilot JOIN pilot_record ON pilot.Pilot_ID = pilot_record.Pilot_ID  GROUP BY pilot.Pilot_name      "
"SELECT song.f_id, song.genre_is, song.artist_name FROM song WHERE song.languages = 'english'    ORDER BY song.rating ASC   "
"SELECT browser.id, browser.name FROM browser JOIN accelerator_compatible_browser ON browser.id = T3.browser_id JOIN Web_client_accelerator ON T3.accelerator_id = web_client_accelerator.id  GROUP BY T3.browser_id  ORDER BY count( *) DESC LIMIT 1    "
"SELECT count( *), broadcast.Time_of_day FROM program JOIN broadcast ON program.Program_ID = broadcast.Program_ID  GROUP BY broadcast.Time_of_day      "
SELECT employees.JOB_ID FROM employees  GROUP BY employees.JOB_ID HAVING avg( employees.SALARY) > 8000     
SELECT DISTINCT count(DISTINCT advisor.s_ID) FROM advisor        
"SELECT DISTINCT count(DISTINCT paper.paperId), paper.year FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName like '%Ye Cao%' GROUP BY paper.year   ORDER BY count( paper.paperId) DESC   "
SELECT DISTINCT writes.authorId FROM writes JOIN paper ON writes.paperId = paper.paperId JOIN venue ON paper.venueId = venue.venueId WHERE venue.venueName = 'NIPS'       
SELECT city.city_name FROM city WHERE city.population > 1 and city.state_name = '1'       
SELECT products.Product_Price FROM Products WHERE products.Product_Name = 'Dining' or products.Product_Name = 'Trading Policy'       
SELECT video_games.GType FROM Video_Games  GROUP BY video_games.GType  ORDER BY count( *) ASC LIMIT 1    
"SELECT max( rating.stars), movie.year FROM Rating JOIN Movie ON rating.mID = movie.mID WHERE movie.year = (SELECT max( movie.year) FROM Movie        ) GROUP BY movie.year      "
SELECT artist.artist_name FROM artist WHERE artist.country = 'UK'     INTERSECT SELECT artist.artist_name FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.languages = 'english'         
"SELECT courses.course_name, count( *) FROM Courses JOIN Student_Course_Enrolment ON courses.course_id = Student_Course_Enrolment.course_id JOIN Students ON Student_Course_Enrolment.student_id = students.student_id  GROUP BY courses.course_name      "
SELECT DISTINCT tryout.cName FROM Tryout     ORDER BY tryout.cName ASC   
"SELECT courses.course_name, count( *) FROM Courses JOIN Student_Course_Enrolment ON courses.course_id = Student_Course_Enrolment.course_id JOIN Students ON Student_Course_Enrolment.student_id = students.student_id  GROUP BY courses.course_name      "
"SELECT rooms.RoomId, rooms.roomName FROM Rooms    ORDER BY rooms.basePrice DESC LIMIT 1    "
SELECT tracks.milliseconds FROM tracks WHERE tracks.name = 'Fast As a Shark'       
SELECT products.product_category_code FROM Products WHERE products.product_name = 'flax'       
SELECT roles.role_code FROM Roles        
"SELECT faculty.Fname, faculty.Lname, count( *), faculty.FacID FROM Faculty JOIN Faculty_Participates_in ON faculty.FacID = Faculty_Participates_in.FacID JOIN Activity ON Faculty_Participates_in.actid = activity.actid  GROUP BY faculty.FacID      "
SELECT DISTINCT movie.director FROM Movie JOIN Rating ON movie.mID = Rating.mID JOIN Reviewer ON Rating.rID = reviewer.rID WHERE reviewer.name = 'Sarah Martinez'       
SELECT DISTINCT * FROM employees WHERE employees.EMPLOYEE_ID = 1       
SELECT students.login_name FROM Students WHERE students.family_name = 'Ward'       
SELECT avg( submission.Scores) FROM submission        
"SELECT artist.Name, count( *) FROM artist JOIN exhibition ON artist.Artist_ID = exhibition.Artist_ID  GROUP BY artist.Name      "
SELECT papers.title FROM Papers JOIN Authorship ON papers.paperID = authorship_count.paperID JOIN Inst ON authorship_count.instID = institution.instID JOIN Authors ON authorship_count.authID = authors.authID WHERE institution.country = 'USA' and authorship_count.authOrder = 2 and authors.lname = 'Turon'       
"SELECT pilot.Name, pilot.Age FROM pilot JOIN match ON pilot.Pilot_Id = T2.Winning_Pilot    ORDER BY pilot.Age ASC LIMIT 1    "
SELECT organisation_types.organisation_type_description FROM Organisation_Types JOIN Organisations ON organisation_types.organisation_type = organisations.organisation_type WHERE organisations.organisation_details = 'quo'       
SELECT tracks.name FROM tracks JOIN genres ON tracks.genre_id = genres.id JOIN media_types ON tracks.media_type_id = media_types.id WHERE genres.name = 'Rock' and media_types.name = 'MPEG audio file'       
"SELECT avg( building.Floors), max( building.Floors), min( building.Floors) FROM building        "
"SELECT guests.gender_code, count( *) FROM Guests  GROUP BY guests.gender_code   ORDER BY count( *) DESC   "
SELECT member.Membership_card FROM member  GROUP BY member.Membership_card HAVING count( *) > 5     
"SELECT DISTINCT author.authorName, paper.paperId FROM author JOIN writes ON author.authorId = writes.authorId JOIN paper ON writes.paperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE author.authorName != '1' and key_phrase.keyphraseName = '1'       "
"SELECT dorm.student_capacity, dorm.gender FROM Dorm WHERE dorm.dorm_name like '%Donor%'       "
SELECT count( *) FROM author        
SELECT lake.lake_name FROM lake WHERE lake.state_name in (SELECT border_info.border FROM border_info WHERE border_info.state_name = '1'       )       
"SELECT customers_cards.customer_id, count( *) FROM Customers_Cards  GROUP BY customers_cards.customer_id      "
SELECT count( *) FROM Students WHERE students.student_id NOT IN (SELECT student_course_enrolment.student_id FROM Student_Course_Enrolment        )       
"SELECT reference_service_types.Service_Type_Description, services.Service_Type_Code, count( *) FROM Ref_Service_Types JOIN Services ON reference_service_types.Service_Type_Code = services.Service_Type_Code  GROUP BY services.Service_Type_Code      "
SELECT technician.Name FROM technician JOIN repair_assignment ON technician.technician_id = repair_assignment.technician_id JOIN machine ON repair_assignment.Machine_ID = machine.Machine_ID     ORDER BY machine.quality_rank ASC   
SELECT people.Country FROM people WHERE people.Age < 25     INTERSECT SELECT people.Country FROM people WHERE people.Age > 30         
SELECT appellations.Area FROM appellations JOIN wine ON appellations.Appelation = wine.Appelation WHERE wine.Year < 2010 GROUP BY appellations.Area  ORDER BY count( *) DESC LIMIT 1    
SELECT DISTINCT count(DISTINCT advisor.s_ID) FROM advisor        
SELECT DISTINCT paper.venueId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1' and paper.year = 1       
SELECT customers.customer_name FROM Customers JOIN Customer_Orders ON customers.customer_id = Customer_Orders.customer_id JOIN Order_Items ON Customer_Orders.order_id = order_items.order_id  GROUP BY customers.customer_name  ORDER BY sum( order_items.order_quantity) DESC LIMIT 1    
SELECT train.name FROM train JOIN route ON train.id = T3.train_id  GROUP BY train.name  ORDER BY count( *) DESC LIMIT 1    
"SELECT company.Headquarters, count( *) FROM company  GROUP BY company.Headquarters      "
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId JOIN venue ON paper.venueId = venue.venueId WHERE key_phrase.keyphraseName = '1' and paper.year = 1 and venue.venueName = '1'       
"SELECT branch.Name, branch.Open_year FROM branch JOIN membership_register_branch ON branch.Branch_ID = membership_register_branch.Branch_ID WHERE membership_register_branch.Register_Year = '2016' GROUP BY membership_register_branch.Branch_ID  ORDER BY count( *) DESC LIMIT 1    "
"SELECT DISTINCT paper.paperId, paper.year FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       "
SELECT patient.Name FROM Patient JOIN Appointment ON patient.SSN = T2.Patient        
"SELECT companies.name, buildings.name FROM Companies JOIN Office_locations ON companies.id = Office_locations.company_id JOIN buildings ON Office_locations.building_id = buildings.id        "
"SELECT employee.EMP_FNAME, course.CRS_DESCRIPTION FROM EMPLOYEE JOIN CLASS ON employee.EMP_NUM = CLASS.PROF_NUM JOIN COURSE ON CLASS.CRS_CODE = course.CRS_CODE        "
"SELECT DISTINCT staff.staff_first_name, staff.staff_last_name FROM Staff JOIN Problem_Log ON staff.staff_id = problem_log.assigned_to_staff_id WHERE problem_log.problem_id = 1       "
"SELECT campuses.Campus, sum( degrees.Degrees) FROM Campuses JOIN degrees ON campuses.Id = degrees.Campus WHERE campuses.County = 'Orange' and degrees.Year >= 2000 GROUP BY campuses.Campus      "
"SELECT student.Fname, student.Major FROM Student WHERE student.StuID NOT IN (SELECT has_allergy.StuID FROM Has_Allergy WHERE has_allergy.Allergy = '1'       )       "
SELECT member.Name FROM member WHERE member.Member_ID NOT IN (SELECT membership_register_branch.Member_ID FROM membership_register_branch        )       
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId JOIN venue ON paper.venueId = venue.venueId WHERE key_phrase.keyphraseName = 'TAIL' and venue.venueName = 'NIPS'       
"SELECT wrestler.Name, elimination.Team FROM wrestler JOIN Elimination ON wrestler.Wrestler_ID = elimination.Wrestler_ID     ORDER BY wrestler.Days_held DESC   "
SELECT customers.customer_name FROM Customers JOIN Customer_Orders ON customers.customer_id = Customer_Orders.customer_id JOIN Order_Items ON Customer_Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = products.product_id WHERE products.product_details = 'Latte'     INTERSECT SELECT customers.customer_name FROM Customers JOIN Customer_Orders ON customers.customer_id = Customer_Orders.customer_id JOIN Order_Items ON Customer_Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = products.product_id WHERE products.product_details = 'Americano'         
SELECT sum( district.City_Population) FROM district WHERE district.City_Area > (SELECT avg( district.City_Area) FROM district        )       
"SELECT wine.Grape, wine.Winery, wine.Year FROM wine WHERE wine.Price > 100    ORDER BY wine.Year ASC   "
"SELECT player.Gender, player.Occupation FROM player        "
SELECT publication.title FROM publication JOIN journal ON publication.jid = journal.jid JOIN publication_keyword ON publication.pid = publication_keyword.pid JOIN keyword ON publication_keyword.kid = keyword.kid WHERE journal.name = '1' and keyword.keyword = '1'       
SELECT city.state_name FROM city WHERE city.city_name = '1'       
SELECT student.Fname FROM Student WHERE student.Age > 22       
SELECT DISTINCT individuals.individual_last_name FROM Individuals JOIN Organization_Contact_Individuals ON individuals.individual_id = T2.individual_id        
"SELECT airports.name, airports.city, airports.country FROM airports    ORDER BY airports.elevation ASC LIMIT 1    "
SELECT department.DEPT_ADDRESS FROM DEPARTMENT WHERE department.DEPT_NAME = 'History'       
SELECT publication.Publication_Date FROM publication  GROUP BY publication.Publication_Date  ORDER BY count( *) DESC LIMIT 1    
SELECT count( *) FROM weather WHERE weather.mean_humidity > 50 and weather.mean_visibility_miles > 8       
"SELECT student.Fname, student.LName FROM Student JOIN Member_of_club ON student.StuID = member_of_club.StuID JOIN Club ON member_of_club.ClubID = club.ClubID WHERE club.ClubName = 'Hopkins Student Enterprises' and member_of_club.Position = 'CTO'       "
SELECT DISTINCT count(DISTINCT instruments.Instrument) FROM Instruments JOIN Songs ON instruments.SongId = songs.SongId WHERE songs.Title = 'Badlands'       
SELECT customers.state FROM Customers  GROUP BY customers.state  ORDER BY count( *) ASC LIMIT 1    
SELECT count( *) FROM Campuses        
"SELECT trip.start_station_name, trip.start_station_id FROM trip WHERE trip.start_date like '%1%' GROUP BY trip.start_station_name, trip.start_station_id  ORDER BY count( *) DESC LIMIT 1    "
SELECT course.dept_name FROM course  GROUP BY course.dept_name  ORDER BY sum( course.credits) DESC LIMIT 1    
SELECT author.name FROM author JOIN domain_author ON author.aid = domain_author.aid JOIN domain ON domain_author.did = domain.did JOIN organization WHERE domain.name = '1' and T2.name = '1'       
SELECT count( *) FROM College WHERE college.enr > 15000       
"SELECT parties.payment_method_code, parties.party_phone FROM Parties WHERE parties.party_email = 'enrico09@example.com'       "
SELECT DISTINCT addresses.city FROM Addresses JOIN People_Addresses ON addresses.address_id = T3.address_id JOIN People ON T3.person_id = People.person_id JOIN Students ON People.person_id = students.student_id        
"SELECT max( airport.Transit_Passengers), min( airport.Transit_Passengers) FROM airport        "
SELECT DISTINCT count(DISTINCT photos.camera_lens_id) FROM photos JOIN mountain ON photos.mountain_id = mountain.id WHERE mountain.Country = 'Ethiopia'       
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE restaurant.CITY_NAME in (SELECT geographic.CITY_NAME FROM GEOGRAPHIC WHERE geographic.REGION = '1'       )       "
SELECT avg( apartments.bedroom_count) FROM Apartments        
SELECT DISTINCT count(DISTINCT bank.state) FROM bank        
SELECT count( *) FROM actor        
"SELECT DISTINCT physician.Name, physician.Position FROM Physician JOIN Prescribes ON physician.EmployeeID = Prescribes.Physician JOIN Medication ON Prescribes.Medication = medication.Code WHERE medication.Brand = '1'       "
SELECT DISTINCT player.pName FROM Player WHERE player.pName like '%a%'       
SELECT media_type.Name FROM MediaType JOIN Track ON media_type.MediaTypeId = track.MediaTypeId  GROUP BY media_type.Name  ORDER BY count( *) ASC LIMIT 1    
SELECT street_markets.Market_Details FROM Street_Markets JOIN Tourist_Attractions ON street_markets.Market_ID = tourist_attractions.Tourist_Attraction_ID WHERE tourist_attractions.How_to_Get_There = 'walk' or tourist_attractions.How_to_Get_There = 'bus'       
"SELECT camera_lens.name, count( *) FROM camera_lens JOIN photos ON camera_lens.id = photos.camera_lens_id  GROUP BY camera_lens.name   ORDER BY count( *) ASC   "
SELECT sum( salary.salary) FROM salary JOIN player WHERE player.name_first = 'Len' and player.name_last = 'Barker' and salary.year between 1985 AND 1990       
SELECT count( *) FROM Ref_Colors        
"SELECT avg( station.lat), avg( station.long) FROM trip JOIN station        "
SELECT DISTINCT songs.Title FROM Songs JOIN Vocals ON songs.SongId = T2.SongId        EXCEPT SELECT songs.Title FROM Songs JOIN Vocals ON songs.SongId = vocals.SongId WHERE vocals.Type = '1'       
SELECT state.state_name FROM state WHERE state.population = (SELECT max( state.population) FROM state        )       
SELECT DISTINCT count(DISTINCT order_items.product_id) FROM Order_Items JOIN Customer_Orders ON order_items.order_id = Customer_Orders.order_id JOIN Customers ON Customer_Orders.customer_id = customers.customer_id WHERE customers.customer_name = 'Rodrick Heaney'       
"SELECT employees.JOB_ID, employees.HIRE_DATE FROM employees WHERE employees.HIRE_DATE between '2007-11-05' AND '2009-07-05'       "
"SELECT customers.Customer_Phone, customers.Customer_Email_Address FROM Customers WHERE customers.Customer_Name = 'Harold'       "
"SELECT accounts.account_name, financial_transactions.account_id, count( *) FROM Accounts JOIN Financial_Transactions ON accounts.account_id = financial_transactions.account_id  GROUP BY financial_transactions.account_id      "
SELECT song.song_name FROM song JOIN files ON song.f_id = files.f_id WHERE files.formats = 'mp3'     INTERSECT SELECT song.song_name FROM song WHERE song.resolution < 1000         
SELECT customers.customer_name FROM Customers WHERE customers.payment_method = 'Cash'       
"SELECT DISTINCT count(DISTINCT cite.citingPaperId), paper.paperId FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 2014 and venue.venueName = 'TACL' GROUP BY paper.paperId   ORDER BY count( cite.citingPaperId) DESC   "
SELECT DISTINCT count(DISTINCT customer.acc_type) FROM customer        
SELECT instructor.name FROM instructor    ORDER BY instructor.salary DESC LIMIT 1    
SELECT department.DEPT_NAME FROM DEPARTMENT     ORDER BY department.DEPT_NAME ASC   
"SELECT customers.payment_method_code, count( *) FROM Customers  GROUP BY customers.payment_method_code      "
"SELECT customer_contact_channels.channel_code, customer_contact_channels.contact_number FROM Customer_Contact_Channels WHERE customer_contact_channels.active_to_date = (SELECT customer_contact_channels.active_to_date FROM Customer_Contact_Channels    ORDER BY customer_contact_channels.active_to_date DESC LIMIT 1    )       "
SELECT staff.gender FROM Staff  GROUP BY staff.gender  ORDER BY count( *) DESC LIMIT 1    
SELECT documents.document_type_code FROM Documents  GROUP BY documents.document_type_code HAVING count( *) > 2     
SELECT routes.rid FROM routes WHERE routes.dst_apid in (SELECT airports.apid FROM airports WHERE airports.country = 'United States'       ) and routes.src_apid in (SELECT airports.apid FROM airports WHERE airports.country = 'United States'       )       
SELECT wine.Winery FROM wine JOIN grapes ON wine.Grape = grapes.Grape WHERE grapes.Color = '1' GROUP BY wine.Winery  ORDER BY count( *) DESC LIMIT 1    
SELECT swimmer.name FROM swimmer JOIN record ON swimmer.ID = record.Swimmer_ID WHERE record.Result = 'Win'     INTERSECT SELECT swimmer.name FROM swimmer JOIN record ON swimmer.ID = record.Swimmer_ID WHERE record.Result = 'Loss'         
SELECT count( *) FROM Documents        
SELECT financial_transactions.account_id FROM Financial_Transactions  GROUP BY financial_transactions.account_id  ORDER BY count( *) DESC LIMIT 1    
SELECT DISTINCT paper.paperId FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE venue.venueName = '1'       
SELECT shop.Shop_Name FROM shop     ORDER BY shop.Open_Year ASC   
SELECT actor.name FROM actor WHERE actor.birth_year = 1984       
"SELECT actor.Name, musical.Name FROM musical JOIN actor        "
SELECT organizations.organization_name FROM Organizations WHERE organizations.organization_name like '%Party%'       
"SELECT book_club.Book_Title, book_club.Author_or_Editor FROM book_club WHERE book_club.Year > 1989       "
SELECT count( *) FROM Companies        
SELECT city.city_name FROM city WHERE city.population > 1       
SELECT DISTINCT count(DISTINCT photos.Name) FROM Photos        
SELECT movie.title FROM classification JOIN genre ON T2.gid = genre.gid JOIN movie WHERE genre.genre = 'Sci-Fi' and movie.release_year = 2010       
SELECT wrestler.Name FROM wrestler WHERE wrestler.Wrestler_ID NOT IN (SELECT elimination.Wrestler_ID FROM Elimination        )       
SELECT avg( college.enr) FROM College WHERE college.state = 'FL'       
"SELECT parties.payment_method_code, parties.party_phone FROM Parties WHERE parties.party_email = 'enrico09@example.com'       "
"SELECT apartments.apt_type_code, max( apartments.room_count), min( apartments.room_count) FROM Apartments  GROUP BY apartments.apt_type_code      "
SELECT person.name FROM Person WHERE person.age = (SELECT max( person.age) FROM Person        )       
"SELECT DISTINCT count(DISTINCT cite.citingPaperId), writes.authorId FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN venue ON paper.venueId = venue.venueId WHERE venue.venueName = 'CVPR' GROUP BY writes.authorId   ORDER BY count( cite.citingPaperId) DESC   "
"SELECT captain.Name, captain.Class, captain.Rank FROM captain        "
SELECT avg( gymnast.Horizontal_Bar_Points) FROM gymnast        
SELECT manager.Country FROM manager WHERE manager.Age > 50 or manager.Age < 46       
"SELECT count( *), student.Sex FROM Student WHERE student.Age > (SELECT avg( student.Age) FROM Student        ) GROUP BY student.Sex      "
SELECT orders.order_id FROM Orders    ORDER BY orders.date_order_placed DESC LIMIT 1    
SELECT rooms.roomName FROM Rooms JOIN Reservations ON rooms.RoomId = reservations.Room  GROUP BY rooms.roomName  ORDER BY count( *) DESC LIMIT 1    
"SELECT reference_calendar.Day_Number, all_documents.Date_Stored FROM Ref_Calendar JOIN All_Documents ON reference_calendar.Calendar_Date = all_documents.Date_Stored        "
"SELECT customers.first_name, customers.last_name FROM customers JOIN invoices ON customers.id = invoices.customer_id    ORDER BY invoices.invoice_date DESC LIMIT 1    "
SELECT count( *) FROM medicine WHERE medicine.FDA_approved = 'No'       
"SELECT employee.EMP_FNAME, professor.PROF_OFFICE FROM EMPLOYEE JOIN PROFESSOR ON employee.EMP_NUM = professor.EMP_NUM     ORDER BY employee.EMP_FNAME ASC   "
SELECT avg( university.Enrollment) FROM university WHERE university.Founded < 1850       
"SELECT customers_cards.customer_id, count( *) FROM Customers_Cards  GROUP BY customers_cards.customer_id  ORDER BY count( *) DESC LIMIT 1    "
SELECT count( *) FROM budget WHERE budget.Budgeted > 3000 and budget.Year <= 2001       
SELECT count( *) FROM film        
SELECT count( *) FROM Customer_Orders WHERE customer_orders.order_details = 'Second time'       
SELECT DISTINCT medication.Name FROM Medication     ORDER BY medication.Name ASC   
SELECT DISTINCT mission.Fate FROM mission JOIN ship ON mission.Ship_ID = ship.Ship_ID WHERE ship.Nationality = 'United States'       
SELECT DISTINCT count(DISTINCT keyword.keyword) FROM keyword        
SELECT institution.Type FROM Institution  GROUP BY institution.Type  ORDER BY count( *) DESC LIMIT 1    
"SELECT invoices.payment_method_code, count( *) FROM Invoices  GROUP BY invoices.payment_method_code      "
SELECT review.text FROM review JOIN business ON review.business_id = business.business_id WHERE business.name = 'Kabob Palace' and review.year = 2014       
SELECT student_course_registrations.student_id FROM Student_Course_Registrations JOIN Courses ON student_course_registrations.course_id = courses.course_id WHERE courses.course_name = 'statistics'    ORDER BY student_course_registrations.registration_date ASC   
"SELECT customers_cards.card_id, customers_cards.customer_id, customers_cards.card_type_code, customers_cards.card_number FROM Customers_Cards        "
"SELECT courses.course_description, courses.course_name FROM Courses JOIN Student_Course_Enrolment ON courses.course_id = T2.course_id JOIN Students ON T2.student_id = students.student_id  GROUP BY courses.course_id HAVING count( *) > 2     "
SELECT technician.Name FROM technician WHERE technician.Team != 'NYY'       
SELECT exhibition.Theme FROM exhibition JOIN exhibition_record ON exhibition.Exhibition_ID = exhibition_record.Exhibition_ID WHERE exhibition_record.Attendance < 100     INTERSECT SELECT exhibition.Theme FROM exhibition JOIN exhibition_record ON exhibition.Exhibition_ID = exhibition_record.Exhibition_ID WHERE exhibition_record.Attendance > 500         
SELECT club.name FROM club JOIN player ON club.Club_ID = player.Club_ID WHERE player.Position = 'Right Wing'       
SELECT avg( projects.Hours) FROM Projects        
SELECT reference_locations.Location_Code FROM Ref_Locations WHERE reference_locations.Location_Name = 'Canada'       
"SELECT restaurant.ResName, sum( visits_restaurant.Spent) FROM Restaurant JOIN Visits_Restaurant ON restaurant.ResID = visits_restaurant.ResID  GROUP BY restaurant.ResName  ORDER BY sum( visits_restaurant.Spent) ASC LIMIT 1    "
SELECT ship.Type FROM ship  GROUP BY ship.Type  ORDER BY count( *) DESC LIMIT 1    
SELECT sports_info.SportName FROM SportsInfo JOIN Student ON sports_info.StuID = student.StuID WHERE sports_info.OnScholarship = '1' GROUP BY sports_info.SportName  ORDER BY count( *) DESC LIMIT 1    
SELECT faculty.Lname FROM Faculty WHERE faculty.Rank = 'Professor'       EXCEPT SELECT DISTINCT faculty.Lname FROM Faculty JOIN Faculty_Participates_in ON faculty.FacID = Faculty_Participates_in.FacID JOIN Activity ON Faculty_Participates_in.actid = activity.actid WHERE activity.activity_name = 'Canoeing' or activity.activity_name = 'Kayaking'       
SELECT city.state_name FROM city WHERE city.population = (SELECT max( city.population) FROM city        )       
SELECT driver.Name FROM driver     ORDER BY driver.Age DESC   
SELECT DISTINCT reviewer.name FROM Reviewer JOIN Rating ON reviewer.rID = rating.rID WHERE rating.ratingDate = 'null'       
"SELECT count( *), tryout.cName FROM Tryout  GROUP BY tryout.cName   ORDER BY count( *) DESC   "
SELECT physician.Name FROM Physician JOIN Department ON physician.EmployeeID = department.Head JOIN Affiliated_With ON department.DepartmentID = T3.Department WHERE department.Name = 'Surgery' or department.Name = 'Psychiatry'       
SELECT financial_transactions.transaction_id FROM Financial_Transactions WHERE financial_transactions.transaction_amount > (SELECT avg( financial_transactions.transaction_amount) FROM Financial_Transactions        )       
SELECT authors.lname FROM Authors     ORDER BY authors.lname ASC   
"SELECT customers_cards.card_type_code, count( *) FROM Customers_Cards JOIN Financial_Transactions ON customers_cards.card_id = financial_transactions.card_id  GROUP BY customers_cards.card_type_code      "
SELECT services.Service_Type_Code FROM Services JOIN Events ON services.Service_ID = events.Service_ID WHERE events.Event_Details = '1'     INTERSECT SELECT services.Service_Type_Code FROM Services JOIN Events ON services.Service_ID = events.Service_ID WHERE events.Event_Details = '1'         
SELECT course.title FROM course WHERE course.dept_name = 'Statistics'       EXCEPT SELECT course.title FROM course WHERE course.dept_name = 'Psychology'       
SELECT * FROM Course     ORDER BY course.Credits ASC   
SELECT DISTINCT customer_orders.customer_id FROM Customer_Orders WHERE customer_orders.order_date > (SELECT min( customer_orders.order_date) FROM Customer_Orders WHERE customer_orders.order_status_code = 'Cancelled'       )       
SELECT count( *) FROM venue        
SELECT publication.citation_num FROM publication WHERE publication.title = '1'       
"SELECT count( *), dorm.dormid FROM Dorm WHERE dorm.student_capacity > 1 GROUP BY dorm.dormid      "
SELECT department.DName FROM Department WHERE department.Division = 'AS'      UNION SELECT department.DName FROM Department WHERE department.Division = 'EN' and department.Building = 'NEB'        
SELECT reference_document_status.document_status_description FROM Ref_Document_Status WHERE reference_document_status.document_status_code = 'working'       
SELECT player.birth_country FROM player  GROUP BY player.birth_country  ORDER BY count( *) ASC LIMIT 1    
SELECT customers.Customer_Details FROM Customers JOIN Policies ON customers.Customer_ID = Policies.Customer_ID JOIN Claim_Headers ON Policies.Policy_ID = claim_headers.Policy_ID WHERE claim_headers.Amount_Piad = (SELECT min( claim_headers.Amount_Piad) FROM Claim_Headers        )       
"SELECT match_season.Position, count( *) FROM match_season JOIN team ON match_season.Team = team.Team_id  GROUP BY match_season.Position      "
SELECT count( *) FROM state        
SELECT border_info.border FROM border_info WHERE border_info.state_name in (SELECT state.state_name FROM state WHERE state.population = (SELECT max( state.population) FROM state        )       )       
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = 'Question Answering'       
SELECT count( *) FROM team_franchise WHERE team_franchise.active = 'Y'       
SELECT wine.Name FROM wine    ORDER BY wine.Score ASC LIMIT 1    
SELECT country.country FROM country JOIN city ON country.country_id = T2.country_id  GROUP BY country.country HAVING count( *) >= 3     
SELECT products.Product_Name FROM Products    ORDER BY products.Product_Price DESC LIMIT 1    
SELECT city.Hispanic FROM city WHERE city.Black > 10       
"SELECT film.Title, film.Studio FROM film WHERE film.Studio like '%Universal%'       "
SELECT people.Weight FROM people JOIN entrepreneur ON people.People_ID = entrepreneur.People_ID     ORDER BY entrepreneur.Money_Requested DESC   
"SELECT appellations.Area, appellations.County FROM appellations        "
"SELECT document_locations.Location_Code, document_locations.Date_in_Location_From, document_locations.Date_in_Locaton_To FROM Document_Locations        "
"SELECT department.dept_name, department.budget FROM department WHERE department.budget > (SELECT avg( department.budget) FROM department        )       "
SELECT person.name FROM Person JOIN PersonFriend ON person.name = person_friend.friend WHERE person_friend.friend = 'Bob'       
SELECT sum( claim_headers.Amount_Claimed) FROM Claim_Headers JOIN Claims_Documents ON claim_headers.Claim_Header_ID = claims_documents.Claim_ID WHERE claims_documents.Created_Date = (SELECT claims_documents.Created_Date FROM Claims_Documents    ORDER BY claims_documents.Created_Date ASC LIMIT 1    )       
"SELECT player.Player_name, coach.Coach_name FROM player JOIN player_coach ON player.Player_ID = player_coach.Player_ID JOIN coach ON player_coach.Coach_ID = coach.Coach_ID        "
SELECT avg( customer_contact_channels.active_to_date) FROM Customer_Contact_Channels        
SELECT DISTINCT classroom.building FROM classroom WHERE classroom.capacity > 50       
SELECT stadium.name FROM stadium    ORDER BY stadium.Capacity DESC LIMIT 1    
SELECT state.population FROM state WHERE state.state_name = '1'       
SELECT documents.Document_ID FROM Documents        EXCEPT SELECT documents_with_expenses.Document_ID FROM Documents_with_Expenses        
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
"SELECT swimmer.Nationality, count( *) FROM swimmer  GROUP BY swimmer.Nationality HAVING count( *) > 1     "
SELECT count( *) FROM Student JOIN Voting_record ON student.StuID = voting_record.Class_Senator_Vote WHERE student.Sex = 'M' and voting_record.Election_Cycle = 'Fall'       
"SELECT shop.Open_Date, shop.Open_Year FROM shop WHERE shop.Shop_Name = 'Apple'       "
"SELECT DISTINCT cite.citedPaperId, count(DISTINCT cite.citedPaperId) FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' GROUP BY cite.citedPaperId   ORDER BY count( cite.citedPaperId) DESC   "
SELECT driver.Home_city FROM driver  GROUP BY driver.Home_city  ORDER BY count( *) DESC LIMIT 1    
SELECT DISTINCT count(DISTINCT customer.acc_type) FROM customer        
"SELECT student.Major, count( *) FROM Student  GROUP BY student.Major HAVING count( student.Major) between 2 AND 30     "
"SELECT staff.first_name, staff.last_name FROM Staff JOIN Addresses ON staff.staff_address_id = addresses.address_id WHERE addresses.city = 'Damianfort'       "
SELECT count( *) FROM Physician        
"SELECT district.District_name, district.City_Population FROM district WHERE district.City_Population between 200000 AND 2000000       "
SELECT gas_station.Manager_Name FROM gas_station JOIN station_company ON gas_station.Station_ID = station_company.Station_ID JOIN company ON station_company.Company_ID = company.Company_ID WHERE company.Company = 'ExxonMobil'       
SELECT customer_contact_channels.channel_code FROM Customer_Contact_Channels  GROUP BY customer_contact_channels.channel_code HAVING count( customer_contact_channels.customer_id) < 5     
SELECT state.population FROM state WHERE state.density = (SELECT max( state.density) FROM state        )       
SELECT student.Major FROM Student  GROUP BY student.Major  ORDER BY count( *) DESC LIMIT 1    
SELECT catalog_contents.catalog_entry_name FROM Catalog_Contents    ORDER BY catalog_contents.height DESC LIMIT 1    
SELECT railway.ObjectNumber FROM railway WHERE railway.Railway_ID NOT IN (SELECT train.Railway_ID FROM train        )       
SELECT * FROM Products JOIN Manufacturers ON products.Manufacturer = T2.Code        
SELECT count( *) FROM climber        
"SELECT employees.FIRST_NAME, employees.LAST_NAME, locations.CITY FROM employees JOIN departments ON employees.DEPARTMENT_ID = departments.DEPARTMENT_ID JOIN locations ON departments.LOCATION_ID = locations.LOCATION_ID WHERE employees.FIRST_NAME like '%z%'       "
"SELECT products.product_name, count( *) FROM Products JOIN Order_Items ON products.product_id = order_items.product_id JOIN Orders ON order_items.order_id = T4.order_id JOIN Customers ON T4.customer_id = customers.customer_id  GROUP BY products.product_name      "
SELECT course.title FROM course     ORDER BY course.title ASC   
SELECT party.Party FROM party JOIN election ON party.Party_ID = election.Party WHERE election.Committee = 'Appropriations'     INTERSECT SELECT party.Party FROM party JOIN election ON party.Party_ID = election.Party WHERE election.Committee = 'Economic Matters'         
SELECT music_festival.Date_of_ceremony FROM music_festival JOIN volume ON music_festival.Volume = volume.Volume_ID WHERE volume.Weeks_on_Top > 2       
SELECT city.population FROM city WHERE city.city_name = '1'       
SELECT count( *) FROM Scientists WHERE scientists.SSN NOT IN (SELECT assigned_to.Scientist FROM AssignedTo        )       
SELECT DISTINCT paper.paperId FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 1 and venue.venueName = '1'       
SELECT participates_in.stuid FROM Participates_in      INTERSECT SELECT student.StuID FROM Student WHERE student.Age < 20         
SELECT accounts.name FROM ACCOUNTS JOIN CHECKING ON accounts.custid = checking.custid WHERE checking.balance < (SELECT avg( checking.balance) FROM CHECKING        )       
"SELECT invoices.invoice_date, invoices.order_id, orders.order_details FROM Invoices JOIN Orders ON invoices.order_id = orders.order_id        "
SELECT aircraft.name FROM aircraft WHERE aircraft.distance > (SELECT avg( aircraft.distance) FROM aircraft        )       
SELECT products.Name FROM Products        
SELECT count( *) FROM venue        
SELECT DISTINCT count(DISTINCT movie.title) FROM directed_by JOIN director ON T2.did = director.did JOIN movie WHERE director.name = 'Quentin Tarantino' and movie.release_year > 2010       
"SELECT county.County_name, county.Population FROM county        "
SELECT DISTINCT count(DISTINCT party.Governor) FROM party        
SELECT count( *) FROM author        
SELECT movie.title FROM Movie JOIN Rating ON movie.mID = rating.mID WHERE rating.stars between 3 AND 5       
SELECT people.Name FROM people     ORDER BY people.Height ASC   
"SELECT drivers.surname, drivers.driverId FROM drivers JOIN pitStops ON drivers.driverId = pit_stops.driverId  GROUP BY pit_stops.driverId HAVING count( *) = 11   INTERSECT SELECT drivers.surname, drivers.driverId FROM drivers JOIN results ON drivers.driverId = T4.driverId  GROUP BY drivers.driverId HAVING count( *) > 5       "
"SELECT customers.customer_status_code, count( *) FROM Customers  GROUP BY customers.customer_status_code      "
SELECT club.ClubName FROM Club JOIN Member_of_club ON club.ClubID = Member_of_club.ClubID JOIN Student ON Member_of_club.StuID = student.StuID WHERE student.Sex = 'F' GROUP BY club.ClubName  ORDER BY count( *) DESC LIMIT 1    
"SELECT catalogs.catalog_name, catalogs.date_of_publication FROM Catalogs JOIN Catalog_Structure ON catalogs.catalog_id = catalog_structure.catalog_id WHERE catalog_structure.catalog_level_number > 5       "
SELECT station.name FROM station WHERE station.lat < 37.5       
"SELECT company.Company, count( *) FROM company JOIN station_company ON company.Company_ID = station_company.Company_ID JOIN gas_station ON station_company.Station_ID = gas_station.Station_ID  GROUP BY company.Company      "
"SELECT DISTINCT paper.paperId, paper.year FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1'    ORDER BY paper.year DESC   "
SELECT program.Owner FROM program JOIN broadcast ON program.Program_ID = broadcast.Program_ID WHERE broadcast.Time_of_day = 'Morning'     INTERSECT SELECT program.Owner FROM program JOIN broadcast ON program.Program_ID = broadcast.Program_ID WHERE broadcast.Time_of_day = 'Night'         
SELECT count( *) FROM Club WHERE club.ClubLocation = 'HHH'       
SELECT player.Occupation FROM player  GROUP BY player.Occupation  ORDER BY count( *) DESC LIMIT 1    
SELECT research_staff.staff_details FROM Research_Staff     ORDER BY research_staff.staff_details ASC   
SELECT storm.Name FROM storm WHERE storm.Storm_ID NOT IN (SELECT affected_region.Storm_ID FROM affected_region        )       
SELECT customer.first_name FROM customer WHERE customer.customer_id NOT IN (SELECT rental.customer_id FROM rental WHERE rental.rental_date > '2005-08-23 02:06:01'       )       
SELECT DISTINCT mountain.Range FROM mountain    ORDER BY mountain.Prominence DESC LIMIT 1    
"SELECT max( candidate.Support_rate), min( candidate.Consider_rate), min( candidate.Oppose_rate) FROM candidate        "
SELECT DISTINCT count(DISTINCT rooms.bedType) FROM Rooms        
"SELECT detention.datetime_detention_start, detention.datetime_detention_end FROM Detention JOIN Teachers ON detention.teacher_id = teachers.teacher_id WHERE teachers.last_name = 'Schultz'       "
SELECT tracks.name FROM tracks JOIN genres ON tracks.genre_id = genres.id JOIN media_types ON tracks.media_type_id = media_types.id WHERE genres.name = 'Rock' or media_types.name = 'MPEG audio file'       
"SELECT avg( person.age), person.gender FROM Person  GROUP BY person.gender      "
SELECT aircraft.name FROM aircraft JOIN certificate ON aircraft.aid = certificate.aid JOIN employee ON certificate.eid = employee.eid WHERE employee.name = 'John Williams'       
SELECT party.Governor FROM party JOIN election ON party.Party_ID = election.Party WHERE election.District = 1       
SELECT player.player_api_id FROM Player WHERE player.height >= 1 and player.height <= 1     INTERSECT SELECT player_attributes.player_api_id FROM Player_Attributes WHERE player_attributes.preferred_foot = '1'         
SELECT candidate.Candidate_ID FROM candidate    ORDER BY candidate.Oppose_rate ASC LIMIT 1    
"SELECT rating.mID, avg( rating.stars) FROM Rating WHERE rating.mID NOT IN (SELECT rating.mID FROM Rating JOIN Reviewer ON rating.rID = reviewer.rID WHERE reviewer.name = 'Brittany Harris'       ) GROUP BY rating.mID      "
SELECT person.name FROM Person WHERE person.age > (SELECT min( person.age) FROM Person WHERE person.job = 'engineer'       )    ORDER BY person.age ASC   
SELECT customer.cust_name FROM customer JOIN bank ON customer.branch_ID = bank.branch_ID JOIN loan ON bank.branch_ID = loan.branch_ID  GROUP BY customer.cust_name   ORDER BY sum( loan.amount) ASC   
SELECT addresses.city FROM Addresses JOIN Staff ON addresses.address_id = staff.staff_address_id WHERE staff.first_name = 'Janessa' and staff.last_name = 'Sawayn'       
"SELECT city.White, county_public_safety.Crime_rate FROM city JOIN county_public_safety ON city.County_ID = county_public_safety.County_ID        "
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN writes ON paper.paperId = T2.paperId JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 1 and venue.venueName = '1'       
SELECT * FROM Assessment_Notes     ORDER BY assessment_notes.date_of_notes ASC   
SELECT customer.cust_name FROM customer     ORDER BY customer.acc_bal ASC   
SELECT enzyme.name FROM enzyme WHERE enzyme.Product != 'Heme'       
SELECT state.capital FROM state WHERE state.state_name = '1'       
SELECT count( state.capital) FROM state WHERE state.state_name = '1'       
SELECT orders.date_order_placed FROM Orders JOIN Shipments ON orders.order_id = shipments.order_id WHERE shipments.invoice_number = 10       
"SELECT member.Name, member.Hometown FROM member JOIN membership_register_branch ON member.Member_ID = membership_register_branch.Member_ID WHERE membership_register_branch.Register_Year = '2016'       "
"SELECT count( *), dorm.dorm_name FROM Student JOIN Lives_in ON student.StuID = Lives_in.stuid JOIN Dorm ON Lives_in.dormid = dorm.dormid WHERE student.Age > 20 GROUP BY dorm.dorm_name      "
SELECT DISTINCT invoice.BillingCountry FROM Invoice        
SELECT instructor.name FROM instructor WHERE instructor.ID NOT IN (SELECT teaches.ID FROM teaches WHERE teaches.semester = 'Spring'       )       
SELECT customers.date_became_customer FROM Customers WHERE customers.customer_id between 10 AND 20       
"SELECT medicine.id, medicine.name, medicine.FDA_approved FROM medicine JOIN medicine_enzyme_interaction ON medicine.id = T3.medicine_id  GROUP BY T3.medicine_id   ORDER BY count( *) DESC   "
SELECT employees.Role_Code FROM Employees  GROUP BY employees.Role_Code HAVING count( *) >= 3     
SELECT country.Name FROM country JOIN roller_coaster ON country.Country_ID = T2.Country_ID  GROUP BY country.Name HAVING count( *) > 1     
SELECT aircraft.Aircraft FROM aircraft JOIN match ON aircraft.Aircraft_ID = T2.Winning_Aircraft  GROUP BY aircraft.Aircraft  ORDER BY count( *) DESC LIMIT 1    
SELECT course.title FROM course WHERE course.dept_name = 'Statistics'       EXCEPT SELECT course.title FROM course WHERE course.dept_name = 'Psychology'       
SELECT DISTINCT count(DISTINCT player.Position) FROM player        
SELECT DISTINCT count(DISTINCT has_amenity.dormid) FROM Has_amenity        
"SELECT faculty.Sex, count( *) FROM Faculty WHERE faculty.Rank = '1' GROUP BY faculty.Sex      "
"SELECT hotels.star_rating_code, avg( hotels.price_range) FROM Hotels  GROUP BY hotels.star_rating_code      "
"SELECT affiliated_with.Physician, affiliated_with.Department FROM Affiliated_With WHERE affiliated_with.PrimaryAffiliation = 1       "
"SELECT maintenance_engineers.engineer_id, maintenance_engineers.first_name, maintenance_engineers.last_name FROM Maintenance_Engineers JOIN Engineer_Visits ON maintenance_engineers.engineer_id = engineer_visits.engineer_id  GROUP BY engineer_visits.engineer_id  ORDER BY count( *) DESC LIMIT 1    "
"SELECT operate_company.Type, count( *) FROM operate_company  GROUP BY operate_company.Type  ORDER BY count( *) DESC LIMIT 1    "
SELECT customers.customer_name FROM Customers JOIN Mailshot_Customers ON customers.customer_id = mailshot_customers.customer_id WHERE mailshot_customers.outcome_code = 'Order' GROUP BY customers.customer_name HAVING count( *) >= 2     
SELECT DISTINCT count(DISTINCT journal.name) FROM journal JOIN publication ON journal.jid = publication.jid JOIN writes ON publication.pid = writes.pid JOIN author ON writes.aid = author.aid WHERE author.name = '1'       
SELECT city.city_name FROM city WHERE city.population = (SELECT max( city.population) FROM city WHERE city.state_name = '1'       ) and city.state_name = '1'       
SELECT * FROM Course_Authors_and_Tutors     ORDER BY course_authors_and_tutors.personal_name ASC   
"SELECT DISTINCT count(DISTINCT cite.citingPaperId), writes.authorId FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN venue ON paper.venueId = venue.venueId WHERE venue.venueName = 'CVPR' GROUP BY writes.authorId   ORDER BY count( cite.citingPaperId) DESC   "
"SELECT cinema.Name, cinema.Location FROM cinema WHERE cinema.Capacity > (SELECT avg( cinema.Capacity) FROM cinema        )       "
SELECT city.city_name FROM city WHERE city.population = (SELECT max( city.population) FROM city        )       
SELECT shipments.order_id FROM Shipments WHERE shipments.shipment_date = (SELECT max( shipments.shipment_date) FROM Shipments        )       
SELECT university.School FROM university WHERE university.Founded > 1 or university.Affiliation = '1'       
"SELECT avg( flight.distance), avg( flight.price) FROM flight WHERE flight.origin = 'Los Angeles'       "
"SELECT projects.organisation_id, count( *) FROM Projects  GROUP BY projects.organisation_id  ORDER BY count( *) DESC LIMIT 1    "
SELECT host.Name FROM host JOIN party_host ON host.Host_ID = party_host.Host_ID JOIN party ON party_host.Party_ID = party.Party_ID WHERE party.Number_of_hosts > 20       
SELECT book.Title FROM book     ORDER BY book.Issues ASC   
SELECT director.birth_city FROM director WHERE director.name = '1'       
SELECT DISTINCT instructor.salary FROM instructor WHERE instructor.salary < (SELECT max( instructor.salary) FROM instructor        )       
"SELECT student.STU_FNAME, student.STU_LNAME, student.STU_GPA FROM STUDENT WHERE student.STU_GPA > 3   ORDER BY student.STU_DOB DESC LIMIT 1    "
"SELECT employees.DEPARTMENT_ID, sum( employees.SALARY) FROM employees  GROUP BY employees.DEPARTMENT_ID HAVING count( *) >= 2     "
SELECT detention.detention_summary FROM Detention        
SELECT count( *) FROM Events WHERE events.Event_ID NOT IN (SELECT participants_in_events.Event_ID FROM Participants_in_Events        )       
"SELECT count( *), constructors.nationality FROM constructors  GROUP BY constructors.nationality      "
SELECT highlow.state_name FROM highlow WHERE highlow.lowest_elevation = (SELECT min( highlow.lowest_elevation) FROM highlow        )       
"SELECT transactions.investor_id, count( *) FROM Transactions  GROUP BY transactions.investor_id      "
SELECT count( *) FROM artist        
SELECT count( *) FROM author        
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and restaurant.FOOD_TYPE = '1'       "
SELECT count( *) FROM Faculty WHERE faculty.Rank = 'Professor' and faculty.Building = 'NEB'       
SELECT hotels.price_range FROM Hotels        
SELECT DISTINCT paper.paperId FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE venue.venueName = '1'       
SELECT employees.EMPLOYEE_ID FROM employees WHERE employees.SALARY > (SELECT avg( employees.SALARY) FROM employees        )       
SELECT actor.birth_year FROM actor WHERE actor.name = '1'       
"SELECT count( *), student.city_code FROM Student  GROUP BY student.city_code HAVING count( *) > 1     "
"SELECT bank.city, bank.state FROM bank WHERE bank.bname = 'morningside'       "
SELECT student.dept_name FROM student  GROUP BY student.dept_name  ORDER BY count( *) DESC LIMIT 1    
SELECT DISTINCT writes.authorId FROM writes JOIN paper ON writes.paperId = paper.paperId JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 1 and venue.venueName = '1'       
SELECT conference.name FROM conference JOIN publication ON conference.cid = publication.cid JOIN publication_keyword ON publication.pid = publication_keyword.pid JOIN keyword ON publication_keyword.kid = keyword.kid WHERE keyword.keyword = 'Relational Database' GROUP BY conference.name HAVING count( publication.title) > '60'     
SELECT DISTINCT reviewer.name FROM Reviewer JOIN Rating ON reviewer.rID = Rating.rID JOIN Movie ON Rating.mID = movie.mID WHERE movie.title = 'Gone with the Wind'       
SELECT park.state FROM park  GROUP BY park.state HAVING count( *) > 2     
SELECT min( review.rank) FROM review        
SELECT albums.title FROM albums WHERE albums.title like '%1%'    ORDER BY albums.title ASC   
"SELECT student_tests_taken.test_result, count( *) FROM Student_Tests_Taken JOIN Student_Course_Enrolment ON student_tests_taken.registration_id = Student_Course_Enrolment.registration_id JOIN Students ON Student_Course_Enrolment.student_id = students.student_id  GROUP BY student_tests_taken.test_result   ORDER BY count( *) DESC   "
SELECT papers.title FROM Papers WHERE papers.title like '%Database%'       
SELECT browser.name FROM browser     ORDER BY browser.market_share DESC   
SELECT apartment_buildings.building_address FROM Apartment_Buildings JOIN Apartments ON apartment_buildings.building_id = apartments.building_id WHERE apartments.bathroom_count > 2       
"SELECT races.name, races.year FROM races JOIN results ON races.raceId = T3.raceId JOIN drivers ON T3.driverId = drivers.driverId WHERE drivers.forename = 'Lewis'       "
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN cite ON paper.paperId = T3.citingPaperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Daniel Jurafsky'       
"SELECT student.Fname, student.LName FROM Student JOIN Member_of_club ON student.StuID = Member_of_club.StuID JOIN Club ON Member_of_club.ClubID = club.ClubID WHERE club.ClubName = 'Bootup Baltimore' and student.Sex = 'F'       "
SELECT DISTINCT count(DISTINCT publication.title) FROM publication JOIN writes ON publication.pid = writes.pid JOIN author ON writes.aid = author.aid JOIN conference ON publication.cid = conference.cid WHERE author.name = '1' and conference.name = '1'       
SELECT DISTINCT count(DISTINCT financial_transactions.transaction_type) FROM Financial_Transactions        
"SELECT city.city, count( *), address.city_id FROM city JOIN address ON city.city_id = address.city_id  GROUP BY address.city_id  ORDER BY count( *) DESC LIMIT 1    "
"SELECT draft_copies.document_id, count( draft_copies.copy_number) FROM Draft_Copies  GROUP BY draft_copies.document_id  ORDER BY count( draft_copies.copy_number) DESC LIMIT 1    "
SELECT count( *) FROM RESTAURANT JOIN GEOGRAPHIC ON restaurant.CITY_NAME = geographic.CITY_NAME WHERE geographic.COUNTY = '1' and restaurant.FOOD_TYPE = '1'       
SELECT artist.artist_name FROM artist WHERE artist.country = 'UK' and artist.gender = 'Male'       
SELECT state.state_name FROM state WHERE state.density = (SELECT max( state.density) FROM state        )       
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1' and paper.year = 1       
SELECT * FROM employees WHERE employees.HIRE_DATE > '1987-09-07'       
"SELECT customers.first_name, customers.last_name FROM Customers WHERE customers.amount_outstanding between 1000 AND 3000       "
"SELECT person.name, person.age FROM Person JOIN PersonFriend ON person.name = person_friend.friend WHERE person_friend.friend = 'Dan'     INTERSECT SELECT person.name, person.age FROM Person JOIN PersonFriend ON person.name = person_friend.friend WHERE person_friend.friend = 'Alice'         "
SELECT reference_service_types.Service_Type_Description FROM Ref_Service_Types JOIN Services ON reference_service_types.Service_Type_Code = services.Service_Type_Code WHERE services.Product_Name = 'photo'     INTERSECT SELECT reference_service_types.Service_Type_Description FROM Ref_Service_Types JOIN Services ON reference_service_types.Service_Type_Code = services.Service_Type_Code WHERE services.Product_Name = 'film'         
"SELECT DISTINCT employee.EMP_FNAME, professor.PROF_HIGH_DEGREE FROM EMPLOYEE JOIN PROFESSOR ON employee.EMP_NUM = professor.EMP_NUM JOIN CLASS ON employee.EMP_NUM = T3.PROF_NUM JOIN DEPARTMENT ON employee.EMP_NUM = department.EMP_NUM WHERE department.DEPT_NAME = 'Computer Info. Systems'       "
SELECT DISTINCT count(DISTINCT person_friend.name) FROM PersonFriend WHERE person_friend.friend NOT IN (SELECT person.name FROM Person WHERE person.city = 'Austin'       )       
SELECT highlow.highest_point FROM highlow WHERE highlow.state_name = '1'       
SELECT person.name FROM Person JOIN PersonFriend ON person.name = person_friend.friend WHERE person_friend.friend = 'Zach' and person.gender = 'female'       
SELECT count( *) FROM state        
SELECT airlines.country FROM airlines WHERE airlines.active = 'Y' GROUP BY airlines.country  ORDER BY count( *) DESC LIMIT 1    
SELECT movie.title FROM Movie WHERE movie.director = 'James Cameron' or movie.year < 1980       
SELECT DISTINCT count(DISTINCT country.Official_native_language) FROM country JOIN match_season ON country.Country_id = match_season.Country WHERE match_season.Position = 'Defender'       
SELECT sum( rooms.beds) FROM Rooms WHERE rooms.bedType = 'King'       
SELECT count( *) FROM user_profiles        
"SELECT accounts.name, checking.balance FROM ACCOUNTS JOIN CHECKING ON accounts.custid = checking.custid JOIN SAVINGS ON accounts.custid = savings.custid WHERE savings.balance > (SELECT avg( savings.balance) FROM SAVINGS        )       "
"SELECT perpetrator.Country, count( *) FROM perpetrator  GROUP BY perpetrator.Country      "
SELECT teachers.first_name FROM Teachers WHERE teachers.email_address like '%man%'       
"SELECT member.Time_of_purchase, member.Age, member.Address FROM member     ORDER BY member.Time_of_purchase ASC   "
"SELECT has_allergy.Allergy, count( *) FROM Has_Allergy JOIN Student ON has_allergy.StuID = student.StuID  GROUP BY has_allergy.Allergy      "
SELECT count( *) FROM CLASS        
SELECT river.traverse FROM river WHERE river.river_name = '1'       
SELECT mountain.Name FROM mountain    ORDER BY mountain.Height DESC LIMIT 1    
SELECT campuses.Campus FROM Campuses JOIN faculty ON campuses.Id = faculty.Campus WHERE faculty.Year = 2003   ORDER BY faculty.Faculty DESC LIMIT 1    
SELECT problems.problem_id FROM Problems JOIN Staff ON problems.reported_by_staff_id = T2.staff_id WHERE problems.date_problem_reported > (SELECT max( problems.date_problem_reported) FROM Problems JOIN Staff ON problems.reported_by_staff_id = staff.staff_id WHERE staff.staff_first_name = 'Rylan' and staff.staff_last_name = 'Homenick'       )       
"SELECT school.School, school.Type FROM school WHERE school.School_ID NOT IN (SELECT school_bus.School_ID FROM school_bus        )       "
SELECT student.StuID FROM Student WHERE student.Major = 1     INTERSECT SELECT sports_info.StuID FROM SportsInfo WHERE sports_info.OnScholarship = '1'         
SELECT count( *) FROM game WHERE game.Season > 2007       
SELECT count( *) FROM airlines        
SELECT video_games.GName FROM Video_Games JOIN Plays_Games ON video_games.GameID = Plays_Games.GameID JOIN Student ON Plays_Games.StuID = student.StuID WHERE student.LName = 'Smith' and student.Fname = 'Linda'       
"SELECT department.DName, department.Room FROM Department JOIN Course ON department.DNO = course.DNO WHERE course.CName = 'INTRODUCTION TO COMPUTER SCIENCE'       "
SELECT problem_log.problem_log_id FROM Problem_Log    ORDER BY problem_log.log_entry_date DESC LIMIT 1    
SELECT DISTINCT count(DISTINCT business.name) FROM business JOIN category ON business.business_id = category.business_id WHERE business.city = '1' and category.category_name = '1'       
"SELECT course_authors_and_tutors.personal_name, course_authors_and_tutors.family_name, courses.author_id FROM Course_Authors_and_Tutors JOIN Courses ON course_authors_and_tutors.author_id = courses.author_id  GROUP BY courses.author_id  ORDER BY count( *) DESC LIMIT 1    "
SELECT song.f_id FROM song WHERE song.resolution > (SELECT max( song.resolution) FROM song WHERE song.rating < 8       )       
SELECT count( *) FROM Customers        
SELECT elimination.Time FROM Elimination JOIN wrestler ON elimination.Wrestler_ID = wrestler.Wrestler_ID    ORDER BY wrestler.Days_held DESC LIMIT 1    
SELECT count( *) FROM Ref_Budget_Codes        
"SELECT exhibition.Theme, exhibition.Year FROM exhibition     ORDER BY exhibition.Ticket_Price DESC   "
SELECT DISTINCT count(DISTINCT publication.title) FROM publication JOIN conference ON publication.cid = conference.cid WHERE conference.name = 'VLDB' and publication.year > 2000       
"SELECT reviewer.name, movie.title, rating.stars, rating.ratingDate FROM Reviewer JOIN Rating ON reviewer.rID = rating.rID JOIN Movie ON rating.mID = movie.mID     ORDER BY reviewer.name ASC   "
SELECT DISTINCT count(DISTINCT projects.Name) FROM Projects        
SELECT people.Name FROM people JOIN candidate ON people.People_ID = candidate.People_ID WHERE candidate.Support_rate < 1       
"SELECT count( *), people.Sex FROM people WHERE people.Weight > 85 GROUP BY people.Sex      "
SELECT editor.Name FROM editor WHERE editor.Age = 24 or editor.Age = 25       
"SELECT sum( student.STU_HRS), student.DEPT_CODE FROM STUDENT  GROUP BY student.DEPT_CODE      "
"SELECT DISTINCT cite.citedPaperId, count(DISTINCT cite.citedPaperId) FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' GROUP BY cite.citedPaperId   ORDER BY count( cite.citedPaperId) DESC   "
"SELECT pilot.Pilot_name, count( *) FROM pilot JOIN pilot_record ON pilot.Pilot_ID = pilot_record.Pilot_ID  GROUP BY pilot.Pilot_name HAVING count( *) > 1     "
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and location.STREET_NAME = '1'       "
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Liwen Xiong' and paper.year = 2015       
"SELECT employees.FIRST_NAME, departments.DEPARTMENT_NAME FROM employees JOIN departments ON employees.DEPARTMENT_ID = departments.DEPARTMENT_ID        "
SELECT movie.title FROM movie JOIN cast WHERE cast.role = Daffy Duck       
SELECT DISTINCT count(DISTINCT tip.text) FROM tip JOIN user ON tip.user_id = user.user_id WHERE tip.year = 2010 and user.name = 'Michelle'       
SELECT campuses.Campus FROM Campuses WHERE campuses.County = 'Los Angeles' and campuses.Year > 1950       
SELECT video_games.GName FROM Video_Games JOIN Plays_Games ON video_games.GameID = plays_games.GameID  GROUP BY video_games.GName  ORDER BY sum( plays_games.Hours_Played) DESC LIMIT 1    
"SELECT transactions_lots.lot_id, avg( transactions.amount_of_transaction) FROM Transactions_Lots JOIN Transactions ON transactions_lots.transaction_id = transactions.transaction_id  GROUP BY transactions_lots.lot_id   ORDER BY avg( transactions.amount_of_transaction) ASC   "
SELECT vocals.Type FROM Vocals JOIN Band ON vocals.Bandmate = band.Id WHERE band.Firstname = 'Marianne' GROUP BY vocals.Type  ORDER BY count( *) DESC LIMIT 1    
SELECT count( city.city_name) FROM city WHERE city.population > 1       
SELECT sum( customer_payments.amount_payment) FROM Customer_Payments JOIN Customers ON customer_payments.customer_id = customers.customer_id WHERE customers.first_name = 'Carole' and customers.last_name = 'Bernhard'       
SELECT DISTINCT count(DISTINCT instruments.Instrument) FROM Instruments JOIN Songs ON instruments.SongId = songs.SongId WHERE songs.Title = 'Badlands'       
SELECT document_locations.Location_Code FROM Document_Locations  GROUP BY document_locations.Location_Code HAVING count( *) >= 3     
"SELECT organisations.organisation_id, organisations.organisation_details FROM Organisations JOIN Grants ON organisations.organisation_id = T2.organisation_id  GROUP BY T2.organisation_id HAVING sum( T2.grant_amount) > 1     "
SELECT DISTINCT count(DISTINCT swimmer.Nationality) FROM swimmer        
SELECT book_club.Publisher FROM book_club WHERE book_club.Year = 1989     INTERSECT SELECT book_club.Publisher FROM book_club WHERE book_club.Year = 1990         
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and location.STREET_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT addresses.address_details FROM Addresses JOIN Customer_Addresses ON addresses.address_id = customer_addresses.address_id WHERE customer_addresses.customer_id = 10       
SELECT elimination.Time FROM Elimination JOIN wrestler ON elimination.Wrestler_ID = wrestler.Wrestler_ID WHERE wrestler.Days_held > '50'       
SELECT student.StuID FROM Student JOIN Participates_in ON student.StuID = Participates_in.stuid JOIN Activity ON Participates_in.actid = Activity.actid JOIN Faculty_Participates_in ON Activity.actid = Faculty_Participates_in.actid JOIN Faculty ON Faculty_Participates_in.FacID = faculty.FacID WHERE faculty.Rank = 'Professor'       
SELECT movie.Director FROM movie WHERE movie.Year = 1999 or movie.Year = 2000       
SELECT student.STU_LNAME FROM STUDENT JOIN ENROLL ON student.STU_NUM = enroll.STU_NUM WHERE enroll.ENROLL_GRADE = 'A' and enroll.CLASS_CODE = '10018'       
SELECT projects.project_details FROM Projects JOIN Project_Outcomes ON projects.project_id = project_outcomes.project_id WHERE project_outcomes.outcome_code = '1'     INTERSECT SELECT projects.project_details FROM Projects JOIN Project_Outcomes ON projects.project_id = project_outcomes.project_id WHERE project_outcomes.outcome_code = '1'         
SELECT DISTINCT count(DISTINCT publication.title) FROM publication JOIN journal ON publication.jid = journal.jid JOIN publication_keyword ON publication.pid = publication_keyword.pid JOIN keyword ON publication_keyword.kid = keyword.kid WHERE journal.name = '1' and keyword.keyword = '1'       
SELECT product.product FROM product WHERE product.max_page_size = 'A4' or product.pages_per_minute_color < 5       
SELECT avg( volume.Weeks_on_Top) FROM volume JOIN artist ON volume.Artist_ID = artist.Artist_ID WHERE artist.Age <= 25       
SELECT festival_detail.Location FROM festival_detail    ORDER BY festival_detail.Num_of_Audience DESC LIMIT 1    
SELECT count( *) FROM performance        
SELECT ship.Type FROM Ship WHERE ship.Flag = 'Panama'     INTERSECT SELECT ship.Type FROM Ship WHERE ship.Flag = 'Malta'         
SELECT sum( channel.Share_in_percent) FROM channel WHERE channel.Owner = 'CCTV'       
SELECT circuits.name FROM circuits WHERE circuits.country = 'UK' or circuits.country = 'Malaysia'       
SELECT reference_service_types.Service_Type_Description FROM Ref_Service_Types JOIN Services ON reference_service_types.Service_Type_Code = services.Service_Type_Code WHERE services.Product_Name = 'photo'     INTERSECT SELECT reference_service_types.Service_Type_Description FROM Ref_Service_Types JOIN Services ON reference_service_types.Service_Type_Code = services.Service_Type_Code WHERE services.Product_Name = 'film'         
SELECT avg( products.Price) FROM Products        
SELECT customers.state FROM Customers  GROUP BY customers.state  ORDER BY count( *) ASC LIMIT 1    
"SELECT party.Location, host.Name FROM party JOIN party_host ON party.Party_ID = party_host.Party_ID JOIN host ON party_host.Host_ID = host.Host_ID     ORDER BY host.Age ASC   "
SELECT reference_product_categories.unit_of_measure FROM Ref_Product_Categories WHERE reference_product_categories.product_category_code = '1'       
SELECT DISTINCT count(DISTINCT station.city) FROM station        
SELECT county_public_safety.Location FROM county_public_safety  GROUP BY county_public_safety.Location  ORDER BY count( *) DESC LIMIT 1    
SELECT lots.lot_details FROM Lots JOIN Investors ON lots.investor_id = investors.investor_id WHERE investors.Investor_details = 'l'       
SELECT election.Committee FROM election JOIN party ON election.Party = party.Party_ID WHERE party.Party = '1'     INTERSECT SELECT election.Committee FROM election JOIN party ON election.Party = party.Party_ID WHERE party.Party = '1'         
"SELECT orders.order_id, orders.order_status FROM Orders JOIN Customers ON orders.customer_id = customers.customer_id WHERE customers.customer_name = 'Jeramie'       "
SELECT count( *) FROM author        
SELECT people.Name FROM people JOIN perpetrator ON people.People_ID = perpetrator.People_ID     ORDER BY perpetrator.Year DESC   
SELECT DISTINCT movie.title FROM Movie JOIN Rating ON movie.mID = Rating.mID JOIN Reviewer ON Rating.rID = reviewer.rID WHERE reviewer.name = 'Brittany Harris' or movie.year > 2000       
SELECT state.population FROM state WHERE state.area = (SELECT max( state.area) FROM state        )       
SELECT team.name FROM team JOIN home_game ON team.team_id = home_game.team_id WHERE home_game.year = 1980   ORDER BY home_game.attendance ASC LIMIT 1    
SELECT DISTINCT count(DISTINCT class.CLASS_SECTION) FROM CLASS WHERE class.CRS_CODE = 'ACCT-211'       
SELECT city.Official_Name FROM city JOIN farm_competition ON city.City_ID = T2.Host_city_ID  GROUP BY city.Official_Name HAVING count( *) > 1     
SELECT count( *) FROM Track JOIN MediaType ON track.MediaTypeId = media_type.MediaTypeId WHERE media_type.Name = 'AAC audio file'       
SELECT city.City FROM city JOIN temperature ON city.City_ID = temperature.City_ID WHERE temperature.Mar < 1       
"SELECT hall_of_fame.yearid, count( *) FROM hall_of_fame  GROUP BY hall_of_fame.yearid      "
SELECT state.population FROM state WHERE state.density = (SELECT max( state.density) FROM state        )       
SELECT DISTINCT count(DISTINCT tryout.pPos) FROM Tryout        
SELECT count( *) FROM Products WHERE products.product_category_code = 'Seeds'       
SELECT river.river_name FROM river WHERE river.traverse = '1'       
SELECT count( *) FROM postseason        
SELECT avg( farm.Working_Horses) FROM farm WHERE farm.Total_Horses > 5000       
SELECT DISTINCT paper.venueId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Daniella Coelho'       
SELECT count( *) FROM routes JOIN airports ON routes.src_apid = airports.apid JOIN airlines ON routes.alid = airlines.alid WHERE airports.country = 'Italy' and airlines.name = 'American Airlines'       
"SELECT stadium.name, stadium.Capacity FROM stadium JOIN event ON stadium.ID = event.Stadium_ID WHERE event.Name = 'World Junior'       "
"SELECT DISTINCT key_phrase.keyphraseName, paper.year FROM keyphrase JOIN paperKeyphrase ON key_phrase.keyphraseId = paperKeyphrase.keyphraseId JOIN paper ON paperKeyphrase.paperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'    ORDER BY paper.year DESC   "
SELECT DISTINCT writes.paperId FROM writes JOIN paper ON writes.paperId = paper.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'    ORDER BY paper.year DESC   
SELECT lake.lake_name FROM lake WHERE lake.area > 1       
SELECT candidate_assessments.candidate_id FROM Candidate_Assessments WHERE candidate_assessments.asessment_outcome_code = 'Pass'       
SELECT border_info.border FROM border_info WHERE border_info.state_name = '1'       
"SELECT performance.Date, performance.Location FROM performance        "
SELECT school.School_name FROM School    ORDER BY school.Enrollment ASC LIMIT 1    
"SELECT races.name, races.date FROM races    ORDER BY races.date DESC LIMIT 1    "
"SELECT DISTINCT authors.fname, authors.lname FROM Authors JOIN Authorship ON authors.authID = Authorship.authID JOIN Inst ON Authorship.instID = institution.instID WHERE institution.name = 'Google'       "
SELECT instructor.name FROM instructor WHERE instructor.salary > (SELECT max( instructor.salary) FROM instructor WHERE instructor.dept_name = 'Biology'       )       
SELECT staff_department_assignments.department_id FROM Staff_Department_Assignments  GROUP BY staff_department_assignments.department_id  ORDER BY count( *) ASC LIMIT 1    
SELECT count( *) FROM Ref_Characteristic_Types        
SELECT avg( checking.balance) FROM CHECKING        
SELECT border_info.border FROM border_info WHERE border_info.state_name = '1'       
SELECT city.population FROM city WHERE city.city_name = '1'       
"SELECT player_attributes.preferred_foot, avg( player_attributes.overall_rating) FROM Player_Attributes  GROUP BY player_attributes.preferred_foot      "
"SELECT rooms.RoomId, rooms.roomName FROM Rooms    ORDER BY rooms.basePrice DESC LIMIT 1    "
SELECT DISTINCT count(DISTINCT papers.title) FROM Papers JOIN Authorship ON papers.paperID = Authorship.paperID JOIN Inst ON Authorship.instID = institution.instID WHERE institution.name = 'University of Pennsylvania'       
SELECT city.City FROM city JOIN temperature ON city.City_ID = temperature.City_ID WHERE temperature.Mar < 1     INTERSECT SELECT city.City FROM city JOIN hosting_city ON city.City_ID = T4.Host_City          
"SELECT people.Birth_Place, count( *) FROM people  GROUP BY people.Birth_Place      "
SELECT avg( airport.Total_Passengers) FROM airport JOIN airport_aircraft ON airport.Airport_ID = airport_aircraft.Airport_ID JOIN aircraft ON airport_aircraft.Aircraft_ID = aircraft.Aircraft_ID WHERE aircraft.Aircraft = 'Robinson R-22'       
SELECT DISTINCT count(DISTINCT author.name) FROM organization JOIN author WHERE organization.name = '1'       
SELECT sum( apartments.room_count) FROM Apartments JOIN Apartment_Buildings ON apartments.building_id = apartment_buildings.building_id WHERE apartment_buildings.building_short_name = 'Columbus Square'       
SELECT song.f_id FROM song WHERE song.resolution > (SELECT max( song.resolution) FROM song WHERE song.rating < 8       )       
"SELECT accounts.Statement_ID, statements.Statement_Details, accounts.Account_Details FROM Accounts JOIN Statements ON accounts.Statement_ID = statements.Statement_ID        "
SELECT DISTINCT count(DISTINCT film.language_id) FROM film        
SELECT count( *) FROM actor        
SELECT catalog_contents.catalog_entry_name FROM Catalog_Contents    ORDER BY catalog_contents.capacity ASC LIMIT 1    
SELECT submission.College FROM submission WHERE submission.Scores > 90     INTERSECT SELECT submission.College FROM submission WHERE submission.Scores < 80         
SELECT DISTINCT customers.Customer_Details FROM Customers        
SELECT count( *) FROM train_station        
SELECT race.Class FROM race  GROUP BY race.Class  ORDER BY count( *) DESC LIMIT 1    
SELECT people.Name FROM people JOIN body_builder ON people.People_ID = T2.People_ID    ORDER BY people.Weight DESC LIMIT 1    
SELECT club.ClubLocation FROM Club WHERE club.ClubName = 'Pen and Paper Gaming'       
SELECT bank.bname FROM bank JOIN loan ON bank.branch_ID = loan.branch_ID  GROUP BY bank.bname  ORDER BY sum( loan.amount) DESC LIMIT 1    
SELECT campuses.Campus FROM Campuses WHERE campuses.County = 'Los Angeles'       
SELECT state.density FROM state WHERE state.area = (SELECT max( state.area) FROM state        )       
"SELECT exhibition.Theme, exhibition_record.Date, exhibition_record.Attendance FROM exhibition JOIN exhibition_record ON exhibition.Exhibition_ID = exhibition_record.Exhibition_ID WHERE exhibition.Year = 2004       "
"SELECT DISTINCT student.Fname, student.city_code FROM Student JOIN Has_Allergy ON student.StuID = has_allergy.StuID WHERE has_allergy.Allergy = '1' or has_allergy.Allergy = '1'       "
SELECT count( state.state_name) FROM state        
SELECT performance.Location FROM performance  GROUP BY performance.Location  ORDER BY count( *) DESC LIMIT 1    
SELECT races.name FROM races WHERE races.year between 2009 AND 2011       
SELECT tourist_attractions.Name FROM Tourist_Attractions JOIN Locations ON tourist_attractions.Location_ID = locations.Location_ID WHERE locations.Address = '660 Shea Crescent' or tourist_attractions.How_to_Get_There = 'walk'       
SELECT jobs.JOB_TITLE FROM jobs WHERE jobs.MIN_SALARY > 9000       
SELECT video_games.GType FROM Video_Games WHERE video_games.GName = '1'       
"SELECT department.Department_ID, department.Name, count( *) FROM department JOIN management ON department.Department_ID = management.department_ID  GROUP BY department.Department_ID HAVING count( *) > 1     "
"SELECT user_profiles.name, user_profiles.email FROM user_profiles WHERE user_profiles.followers > 1000       "
SELECT movie.title FROM cast JOIN actor ON T2.aid = actor.aid JOIN movie WHERE actor.name = 'Robin Wright'       
SELECT sum( apartments.room_count) FROM Apartments JOIN Apartment_Buildings ON apartments.building_id = apartment_buildings.building_id WHERE apartment_buildings.building_short_name = 'Columbus Square'       
SELECT mountain.state_name FROM mountain WHERE mountain.mountain_name = '1'       
SELECT highlow.highest_point FROM highlow WHERE highlow.state_name in (SELECT border_info.border FROM border_info WHERE border_info.state_name = '1'       )   ORDER BY highlow.highest_elevation DESC LIMIT 1    
SELECT member.Member_Name FROM member        EXCEPT SELECT member.Member_Name FROM member JOIN party_events ON member.Member_ID = T3.Member_in_charge_ID        
"SELECT max( customers.customer_code), min( customers.customer_code) FROM Customers        "
"SELECT market.Country, film_market_estimation.Year FROM market JOIN film_market_estimation ON market.Market_ID = film_market_estimation.Market_ID        "
"SELECT people.Name, debate.Date, debate.Venue FROM people JOIN debate_people ON people.People_ID = debate_people.Negative JOIN debate ON debate_people.Debate_ID = debate.Debate_ID        "
SELECT count( *) FROM country        
"SELECT actor.first_name, actor.last_name, actor.actor_id FROM actor JOIN film_actor ON actor.actor_id = T3.actor_id  GROUP BY T3.actor_id  ORDER BY count( *) DESC LIMIT 1    "
SELECT organisation_types.organisation_type_description FROM Organisation_Types JOIN Organisations ON organisation_types.organisation_type = organisations.organisation_type WHERE organisations.organisation_details = 'quo'       
SELECT DISTINCT pilot.Position FROM pilot WHERE pilot.Age > 30       
SELECT count( *) FROM PROFESSOR WHERE professor.PROF_HIGH_DEGREE = 'Ph.D.'       
SELECT channel.Name FROM channel WHERE channel.Owner = 'CCTV' or channel.Owner = 'HBS'       
SELECT apartments.apt_number FROM Apartments     ORDER BY apartments.room_count ASC   
SELECT river.length FROM river WHERE river.river_name = '1'       
SELECT count( *) FROM Album        
SELECT enzyme.name FROM enzyme     ORDER BY enzyme.name DESC   
"SELECT count( *), list.Classroom FROM list  GROUP BY list.Classroom      "
SELECT count( *) FROM address WHERE address.district = 'California'       
SELECT projects.Name FROM Projects WHERE projects.Hours > (SELECT avg( projects.Hours) FROM Projects        )       
SELECT job_history.EMPLOYEE_ID FROM job_history JOIN employees ON job_history.EMPLOYEE_ID = employees.EMPLOYEE_ID  GROUP BY job_history.EMPLOYEE_ID HAVING count( *) >= 2     
SELECT physician.Name FROM Physician WHERE physician.Position like '%senior%'       
"SELECT faculty.Rank, faculty.Sex, count( *) FROM Faculty  GROUP BY faculty.Sex      "
"SELECT courses.course_description, courses.course_name FROM Courses JOIN Student_Course_Enrolment ON courses.course_id = T2.course_id  GROUP BY T2.course_id HAVING count( *) > 2     "
SELECT count( *) FROM Patient WHERE patient.SSN NOT IN (SELECT prescribes.Patient FROM Prescribes JOIN Medication ON prescribes.Medication = medication.Code WHERE medication.Name = 'Procrastin-X'       )       
SELECT actor.nationality FROM actor WHERE actor.name = 'Christoph Waltz'       
SELECT count( *) FROM Department_Store_Chain WHERE department_store_chain.dept_store_chain_name = 'South'       
SELECT DISTINCT customer.Address FROM Customer JOIN Invoice ON customer.CustomerId = T2.CustomerId WHERE customer.Country = 'Germany'       
SELECT member.Name FROM member WHERE member.Member_ID NOT IN (SELECT membership_register_branch.Member_ID FROM membership_register_branch        )       
SELECT count( *) FROM Projects JOIN Project_Outcomes ON projects.project_id = project_outcomes.project_id WHERE project_outcomes.outcome_code = '1'       
SELECT employee.name FROM employee JOIN certificate ON employee.eid = certificate.eid JOIN aircraft ON certificate.aid = aircraft.aid WHERE aircraft.name = 'Boeing 737-800'     INTERSECT SELECT employee.name FROM employee JOIN certificate ON employee.eid = certificate.eid JOIN aircraft ON certificate.aid = aircraft.aid WHERE aircraft.name = 'Airbus A340-300'         
"SELECT student.Fname, student.LName FROM Student JOIN Member_of_club ON student.StuID = Member_of_club.StuID JOIN Club ON Member_of_club.ClubID = club.ClubID WHERE club.ClubName = 'Bootup Baltimore' and student.Major = 600       "
SELECT bank.bname FROM bank JOIN customer ON bank.branch_ID = customer.branch_ID JOIN loan ON bank.branch_ID = T3.branch_ID WHERE customer.credit_score < 100       
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
SELECT country.Official_native_language FROM country JOIN match_season ON country.Country_id = match_season.Country WHERE match_season.College = 'Maryland' or match_season.College = 'Duke'       
SELECT reviewer.rID FROM Reviewer WHERE reviewer.name = 'Daniel Lewis'       
SELECT albums.title FROM albums        
SELECT submission.Author FROM submission     ORDER BY submission.Scores ASC   
"SELECT files.duration, files.file_size, files.formats FROM files JOIN song ON files.f_id = song.f_id WHERE song.genre_is = '1'    ORDER BY song.song_name ASC   "
SELECT accounts.name FROM ACCOUNTS     ORDER BY accounts.name ASC   
SELECT sum( rooms.maxOccupancy) FROM Rooms WHERE rooms.decor = '1'       
"SELECT candidate.Support_rate, candidate.Consider_rate, candidate.Oppose_rate FROM candidate     ORDER BY candidate.Unsure_rate ASC   "
SELECT actor.name FROM actor JOIN cast ON actor.aid = T3.aid JOIN movie WHERE movie.title = 'Camp X-Ray'       
SELECT competition.Country FROM competition WHERE competition.Competition_type = 'Tournament' GROUP BY competition.Country  ORDER BY count( *) DESC LIMIT 1    
SELECT city.city_name FROM city WHERE city.population > 1 and city.state_name = (SELECT state.state_name FROM state WHERE state.area = (SELECT min( state.area) FROM state        )       )       
SELECT DISTINCT count(DISTINCT business.name) FROM business JOIN category ON business.business_id = category.business_id WHERE business.city = '1' and category.category_name = '1'       
"SELECT medicine.name, medicine.Trade_Name FROM medicine WHERE medicine.FDA_approved = 'Yes'       "
"SELECT film.Title, max( schedule.Price) FROM film JOIN schedule ON film.Film_ID = schedule.Film_ID  GROUP BY film.Title      "
SELECT highlow.highest_point FROM highlow WHERE highlow.state_name = '1'       
SELECT student_course_registrations.student_id FROM Student_Course_Registrations       UNION SELECT student_course_attendance.student_id FROM Student_Course_Attendance         
SELECT student.Major FROM Student WHERE student.Sex = 'F' GROUP BY student.Major  ORDER BY count( *) DESC LIMIT 1    
SELECT city.Name FROM city     ORDER BY city.Name ASC   
"SELECT max( track.Milliseconds), min( track.Milliseconds) FROM Track JOIN Genre ON track.GenreId = genre.GenreId WHERE genre.Name = 'Pop'       "
SELECT river.river_name FROM river WHERE river.length = (SELECT min( river.length) FROM river WHERE river.traverse = '1'       ) and river.traverse = '1'       
SELECT student_course_registrations.course_id FROM Student_Course_Registrations WHERE student_course_registrations.student_id = 121      UNION SELECT student_course_attendance.course_id FROM Student_Course_Attendance WHERE student_course_attendance.student_id = 121        
"SELECT player.Player_name, coach.Coach_name FROM player JOIN player_coach ON player.Player_ID = player_coach.Player_ID JOIN coach ON player_coach.Coach_ID = coach.Coach_ID     ORDER BY player.Votes DESC   "
SELECT address.district FROM address  GROUP BY address.district HAVING count( *) >= 2     
SELECT ship.Name FROM Ship JOIN captain ON ship.Ship_ID = T2.Ship_ID  GROUP BY ship.Name HAVING count( *) > 1     
SELECT product.product FROM store JOIN store_product ON store.Store_ID = T3.Store_ID JOIN product WHERE store.Store_Name = 'Miramichi'       
SELECT aircraft.Aircraft FROM aircraft JOIN airport_aircraft ON aircraft.Aircraft_ID = airport_aircraft.Aircraft_ID JOIN airport ON airport_aircraft.Airport_ID = airport.Airport_ID WHERE airport.Airport_Name = 'London Gatwick'       
SELECT catalog_contents.catalog_entry_name FROM Catalog_Contents WHERE catalog_contents.length < '3' or catalog_contents.width > '5'       
SELECT participants_in_events.Event_ID FROM Participants_in_Events JOIN Participants ON participants_in_events.Participant_ID = participants.Participant_ID  GROUP BY participants_in_events.Event_ID  ORDER BY count( *) DESC LIMIT 1    
SELECT entrepreneur.Company FROM entrepreneur JOIN people ON entrepreneur.People_ID = people.People_ID    ORDER BY people.Height DESC LIMIT 1    
SELECT useracct.name FROM useracct JOIN review ON useracct.u_id = review.u_id  GROUP BY useracct.name  ORDER BY count( *) DESC LIMIT 1    
"SELECT allergy_type.AllergyType, count( *) FROM Allergy_Type JOIN Has_Allergy ON allergy_type.Allergy = Has_Allergy.Allergy JOIN Student ON Has_Allergy.StuID = student.StuID  GROUP BY allergy_type.AllergyType      "
SELECT student.name FROM student WHERE student.ID in (SELECT takes_classes.ID FROM takes WHERE takes_classes.semester = 'Fall' and takes_classes.year = 2003       )       
SELECT river.river_name FROM river WHERE river.traverse in (SELECT border_info.border FROM border_info WHERE border_info.state_name = '1'       )       
SELECT DISTINCT count(DISTINCT basketball_match.School_ID) FROM basketball_match        
SELECT employee.eid FROM employee WHERE employee.salary > 100000       
SELECT employees.EMPLOYEE_ID FROM employees WHERE employees.SALARY > (SELECT avg( employees.SALARY) FROM employees        )       
"SELECT trip.id, trip.duration FROM trip    ORDER BY trip.duration DESC LIMIT 1    "
SELECT participates_in.stuid FROM Participates_in JOIN Activity ON participates_in.actid = activity.actid WHERE activity.activity_name = 'Canoeing'     INTERSECT SELECT participates_in.stuid FROM Participates_in JOIN Activity ON participates_in.actid = activity.actid WHERE activity.activity_name = 'Kayaking'         
SELECT DISTINCT state.capital FROM state        
SELECT customers.customer_name FROM Customers WHERE customers.payment_method = (SELECT customers.payment_method FROM Customers  GROUP BY customers.payment_method  ORDER BY count( *) DESC LIMIT 1    )       
SELECT count( *) FROM invoices WHERE invoices.billing_city = 'Chicago' and invoices.billing_state = 'IL'       
SELECT state.capital FROM state WHERE state.population = (SELECT max( state.population) FROM state        )       
SELECT city.population FROM city WHERE city.city_name = '1'       
SELECT flight.origin FROM flight  GROUP BY flight.origin  ORDER BY count( *) DESC LIMIT 1    
"SELECT tourist_attractions.Name, visits.Tourist_Attraction_ID, count( *) FROM Tourist_Attractions JOIN Visits ON tourist_attractions.Tourist_Attraction_ID = visits.Tourist_Attraction_ID  GROUP BY visits.Tourist_Attraction_ID      "
SELECT addresses.zip_postcode FROM Addresses JOIN Staff ON addresses.address_id = staff.staff_address_id WHERE staff.first_name = 'Janessa' and staff.last_name = 'Sawayn'       
SELECT avg( county.Population) FROM county        
SELECT staff_department_assignments.staff_id FROM Staff_Department_Assignments WHERE staff_department_assignments.date_assigned_to < (SELECT max( staff_department_assignments.date_assigned_to) FROM Staff_Department_Assignments WHERE staff_department_assignments.job_title_code = 'Clerical Staff'       )       
SELECT player.pName FROM Player WHERE player.yCard = 'yes'    ORDER BY player.HS DESC   
"SELECT project_staff.date_from, project_staff.date_to FROM Project_Staff WHERE project_staff.project_id in (SELECT project_staff.project_id FROM Project_Staff  GROUP BY project_staff.project_id  ORDER BY count( *) DESC LIMIT 1    )      UNION SELECT project_staff.date_from, project_staff.date_to FROM Project_Staff WHERE project_staff.role_code = '1'        "
"SELECT employee.FirstName, employee.LastName FROM Employee WHERE employee.City = 'Calgary'       "
SELECT count( *) FROM Customer WHERE customer.Email like '%gmail.com%'       
SELECT business.city FROM business JOIN category ON business.business_id = category.business_id WHERE business.name = '1' and category.category_name = '1'       
SELECT student.StuID FROM Student WHERE student.city_code = 'CHI'       
SELECT movie.title FROM Movie JOIN Rating ON movie.mID = rating.mID WHERE rating.stars = 3     INTERSECT SELECT movie.title FROM Movie JOIN Rating ON movie.mID = rating.mID WHERE rating.stars = 4         
SELECT publication.abstract FROM publication WHERE publication.title = '1'       
SELECT count( *) FROM Student        
SELECT wine.Name FROM wine JOIN grapes ON wine.Grape = grapes.Grape WHERE grapes.Color = '1' and wine.Price > 1       
SELECT DISTINCT document_locations.Location_Code FROM Document_Locations        
SELECT DISTINCT customers.Customer_Details FROM Customers        
SELECT wrestler.Name FROM wrestler     ORDER BY wrestler.Days_held DESC   
SELECT reference_document_status.document_status_code FROM Ref_Document_Status        
SELECT match.Venue FROM match     ORDER BY match.Date DESC   
SELECT sum( apartments.room_count) FROM Apartments JOIN Apartment_Facilities ON apartments.apt_id = apartment_facilities.apt_id WHERE apartment_facilities.facility_code = 'Gym'       
"SELECT genre.g_name, genre.rating FROM genre     ORDER BY genre.g_name ASC   "
"SELECT phone.chip_model, phone.screen_mode FROM phone WHERE phone.Hardware_Model_name = 'LG-P760'       "
SELECT avg( student.Age) FROM Student JOIN Member_of_club ON student.StuID = Member_of_club.StuID JOIN Club ON Member_of_club.ClubID = club.ClubID WHERE club.ClubName = 'Hopkins Student Enterprises'       
SELECT DISTINCT count(DISTINCT tip.text) FROM tip JOIN user ON tip.user_id = user.user_id WHERE tip.year = 2010 and user.name = 'Michelle'       
SELECT player.Team FROM player     ORDER BY player.Team ASC   
SELECT csu_fees.CampusFee FROM csu_fees JOIN Campuses ON csu_fees.Campus = campuses.Id WHERE campuses.Campus = 'San Francisco State University' and csu_fees.Year = 1996       
SELECT club.ClubName FROM Club JOIN Member_of_club ON club.ClubID = member_of_club.ClubID JOIN Student ON member_of_club.StuID = student.StuID WHERE student.Major = 600 GROUP BY club.ClubName  ORDER BY count( *) DESC LIMIT 1    
SELECT channel.Name FROM channel JOIN broadcast ON channel.Channel_ID = broadcast.Channel_ID WHERE broadcast.Time_of_day = 'Morning'       
SELECT accounts.name FROM ACCOUNTS JOIN SAVINGS ON accounts.custid = savings.custid WHERE savings.balance > (SELECT avg( checking.balance) FROM CHECKING        )     INTERSECT SELECT accounts.name FROM ACCOUNTS JOIN SAVINGS ON accounts.custid = savings.custid WHERE savings.balance < (SELECT avg( savings.balance) FROM SAVINGS        )         
SELECT airports.name FROM airports JOIN routes ON airports.apid = routes.src_apid WHERE airports.country = 'China' GROUP BY airports.name  ORDER BY count( *) DESC LIMIT 1    
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
SELECT captain.Class FROM captain  GROUP BY captain.Class HAVING count( *) > 2     
"SELECT region.Region_name, count( *) FROM region JOIN affected_region ON region.Region_id = affected_region.Region_id  GROUP BY region.Region_name      "
SELECT count( *) FROM GEOGRAPHIC        
SELECT count( *) FROM architect WHERE architect.id NOT IN (SELECT mill.architect_id FROM mill WHERE mill.built_year < 1850       )       
"SELECT invoices.billing_state, count( *) FROM invoices WHERE invoices.billing_country = '1' GROUP BY invoices.billing_state      "
"SELECT transactions.transaction_type_code, max( transactions.share_count), min( transactions.share_count) FROM Transactions  GROUP BY transactions.transaction_type_code      "
SELECT storm.Name FROM storm JOIN affected_region ON storm.Storm_ID = affected_region.Storm_ID JOIN region ON affected_region.Region_id = region.Region_id WHERE region.Region_name = 'Denmark'       
"SELECT enzyme.Product, enzyme.Chromosome, enzyme.Porphyria FROM enzyme WHERE enzyme.Location = 'Cytosol'       "
"SELECT rooms.roomName, reservations.Rate, reservations.CheckIn, reservations.CheckOut FROM Rooms JOIN Reservations ON rooms.RoomId = reservations.Room    ORDER BY reservations.Rate DESC LIMIT 1    "
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1'       "
"SELECT count( *), financial_transactions.account_id FROM Financial_Transactions  GROUP BY financial_transactions.account_id      "
SELECT volume.Issue_Date FROM volume JOIN artist ON volume.Artist_ID = artist.Artist_ID WHERE artist.Age <= 23       
SELECT DISTINCT count(DISTINCT participants_in_events.Participant_ID) FROM Participants_in_Events        
"SELECT employee.name, employee.salary FROM employee WHERE employee.eid = 242518965       "
SELECT club.ClubName FROM Club JOIN Member_of_club ON club.ClubID = Member_of_club.ClubID JOIN Student ON Member_of_club.StuID = student.StuID WHERE student.Sex = 'F' GROUP BY club.ClubName  ORDER BY count( *) DESC LIMIT 1    
SELECT count( *) FROM stadium        
SELECT DISTINCT count(DISTINCT broadcast.Program_ID) FROM broadcast WHERE broadcast.Time_of_day = 'Night'       
SELECT count( *) FROM Projects        
SELECT highlow.highest_point FROM highlow WHERE highlow.state_name in (SELECT state.state_name FROM state WHERE state.density = (SELECT min( state.density) FROM state        )       )       
SELECT avg( salary.salary) FROM salary JOIN team WHERE team.name = 'Boston Red Stockings'       
"SELECT people.Country, count( *) FROM people  GROUP BY people.Country      "
SELECT staff.staff_name FROM Staff JOIN Staff_Department_Assignments ON staff.staff_id = T2.staff_id  GROUP BY staff.staff_name HAVING count( *) > 1     
SELECT count( *) FROM venue        
SELECT publication.reference_num FROM publication WHERE publication.title = '1'       
"SELECT avg( instructor.salary), count( *) FROM instructor JOIN department ON instructor.dept_name = department.dept_name    ORDER BY department.budget DESC LIMIT 1    "
SELECT flight.Pilot FROM flight JOIN operate_company ON flight.company_id = operate_company.id WHERE operate_company.Principal_activities = 'Cargo'     INTERSECT SELECT flight.Pilot FROM flight JOIN operate_company ON flight.company_id = operate_company.id WHERE operate_company.Principal_activities = 'Catering services'         
SELECT products.product_name FROM Products WHERE products.product_category_code = 'Spices'       
SELECT sum( publication.citation_num) FROM publication JOIN publication_keyword ON publication.pid = publication_keyword.pid JOIN keyword ON publication_keyword.kid = keyword.kid WHERE keyword.keyword = 'Natural Language'       
SELECT product_suppliers.supplier_id FROM Product_Suppliers  GROUP BY product_suppliers.supplier_id HAVING avg( product_suppliers.total_amount_purchased) > '50000' avg( product_suppliers.total_amount_purchased) < '30000'     
"SELECT addresses.city, count( *) FROM Addresses JOIN Staff ON addresses.address_id = staff.staff_address_id  GROUP BY addresses.city  ORDER BY count( *) DESC LIMIT 1    "
SELECT count( *) FROM venue        
SELECT department.SCHOOL_CODE FROM DEPARTMENT WHERE department.DEPT_NAME = 'Accounting'       
SELECT avg( student.Age) FROM Student WHERE student.Sex = 'F'       
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = 'Question Answering'       
SELECT player.Team FROM player     ORDER BY player.Team ASC   
SELECT products.product_name FROM Products JOIN Ref_Colors ON products.color_code = reference_colors.color_code WHERE reference_colors.color_description = 'white'       
SELECT domain.name FROM domain JOIN domain_conference ON domain.did = domain_conference.did JOIN conference ON domain_conference.cid = conference.cid WHERE conference.name = 'VLDB'       
SELECT useracct.name FROM useracct WHERE useracct.u_id NOT IN (SELECT review.u_id FROM review        )       
SELECT customers_cards.card_type_code FROM Customers_Cards  GROUP BY customers_cards.card_type_code  ORDER BY count( *) DESC LIMIT 1    
SELECT person_friend.friend FROM PersonFriend WHERE person_friend.name = 'Zach' and person_friend.year = (SELECT max( person_friend.year) FROM PersonFriend WHERE person_friend.name = 'Zach'       )       
SELECT count( *) FROM Addresses WHERE addresses.state_province_county = 'Colorado'       
SELECT station.name FROM station JOIN status ON station.id = T2.station_id  GROUP BY station.name HAVING avg( T2.bikes_available) > 10     EXCEPT SELECT station.name FROM station WHERE station.city = 'San Jose'       
SELECT DISTINCT count(DISTINCT college.state) FROM College WHERE college.enr < (SELECT avg( college.enr) FROM College        )       
SELECT count( *) FROM Settlements        
"SELECT avg( people.Height), avg( people.Weight) FROM people WHERE people.Sex = 'M'       "
SELECT student.Advisor FROM Student  GROUP BY student.Advisor  ORDER BY count( *) DESC LIMIT 1    
SELECT student.name FROM student WHERE student.ID NOT IN (SELECT takes_classes.ID FROM takes JOIN section ON takes_classes.course_id = section.course_id JOIN course ON section.course_id = course.course_id WHERE course.dept_name = 'Biology'       )       
SELECT business.business_id FROM business WHERE business.city = 'Los Angeles' and business.name = 'Apple Store'       
SELECT artwork.Type FROM artwork  GROUP BY artwork.Type  ORDER BY count( *) DESC LIMIT 1    
"SELECT student.Fname, student.Age FROM Student JOIN Lives_in ON student.StuID = lives_in.stuid WHERE lives_in.dormid NOT IN (SELECT has_amenity.dormid FROM Has_amenity JOIN Dorm_amenity ON has_amenity.amenid = dorm_amenity.amenid WHERE dorm_amenity.amenity_name = 'TV Lounge'       )       "
SELECT DISTINCT count(DISTINCT trip.bike_id) FROM trip        
SELECT weather.date FROM weather WHERE weather.mean_sea_level_pressure_inches between 30.3 AND 31       
SELECT DISTINCT paper.venueId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Daniella Coelho'       
"SELECT count( *), genres.name FROM tracks JOIN genres ON tracks.genre_id = genres.id  GROUP BY genres.name      "
SELECT rooms.roomName FROM Rooms WHERE rooms.bedType = 'King' or rooms.bedType = 'Queen'       
SELECT DISTINCT student.Fname FROM Student JOIN Voting_record ON student.StuID = T2.Class_Senator_Vote        EXCEPT SELECT DISTINCT student.Fname FROM Student WHERE student.city_code = 'PIT'       
SELECT customers.customer_name FROM Customers JOIN Orders ON customers.customer_id = Orders.customer_id JOIN Order_Items ON Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = products.product_id WHERE products.product_name = 'food' GROUP BY customers.customer_name HAVING count( *) >= 1     
"SELECT artist.artist_name, artist.country FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.song_name like '%love%'       "
SELECT state.density FROM state WHERE state.state_name = '1'       
"SELECT cinema.Name, film.Title, schedule.Date, schedule.Price FROM cinema JOIN schedule ON cinema.Cinema_ID = schedule.Cinema_ID JOIN film ON schedule.Film_ID = film.Film_ID        "
SELECT section.course_id FROM section WHERE section.semester = 'Fall' and section.year = 2009       EXCEPT SELECT section.course_id FROM section WHERE section.semester = 'Spring' and section.year = 2010       
SELECT DISTINCT count(DISTINCT basketball_match.School_ID) FROM basketball_match        
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT count( *) FROM classroom WHERE classroom.building = 'Lamberton'       
"SELECT rooms.RoomId, rooms.roomName FROM Rooms    ORDER BY rooms.basePrice DESC LIMIT 1    "
SELECT gas_station.Location FROM gas_station     ORDER BY gas_station.Open_Year ASC   
SELECT city.Census_Ranking FROM city WHERE city.Status != 'Village'       
SELECT dorm_amenity.amenity_name FROM Dorm_amenity JOIN Has_amenity ON dorm_amenity.amenid = Has_amenity.amenid JOIN Dorm ON Has_amenity.dormid = dorm.dormid WHERE dorm.dorm_name = 'Smith Hall'       
SELECT count( *) FROM Ref_Budget_Codes        
SELECT count( *) FROM Manufacturers WHERE manufacturers.Founder = 'Andy'       
SELECT technician.Team FROM technician  GROUP BY technician.Team  ORDER BY count( *) DESC LIMIT 1    
"SELECT payments.Payment_Method_Code, payments.Date_Payment_Made, payments.Amount_Payment FROM Payments     ORDER BY payments.Date_Payment_Made ASC   "
SELECT border_info.state_name FROM border_info JOIN state ON border_info.border = state.state_name JOIN highlow ON state.state_name = highlow.state_name WHERE highlow.lowest_elevation = (SELECT min( highlow.lowest_elevation) FROM highlow        )   ORDER BY state.area DESC LIMIT 1    
SELECT avg( csu_fees.CampusFee) FROM csu_fees WHERE csu_fees.Year = 1996       
SELECT city.Status FROM city  GROUP BY city.Status   ORDER BY count( *) ASC   
SELECT DISTINCT person_friend.name FROM PersonFriend JOIN Person ON person_friend.friend = person.name WHERE person.name = 'Alice' and person_friend.name != 'Alice'       
SELECT stadium.Country FROM stadium        EXCEPT SELECT stadium.Country FROM stadium WHERE stadium.Opening_year > 2006       
SELECT campuses.Campus FROM Campuses WHERE campuses.Year >= 1935 and campuses.Year <= 1939       
SELECT authors.lname FROM Authors WHERE authors.fname = 'Amal'       
SELECT count( *) FROM Customers_Cards WHERE customers_cards.card_type_code = 'Debit'       
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and location.STREET_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT count( *) FROM Voting_record        
SELECT rooms.roomName FROM Rooms JOIN Reservations ON rooms.RoomId = T2.Room  GROUP BY rooms.roomName HAVING count( *) > 60     
"SELECT person.name, person.age, person.job FROM Person JOIN PersonFriend ON person.name = person_friend.friend WHERE person_friend.friend = 'Alice' and person_friend.year = (SELECT max( person_friend.year) FROM PersonFriend WHERE person_friend.friend = 'Alice'       )       "
SELECT trip.id FROM trip JOIN station    ORDER BY station.dock_count DESC LIMIT 1    
"SELECT rooms.roomName, rooms.basePrice FROM Rooms    ORDER BY rooms.basePrice ASC LIMIT 1    "
SELECT DISTINCT count(DISTINCT person.city) FROM Person        
"SELECT department.DEPT_NAME, avg( student.STU_GPA) FROM DEPARTMENT JOIN STUDENT ON department.DEPT_CODE = student.DEPT_CODE  GROUP BY department.DEPT_NAME  ORDER BY avg( student.STU_GPA) DESC LIMIT 1    "
SELECT DISTINCT paper.year FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE author.authorName = 'Michael Stonebraker' and key_phrase.keyphraseName = 'GIS Database'       
SELECT rooms.roomName FROM Rooms WHERE rooms.basePrice > (SELECT avg( rooms.basePrice) FROM Rooms        )       
SELECT DISTINCT catalogs.catalog_publisher FROM Catalogs WHERE catalogs.catalog_publisher like '%Murray%'       
SELECT count( *) FROM Department WHERE department.Division = 'AS'       
SELECT count( *) FROM Students WHERE students.student_id NOT IN (SELECT behavior_incident.student_id FROM Behavior_Incident        )       
"SELECT accounts.customer_id, count( *) FROM Accounts  GROUP BY accounts.customer_id  ORDER BY count( *) DESC LIMIT 1    "
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' and paper.year >= 1       
SELECT DISTINCT faculty.Building FROM Faculty        
"SELECT document_locations.Location_Code, document_locations.Date_in_Location_From, document_locations.Date_in_Locaton_To FROM Document_Locations        "
SELECT invoices.Product_ID FROM Invoices  GROUP BY invoices.Product_ID  ORDER BY count( *) DESC LIMIT 1    
SELECT count( *) FROM camera_lens WHERE camera_lens.id NOT IN (SELECT photos.camera_lens_id FROM photos        )       
SELECT DISTINCT max(DISTINCT paper.year) FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Mary Crainie'       
SELECT count( *) FROM GEOGRAPHIC JOIN RESTAURANT ON geographic.CITY_NAME = restaurant.CITY_NAME WHERE geographic.COUNTY = '1' and restaurant.NAME = '1'       
SELECT visitors.Tourist_Details FROM Visitors        
SELECT count( *) FROM Documents_to_be_Destroyed        
"SELECT physician.Name, department.Name FROM Physician JOIN Department ON physician.EmployeeID = department.Head JOIN Affiliated_With ON department.DepartmentID = affiliated_with.Department WHERE affiliated_with.PrimaryAffiliation = 1       "
SELECT customers.phone_number FROM Customers       UNION SELECT staff.phone_number FROM Staff         
"SELECT reference_document_types.Document_Type_Code, reference_document_types.Document_Type_Name FROM Ref_Document_Types        "
SELECT customers.Customer_Details FROM Customers        EXCEPT SELECT customers.Customer_Details FROM Customers JOIN Customer_Policies ON customers.Customer_ID = T3.Customer_ID        
SELECT document_sections.section_title FROM Document_Sections JOIN Documents ON document_sections.document_code = documents.document_code WHERE documents.document_name = 'David CV'       
SELECT product.product FROM product WHERE product.product != (SELECT product.max_page_size FROM product  GROUP BY product.max_page_size  ORDER BY count( *) DESC LIMIT 1    )       
SELECT papers.title FROM Papers JOIN Authorship ON papers.paperID = Authorship.paperID JOIN Authors ON Authorship.authID = authors.authID WHERE authors.fname = 'Jeremy' and authors.lname = 'Gibbons'       
SELECT research_staff.staff_details FROM Research_Staff     ORDER BY research_staff.staff_details ASC   
"SELECT reference_calendar.Day_Number, all_documents.Date_Stored FROM Ref_Calendar JOIN All_Documents ON reference_calendar.Calendar_Date = all_documents.Date_Stored        "
SELECT reference_product_categories.product_category_description FROM Ref_Product_Categories JOIN Products ON reference_product_categories.product_category_code = products.product_category_code WHERE products.product_description like '%t%'       
"SELECT music_festival.Category, count( *) FROM music_festival  GROUP BY music_festival.Category      "
"SELECT roller_coaster.Status, count( *) FROM roller_coaster  GROUP BY roller_coaster.Status      "
SELECT reviewer.name FROM Reviewer JOIN Rating ON reviewer.rID = rating.rID WHERE rating.stars = 3     INTERSECT SELECT reviewer.name FROM Reviewer JOIN Rating ON reviewer.rID = rating.rID WHERE rating.stars = 4         
SELECT documents_with_expenses.Document_ID FROM Documents_with_Expenses WHERE documents_with_expenses.Budget_Type_Code = 'SF'       
SELECT city.Status FROM city  GROUP BY city.Status  ORDER BY count( *) DESC LIMIT 1    
"SELECT church.Name, church.Open_Date FROM church    ORDER BY church.Open_Date DESC LIMIT 1    "
SELECT * FROM Customer_Master_Index     ORDER BY customer_master_index.cmi_details DESC   
SELECT actor.Name FROM musical JOIN actor     ORDER BY musical.Year DESC   
"SELECT count( *), university.Affiliation FROM university WHERE university.Enrollment > 20000 GROUP BY university.Affiliation      "
SELECT river.river_name FROM river WHERE river.traverse = '1'       
SELECT count( *) FROM head WHERE head.age > 56       
SELECT avg( csu_fees.CampusFee) FROM csu_fees WHERE csu_fees.Year = 2005       
"SELECT customers.customer_last_name, orders.customer_id, customers.phone_number FROM Customers JOIN Orders ON customers.customer_id = orders.customer_id  GROUP BY orders.customer_id  ORDER BY count( *) DESC LIMIT 1    "
SELECT customer.cust_name FROM customer        EXCEPT SELECT customer.cust_name FROM customer WHERE customer.acc_type = '1'       
"SELECT match_season.Draft_Pick_Number, match_season.Draft_Class FROM match_season WHERE match_season.Position = 'Defender'       "
"SELECT DISTINCT paper.year, writes.paperId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName like '%1%' and paper.year like %1%       "
SELECT people.Name FROM people WHERE people.Age = 35 or people.Age = 36       
"SELECT DISTINCT count(DISTINCT paper.paperId), writes.authorId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 2007 and venue.venueName = 'CVPR' GROUP BY writes.authorId   ORDER BY count( paper.paperId) DESC   "
SELECT submission.Author FROM submission WHERE submission.College = 'Florida' or submission.College = 'Temple'       
SELECT customer.cust_name FROM customer        EXCEPT SELECT customer.cust_name FROM customer JOIN bank ON customer.branch_ID = bank.branch_ID JOIN loan ON bank.branch_ID = loan.branch_ID WHERE loan.loan_type = 'Mortgages'       
"SELECT school.School, driver.Name FROM school JOIN school_bus ON school.School_ID = school_bus.School_ID JOIN driver ON school_bus.Driver_ID = driver.Driver_ID        "
"SELECT staff.first_name, staff.last_name, staff.staff_id FROM staff JOIN payment ON staff.staff_id = payment.staff_id  GROUP BY payment.staff_id  ORDER BY count( *) ASC LIMIT 1    "
"SELECT airports.name, airports.city, airports.country FROM airports    ORDER BY airports.elevation DESC LIMIT 1    "
SELECT avg( track.UnitPrice) FROM Track JOIN Genre ON track.GenreId = genre.GenreId WHERE genre.Name = 'Rock'       
"SELECT allergy_type.Allergy, allergy_type.AllergyType FROM Allergy_Type        "
"SELECT jobs.JOB_TITLE, avg( employees.SALARY) FROM jobs JOIN employees ON jobs.JOB_ID = employees.JOB_ID  GROUP BY jobs.JOB_TITLE      "
SELECT city.Official_Name FROM city WHERE city.Population > 1500 or city.Population < 500       
SELECT count( *) FROM candidate        
SELECT highlow.state_name FROM highlow WHERE highlow.highest_elevation = (SELECT max( highlow.highest_elevation) FROM highlow        )       
SELECT buildings.name FROM buildings WHERE buildings.id NOT IN (SELECT office_locations.building_id FROM Office_locations        )       
SELECT musical.Result FROM musical  GROUP BY musical.Result  ORDER BY count( *) DESC LIMIT 1    
SELECT songs.Title FROM Songs WHERE songs.Title like '%1%'       
SELECT count( *) FROM weather WHERE weather.mean_humidity > 50 and weather.mean_visibility_miles > 8       
SELECT count( *) FROM Institution JOIN building ON institution.building_id = building.building_id WHERE building.Floors >= 20       
SELECT projects.Name FROM Projects    ORDER BY projects.Hours DESC LIMIT 1    
"SELECT company.Company, company.Headquarters FROM company     ORDER BY company.Market_Value DESC   "
"SELECT products.product_id, reference_colors.color_description FROM Products JOIN Ref_Colors ON products.color_code = reference_colors.color_code JOIN Product_Characteristics ON products.product_id = T3.product_id  GROUP BY products.color_code HAVING count( *) >= 2     "
SELECT highlow.highest_point FROM highlow JOIN state ON highlow.state_name = state.state_name WHERE state.state_name in (SELECT state.state_name FROM state WHERE state.population = (SELECT min( state.population) FROM state        )       )       
SELECT weather.zip_code FROM weather  GROUP BY weather.zip_code HAVING avg( weather.mean_humidity) < 70   INTERSECT SELECT trip.zip_code FROM trip  GROUP BY trip.zip_code HAVING count( *) >= 100       
SELECT DISTINCT races.name FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Spain' and races.year > 2000       
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = geographic.CITY_NAME JOIN RESTAURANT ON geographic.CITY_NAME = restaurant.CITY_NAME WHERE geographic.REGION = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT actor.name FROM actor JOIN cast ON actor.aid = cast.aid JOIN tv_series WHERE cast.role = Olivia Pope and tv_series.title = 'Scandal'       
SELECT DISTINCT count(DISTINCT publication.title) FROM publication JOIN cite ON publication.pid = T2.citing WHERE publication.title = '1' and publication.year < 1       
SELECT avg( school.Enrollment) FROM school        
SELECT count( *) FROM camera_lens WHERE camera_lens.focal_length_mm > 15       
SELECT count( *) FROM venue        
SELECT storm.Name FROM storm JOIN affected_region ON storm.Storm_ID = affected_region.Storm_ID JOIN region ON affected_region.Region_id = region.Region_id WHERE region.Region_name = 'Denmark'       
SELECT publication.title FROM publication    ORDER BY publication.citation_num DESC LIMIT 1    
SELECT count( *) FROM region        
SELECT person_friend.friend FROM PersonFriend JOIN Person ON person_friend.friend = person.name WHERE person_friend.name = 'Alice' and person.gender = 'female'       
SELECT city.state_name FROM city WHERE city.city_name = '1'       
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' and paper.year < 1       
SELECT reference_locations.Location_Name FROM Ref_Locations JOIN Document_Locations ON reference_locations.Location_Code = Document_Locations.Location_Code JOIN All_Documents ON Document_Locations.Document_ID = all_documents.Document_ID WHERE all_documents.Document_Name = 'Robin CV'       
SELECT parties.party_email FROM Parties JOIN Party_Forms ON parties.party_id = party_forms.party_id WHERE party_forms.form_id = (SELECT party_forms.form_id FROM Party_Forms JOIN Parties ON party_forms.party_id = parties.party_id  GROUP BY party_forms.form_id  ORDER BY count( *) DESC LIMIT 1    )       
SELECT students.cell_mobile_number FROM Students JOIN Student_Addresses ON students.student_id = student_addresses.student_id    ORDER BY student_addresses.monthly_rental ASC LIMIT 1    
SELECT DISTINCT product.product_name FROM Product     ORDER BY product.product_name ASC   
SELECT * FROM departments WHERE departments.DEPARTMENT_NAME = 'Marketing'       
"SELECT student.Fname, student.LName FROM Student WHERE student.StuID NOT IN (SELECT has_allergy.StuID FROM Has_Allergy JOIN Allergy_Type ON has_allergy.Allergy = allergy_type.Allergy WHERE allergy_type.AllergyType = 'food'       )       "
SELECT track.Name FROM Track WHERE track.Name like '%1%'       
SELECT DISTINCT count(DISTINCT companies.Industry) FROM Companies        
SELECT dorm.dorm_name FROM Dorm WHERE dorm.student_capacity > 300       
SELECT avg( student.Age) FROM Student JOIN Member_of_club ON student.StuID = Member_of_club.StuID JOIN Club ON Member_of_club.ClubID = club.ClubID WHERE club.ClubName = 'Tennis Club'       
SELECT customers.customer_name FROM Customers        EXCEPT SELECT customers.customer_name FROM Customers JOIN Customer_Orders ON customers.customer_id = Customer_Orders.customer_id JOIN Order_Items ON Customer_Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = products.product_id WHERE products.product_details = 'Latte'       
SELECT dorm.dorm_name FROM Dorm WHERE dorm.dormid NOT IN (SELECT has_amenity.dormid FROM Has_amenity        )       
SELECT count( *) FROM park WHERE park.city = 'Atlanta'       
SELECT drama_workshop_groups.Marketing_Region_Code FROM Drama_Workshop_Groups  GROUP BY drama_workshop_groups.Marketing_Region_Code  ORDER BY count( *) DESC LIMIT 1    
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Liwen Xiong' and paper.year = 2015       
SELECT count( *) FROM Apartments WHERE apartments.apt_id NOT IN (SELECT apartment_facilities.apt_id FROM Apartment_Facilities        )       
"SELECT company.Main_Industry, sum( company.Market_Value) FROM company  GROUP BY company.Main_Industry      "
SELECT customers.customer_name FROM Customers WHERE customers.payment_method != 'Cash'       
"SELECT party.Party_name, region.Region_name FROM party JOIN region ON party.Region_ID = region.Region_ID        "
SELECT payment.payment_date FROM payment    ORDER BY payment.payment_date ASC LIMIT 1    
"SELECT person.name, person.job FROM Person     ORDER BY person.name ASC   "
SELECT DISTINCT count(DISTINCT review.text) FROM review JOIN user ON review.user_id = user.user_id WHERE review.year = 2015 and user.name = 'Niloofar'       
SELECT course.CName FROM Course JOIN Enrolled_in ON course.CID = T2.CID  GROUP BY course.CName HAVING count( *) >= 5     
SELECT DISTINCT count(DISTINCT writes.paperId) FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
SELECT instruments.Instrument FROM Instruments JOIN Songs ON instruments.SongId = songs.SongId JOIN Performance ON songs.SongId = T3.SongId JOIN Band ON T3.Bandmate = band.Id WHERE band.Lastname = 'Heilo' and songs.Title = 'Badlands'       
"SELECT min( student.Age), avg( student.Age), max( student.Age) FROM Student        "
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT count( *) FROM routes JOIN airports ON routes.src_apid = airports.apid WHERE airports.country = 'Italy'       
SELECT county.Zip_code FROM county WHERE county.County_name = 'Howard'       
SELECT orders.date_order_placed FROM Orders JOIN Customers ON orders.customer_id = customers.customer_id WHERE customers.customer_name = 'Jeramie'       
SELECT DISTINCT student.LName FROM Student JOIN Voting_record ON student.StuID = T2.Class_Senator_Vote      INTERSECT SELECT DISTINCT student.LName FROM Student WHERE student.Advisor = 8741         
SELECT program.Name FROM program JOIN broadcast ON program.Program_ID = T2.Program_ID  GROUP BY program.Name  ORDER BY count( *) DESC LIMIT 1    
SELECT country.Country_name FROM country JOIN match_season ON country.Country_id = match_season.Country WHERE match_season.Position = '1'     INTERSECT SELECT country.Country_name FROM country JOIN match_season ON country.Country_id = match_season.Country WHERE match_season.Position = '1'         
SELECT DISTINCT count(DISTINCT course.course_id) FROM course WHERE course.dept_name = 'Physics'       
SELECT ref_hotel_star_ratings.star_rating_description FROM Ref_Hotel_Star_Ratings JOIN Hotels ON ref_hotel_star_ratings.star_rating_code = hotels.star_rating_code WHERE hotels.price_range > 10000       
SELECT movie.title FROM Movie WHERE movie.year = (SELECT max( movie.year) FROM Movie        )       
"SELECT voting_record.Election_Cycle, count( *) FROM Voting_record  GROUP BY voting_record.Election_Cycle      "
"SELECT company.Main_Industry, sum( company.Market_Value) FROM company  GROUP BY company.Main_Industry      "
"SELECT min( invoices.Order_Quantity), avg( invoices.Order_Quantity), max( invoices.Order_Quantity) FROM Invoices        "
SELECT tourist_attractions.Name FROM Tourist_Attractions JOIN Locations ON tourist_attractions.Location_ID = locations.Location_ID WHERE locations.Address = '254 Ottilie Junction' or tourist_attractions.How_to_Get_There = 'bus'       
SELECT people.Name FROM people JOIN body_builder ON people.People_ID = T2.People_ID        
SELECT course_authors_and_tutors.login_name FROM Course_Authors_and_Tutors JOIN Courses ON course_authors_and_tutors.author_id = courses.author_id WHERE courses.course_name = 'advanced database'       
"SELECT invoices.order_id, count( *) FROM Invoices  GROUP BY invoices.order_id      "
"SELECT max( student.STU_GPA), avg( student.STU_GPA), min( student.STU_GPA), student.DEPT_CODE FROM STUDENT  GROUP BY student.DEPT_CODE      "
SELECT manufacturers.Founder FROM Manufacturers WHERE manufacturers.Name like '%S%'       
SELECT tracks.name FROM tracks JOIN playlist_tracks ON tracks.id = playlist_tracks.track_id JOIN playlists ON playlist_tracks.playlist_id = playlists.id WHERE playlists.name = 'Movies'       
SELECT highlow.lowest_point FROM highlow WHERE highlow.state_name = '1'       
"SELECT faculty.Fname, faculty.Lname FROM Faculty JOIN Course ON faculty.FacID = course.Instructor  GROUP BY course.Instructor  ORDER BY count( *) DESC LIMIT 1    "
SELECT DISTINCT songs.Title FROM Songs JOIN Vocals ON songs.SongId = T2.SongId        EXCEPT SELECT songs.Title FROM Songs JOIN Vocals ON songs.SongId = vocals.SongId WHERE vocals.Type = '1'       
"SELECT match_season.Position, count( *) FROM match_season JOIN team ON match_season.Team = team.Team_id  GROUP BY match_season.Position      "
SELECT reference_colors.color_description FROM Ref_Colors        
"SELECT movie.title, avg( rating.stars) FROM Movie JOIN Rating ON movie.mID = rating.mID  GROUP BY movie.title  ORDER BY avg( rating.stars) DESC LIMIT 1    "
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 1 and venue.venueName = '1'       
SELECT ship.Name FROM ship WHERE ship.Nationality = 'United States' or ship.Nationality = 'United Kingdom'       
SELECT perpetrator.Injured FROM perpetrator     ORDER BY perpetrator.Injured ASC   
SELECT river.river_name FROM river WHERE river.length = (SELECT min( river.length) FROM river        )       
SELECT city.state_name FROM city WHERE city.population = (SELECT max( city.population) FROM city        )       
SELECT tryout.cName FROM Tryout JOIN Player ON tryout.pID = player.pID WHERE player.pName like '%D%'       
"SELECT customer.cust_name, customer.acc_type FROM customer JOIN bank ON customer.branch_ID = bank.branch_ID JOIN loan ON bank.branch_ID = T2.branch_ID  GROUP BY customer.cust_ID HAVING sum( T2.amount) > 5000     "
SELECT hotels.price_range FROM Hotels        
"SELECT project_staff.date_from, project_staff.date_to FROM Project_Staff WHERE project_staff.role_code = '1'       "
"SELECT reference_transaction_types.transaction_type_description, transactions.date_of_transaction FROM Ref_Transaction_Types JOIN Transactions ON reference_transaction_types.transaction_type_code = transactions.transaction_type_code WHERE transactions.share_count < '10'       "
"SELECT player.name_first, player.name_last FROM player WHERE player.weight > 220 or player.height < 75       "
SELECT DISTINCT customers_cards.card_type_code FROM Customers_Cards        
SELECT mountain.Country FROM mountain WHERE mountain.Height > 5000       
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1' and paper.year = 1       
SELECT state.capital FROM state JOIN city ON state.state_name = city.state_name WHERE city.population <= 1       
"SELECT employee.EMP_FNAME, professor.PROF_OFFICE, course.CRS_DESCRIPTION, department.DEPT_NAME FROM EMPLOYEE JOIN PROFESSOR ON employee.EMP_NUM = professor.EMP_NUM JOIN DEPARTMENT ON professor.DEPT_CODE = department.DEPT_CODE JOIN COURSE ON department.DEPT_CODE = course.DEPT_CODE JOIN EMPLOYEE ON department.EMP_NUM = employee.EMP_NUM JOIN CLASS ON employee.EMP_NUM = T5.PROF_NUM        "
SELECT project_staff.role_code FROM Project_Staff WHERE project_staff.date_from > '2003-04-19 15:06:20' and project_staff.date_to < '2016-03-15 00:33:18'       
SELECT product.product FROM product WHERE product.max_page_size = 'A4' and product.pages_per_minute_color < 5       
SELECT storm.Name FROM storm        EXCEPT SELECT storm.Name FROM storm JOIN affected_region ON storm.Storm_ID = T3.Storm_ID  GROUP BY storm.Name HAVING count( *) >= 2     
SELECT projects.project_details FROM Projects WHERE projects.project_id NOT IN (SELECT project_staff.project_id FROM Project_Staff WHERE project_staff.role_code = '1'       )       
SELECT * FROM employees WHERE employees.SALARY between 8000 AND 12000 and employees.COMMISSION_PCT != null or employees.DEPARTMENT_ID != 40       
SELECT DISTINCT count(DISTINCT instruments.Instrument) FROM Instruments JOIN Band ON instruments.BandmateId = band.Id WHERE band.Lastname = 'Heilo'       
"SELECT avg( storm.Damage_millions_USD), max( storm.Damage_millions_USD) FROM storm WHERE storm.Max_speed > 1000       "
SELECT match_season.College FROM match_season JOIN team ON match_season.Team = team.Team_id  GROUP BY match_season.College HAVING count( *) >= 2  ORDER BY match_season.College DESC   
SELECT sum( player.Points) FROM player        
"SELECT team.name, postseason.team_id_winner FROM postseason JOIN team WHERE postseason.year = 2008 GROUP BY postseason.team_id_winner  ORDER BY count( *) DESC LIMIT 1    "
SELECT count( *) FROM Songs        
"SELECT party.Minister, party.Took_office, party.Left_office FROM party     ORDER BY party.Left_office ASC   "
"SELECT mission.Code, mission.Fate, ship.Name FROM mission JOIN ship ON mission.Ship_ID = ship.Ship_ID        "
"SELECT products.Product_Name, avg( products.Product_Price) FROM Products  GROUP BY products.Product_Name      "
SELECT student.StuID FROM Student        EXCEPT SELECT sports_info.StuID FROM SportsInfo        
SELECT college.cName FROM College WHERE college.enr > (SELECT max( college.enr) FROM College WHERE college.state = 'FL'       )       
SELECT count( *) FROM Campuses WHERE campuses.County = 'Los Angeles'       
"SELECT race.Class, count( *) FROM race  GROUP BY race.Class      "
SELECT DISTINCT count(DISTINCT movie.title) FROM cast JOIN actor ON T2.aid = actor.aid JOIN movie WHERE actor.name = 'Jennifer Aniston' and movie.release_year > 2010       
"SELECT medicine.id, medicine.name FROM medicine JOIN medicine_enzyme_interaction ON medicine.id = T2.medicine_id  GROUP BY T2.medicine_id HAVING count( *) >= 2     "
"SELECT country.Country_name, count( *) FROM country JOIN match_season ON country.Country_id = match_season.Country JOIN team ON match_season.Team = team.Team_id  GROUP BY country.Country_name      "
SELECT ship.Built_Year FROM Ship  GROUP BY ship.Built_Year  ORDER BY count( *) DESC LIMIT 1    
SELECT DISTINCT departments.DEPARTMENT_NAME FROM departments JOIN employees ON departments.DEPARTMENT_ID = T2.DEPARTMENT_ID        
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId JOIN venue ON paper.venueId = venue.venueId WHERE key_phrase.keyphraseName = 'TAIL' and venue.venueName = 'NIPS'       
SELECT DISTINCT writes.authorId FROM writes JOIN paper ON writes.paperId = paper.paperId JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 1 and venue.venueName = '1'       
SELECT DISTINCT count(DISTINCT party.Party_name) FROM party        
SELECT count( *) FROM Ref_Characteristic_Types        
SELECT DISTINCT key_phrase.keyphraseId FROM keyphrase JOIN paperKeyphrase ON key_phrase.keyphraseId = paperKeyphrase.keyphraseId JOIN paper ON paperKeyphrase.paperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Luke Zettlemoyer'       
"SELECT count( *), maintenance_contracts.maintenance_contract_id FROM Assets JOIN Maintenance_Contracts ON assets.maintenance_contract_id = maintenance_contracts.maintenance_contract_id  GROUP BY maintenance_contracts.maintenance_contract_id      "
"SELECT department.dept_name, department.building FROM department     ORDER BY department.budget DESC   "
SELECT count( *) FROM state        
SELECT wine.Name FROM wine JOIN appellations ON wine.Appelation = appellations.Appelation WHERE appellations.County = 'Monterey' and wine.Price < 50       
"SELECT university.School, university.Nickname FROM university     ORDER BY university.Founded ASC   "
SELECT student_course_attendance.student_id FROM Student_Course_Attendance        
"SELECT wrestler.Name, elimination.Team FROM wrestler JOIN Elimination ON wrestler.Wrestler_ID = elimination.Wrestler_ID     ORDER BY wrestler.Days_held DESC   "
"SELECT student.LName, student.Sex FROM Student WHERE student.StuID in (SELECT plays_games.StuID FROM Plays_Games JOIN Video_Games ON plays_games.GameID = video_games.GameID WHERE video_games.GName = '1'       )       "
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1'       
SELECT tv_series.title FROM cast JOIN actor ON T2.aid = actor.aid JOIN tv_series WHERE actor.name = 'Scott Foley'       
SELECT competition.Competition_type FROM competition  GROUP BY competition.Competition_type  ORDER BY count( *) DESC LIMIT 1    
SELECT drama_workshop_groups.Store_Name FROM Drama_Workshop_Groups JOIN Addresses ON drama_workshop_groups.Address_ID = addresses.Address_ID WHERE addresses.City_Town = 'Feliciaberg'       
SELECT scientists.Name FROM Scientists JOIN AssignedTo ON scientists.SSN = AssignedTo.Scientist JOIN Projects ON AssignedTo.Project = projects.Code WHERE projects.Name = 'Matter of Time'     INTERSECT SELECT scientists.Name FROM Scientists JOIN AssignedTo ON scientists.SSN = AssignedTo.Scientist JOIN Projects ON AssignedTo.Project = projects.Code WHERE projects.Name = 'A Puzzling Parallax'         
"SELECT bookings.booking_start_date, bookings.booking_end_date FROM Bookings JOIN View_Product_Availability ON bookings.booking_id = View_Product_Availability.booking_id JOIN Products_for_Hire ON View_Product_Availability.product_id = products_for_hire.product_id WHERE products_for_hire.product_name = 'Book collection A'       "
"SELECT DISTINCT count(DISTINCT paper.paperId), writes.authorId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' GROUP BY writes.authorId   ORDER BY count( paper.paperId) DESC   "
SELECT river.traverse FROM river WHERE river.river_name = '1'       
SELECT movie.director FROM Movie WHERE movie.director != 'null' GROUP BY movie.director HAVING count( *) = 1     
"SELECT DISTINCT cite.citedPaperId, count(DISTINCT cite.citedPaperId) FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1' GROUP BY cite.citedPaperId   ORDER BY count( cite.citedPaperId) DESC   "
SELECT phone.Name FROM phone JOIN phone_market ON phone.Phone_ID = phone_market.Phone_ID  GROUP BY phone.Name HAVING sum( phone_market.Num_of_stock) >= 2000  ORDER BY sum( phone_market.Num_of_stock) DESC   
SELECT captain.Rank FROM captain  GROUP BY captain.Rank  ORDER BY count( *) DESC LIMIT 1    
SELECT DISTINCT count(DISTINCT perpetrator.Location) FROM perpetrator        
SELECT student.Advisor FROM Student  GROUP BY student.Advisor HAVING count( *) > 2     
SELECT count( *) FROM actor        
SELECT video_games.GType FROM Video_Games  GROUP BY video_games.GType  ORDER BY count( *) DESC LIMIT 1    
SELECT city.GDP FROM city    ORDER BY city.Regional_Population DESC LIMIT 1    
SELECT DISTINCT count(DISTINCT business.business_id) FROM business WHERE business.city = 'Los Angeles' and business.name = 'Target'       
"SELECT track.Name, track.Location, track.Seating FROM track    ORDER BY track.Year_Opened DESC LIMIT 1    "
SELECT DISTINCT writes.paperId FROM writes JOIN paper ON writes.paperId = paper.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'    ORDER BY paper.year DESC   
"SELECT pilot.Nationality, count( *) FROM pilot  GROUP BY pilot.Nationality      "
SELECT city.city_name FROM city WHERE city.population = (SELECT max( city.population) FROM city WHERE city.state_name = '1'       ) and city.state_name = '1'       
SELECT sum( customer_payments.amount_payment) FROM Customer_Payments JOIN Customers ON customer_payments.customer_id = customers.customer_id WHERE customers.first_name = 'Carole' and customers.last_name = 'Bernhard'       
SELECT DISTINCT paper_key_phrase.keyphraseId FROM paperKeyphrase JOIN paper ON paper_key_phrase.paperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1' and paper.year = 1       
SELECT faculty.Lname FROM Faculty WHERE faculty.Rank = 'Professor'       EXCEPT SELECT DISTINCT faculty.Lname FROM Faculty JOIN Faculty_Participates_in ON faculty.FacID = Faculty_Participates_in.FacID JOIN Activity ON Faculty_Participates_in.actid = activity.actid WHERE activity.activity_name = 'Canoeing' or activity.activity_name = 'Kayaking'       
SELECT max( residents.date_moved_in) FROM Residents        
SELECT aircraft.Aircraft FROM aircraft JOIN match ON aircraft.Aircraft_ID = T2.Winning_Aircraft  GROUP BY aircraft.Aircraft HAVING count( *) >= 2     
"SELECT customers.email_address, customers.phone_number FROM Customers     ORDER BY customers.email_address ASC   "
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1' and author.authorName = '1'       
"SELECT customer.FirstName, customer.SupportRepId FROM Customer JOIN Employee ON customer.SupportRepId = T2.EmployeeId  GROUP BY customer.SupportRepId HAVING count( *) >= 10     "
SELECT DISTINCT track.UnitPrice FROM Track        
"SELECT reference_document_types.Document_Type_Name, reference_document_types.Document_Type_Description FROM Ref_Document_Types WHERE reference_document_types.Document_Type_Code = 'RV'       "
SELECT count( *) FROM trip JOIN station WHERE station.city = 'Mountain View' and station.city = 'Palo Alto'       
SELECT DISTINCT count(DISTINCT writes.paperId) FROM writes JOIN author ON writes.authorId = author.authorId JOIN paper ON writes.paperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE author.authorName = 'Ed Desmond' and key_phrase.keyphraseName = 'Semantic Parsing'       
SELECT student.Major FROM Student  GROUP BY student.Major HAVING count( *) < 3     
SELECT faculty.Faculty FROM faculty JOIN Campuses ON faculty.Campus = Campuses.Id JOIN degrees ON Campuses.Id = degrees.Campus WHERE faculty.Year = 2002   ORDER BY degrees.Degrees DESC LIMIT 1    
"SELECT financial_transactions.invoice_number, count( *) FROM Financial_Transactions  GROUP BY financial_transactions.invoice_number      "
"SELECT maintenance_engineers.engineer_id, maintenance_engineers.first_name, maintenance_engineers.last_name FROM Maintenance_Engineers JOIN Engineer_Visits ON maintenance_engineers.engineer_id = engineer_visits.engineer_id  GROUP BY engineer_visits.engineer_id  ORDER BY count( *) ASC LIMIT 1    "
"SELECT attribute_definitions.attribute_name, attribute_definitions.attribute_id FROM Attribute_Definitions JOIN Catalog_Contents_Additional_Attributes WHERE catalog_contents_additional_attributes.attribute_value = '0'       "
SELECT count( *) FROM Customers JOIN Customers_Cards WHERE customers.customer_first_name = 'Blanche' and customers.customer_last_name = 'Huels' and customers_cards.card_type_code = 'Credit'       
"SELECT fault_log.fault_log_entry_id, fault_log.fault_description, fault_log.fault_log_entry_datetime FROM Fault_Log JOIN Fault_Log_Parts ON fault_log.fault_log_entry_id = fault_log_parts.fault_log_entry_id  GROUP BY fault_log_parts.fault_log_entry_id  ORDER BY count( *) DESC LIMIT 1    "
"SELECT representative.Party, count( *) FROM representative  GROUP BY representative.Party      "
"SELECT railway.Wheels, railway.Location FROM railway        "
SELECT person.name FROM Person WHERE person.age = (SELECT max( person.age) FROM Person        )       
SELECT DISTINCT race.Class FROM race        
"SELECT school.School_name, school.Mascot, school.IHSAA_Football_Class FROM School JOIN budget ON school.School_id = budget.School_id WHERE budget.Budgeted > 6000 or budget.Year < 2003    ORDER BY budget.total_budget_percent_invested ASC   "
SELECT count( *) FROM Projects        
SELECT avg( body_builder.Total) FROM body_builder JOIN people ON body_builder.People_ID = people.People_ID WHERE people.Height > 200       
SELECT book.Writer FROM book  GROUP BY book.Writer HAVING count( *) > 1     
"SELECT movie.title, movie.year FROM Movie WHERE movie.title != '1'       "
SELECT count( *) FROM Rooms WHERE rooms.RoomId NOT IN (SELECT DISTINCT reservations.Room FROM Reservations        )       
SELECT avg( grade_conversion.gradepoint) FROM Gradeconversion JOIN Enrolled_in ON grade_conversion.lettergrade = Enrolled_in.Grade JOIN Student ON Enrolled_in.StuID = student.StuID WHERE student.LName = 'Smith'       
"SELECT DISTINCT cite.citedPaperId, count(DISTINCT cite.citedPaperId) FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1' GROUP BY cite.citedPaperId   ORDER BY count( cite.citedPaperId) DESC   "
SELECT count( *) FROM Student JOIN Voting_record ON student.StuID = voting_record.Class_Senator_Vote WHERE student.city_code = 'NYC' and voting_record.Election_Cycle = 'Spring'       
SELECT count( *) FROM Songs        
SELECT avg( procedures.Cost) FROM Procedures JOIN Trained_In ON procedures.Code = T2.Treatment JOIN Physician ON T2.Physician = physician.EmployeeID WHERE physician.Name = 'John Wen'       
SELECT customers.date_of_birth FROM Customers WHERE customers.customer_status_code = 'Good Customer'       
"SELECT documents_to_be_destroyed.Destroyed_by_Employee_ID, count( *) FROM Documents_to_be_Destroyed  GROUP BY documents_to_be_destroyed.Destroyed_by_Employee_ID      "
"SELECT artwork.Name, festival_detail.Festival_Name FROM artwork JOIN nomination ON artwork.Artwork_ID = nomination.Artwork_ID JOIN festival_detail ON nomination.Festival_ID = festival_detail.Festival_ID        "
SELECT papers.title FROM Papers JOIN Authorship ON papers.paperID = authorship_count.paperID WHERE authorship_count.authOrder = (SELECT max( authorship_count.authOrder) FROM Authorship        )       
"SELECT avg( product_suppliers.total_amount_purchased), avg( product_suppliers.total_value_purchased) FROM Product_Suppliers WHERE product_suppliers.supplier_id = (SELECT product_suppliers.supplier_id FROM Product_Suppliers  GROUP BY product_suppliers.supplier_id  ORDER BY count( *) DESC LIMIT 1    )       "
SELECT state.state_name FROM state WHERE state.state_name NOT IN (SELECT border_info.border FROM border_info WHERE border_info.state_name = '1'       )       
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
SELECT product.max_page_size FROM product  GROUP BY product.max_page_size HAVING count( *) > 3     
SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name = '1'       
SELECT * FROM employees WHERE employees.FIRST_NAME like '%1%' or employees.FIRST_NAME like '%1%'    ORDER BY employees.SALARY DESC   
SELECT conference.name FROM conference JOIN publication ON conference.cid = publication.cid JOIN writes ON publication.pid = writes.pid JOIN author ON writes.aid = author.aid WHERE author.name = '1'       
"SELECT max( screen_mode.used_kb), min( screen_mode.used_kb), avg( screen_mode.used_kb) FROM screen_mode        "
"SELECT train.time, train.train_number FROM train WHERE train.destination = 'Chennai'    ORDER BY train.time ASC   "
SELECT avg( person.age) FROM Person        
"SELECT patient.Name, patient.Phone FROM Patient JOIN Appointment ON patient.SSN = T2.Patient  GROUP BY T2.Patient HAVING count( *) > 1     "
"SELECT branch.Name, branch.Address_road, branch.City FROM branch     ORDER BY branch.Open_year ASC   "
SELECT performance.Attendance FROM performance WHERE performance.Location = 'TD Garden' or performance.Location = 'Bell Centre'       
SELECT count( border_info.border) FROM border_info WHERE border_info.state_name = (SELECT state.state_name FROM state WHERE state.capital = '1'       )       
SELECT gas_station.Manager_Name FROM gas_station WHERE gas_station.Open_Year > 2000 GROUP BY gas_station.Manager_Name  ORDER BY count( *) DESC LIMIT 1    
SELECT enzyme.name FROM enzyme JOIN medicine_enzyme_interaction ON enzyme.id = medicine_enzyme_interaction.enzyme_id JOIN medicine ON medicine_enzyme_interaction.medicine_id = medicine.id WHERE medicine.name = 'Amisulpride' and medicine_enzyme_interaction.interaction_type = 'inhibitor'       
"SELECT guests.gender_code, count( *) FROM Guests  GROUP BY guests.gender_code   ORDER BY count( *) DESC   "
SELECT actor.Character FROM actor     ORDER BY actor.age DESC   
SELECT avg( festival_detail.Num_of_Audience) FROM festival_detail        
"SELECT addresses.country, addresses.state_province_county FROM Addresses JOIN Staff ON addresses.address_id = staff.staff_address_id WHERE staff.first_name = 'Janessa' and staff.last_name = 'Sawayn'       "
SELECT count( *) FROM College        
SELECT technician.Team FROM technician  GROUP BY technician.Team  ORDER BY count( *) DESC LIMIT 1    
SELECT state.state_name FROM state WHERE state.state_name in (SELECT border_info.border FROM border_info WHERE border_info.state_name = '1'       )   ORDER BY state.population DESC LIMIT 1    
"SELECT campuses.Campus, sum( degrees.Degrees) FROM Campuses JOIN degrees ON campuses.Id = degrees.Campus WHERE campuses.County = 'Orange' and degrees.Year >= 2000 GROUP BY campuses.Campus      "
"SELECT count( *), constructor_standings.constructorId FROM races JOIN constructorStandings ON races.raceId = constructor_standings.raceId  GROUP BY constructor_standings.constructorId      "
SELECT tryout.cName FROM Tryout WHERE tryout.pPos = '1'       EXCEPT SELECT tryout.cName FROM Tryout WHERE tryout.pPos = '1'       
SELECT reference_locations.Location_Name FROM Ref_Locations JOIN Document_Locations ON reference_locations.Location_Code = Document_Locations.Location_Code JOIN All_Documents ON Document_Locations.Document_ID = all_documents.Document_ID WHERE all_documents.Document_Name = 'Robin CV'       
"SELECT reference_locations.Location_Code, reference_locations.Location_Name FROM Ref_Locations        "
SELECT tracks.name FROM tracks JOIN genres ON tracks.genre_id = genres.id WHERE genres.name = 'Rock' or genres.name = 'Jazz'       
SELECT albums.title FROM albums JOIN artists ON albums.artist_id = sqlite_sequence.id WHERE sqlite_sequence.name like '%Led%'       
SELECT marketing_regions.Marketing_Region_Name FROM Marketing_Regions JOIN Stores ON marketing_regions.Marketing_Region_Code = stores.Marketing_Region_Code WHERE stores.Store_Name = 'Rob Dinning'       
SELECT DISTINCT count(DISTINCT class.CLASS_CODE) FROM CLASS        
SELECT sum( manufacturers.Revenue) FROM Manufacturers WHERE manufacturers.Revenue > (SELECT min( manufacturers.Revenue) FROM Manufacturers WHERE manufacturers.Headquarter = 'Austin'       )       
"SELECT branch.Name, branch.Open_year FROM branch JOIN purchase ON branch.Branch_ID = purchase.Branch_ID JOIN member ON purchase.Member_ID = member.Member_ID JOIN membership_register_branch ON member.Member_ID = membership_register_branch.Member_ID WHERE membership_register_branch.Register_Year = '2016' GROUP BY membership_register_branch.Branch_ID  ORDER BY count( *) DESC LIMIT 1    "
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and location.STREET_NAME = '1' and restaurant.RATING > 1       "
SELECT station.city FROM station  GROUP BY station.city   ORDER BY max( station.lat) DESC   
SELECT products.product_details FROM Products JOIN Order_Items ON products.product_id = T2.product_id  GROUP BY products.product_details  ORDER BY count( *) DESC LIMIT 1    
SELECT DISTINCT college.cName FROM College WHERE college.enr > (SELECT min( college.enr) FROM College WHERE college.state = 'FL'       )       
"SELECT avg( manufacturers.Revenue), max( manufacturers.Revenue), sum( manufacturers.Revenue) FROM Manufacturers        "
"SELECT shop.Shop_Name, shop.Location FROM shop     ORDER BY shop.Shop_Name ASC   "
"SELECT entrepreneur.Company, entrepreneur.Investor FROM entrepreneur        "
SELECT count( *) FROM Member_of_club JOIN Club ON member_of_club.ClubID = club.ClubID JOIN Student ON member_of_club.StuID = student.StuID WHERE club.ClubName = 'Bootup Baltimore' and student.Age > 18       
SELECT publication.citation_num FROM publication JOIN journal ON publication.jid = journal.jid WHERE journal.name = 'PVLDB'       
"SELECT campuses.Campus, sum( degrees.Degrees) FROM Campuses JOIN degrees ON campuses.Id = degrees.Campus WHERE degrees.Year >= 1998 and degrees.Year <= 2002 GROUP BY campuses.Campus      "
"SELECT parking_fines.council_tax_id, parking_fines.cmi_cross_ref_id FROM Parking_Fines        "
SELECT DISTINCT cmi_cross_references.source_system_code FROM CMI_Cross_References WHERE cmi_cross_references.source_system_code like '%en%'       
SELECT * FROM employees WHERE employees.HIRE_DATE < '2002-06-21'       
SELECT wine.Winery FROM wine    ORDER BY wine.Score ASC LIMIT 1    
SELECT count( *) FROM Claims_Processing_Stages        
SELECT payments.Payment_Method_Code FROM Payments  GROUP BY payments.Payment_Method_Code  ORDER BY count( *) DESC LIMIT 1    
SELECT department.Name FROM Department  GROUP BY department.Name  ORDER BY count( department.DepartmentID) DESC LIMIT 1    
"SELECT video_games.GName, video_games.GType FROM Video_Games     ORDER BY video_games.GName ASC   "
SELECT church.Name FROM church JOIN wedding ON church.Church_ID = T2.Church_ID  GROUP BY church.Name HAVING count( *) >= 2     
SELECT business.name FROM business JOIN category ON business.business_id = category.business_id WHERE business.city = '1' and category.category_name = '1'       
SELECT customers.Customer_Details FROM Customers WHERE customers.Customer_Details like '%Diana%'       
SELECT procedures.Name FROM Procedures JOIN Trained_In ON procedures.Code = T2.Treatment JOIN Physician ON T2.Physician = physician.EmployeeID WHERE physician.Name = 'John Wen'       
SELECT student.Fname FROM Student WHERE student.StuID NOT IN (SELECT enrolled_in.StuID FROM Enrolled_in        )       
SELECT * FROM departments WHERE departments.DEPARTMENT_NAME = 'Marketing'       
SELECT apartments.apt_number FROM Apartments JOIN View_Unit_Status ON apartments.apt_id = view_unit_status.apt_id WHERE view_unit_status.available_yn = 0     INTERSECT SELECT apartments.apt_number FROM Apartments JOIN View_Unit_Status ON apartments.apt_id = view_unit_status.apt_id WHERE view_unit_status.available_yn = 1         
SELECT campuses.Campus FROM Campuses WHERE campuses.County = 'Los Angeles'       
SELECT highlow.highest_elevation FROM highlow WHERE highlow.highest_point = '1'       
"SELECT people.Party, count( *) FROM people  GROUP BY people.Party      "
SELECT count( *) FROM stadium        
SELECT item.title FROM item JOIN review ON item.i_id = review.i_id WHERE review.rank > 3     INTERSECT SELECT item.title FROM item JOIN review ON item.i_id = T4.i_id  GROUP BY item.title HAVING avg( T4.rating) > 5       
"SELECT customers.customer_phone, customers.customer_email FROM Customers WHERE customers.customer_first_name = 'Aniyah' and customers.customer_last_name = 'Feest'       "
"SELECT staff.staff_name, staff_department_assignments.job_title_code FROM Staff JOIN Staff_Department_Assignments ON staff.staff_id = staff_department_assignments.staff_id    ORDER BY staff_department_assignments.date_assigned_to DESC LIMIT 1    "
SELECT business.name FROM business JOIN category ON business.business_id = category.business_id WHERE business.city = '1' and business.rating > 1 and category.category_name = '1' and category.category_name = '1'       
SELECT max( operate_company.Group_Equity_Shareholding) FROM operate_company        
SELECT products.Product_Name FROM Products WHERE products.Product_ID NOT IN (SELECT products_in_events.Product_ID FROM Products_in_Events        )       
SELECT count( *) FROM Student JOIN Has_Allergy ON student.StuID = has_allergy.StuID WHERE has_allergy.Allergy = '1'       
SELECT max( customer_contact_channels.active_to_date) FROM Customer_Contact_Channels JOIN Customers ON customer_contact_channels.customer_id = customers.customer_id WHERE customers.customer_name = 'Tillman Ernser'       
SELECT DISTINCT mill.name FROM mill JOIN architect ON mill.architect_id = architect.id JOIN bridge ON architect.id = bridge.architect_id WHERE bridge.length_meters > 80       
SELECT count( *) FROM stadium        
SELECT customers.customer_name FROM Customers JOIN Customer_Orders ON customers.customer_id = Customer_Orders.customer_id JOIN Order_Items ON Customer_Orders.order_id = order_items.order_id WHERE order_items.order_quantity = (SELECT max( order_items.order_quantity) FROM Order_Items        )       
"SELECT student.Fname, student.LName FROM Student JOIN Lives_in ON student.StuID = lives_in.stuid WHERE lives_in.dormid in (SELECT has_amenity.dormid FROM Has_amenity JOIN Dorm_amenity ON has_amenity.amenid = dorm_amenity.amenid WHERE dorm_amenity.amenity_name = 'TV Lounge'       )       "
"SELECT enzyme.Product, enzyme.Chromosome, enzyme.Porphyria FROM enzyme WHERE enzyme.Location = 'Cytosol'       "
SELECT DISTINCT cinema.Location FROM cinema        
"SELECT DISTINCT person_friend.name, person_friend.friend, person.age FROM PersonFriend JOIN Person ON person_friend.friend = person.name WHERE person.age > (SELECT avg( person.age) FROM Person        )       "
SELECT artist.artist_name FROM artist WHERE artist.country = 'UK'     INTERSECT SELECT song.artist_name FROM song WHERE song.languages = 'english'         
SELECT reference_colors.color_description FROM Ref_Colors        
SELECT allergy_type.AllergyType FROM Allergy_Type  GROUP BY allergy_type.AllergyType  ORDER BY count( *) DESC LIMIT 1    
SELECT border_info.border FROM border_info WHERE border_info.state_name in (SELECT river.traverse FROM river WHERE river.river_name = '1'       )       
SELECT technician.Name FROM technician     ORDER BY technician.Age ASC   
SELECT river.river_name FROM river WHERE river.traverse in (SELECT border_info.border FROM border_info WHERE border_info.state_name = '1'       )       
SELECT pilot.Name FROM pilot WHERE pilot.Age >= 25       
SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name = '1'       
SELECT product.max_page_size FROM product  GROUP BY product.max_page_size  ORDER BY count( *) DESC LIMIT 1    
SELECT count( *) FROM venue        
SELECT documents.Project_ID FROM Documents  GROUP BY documents.Project_ID  ORDER BY count( *) ASC LIMIT 1    
SELECT physician.Name FROM Physician JOIN Trained_In ON physician.EmployeeID = T3.Physician JOIN Procedures ON T3.Treatment = procedures.Code    ORDER BY procedures.Cost DESC LIMIT 1    
SELECT tourist_attractions.Name FROM Tourist_Attractions WHERE tourist_attractions.How_to_Get_There = 'bus'       
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT employees.Employee_ID FROM Employees JOIN Roles ON employees.Role_Code = roles.Role_Code WHERE roles.Role_Name = 'Human Resource' or roles.Role_Name = 'Manager'       
"SELECT count( *), accounts.name FROM CHECKING JOIN ACCOUNTS ON checking.custid = accounts.custid  GROUP BY accounts.name      "
SELECT DISTINCT student.Age FROM Student JOIN Voting_record ON student.StuID = voting_record.Class_Senator_Vote WHERE voting_record.Election_Cycle = 'Fall'       
SELECT count( *) FROM author        
SELECT instruments.Instrument FROM Instruments JOIN Songs ON instruments.SongId = songs.SongId JOIN Performance ON songs.SongId = T3.SongId JOIN Band ON T3.Bandmate = band.Id WHERE band.Lastname = 'Heilo' and songs.Title = 'Badlands'       
SELECT sum( discipline_enrollments.Graduate) FROM discipline_enrollments JOIN Campuses ON discipline_enrollments.Campus = campuses.Id WHERE discipline_enrollments.Year = 2004 and campuses.Campus = 'San Francisco State University'       
SELECT DISTINCT count(DISTINCT cite.citingPaperId) FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN venue ON paper.venueId = venue.venueId WHERE venue.venueName = 'ACL' GROUP BY count( cite.citingPaperId) HAVING count( cite.citedPaperId) > 2     
SELECT count( *) FROM Products WHERE products.product_category_code = 'Spices' and products.typical_buying_price > '1000'       
"SELECT flight.origin, flight.destination FROM flight WHERE flight.price > 300       "
SELECT claims_processing_stages.Claim_Status_Description FROM Claims_Processing_Stages WHERE claims_processing_stages.Claim_Status_Name = 'Open'       
"SELECT sum( sports_info.HoursPerWeek), sum( sports_info.GamesPlayed) FROM SportsInfo JOIN Student ON sports_info.StuID = student.StuID WHERE student.Fname = 'David' and student.LName = 'Shieber'       "
SELECT count( *) FROM GEOGRAPHIC        
SELECT locations.Other_Details FROM Locations WHERE locations.Location_Name = 'UK Gallery'       
SELECT available_policies.policy_type_code FROM Available_Policies JOIN Customers_Policies ON available_policies.Policy_ID = Customers_Policies.Policy_ID JOIN Customers ON Customers_Policies.Customer_ID = customers.Customer_ID  GROUP BY available_policies.policy_type_code HAVING count( *) > 4     
SELECT lots.lot_details FROM Lots JOIN Transactions_Lots ON lots.lot_id = T3.lot_id JOIN Transactions ON T3.transaction_id = transactions.transaction_id WHERE transactions.share_count > '100' and transactions.transaction_type_code = 'PUR'       
SELECT state.state_name FROM state WHERE state.capital = '1'       
"SELECT competition.Competition_type, competition.Country FROM competition        "
"SELECT weather.date, weather.zip_code FROM weather WHERE weather.max_temperature_f >= 80       "
SELECT count( *) FROM Apartment_Buildings        
SELECT order_items.order_item_id FROM Order_Items WHERE order_items.product_id = 11       
SELECT DISTINCT company.Main_Industry FROM company        
SELECT avg( song.rating) FROM song JOIN artist ON song.artist_name = artist.artist_name WHERE artist.gender = 'Female'       
"SELECT DISTINCT count(DISTINCT paper.paperId), paper.year FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1' GROUP BY paper.year   ORDER BY paper.year ASC   "
SELECT documents.Document_Date FROM Documents JOIN Documents_with_Expenses ON documents.Document_ID = documents_with_expenses.Document_ID WHERE documents_with_expenses.Budget_Type_Code = 'GV'     INTERSECT SELECT documents.Document_Date FROM Documents JOIN Documents_with_Expenses ON documents.Document_ID = documents_with_expenses.Document_ID WHERE documents_with_expenses.Budget_Type_Code = 'SF'         
SELECT customer.LastName FROM Customer        EXCEPT SELECT customer.LastName FROM Customer JOIN Invoice ON customer.CustomerId = invoice.CustomerId WHERE invoice.Total > 20       
SELECT highlow.highest_point FROM highlow JOIN state ON highlow.state_name = state.state_name WHERE state.area = (SELECT min( state.area) FROM state        )       
SELECT sum( manufacturers.Revenue) FROM Manufacturers WHERE manufacturers.Revenue > (SELECT min( manufacturers.Revenue) FROM Manufacturers WHERE manufacturers.Headquarter = 'Austin'       )       
SELECT employees.PHONE_NUMBER FROM employees WHERE employees.SALARY between 8000 AND 12000       
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and location.STREET_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT reference_product_categories.product_category_description FROM Ref_Product_Categories WHERE reference_product_categories.product_category_code = 'Spices'       
SELECT * FROM employees WHERE employees.EMPLOYEE_ID NOT IN (SELECT job_history.EMPLOYEE_ID FROM job_history        )       
"SELECT DISTINCT staff.staff_first_name, staff.staff_last_name FROM Staff JOIN Problem_Log ON staff.staff_id = problem_log.assigned_to_staff_id WHERE problem_log.problem_id = 1       "
SELECT journalist.Name FROM journalist WHERE journalist.journalist_ID NOT IN (SELECT news_report.journalist_ID FROM news_report        )       
SELECT products.Name FROM Products WHERE products.Price <= 200       
SELECT sales.sales_details FROM Sales       UNION SELECT purchases.purchase_details FROM Purchases         
SELECT student.name FROM student WHERE student.ID NOT IN (SELECT takes_classes.ID FROM takes JOIN section ON takes_classes.course_id = section.course_id JOIN course ON section.course_id = course.course_id WHERE course.dept_name = 'Biology'       )       
SELECT dorm.dorm_name FROM Dorm JOIN Has_amenity ON dorm.dormid = Has_amenity.dormid JOIN Dorm_amenity ON Has_amenity.amenid = dorm_amenity.amenid WHERE dorm_amenity.amenity_name = 'TV Lounge'     INTERSECT SELECT dorm.dorm_name FROM Dorm JOIN Has_amenity ON dorm.dormid = Has_amenity.dormid JOIN Dorm_amenity ON Has_amenity.amenid = dorm_amenity.amenid WHERE dorm_amenity.amenity_name = 'Study Room'         
"SELECT plays_games.StuID, sum( plays_games.Hours_Played) FROM Plays_Games  GROUP BY plays_games.StuID      "
"SELECT maintenance_engineers.first_name, maintenance_engineers.last_name, maintenance_engineers.other_details, skills.skill_description FROM Maintenance_Engineers JOIN Engineer_Skills ON maintenance_engineers.engineer_id = Engineer_Skills.engineer_id JOIN Skills ON Engineer_Skills.skill_id = skills.skill_id        "
SELECT candidate.Support_rate FROM candidate    ORDER BY candidate.Support_rate DESC LIMIT 1    
"SELECT DISTINCT list.FirstName, list.LastName FROM list        "
SELECT count( *) FROM protein JOIN Institution ON protein.Institution_id = institution.Institution_id WHERE institution.Founded > 1880 or institution.Type = 'Private'       
"SELECT course.title, course.credits, course.dept_name FROM course JOIN prereq ON course.course_id = T2.prereq_id  GROUP BY T2.prereq_id HAVING count( *) > 1     "
SELECT department_stores.dept_store_chain_id FROM Department_Stores  GROUP BY department_stores.dept_store_chain_id  ORDER BY count( *) DESC LIMIT 1    
SELECT count( *) FROM Student        
"SELECT procedures.Name, procedures.Cost FROM Procedures     ORDER BY procedures.Cost DESC   "
SELECT count( *) FROM stadium        
"SELECT DISTINCT author.authorId, paper.paperId FROM author JOIN writes ON author.authorId = writes.authorId JOIN paper ON writes.paperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE author.authorName = '1' and key_phrase.keyphraseName = '1'       "
SELECT DISTINCT book_club.Publisher FROM book_club        
SELECT count( *) FROM circuits        
"SELECT detention.detention_type_code, reference_detention_type.detention_type_description FROM Detention JOIN Ref_Detention_Type ON detention.detention_type_code = reference_detention_type.detention_type_code  GROUP BY detention.detention_type_code  ORDER BY count( *) ASC LIMIT 1    "
SELECT keyword.keyword FROM keyword JOIN publication_keyword ON keyword.kid = publication_keyword.kid JOIN publication ON publication_keyword.pid = publication.pid JOIN journal ON publication.jid = journal.jid WHERE journal.name = 'PVLDB'       
SELECT count( *) FROM Campuses WHERE campuses.County = 'Los Angeles'       
SELECT DISTINCT catalog_contents.catalog_entry_name FROM Catalog_Contents        
SELECT city.population FROM city WHERE city.city_name = '1'       
SELECT count( *) FROM Students WHERE students.personal_name like '%son%'       
SELECT count( *) FROM Customers        
SELECT DISTINCT mountain.Range FROM mountain    ORDER BY mountain.Prominence DESC LIMIT 1    
SELECT DISTINCT count(DISTINCT routes.dst_apid) FROM routes JOIN airlines ON routes.alid = airlines.alid WHERE airlines.name = 'American Airlines'       
SELECT player.Team FROM player    ORDER BY player.Age DESC LIMIT 1    
SELECT actor.Name FROM musical JOIN actor WHERE musical.Name = 'The Phantom of the Opera'       
SELECT song.artist_name FROM song WHERE song.resolution > 500 GROUP BY song.artist_name  ORDER BY count( *) DESC LIMIT 1    
"SELECT avg( financial_transactions.transaction_amount), min( financial_transactions.transaction_amount), max( financial_transactions.transaction_amount), sum( financial_transactions.transaction_amount) FROM Financial_Transactions        "
"SELECT avg( products.Price), products.Manufacturer FROM Products  GROUP BY products.Manufacturer      "
SELECT DISTINCT paper.venueId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = 'Trophic Cascade'       
SELECT state.state_name FROM state WHERE state.capital = '1'       
SELECT employees.EMAIL FROM employees WHERE employees.COMMISSION_PCT = 1 and employees.SALARY between 1 AND 1 and employees.DEPARTMENT_ID = 1       
SELECT DISTINCT paper.journalId FROM paper WHERE paper.year = 1       
"SELECT station.name, station.lat, min( trip.duration) FROM trip JOIN station  GROUP BY station.id      "
SELECT employees.Employee_Name FROM Employees WHERE employees.Role_Code = 'HR'       
"SELECT DISTINCT count(DISTINCT paper.paperId), key_phrase.keyphraseId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 2015 and venue.venueName = 'NIPS' GROUP BY key_phrase.keyphraseId   ORDER BY count( paper.paperId) DESC   "
SELECT avg( department.Num_Employees) FROM department WHERE department.Ranking between 10 AND 15       
"SELECT player.name_first, player.name_last, manager_award.player_id FROM player JOIN manager_award ON player.player_id = manager_award.player_id  GROUP BY manager_award.player_id  ORDER BY count( *) DESC LIMIT 1    "
SELECT DISTINCT available_policies.policy_type_code FROM Available_Policies JOIN Customers_Policies ON available_policies.Policy_ID = Customers_Policies.Policy_ID JOIN Customers ON Customers_Policies.Customer_ID = customers.Customer_ID WHERE customers.Customer_name = (SELECT customers.Customer_name FROM Customers JOIN Customers_Policies ON customers.Customer_ID = T24.Customer_ID  GROUP BY customers.Customer_name  ORDER BY count( *) DESC LIMIT 1    )       
"SELECT movie.Title, movie.Year, movie.Director FROM movie     ORDER BY movie.Budget_million ASC   "
SELECT club.name FROM club     ORDER BY club.Start_year ASC   
"SELECT max( club_rank.Silver), min( club_rank.Silver) FROM club_rank        "
SELECT DISTINCT institution.name FROM Inst JOIN Authorship ON institution.instID = Authorship.instID JOIN Authors ON Authorship.authID = authors.authID WHERE authors.fname = 'Katsuhiro' and authors.lname = 'Ueno'       
"SELECT movie.title, rating.rID, rating.stars, min( rating.stars) FROM Movie JOIN Rating ON movie.mID = rating.mID  GROUP BY rating.mID      "
SELECT flight.origin FROM flight WHERE flight.destination = 'Honolulu'       
"SELECT DISTINCT count(DISTINCT department.DEPT_NAME), department.SCHOOL_CODE FROM DEPARTMENT  GROUP BY department.SCHOOL_CODE HAVING count( department.DEPT_NAME) < '5'     "
SELECT river.river_name FROM river WHERE river.traverse = '1'       
"SELECT customers.first_name, customers.last_name FROM customers JOIN invoices ON customers.id = invoices.customer_id    ORDER BY invoices.total ASC LIMIT 1    "
SELECT avg( chip_model.ROM_MiB) FROM chip_model JOIN phone ON chip_model.Model_name = phone.chip_model WHERE phone.Company_name = 'Nokia Corporation'       
SELECT DISTINCT writes.authorId FROM writes JOIN author ON writes.authorId = T2.authorId JOIN paper ON writes.paperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = 'Bacterial Wilt' and paper.year = 2016       
SELECT DISTINCT count(DISTINCT teaches.ID) FROM teaches        
SELECT DISTINCT count(DISTINCT endowment.donator_name) FROM endowment JOIN School ON endowment.School_id = school.School_id WHERE school.School_name = 'Glenn'       
SELECT count( *) FROM Student        
SELECT item.title FROM item JOIN review ON item.i_id = review.i_id WHERE review.rating = 10       
"SELECT products.product_name, products.product_id FROM Products WHERE products.product_price between 600 AND 700       "
SELECT phone.Company_name FROM phone  GROUP BY phone.Company_name HAVING count( *) > 1     
SELECT count( *) FROM employees WHERE employees.country = 'Canada'       
SELECT people.Name FROM people JOIN gymnast ON people.People_ID = T2.Gymnast_ID     ORDER BY people.Height ASC   
SELECT count( *) FROM Ref_Colors        
"SELECT count( *), department.SCHOOL_CODE FROM PROFESSOR JOIN DEPARTMENT ON professor.DEPT_CODE = department.DEPT_CODE  GROUP BY department.SCHOOL_CODE      "
SELECT player.pName FROM Player WHERE player.yCard = '1'    ORDER BY player.HS DESC   
SELECT phone.Accreditation_level FROM phone  GROUP BY phone.Accreditation_level HAVING count( *) > 3     
SELECT course_authors_and_tutors.login_name FROM Course_Authors_and_Tutors      INTERSECT SELECT students.login_name FROM Students          
"SELECT instructor.dept_name, avg( instructor.salary) FROM instructor  GROUP BY instructor.dept_name HAVING avg( instructor.salary) > 42000     "
SELECT student.LName FROM Student WHERE student.Major = 50       
"SELECT weather.date, weather.mean_temperature_f, weather.mean_humidity FROM weather    ORDER BY weather.max_gust_speed_mph DESC LIMIT 1    "
SELECT DISTINCT author.authorName FROM author JOIN writes ON author.authorId = writes.authorId JOIN paper ON writes.paperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName like '%1%'       
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
SELECT journalist.Name FROM journalist     ORDER BY journalist.Years_working ASC   
"SELECT rooms.bedType, count( *) FROM Rooms  GROUP BY rooms.bedType      "
SELECT max( transactions.amount_of_transaction) FROM Transactions        
"SELECT statements.Statement_ID, statements.Statement_Details FROM Statements        "
SELECT hosting_city.Host_City FROM hosting_city    ORDER BY hosting_city.Year DESC LIMIT 1    
SELECT player.Residence FROM player  GROUP BY player.Residence HAVING count( *) >= 2     
SELECT DISTINCT student.Major FROM Student        
"SELECT student_addresses.address_id, addresses.city FROM Student_Addresses JOIN Addresses ON student_addresses.address_id = addresses.address_id  GROUP BY student_addresses.address_id  ORDER BY avg( student_addresses.monthly_rental) DESC LIMIT 1    "
SELECT bridge.location FROM bridge WHERE bridge.name = 'Kolob Arch' or bridge.name = 'Rainbow Bridge'       
"SELECT student_course_enrolment.date_of_enrolment, student_course_enrolment.date_of_completion FROM Student_Course_Enrolment        "
SELECT dorm_amenity.amenity_name FROM Dorm_amenity JOIN Has_amenity ON dorm_amenity.amenid = Has_amenity.amenid JOIN Dorm ON Has_amenity.dormid = Dorm.dormid JOIN Lives_in ON Dorm.dormid = Lives_in.dormid JOIN Student ON Lives_in.stuid = student.StuID WHERE student.LName = 'Smith'       
"SELECT trip.start_station_name, trip.end_station_name FROM trip    ORDER BY trip.id ASC LIMIT 1    "
"SELECT products.Product_Name, avg( products.Product_Price) FROM Products  GROUP BY products.Product_Name      "
SELECT count( *) FROM state        
SELECT dorm_amenity.amenity_name FROM Dorm_amenity JOIN Has_amenity ON dorm_amenity.amenid = Has_amenity.amenid JOIN Dorm ON Has_amenity.dormid = dorm.dormid WHERE dorm.dorm_name = 'Anonymous Donor Hall'    ORDER BY dorm_amenity.amenity_name ASC   
SELECT hotels.price_range FROM Hotels WHERE hotels.star_rating_code = '5'       
"SELECT DISTINCT station.id, station.name FROM station JOIN status ON station.id = status.station_id WHERE status.bikes_available > 12       "
"SELECT pilot.Name, pilot.Age FROM pilot JOIN match ON pilot.Pilot_Id = T2.Winning_Pilot WHERE pilot.Age < 30 GROUP BY T2.Winning_Pilot  ORDER BY count( *) DESC LIMIT 1    "
SELECT border_info.state_name FROM border_info WHERE border_info.border = '1' and border_info.state_name in (SELECT river.traverse FROM river WHERE river.length > 1       )       
SELECT wine.Name FROM wine    ORDER BY wine.Score ASC LIMIT 1    
SELECT mountain.state_name FROM mountain WHERE mountain.mountain_name = '1'       
SELECT degrees.Degrees FROM degrees JOIN Campuses ON degrees.Campus = campuses.Id WHERE campuses.Campus = 'San Francisco State University' and degrees.Year = 2001       
"SELECT match_season.Draft_Pick_Number, match_season.Draft_Class FROM match_season WHERE match_season.Position = 'Defender'       "
SELECT river.traverse FROM river WHERE river.length = (SELECT max( river.length) FROM river        )       
"SELECT item.title, item.i_id FROM item JOIN review ON item.i_id = review.i_id  GROUP BY review.i_id  ORDER BY avg( review.rating) DESC LIMIT 1    "
SELECT DISTINCT film.Director FROM film JOIN film_market_estimation ON film.Film_ID = film_market_estimation.Film_ID WHERE film_market_estimation.Year = 1995       
SELECT rooms.roomName FROM Rooms WHERE rooms.basePrice between 120 AND 150       
SELECT companies.name FROM Companies     ORDER BY companies.Market_Value_billion DESC   
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
"SELECT employees.FIRST_NAME, employees.LAST_NAME, departments.DEPARTMENT_NAME, locations.CITY, locations.STATE_PROVINCE FROM employees JOIN departments ON employees.DEPARTMENT_ID = departments.DEPARTMENT_ID JOIN locations ON departments.LOCATION_ID = locations.LOCATION_ID        "
SELECT documents.Project_ID FROM Documents  GROUP BY documents.Project_ID HAVING count( *) >= 2     
"SELECT church.Organized_by, church.Name FROM church WHERE church.Open_Date between 1830 AND 1840       "
SELECT publication.title FROM publication JOIN writes ON publication.pid = writes.pid JOIN author ON writes.aid = author.aid WHERE author.name = '1' and publication.citation_num > 1       
"SELECT physician.Name, count( *) FROM Physician JOIN Patient ON physician.EmployeeID = patient.PCP  GROUP BY physician.Name      "
"SELECT behavior_incident.date_incident_start, behavior_incident.date_incident_end FROM Behavior_Incident WHERE behavior_incident.incident_type_code = 'NOISE'       "
SELECT count( river.river_name) FROM river WHERE river.traverse = '1'       
SELECT state.capital FROM state JOIN border_info ON state.state_name = border_info.border WHERE border_info.state_name = '1'       
"SELECT avg( product_suppliers.total_amount_purchased), avg( product_suppliers.total_value_purchased) FROM Product_Suppliers WHERE product_suppliers.supplier_id = (SELECT product_suppliers.supplier_id FROM Product_Suppliers  GROUP BY product_suppliers.supplier_id  ORDER BY count( *) DESC LIMIT 1    )       "
SELECT DISTINCT count(DISTINCT film.rating) FROM film        
SELECT count( *) FROM Products WHERE products.product_id NOT IN (SELECT order_items.product_id FROM Order_Items        )       
SELECT DISTINCT products.Product_Name FROM Products WHERE products.Product_Price > (SELECT avg( products.Product_Price) FROM Products        )       
SELECT max( highlow.highest_elevation) FROM highlow        
"SELECT courses.subject_id, subjects.subject_name, count( *) FROM Courses JOIN Subjects ON courses.subject_id = subjects.subject_id  GROUP BY courses.subject_id      "
SELECT count( *) FROM Vehicles        
SELECT DISTINCT count(DISTINCT class.PROF_NUM) FROM CLASS WHERE class.CRS_CODE = 'ACCT-211'       
SELECT aircraft.Aircraft FROM aircraft JOIN airport_aircraft ON aircraft.Aircraft_ID = airport_aircraft.Aircraft_ID JOIN airport ON airport_aircraft.Airport_ID = airport.Airport_ID WHERE airport.Airport_Name = '1'     INTERSECT SELECT aircraft.Aircraft FROM aircraft JOIN airport_aircraft ON aircraft.Aircraft_ID = airport_aircraft.Aircraft_ID JOIN airport ON airport_aircraft.Airport_ID = airport.Airport_ID WHERE airport.Airport_Name = '1'         
"SELECT documents.Document_Type_Code, count( *) FROM Documents  GROUP BY documents.Document_Type_Code      "
SELECT branch.Open_year FROM branch  GROUP BY branch.Open_year HAVING count( *) >= 2     
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and location.STREET_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT course.CName FROM Course WHERE course.Credits = 1       
SELECT DISTINCT drivers.forename FROM drivers JOIN driverStandings ON drivers.driverId = driver_standings.driverId WHERE driver_standings.position = 1 and driver_standings.wins = 1 and driver_standings.points > 20       
SELECT patient.Name FROM Patient JOIN Appointment ON patient.SSN = appointment.Patient    ORDER BY appointment.Start DESC LIMIT 1    
SELECT DISTINCT count(DISTINCT organization.name) FROM organization WHERE organization.continent = 'North America'       
"SELECT apartments.apt_type_code, apartments.bathroom_count, apartments.bedroom_count FROM Apartments  GROUP BY apartments.apt_type_code, apartments.bathroom_count, apartments.bedroom_count  ORDER BY sum( apartments.room_count) DESC LIMIT 1    "
"SELECT college.cName, college.state, min( college.enr) FROM College  GROUP BY college.state      "
SELECT DISTINCT key_phrase.keyphraseId FROM keyphrase JOIN paperKeyphrase ON key_phrase.keyphraseId = paperKeyphrase.keyphraseId JOIN paper ON paperKeyphrase.paperId = paper.paperId JOIN venue ON paper.venueId = venue.venueId WHERE venue.venueName = '1'       
SELECT avg( lessons.price) FROM Lessons JOIN Staff ON lessons.staff_id = staff.staff_id WHERE staff.first_name = 'Janessa' and staff.last_name = 'Sawayn'       
"SELECT entrepreneur.Investor, count( *) FROM entrepreneur  GROUP BY entrepreneur.Investor      "
"SELECT book_club.Publisher, count( *) FROM book_club  GROUP BY book_club.Publisher      "
SELECT avg( invoices.Order_Quantity) FROM Invoices WHERE invoices.payment_method_code = 'MasterCard'       
SELECT person_friend.name FROM PersonFriend JOIN Person ON person_friend.friend = person.name WHERE person.city = '1'       
SELECT problems.problem_id FROM Problems JOIN Staff ON problems.reported_by_staff_id = staff.staff_id WHERE staff.staff_last_name = 'Bosco'       
"SELECT customers.customer_name, customers.customer_phone FROM Customers JOIN Customer_Orders ON customers.customer_id = Customer_Orders.customer_id JOIN Order_Items ON Customer_Orders.order_id = order_items.order_id  GROUP BY customers.customer_id  ORDER BY sum( order_items.order_quantity) DESC LIMIT 1    "
"SELECT station.name, station.long, avg( trip.duration) FROM trip JOIN station  GROUP BY station.id      "
SELECT business.name FROM business JOIN category ON business.business_id = category.business_id WHERE business.city = '1' and category.category_name = '1'       
"SELECT city.City, city.GDP FROM city    ORDER BY city.GDP ASC LIMIT 1    "
SELECT school.Location FROM school     ORDER BY school.Enrollment ASC   
SELECT publication.title FROM publication JOIN writes ON publication.pid = writes.pid JOIN author ON writes.aid = author.aid WHERE author.name = '1' and author.name = '1' and publication.year > 1       
SELECT film_market_estimation.Year FROM film_market_estimation JOIN market ON film_market_estimation.Market_ID = market.Market_ID WHERE market.Country = 'Japan'    ORDER BY film_market_estimation.Year DESC   
SELECT student.StuID FROM Student WHERE student.Sex = 'M'       
SELECT count( *) FROM state        
SELECT orders.order_id FROM Orders JOIN Order_Items ON orders.order_id = T2.order_id  GROUP BY orders.order_id  ORDER BY count( *) DESC LIMIT 1    
SELECT count( state.state_name) FROM state        
"SELECT address.phone, address.postal_code FROM address WHERE address.address = '1031 Daugavpils Parkway'       "
SELECT border_info.border FROM border_info WHERE border_info.state_name in (SELECT border_info.border FROM border_info WHERE border_info.state_name = '1'       )       
SELECT sum( checking.balance) FROM CHECKING        
SELECT DISTINCT wine.Name FROM wine WHERE wine.Year < 2000 or wine.Year > 2010       
"SELECT rooms.decor, avg( rooms.basePrice), min( rooms.basePrice) FROM Rooms  GROUP BY rooms.decor      "
SELECT drama_workshop_groups.Store_Email_Address FROM Drama_Workshop_Groups JOIN Addresses ON drama_workshop_groups.Address_ID = addresses.Address_ID WHERE addresses.State_County = 'Alaska'       
SELECT avg( song.rating) FROM song JOIN artist ON song.artist_name = artist.artist_name WHERE artist.gender = 'Female'       
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' and paper.year < 1       
SELECT apartments.apt_type_code FROM Apartments  GROUP BY apartments.apt_type_code  ORDER BY avg( apartments.room_count) DESC LIMIT 1    
SELECT addresses.address_content FROM Addresses JOIN Customer_Addresses ON addresses.address_id = Customer_Addresses.address_id JOIN Customers ON Customer_Addresses.customer_id = customers.customer_id WHERE customers.customer_name = 'Maudie Kertzmann'       
SELECT student.StuID FROM Student WHERE student.Major = 1     INTERSECT SELECT sports_info.StuID FROM SportsInfo WHERE sports_info.OnScholarship = '1'         
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and location.STREET_NAME = '1'       "
SELECT order_items.order_item_id FROM Order_Items WHERE order_items.product_id = 11       
SELECT school.Location FROM school     ORDER BY school.Founded DESC   
SELECT DISTINCT count(DISTINCT voting_record.President_Vote) FROM Voting_record        
SELECT wrestler.Reign FROM wrestler  GROUP BY wrestler.Reign  ORDER BY count( *) DESC LIMIT 1    
SELECT party.Location FROM party    ORDER BY party.Number_of_hosts DESC LIMIT 1    
"SELECT company.Main_Industry, count( *) FROM company  GROUP BY company.Main_Industry  ORDER BY sum( company.Market_Value) DESC LIMIT 1    "
"SELECT products.product_name, products.product_category_code FROM Products    ORDER BY products.product_price DESC LIMIT 1    "
"SELECT products.Code, products.Name, min( products.Price) FROM Products  GROUP BY products.Name      "
SELECT DISTINCT college.state FROM College WHERE college.enr < (SELECT max( college.enr) FROM College        )       
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Peter Mertens' and author.authorName = 'Dina Barbian'       
SELECT campuses.Campus FROM Campuses WHERE campuses.Location = 'Northridge' and campuses.County = 'Los Angeles'      UNION SELECT campuses.Campus FROM Campuses WHERE campuses.Location = 'San Francisco' and campuses.County = 'San Francisco'        
"SELECT flight.destination, count( *) FROM flight  GROUP BY flight.destination      "
SELECT school.Denomination FROM school JOIN player ON school.School_ID = player.School_ID  GROUP BY school.Denomination  ORDER BY count( *) DESC LIMIT 1    
"SELECT max( products.product_price), min( products.product_price), products.product_type_code FROM Products  GROUP BY products.product_type_code   ORDER BY products.product_type_code ASC   "
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId JOIN venue ON paper.venueId = venue.venueId WHERE author.authorName = '1' and key_phrase.keyphraseName = '1' and paper.year = 1 and venue.venueName = '1'       
SELECT employees.Employee_Name FROM Employees JOIN Roles ON employees.Role_Code = roles.Role_Code WHERE roles.Role_Name = 'Editor'       
SELECT people.cell_mobile_number FROM People JOIN Candidates ON people.person_id = Candidates.candidate_id JOIN Candidate_Assessments ON Candidates.candidate_id = candidate_assessments.candidate_id WHERE candidate_assessments.asessment_outcome_code = 'Fail'       
SELECT count( *) FROM customers WHERE customers.city = 'Prague'       
"SELECT physician.Name, department.Name FROM Physician JOIN Department ON physician.EmployeeID = department.Head JOIN Affiliated_With ON department.DepartmentID = affiliated_with.Department WHERE affiliated_with.PrimaryAffiliation = 1       "
SELECT count( *) FROM teachers WHERE teachers.FirstName = 'TARRING' and teachers.LastName = 'LEIA'       
"SELECT employee.name, employee.salary FROM employee     ORDER BY employee.salary ASC   "
"SELECT DISTINCT submission.Author, count(DISTINCT acceptance.Workshop_ID) FROM submission JOIN Acceptance ON submission.Submission_ID = acceptance.Submission_ID  GROUP BY submission.Author      "
"SELECT employees.SALARY, employees.MANAGER_ID FROM employees WHERE employees.MANAGER_ID != 1       "
SELECT customers.customer_name FROM Customers JOIN Customer_Addresses ON customers.customer_id = Customer_Addresses.customer_id JOIN Addresses ON Customer_Addresses.address_id = addresses.address_id WHERE addresses.state_province_county = 'Colorado'       
SELECT DISTINCT key_phrase.keyphraseId FROM keyphrase JOIN paperKeyphrase ON key_phrase.keyphraseId = paperKeyphrase.keyphraseId JOIN paper ON paperKeyphrase.paperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Luke Zettlemoyer'       
"SELECT statements.Statement_Details, documents.Document_Name FROM Statements JOIN Documents ON statements.Statement_ID = documents.Document_ID WHERE statements.Statement_Details = 'Private Project'       "
SELECT border_info.border FROM border_info WHERE border_info.state_name = '1'       
SELECT count( *) FROM Tryout WHERE tryout.pPos = 'goalie'       
SELECT count( *) FROM state        
SELECT college.cName FROM College WHERE college.enr < 13000 and college.state = 'AZ'      UNION SELECT college.cName FROM College WHERE college.enr > 15000 and college.state = 'LA'        
SELECT ship.Name FROM Ship     ORDER BY ship.Built_Year ASC   
SELECT publication.reference_num FROM publication WHERE publication.title = '1'       
SELECT addresses.City_Town FROM Addresses JOIN Stores ON addresses.Address_ID = stores.Address_ID WHERE stores.Store_Name = 'FJA Filming'       
SELECT * FROM Products JOIN Manufacturers ON products.Manufacturer = T2.Code        
SELECT election.Delegate FROM election JOIN county ON election.District = county.County_Id WHERE county.Population < 100000       
SELECT DISTINCT institution.name FROM Inst JOIN Authorship ON institution.instID = Authorship.instID JOIN Authors ON Authorship.authID = authors.authID WHERE authors.fname = 'Matthias' and authors.lname = 'Blume'       
SELECT projects.Name FROM Projects    ORDER BY projects.Hours DESC LIMIT 1    
SELECT branch.City FROM branch WHERE branch.Open_year = '2001' and branch.membership_amount > '100'       
SELECT teachers.email_address FROM Teachers JOIN Addresses ON teachers.address_id = addresses.address_id WHERE addresses.zip_postcode = '918'       
SELECT performance.Date FROM performance JOIN member_attendance ON performance.Performance_ID = member_attendance.Performance_ID JOIN member ON member_attendance.Member_ID = member.Member_ID WHERE member.Role = 'Violin'       
SELECT course.title FROM course JOIN prereq ON course.course_id = T2.prereq_id  GROUP BY course.title HAVING count( *) = 2     
SELECT DISTINCT allergy_type.AllergyType FROM Allergy_Type        
"SELECT train.Railway_ID, railway.Builder FROM train JOIN railway ON train.Railway_ID = railway.Railway_ID  GROUP BY train.Railway_ID  ORDER BY count( *) DESC LIMIT 1    "
"SELECT course_authors_and_tutors.address_line_1, courses.author_id FROM Course_Authors_and_Tutors JOIN Courses ON course_authors_and_tutors.author_id = courses.author_id  GROUP BY courses.author_id HAVING count( *) >= 2     "
SELECT artist.Name FROM Artist JOIN Album ON artist.ArtistId = album.ArtistId WHERE album.Title = 'Balls to the Wall'       
"SELECT document_locations.Date_in_Location_From, document_locations.Date_in_Locaton_To FROM Document_Locations JOIN All_Documents ON document_locations.Document_ID = all_documents.Document_ID WHERE all_documents.Document_Name = 'Robin CV'       "
"SELECT employee.EMP_FNAME, professor.PROF_OFFICE, course.CRS_DESCRIPTION, department.DEPT_NAME FROM EMPLOYEE JOIN PROFESSOR ON employee.EMP_NUM = professor.EMP_NUM JOIN DEPARTMENT ON professor.DEPT_CODE = department.DEPT_CODE JOIN COURSE ON department.DEPT_CODE = course.DEPT_CODE JOIN EMPLOYEE ON department.EMP_NUM = employee.EMP_NUM JOIN CLASS ON employee.EMP_NUM = T5.PROF_NUM        "
SELECT count( *) FROM Rooms WHERE rooms.bedType = 'King'       
"SELECT employee.EMP_FNAME, professor.PROF_OFFICE FROM EMPLOYEE JOIN PROFESSOR ON employee.EMP_NUM = professor.EMP_NUM JOIN DEPARTMENT ON professor.DEPT_CODE = department.DEPT_CODE WHERE department.DEPT_NAME = 'History' and professor.PROF_HIGH_DEGREE = 'Ph.D.'       "
SELECT count( *) FROM program        
SELECT campuses.Campus FROM Campuses WHERE campuses.County = 'Los Angeles'       
"SELECT gas_station.Location, count( *) FROM gas_station  GROUP BY gas_station.Location   ORDER BY count( *) ASC   "
SELECT wrestler.Name FROM wrestler     ORDER BY wrestler.Days_held DESC   
SELECT count( *) FROM Customers WHERE customers.customer_id NOT IN (SELECT accounts.customer_id FROM Accounts        )       
SELECT DISTINCT count(DISTINCT volume.Artist_ID) FROM volume        
"SELECT DISTINCT count(DISTINCT paper.paperId), writes.authorId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 2007 and venue.venueName = 'CVPR' GROUP BY writes.authorId   ORDER BY count( paper.paperId) DESC   "
"SELECT movie.title, rating.stars, movie.director, min( rating.stars) FROM Movie JOIN Rating ON movie.mID = rating.mID  GROUP BY rating.mID      "
SELECT projects.Name FROM Projects WHERE projects.Hours between 100 AND 300       
SELECT college.state FROM College JOIN Tryout ON college.cName = tryout.cName WHERE tryout.pPos = '1'     INTERSECT SELECT college.state FROM College JOIN Tryout ON college.cName = tryout.cName WHERE tryout.pPos = '1'         
"SELECT performance.Location, count( *) FROM performance  GROUP BY performance.Location      "
"SELECT plays_games.GameID, sum( plays_games.Hours_Played) FROM Plays_Games  GROUP BY plays_games.GameID      "
SELECT avg( customer.credit_score) FROM customer JOIN bank ON customer.branch_ID = bank.branch_ID JOIN loan ON bank.branch_ID = T2.branch_ID        
SELECT DISTINCT count(DISTINCT business.name) FROM business JOIN category ON business.business_id = category.business_id WHERE business.rating > 1 and category.category_name = '1'       
SELECT DISTINCT paper.paperId FROM paperDataset JOIN dataset JOIN paper WHERE dataset.datasetName = 'WebKB'       
SELECT customer.cust_name FROM customer JOIN bank ON customer.branch_ID = bank.branch_ID JOIN loan ON bank.branch_ID = loan.branch_ID WHERE loan.amount > 3000       
SELECT physician.Name FROM Physician JOIN Trained_In ON physician.EmployeeID = T3.Physician JOIN Procedures ON T3.Treatment = procedures.Code    ORDER BY procedures.Cost DESC LIMIT 1    
SELECT DISTINCT paper.paperId FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 1 and venue.venueName = '1'       
"SELECT employees.first_name, employees.last_name FROM employees    ORDER BY employees.birth_date DESC LIMIT 1    "
"SELECT artist.Name, artist.Country FROM artist JOIN exhibition ON artist.Artist_ID = exhibition.Artist_ID  GROUP BY exhibition.Artist_ID  ORDER BY count( *) DESC LIMIT 1    "
SELECT city.population FROM city WHERE city.city_name = (SELECT state.capital FROM state WHERE state.area = (SELECT min( state.area) FROM state        )       )       
SELECT school.School_Colors FROM school    ORDER BY school.Enrollment DESC LIMIT 1    
SELECT avg( grade_conversion.gradepoint) FROM Gradeconversion JOIN Enrolled_in ON grade_conversion.lettergrade = Enrolled_in.Grade JOIN Student ON Enrolled_in.StuID = student.StuID WHERE student.LName = 'Smith'       
SELECT DISTINCT count(DISTINCT claims_processing.Claim_Outcome_Code) FROM Claims_Processing        
SELECT game.Season FROM game JOIN injury_accident ON game.id = injury_accident.game_id WHERE injury_accident.Player = 'Walter Samuel'       
SELECT activity.activity_name FROM Activity        
SELECT DISTINCT count(DISTINCT device.Software_Platform) FROM device        
SELECT events.Event_Details FROM Events JOIN Services ON events.Service_ID = services.Service_ID WHERE services.Service_Type_Code = 'Marriage'       
SELECT movie.title FROM directed_by JOIN copyright ON directed_by.msid = copyright.msid JOIN cast ON copyright.msid = cast.msid JOIN actor ON cast.aid = actor.aid JOIN director ON directed_by.did = director.did JOIN movie WHERE actor.name = 'Taraneh Alidoosti' and director.name = 'Asghar Farhadi'       
SELECT count( *) FROM artist        
SELECT DISTINCT count(DISTINCT instruments.Instrument) FROM Instruments JOIN Band ON instruments.BandmateId = band.Id WHERE band.Lastname = 'Heilo'       
SELECT count( *) FROM circuits        
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = geographic.CITY_NAME JOIN RESTAURANT ON geographic.CITY_NAME = restaurant.CITY_NAME WHERE geographic.REGION = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT DISTINCT student.name FROM student JOIN takes ON student.ID = takes_classes.ID WHERE takes_classes.year = 2009 or takes_classes.year = 2010       
SELECT student.name FROM student JOIN takes ON student.ID = T2.ID JOIN section ON T2.course_id = section.course_id JOIN course ON section.course_id = course.course_id WHERE course.dept_name = 'Statistics'       
SELECT order_items.Other_Item_Details FROM Order_Items JOIN Products ON order_items.Product_ID = products.Product_ID WHERE products.Product_Price > 2000       
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId JOIN venue ON paper.venueId = venue.venueId WHERE key_phrase.keyphraseName = '1' and paper.year = 1 and venue.venueName = '1'       
SELECT DISTINCT county_public_safety.Police_force FROM county_public_safety WHERE county_public_safety.Location != 'East'       
SELECT camera_lens.name FROM camera_lens JOIN photos ON camera_lens.id = T3.camera_lens_id  GROUP BY camera_lens.name  ORDER BY count( *) DESC LIMIT 1    
"SELECT course.CRS_CREDIT, course.CRS_DESCRIPTION FROM COURSE WHERE course.CRS_CODE = 'QM-261'       "
"SELECT catalogs.catalog_name, catalogs.date_of_publication FROM Catalogs JOIN Catalog_Structure ON catalogs.catalog_id = catalog_structure.catalog_id WHERE catalog_structure.catalog_level_number > 5       "
"SELECT customers.first_name, customers.last_name, customers.gender_mf FROM Customers WHERE customers.good_or_bad_customer = '1'    ORDER BY customers.last_name ASC   "
SELECT track.Name FROM track JOIN race ON track.Track_ID = race.Track_ID  GROUP BY track.Name  ORDER BY count( *) DESC LIMIT 1    
SELECT count( *) FROM teachers WHERE teachers.FirstName = 'TARRING' and teachers.LastName = 'LEIA'       
SELECT organisations.organisation_details FROM Organisations JOIN Organisation_Types ON organisations.organisation_type = organisation_types.organisation_type WHERE organisation_types.organisation_type_description = 'Sponsor'    ORDER BY organisations.organisation_details ASC   
SELECT count( *) FROM Characteristics        
SELECT count( *) FROM course WHERE course.course_id NOT IN (SELECT prerequisite.course_id FROM prereq        )       
"SELECT organisations.organisation_type, organisations.organisation_id FROM Organisations JOIN Research_Staff ON organisations.organisation_id = research_staff.employer_organisation_id  GROUP BY research_staff.employer_organisation_id  ORDER BY count( *) DESC LIMIT 1    "
SELECT mountain.mountain_altitude FROM mountain WHERE mountain.mountain_name = '1'       
SELECT projects.project_details FROM Projects WHERE projects.organisation_id in (SELECT projects.organisation_id FROM Projects  GROUP BY projects.organisation_id  ORDER BY count( *) DESC LIMIT 1    )       
SELECT DISTINCT count(DISTINCT cite.citedPaperId) FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
SELECT sum( furniture.Market_Rate) FROM furniture    ORDER BY furniture.Market_Rate DESC LIMIT 1    
SELECT count( border_info.border) FROM border_info WHERE border_info.border in (SELECT border_info.border FROM border_info WHERE border_info.state_name = '1'       ) and border_info.state_name = '1'       
SELECT count( *) FROM cinema        
SELECT count( *) FROM author        
SELECT park.state FROM park  GROUP BY park.state HAVING count( *) > 2     
"SELECT count( *), person.gender FROM Person WHERE person.age < 40 GROUP BY person.gender      "
SELECT rooms.roomName FROM Rooms WHERE rooms.basePrice < 1 and rooms.beds = 1 and rooms.decor = '1'       
SELECT party.Minister FROM party WHERE party.Party_name != 'Progress Party'       
"SELECT authors.fname, authors.lname FROM Authors     ORDER BY authors.lname ASC   "
SELECT restaurant.Address FROM Restaurant WHERE restaurant.ResName = 'Subway'       
SELECT DISTINCT institution.Type FROM Institution        
SELECT driver.Home_city FROM driver        EXCEPT SELECT driver.Home_city FROM driver WHERE driver.Age > 40       
"SELECT avg( checkin.count), checkin.day FROM checkin JOIN business ON checkin.business_id = business.business_id JOIN category ON business.business_id = category.business_id WHERE business.name = '1' and category.category_name = '1' GROUP BY checkin.day      "
"SELECT DISTINCT cite.citedPaperId, count(DISTINCT cite.citedPaperId) FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1' GROUP BY cite.citedPaperId   ORDER BY count( cite.citedPaperId) DESC   "
SELECT employees.employee_name FROM Employees JOIN Circulation_History ON employees.employee_id = circulation_history.employee_id WHERE circulation_history.document_id = 1       
SELECT mountain.state_name FROM mountain WHERE mountain.mountain_name = '1'       
SELECT count( *) FROM Person WHERE person.gender = 'female'       
"SELECT rooms.bedType, avg( rooms.basePrice) FROM Rooms  GROUP BY rooms.bedType      "
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 1 and venue.venueName = '1'       
"SELECT staff.staff_name, staff.staff_gender FROM Staff JOIN Staff_Department_Assignments ON staff.staff_id = staff_department_assignments.staff_id WHERE staff_department_assignments.date_assigned_from like '%2016%'       "
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId JOIN venue ON paper.venueId = venue.venueId WHERE key_phrase.keyphraseName = 'TAIL' and venue.venueName = 'NIPS'       
SELECT avg( gymnast.Horizontal_Bar_Points) FROM gymnast        
SELECT state.area FROM state WHERE state.area = (SELECT min( state.area) FROM state        )       
SELECT count( *) FROM Users WHERE users.user_login = '1'       
SELECT DISTINCT room.BlockCode FROM Room WHERE room.Unavailable = 1       
SELECT count( *) FROM Customers WHERE customers.customer_id NOT IN (SELECT customer_payments.customer_id FROM Customer_Payments        )       
SELECT DISTINCT club.ClubName FROM Club JOIN Member_of_club ON club.ClubID = Member_of_club.ClubID JOIN Student ON Member_of_club.StuID = student.StuID WHERE student.Advisor = 1121       
"SELECT has_allergy.Allergy, count( *) FROM Has_Allergy JOIN Student ON has_allergy.StuID = student.StuID  GROUP BY has_allergy.Allergy      "
"SELECT invoices.payment_method_code, count( *) FROM Invoices  GROUP BY invoices.payment_method_code      "
"SELECT sum( sports_info.HoursPerWeek), sum( sports_info.GamesPlayed) FROM SportsInfo JOIN Student ON sports_info.StuID = student.StuID WHERE student.Age < 20       "
SELECT flight.flno FROM flight JOIN aircraft ON flight.aid = aircraft.aid WHERE aircraft.name = 'Airbus A340-300'       
SELECT video_games.GType FROM Video_Games  GROUP BY video_games.GType  ORDER BY count( *) DESC LIMIT 1    
SELECT people.Name FROM people WHERE people.People_ID NOT IN (SELECT entrepreneur.People_ID FROM entrepreneur        )       
"SELECT browser.name, web_client_accelerator.name FROM browser JOIN accelerator_compatible_browser ON browser.id = accelerator_compatible_browser.browser_id JOIN Web_client_accelerator ON accelerator_compatible_browser.accelerator_id = web_client_accelerator.id     ORDER BY accelerator_compatible_browser.compatible_since_year DESC   "
SELECT courses.course_name FROM Courses JOIN Student_Course_Enrolment ON courses.course_id = T3.course_id JOIN Students ON T3.student_id = students.student_id  GROUP BY courses.course_name  ORDER BY count( *) DESC LIMIT 1    
SELECT DISTINCT detention.detention_type_code FROM Detention        
"SELECT DISTINCT count(DISTINCT paper.paperId), writes.authorId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' GROUP BY writes.authorId   ORDER BY count( paper.paperId) DESC   "
SELECT competition.Country FROM competition        EXCEPT SELECT competition.Country FROM competition WHERE competition.Competition_type = 'Friendly'       
SELECT state.state_name FROM state WHERE state.density = (SELECT min( state.density) FROM state        )       
SELECT sum( claim_headers.Amount_Claimed) FROM Claim_Headers JOIN Claims_Documents ON claim_headers.Claim_Header_ID = claims_documents.Claim_ID WHERE claims_documents.Created_Date = (SELECT claims_documents.Created_Date FROM Claims_Documents    ORDER BY claims_documents.Created_Date ASC LIMIT 1    )       
"SELECT faculty.Fname, faculty.Lname FROM Faculty WHERE faculty.Sex = 'M' and faculty.Building = 'NEB'       "
SELECT department.DEPT_NAME FROM DEPARTMENT JOIN COURSE ON department.DEPT_CODE = course.DEPT_CODE WHERE course.CRS_DESCRIPTION like '%Statistics%'       
SELECT music_festival.Category FROM music_festival WHERE music_festival.Result = 'Awarded'       
SELECT program.Owner FROM program JOIN broadcast ON program.Program_ID = broadcast.Program_ID WHERE broadcast.Time_of_day = 'Morning'     INTERSECT SELECT program.Owner FROM program JOIN broadcast ON program.Program_ID = broadcast.Program_ID WHERE broadcast.Time_of_day = 'Night'         
SELECT DISTINCT cite.citingPaperId FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN venue ON paper.venueId = venue.venueId WHERE venue.venueName = 'ACL' GROUP BY cite.citingPaperId HAVING count( cite.citedPaperId) < 5     
SELECT college.state FROM College JOIN Tryout ON college.cName = Tryout.cName JOIN Player ON Tryout.pID = player.pID WHERE player.pName = 'Charles'       
SELECT customers.Customer_Details FROM Customers        EXCEPT SELECT customers.Customer_Details FROM Customers JOIN Customer_Policies ON customers.Customer_ID = T3.Customer_ID        
SELECT city.population FROM city WHERE city.city_name = '1'       
SELECT business.name FROM business JOIN category ON business.business_id = category.business_id WHERE business.city = '1' and category.category_name = '1'       
SELECT count( *) FROM Roles        
SELECT discount_coupons.coupon_amount FROM Discount_Coupons JOIN Customers ON discount_coupons.coupon_id = customers.coupon_id WHERE customers.good_or_bad_customer = '1'     INTERSECT SELECT discount_coupons.coupon_amount FROM Discount_Coupons JOIN Customers ON discount_coupons.coupon_id = customers.coupon_id WHERE customers.good_or_bad_customer = '1'         
SELECT music_festival.Date_of_ceremony FROM music_festival JOIN volume ON music_festival.Volume = volume.Volume_ID WHERE volume.Weeks_on_Top > 2       
"SELECT min( election.Vote_Percent), max( election.Vote_Percent) FROM election        "
SELECT count( *) FROM Has_Allergy JOIN Allergy_Type ON has_allergy.Allergy = allergy_type.Allergy WHERE allergy_type.AllergyType = 'animal'       
"SELECT gas_station.Location, gas_station.Representative_Name FROM gas_station JOIN station_company ON gas_station.Station_ID = station_company.Station_ID JOIN company ON station_company.Company_ID = company.Company_ID    ORDER BY company.Assets_billion DESC LIMIT 1    "
SELECT DISTINCT paper.year FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1'    ORDER BY paper.year ASC   
SELECT DISTINCT nurse.Name FROM Nurse JOIN On_Call ON nurse.EmployeeID = T2.Nurse        
"SELECT airports.city, count( *) FROM airports  GROUP BY airports.city HAVING count( *) > 1     "
SELECT appointment.AppointmentID FROM Appointment    ORDER BY appointment.Start DESC LIMIT 1    
SELECT film.title FROM film WHERE film.rating = 'R'       
SELECT weather.date FROM weather WHERE weather.max_temperature_f > 85       
SELECT submission.Author FROM submission JOIN Acceptance ON submission.Submission_ID = T2.Submission_ID  GROUP BY submission.Author HAVING count( T2.Workshop_ID) > 1     
"SELECT faculty.Fname, faculty.Lname, count( *), faculty.FacID FROM Faculty JOIN Faculty_Participates_in ON faculty.FacID = Faculty_Participates_in.FacID JOIN Activity ON Faculty_Participates_in.actid = activity.actid  GROUP BY faculty.FacID      "
SELECT state.state_name FROM state WHERE state.density = (SELECT max( state.density) FROM state        )       
"SELECT employees.title, employees.phone, employees.hire_date FROM employees WHERE employees.first_name = 'Nancy' and employees.last_name = 'Edwards'       "
"SELECT invoices.billing_country, sum( invoices.total) FROM invoices  GROUP BY invoices.billing_country  ORDER BY sum( invoices.total) DESC LIMIT 1    "
SELECT trip.id FROM trip    ORDER BY trip.duration ASC LIMIT 1    
SELECT state.capital FROM state WHERE state.state_name = '1'       
SELECT district.District_name FROM district    ORDER BY district.City_Area ASC LIMIT 1    
SELECT count( *) FROM Accounts        
"SELECT host.Name, host.Nationality FROM host    ORDER BY host.Age DESC LIMIT 1    "
SELECT avg( submission.Scores) FROM submission        
SELECT tryout.cName FROM Tryout JOIN Player ON tryout.pID = player.pID WHERE player.pName like '%D%'       
SELECT bookings.Order_Date FROM Bookings        
"SELECT student.STU_FNAME, student.STU_GPA FROM STUDENT WHERE student.STU_GPA < (SELECT avg( student.STU_GPA) FROM STUDENT        )       "
SELECT aircraft.name FROM aircraft    ORDER BY aircraft.distance ASC LIMIT 1    
SELECT avg( airport.Total_Passengers) FROM airport JOIN airport_aircraft ON airport.Airport_ID = airport_aircraft.Airport_ID JOIN aircraft ON airport_aircraft.Aircraft_ID = aircraft.Aircraft_ID WHERE aircraft.Aircraft = 'Robinson R-22'       
SELECT count( *) FROM Addresses        
SELECT city.population FROM city WHERE city.city_name = '1'       
SELECT city.City FROM city JOIN hosting_city ON city.City_ID = hosting_city.Host_City WHERE hosting_city.Year > 2010       
"SELECT gas_station.Station_ID, gas_station.Location, gas_station.Manager_Name FROM gas_station     ORDER BY gas_station.Open_Year ASC   "
SELECT tourist_attractions.Name FROM Tourist_Attractions JOIN Photos ON tourist_attractions.Tourist_Attraction_ID = photos.Tourist_Attraction_ID WHERE photos.Name = 'game1'       
"SELECT people.Name, people.Birth_Place FROM people        EXCEPT SELECT people.Name, people.Birth_Place FROM people JOIN body_builder ON people.People_ID = T3.People_ID        "
"SELECT weather.date, weather.max_temperature_f FROM weather    ORDER BY weather.max_temperature_f ASC LIMIT 1    "
"SELECT student.Fname, student.LName FROM Student JOIN Member_of_club ON student.StuID = member_of_club.StuID JOIN Club ON member_of_club.ClubID = club.ClubID WHERE club.ClubName = 'Hopkins Student Enterprises' and member_of_club.Position = 'CTO'       "
"SELECT tourist_attractions.How_to_Get_There, count( *) FROM Tourist_Attractions  GROUP BY tourist_attractions.How_to_Get_There      "
"SELECT avg( player.HS), max( player.HS) FROM Player JOIN Tryout ON player.pID = tryout.pID WHERE tryout.decision = '1'       "
"SELECT film.title, film.film_id FROM film WHERE film.rental_rate = 0.99     INTERSECT SELECT film.title, film.film_id FROM film JOIN inventory ON film.film_id = T3.film_id  GROUP BY film.film_id HAVING count( *) < 3       "
SELECT count( river.traverse) FROM river WHERE river.river_name = '1'       
"SELECT projects.Name, scientists.Name FROM Projects JOIN AssignedTo ON projects.Code = AssignedTo.Project JOIN Scientists ON AssignedTo.Scientist = scientists.SSN WHERE projects.Hours = (SELECT min( projects.Hours) FROM Projects        )       "
SELECT city.city_name FROM city WHERE city.population > 1 and city.state_name = '1'       
SELECT staff.last_name FROM Staff WHERE staff.email_address like '%wrau%'       
SELECT DISTINCT room.BlockCode FROM Room WHERE room.Unavailable = 1       
SELECT college.cName FROM College    ORDER BY college.enr DESC LIMIT 1    
SELECT nurse.Name FROM Nurse JOIN Appointment ON nurse.EmployeeID = appointment.PrepNurse  GROUP BY nurse.Name  ORDER BY count( *) DESC LIMIT 1    
SELECT city.city_name FROM city WHERE city.population = (SELECT max( city.population) FROM city WHERE city.state_name = '1'       ) and city.state_name = '1'       
SELECT song.song_name FROM song     ORDER BY song.resolution ASC   
SELECT DISTINCT customers.customer_details FROM Customers JOIN Orders ON customers.customer_id = orders.customer_id WHERE orders.order_status = 'On Road'       
SELECT DISTINCT film.Directed_by FROM film        
"SELECT avg( products.Price), manufacturers.Name FROM Products JOIN Manufacturers ON products.Manufacturer = manufacturers.Code  GROUP BY manufacturers.Name      "
SELECT count( *) FROM Customers WHERE customers.customer_id NOT IN (SELECT accounts.customer_id FROM Accounts        )       
SELECT person_friend.friend FROM PersonFriend JOIN Person ON person_friend.friend = person.name WHERE person_friend.name = 'Alice' and person.gender = 'male' and person.job = 'doctor'       
SELECT culture_company.Company_name FROM culture_company JOIN movie ON culture_company.movie_id = movie.movie_id WHERE movie.Year = 1999       
SELECT count( student_course_enrolment.course_id) FROM Student_Course_Enrolment        
SELECT dorm_amenity.amenity_name FROM Dorm_amenity     ORDER BY dorm_amenity.amenity_name ASC   
"SELECT products.product_details, products.product_id FROM Products JOIN Order_Items ON products.product_id = order_items.product_id  GROUP BY order_items.product_id  ORDER BY sum( order_items.order_quantity) ASC LIMIT 1    "
"SELECT activity.activity_name, count( *) FROM Activity JOIN Faculty_Participates_in ON activity.actid = Faculty_Participates_in.actid JOIN Faculty ON Faculty_Participates_in.FacID = faculty.FacID  GROUP BY activity.activity_name      "
SELECT count( *) FROM author        
SELECT DISTINCT paper.paperId FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 1 and venue.venueName = '1'       
"SELECT customers_cards.customer_id, count( *) FROM Customers_Cards  GROUP BY customers_cards.customer_id      "
SELECT avg( college.enr) FROM College        
SELECT river.river_name FROM river WHERE river.length = (SELECT min( river.length) FROM river        )       
SELECT invoices.payment_method_code FROM Invoices  GROUP BY invoices.payment_method_code  ORDER BY count( *) DESC LIMIT 1    
"SELECT song.f_id, song.genre_is, song.artist_name FROM song WHERE song.languages = 'english'    ORDER BY song.rating ASC   "
SELECT airlines.country FROM airlines  GROUP BY airlines.country  ORDER BY count( *) DESC LIMIT 1    
SELECT market.Country FROM market     ORDER BY market.Country ASC   
"SELECT film.title, film.film_id FROM film JOIN inventory ON film.film_id = inventory.film_id  GROUP BY inventory.film_id  ORDER BY count( *) DESC LIMIT 1    "
SELECT count( *) FROM Addresses WHERE addresses.country = 'USA'       
"SELECT max( volume.Weeks_on_Top), min( volume.Weeks_on_Top) FROM volume        "
"SELECT customer.FirstName, customer.LastName FROM Customer WHERE customer.Email = 'luisg@embraer.com.br'       "
SELECT count( *) FROM author        
SELECT highlow.highest_point FROM highlow WHERE highlow.highest_elevation = (SELECT max( highlow.highest_elevation) FROM highlow        )       
SELECT DISTINCT cite.citedPaperId FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1'       
"SELECT financial_transactions.account_id, accounts.account_name FROM Financial_Transactions JOIN Accounts ON financial_transactions.account_id = accounts.account_id  GROUP BY financial_transactions.account_id HAVING count( *) >= 4     "
SELECT DISTINCT paper.paperId FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 1 and venue.venueName = '1'       
SELECT member.Member_Name FROM member JOIN party ON member.Party_ID = party.Party_ID WHERE party.Party_name != 'Progress Party'       
SELECT party.Party FROM party JOIN election ON party.Party_ID = T2.Party  GROUP BY party.Party  ORDER BY count( *) DESC LIMIT 1    
"SELECT allergy_type.AllergyType, count( *) FROM Allergy_Type JOIN Has_Allergy ON allergy_type.Allergy = Has_Allergy.Allergy JOIN Student ON Has_Allergy.StuID = student.StuID  GROUP BY allergy_type.AllergyType      "
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE restaurant.CITY_NAME in (SELECT geographic.CITY_NAME FROM GEOGRAPHIC WHERE geographic.REGION = '1'       )       "
SELECT city.state_name FROM city WHERE city.city_name = '1'       
SELECT river.river_name FROM river WHERE river.traverse = '1'       
"SELECT statements.Statement_Details, documents.Document_Name FROM Statements JOIN Documents ON statements.Statement_ID = documents.Document_ID WHERE statements.Statement_Details = 'Private Project'       "
SELECT tracks.name FROM tracks JOIN genres ON tracks.genre_id = genres.id WHERE genres.name = 'Rock'       
SELECT publication.title FROM publication JOIN domain_publication ON publication.pid = domain_publication.pid JOIN domain ON domain_publication.did = domain.did WHERE domain.name = 'Databases'   ORDER BY publication.citation_num DESC LIMIT 1    
SELECT city.City FROM city JOIN hosting_city ON city.City_ID = T2.Host_City  GROUP BY city.City  ORDER BY count( *) DESC LIMIT 1    
SELECT competition.Country FROM competition WHERE competition.Competition_type = 'Tournament' GROUP BY competition.Country  ORDER BY count( *) DESC LIMIT 1    
SELECT order_items.product_id FROM Order_Items  GROUP BY order_items.product_id  ORDER BY count( *) DESC LIMIT 1    
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Peter Mertens' and author.authorName = 'Dina Barbian'       
SELECT genre.Name FROM Genre JOIN Track ON genre.GenreId = track.GenreId  GROUP BY genre.Name  ORDER BY count( *) DESC LIMIT 1    
SELECT airports.city FROM airports  GROUP BY airports.city HAVING count( *) > 2  ORDER BY count( *) ASC   
SELECT member.Membership_card FROM member WHERE member.Address = 'Hartford'     INTERSECT SELECT member.Membership_card FROM member WHERE member.Address = 'Waterbury'         
"SELECT sum( course.CRS_CREDIT), course.DEPT_CODE FROM COURSE  GROUP BY course.DEPT_CODE      "
SELECT state.state_name FROM state WHERE state.area = (SELECT max( state.area) FROM state        )       
SELECT student_course_attendance.student_id FROM Student_Course_Attendance        
SELECT DISTINCT list.Grade FROM list WHERE list.Classroom = 105       
SELECT movie.Director FROM movie WHERE movie.Year = 1999 or movie.Year = 2000       
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Liwen Xiong' and paper.year = 2015       
"SELECT actor.first_name, actor.last_name FROM actor  GROUP BY actor.first_name, actor.last_name  ORDER BY count( *) DESC LIMIT 1    "
SELECT activity.activity_name FROM Activity JOIN Participates_in ON activity.actid = T3.actid JOIN Student ON T3.stuid = student.StuID  GROUP BY activity.activity_name  ORDER BY count( *) DESC LIMIT 1    
SELECT avg( customer_contact_channels.active_to_date) FROM Customer_Contact_Channels        
SELECT student.STU_FNAME FROM STUDENT JOIN ENROLL ON student.STU_NUM = T2.STU_NUM  GROUP BY student.STU_FNAME HAVING count( *) = 1     
SELECT apartments.apt_number FROM Apartments WHERE apartments.apt_type_code = 'Flat'       
"SELECT phone.Company_name, count( *) FROM phone  GROUP BY phone.Company_name  ORDER BY count( *) ASC LIMIT 1    "
SELECT program.Name FROM program    ORDER BY program.Launch DESC LIMIT 1    
"SELECT customers.customer_name, customers.customer_phone FROM Customers JOIN Customer_Addresses ON customers.customer_id = Customer_Addresses.customer_id JOIN Addresses ON Customer_Addresses.address_id = addresses.address_id WHERE addresses.state_province_county = 'California'       "
SELECT project_staff.role_code FROM Project_Staff JOIN Staff_Roles ON project_staff.role_code = staff_roles.role_code  GROUP BY project_staff.role_code  ORDER BY count( *) DESC LIMIT 1    
SELECT count( *) FROM Inst        
SELECT DISTINCT count(DISTINCT publication.title) FROM publication JOIN writes ON publication.pid = writes.pid JOIN author ON writes.aid = author.aid JOIN journal ON publication.jid = journal.jid WHERE author.name = '1' and journal.name = '1'       
"SELECT railway.Builder, count( *) FROM railway  GROUP BY railway.Builder      "
"SELECT DISTINCT author.authorName, count(DISTINCT cite.citingPaperId) FROM author JOIN writes ON author.authorId = writes.authorId JOIN paper ON writes.paperId = paper.paperId JOIN cite ON paper.paperId = cite.citingPaperId  GROUP BY author.authorName   ORDER BY count( cite.citingPaperId) DESC   "
"SELECT list.Classroom, count( *) FROM list  GROUP BY list.Classroom      "
"SELECT member.Name, round.Decoration_Theme FROM member JOIN round ON member.Member_ID = round.Member_ID        "
"SELECT max( files.duration), max( song.resolution), song.languages FROM files JOIN song ON files.f_id = song.f_id  GROUP BY song.languages   ORDER BY song.languages ASC   "
SELECT publication.title FROM publication JOIN domain_publication ON publication.pid = domain_publication.pid JOIN domain ON domain_publication.did = domain.did WHERE domain.name = 'Databases' and publication.citation_num > 200 and publication.year > 2000       
SELECT department.DName FROM Department JOIN Minor_in ON department.DNO = T3.DNO JOIN Student ON T3.StuID = student.StuID  GROUP BY department.DName  ORDER BY count( *) DESC LIMIT 1    
SELECT avg( flight.price) FROM flight WHERE flight.origin = 'Los Angeles' and flight.destination = 'Honolulu'       
SELECT inventory.store_id FROM inventory  GROUP BY inventory.store_id  ORDER BY count( *) DESC LIMIT 1    
SELECT count( *) FROM circuits        
"SELECT flight.departure_date, flight.arrival_date FROM flight WHERE flight.origin = 'Los Angeles' and flight.destination = 'Honolulu'       "
SELECT avg( files.duration) FROM files JOIN song ON files.f_id = song.f_id WHERE files.formats = 'mp3' and song.resolution < 800       
"SELECT movie.title, movie.year FROM Movie JOIN Rating ON movie.mID = rating.mID    ORDER BY rating.stars DESC LIMIT 1    "
SELECT avg( hotels.price_range) FROM Hotels WHERE hotels.star_rating_code = '1' and hotels.pets_allowed_yn = '1'       
SELECT station.id FROM station WHERE station.lat > 37.4       EXCEPT SELECT status.station_id FROM status  GROUP BY status.station_id HAVING min( status.bikes_available) < 7     
SELECT DISTINCT paper.paperId FROM paper WHERE paper.year = 2014       
SELECT races.name FROM races WHERE races.year = 2017       
SELECT avg( stock.Quantity) FROM stock        
SELECT stadium.Country FROM stadium  GROUP BY stadium.Country HAVING count( *) <= 3     
"SELECT suppliers.supplier_name, suppliers.supplier_phone FROM Suppliers JOIN Supplier_Addresses ON suppliers.supplier_id = Supplier_Addresses.supplier_id JOIN Addresses ON Supplier_Addresses.address_id = addresses.address_id     ORDER BY addresses.address_details ASC   "
"SELECT count( *), department.SCHOOL_CODE FROM PROFESSOR JOIN DEPARTMENT ON professor.DEPT_CODE = department.DEPT_CODE  GROUP BY department.SCHOOL_CODE      "
SELECT problems.problem_id FROM Problems JOIN Staff ON problems.reported_by_staff_id = T2.staff_id WHERE problems.date_problem_reported > (SELECT max( problems.date_problem_reported) FROM Problems JOIN Staff ON problems.reported_by_staff_id = staff.staff_id WHERE staff.staff_first_name = 'Rylan' and staff.staff_last_name = 'Homenick'       )       
"SELECT customers_cards.card_type_code, count( *) FROM Customers_Cards JOIN Financial_Transactions ON customers_cards.card_id = financial_transactions.card_id  GROUP BY customers_cards.card_type_code      "
"SELECT products.Name, max( products.Price), manufacturers.Name FROM Products JOIN Manufacturers ON products.Manufacturer = manufacturers.Code  GROUP BY products.Manufacturer      "
SELECT DISTINCT player.player_name FROM Player JOIN Player_Attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.dribbling = (SELECT max( player_attributes.overall_rating) FROM Player_Attributes        )       
SELECT max( postseason.wins) FROM postseason JOIN team WHERE team.name = 'Boston Red Stockings'       
"SELECT DISTINCT order_items.order_id, count(DISTINCT order_items.product_id) FROM Order_Items  GROUP BY order_items.order_id      "
"SELECT financial_transactions.invoice_number, count( *) FROM Financial_Transactions  GROUP BY financial_transactions.invoice_number      "
"SELECT sum( loan.amount), bank.bname FROM loan JOIN bank ON loan.branch_ID = bank.branch_ID  GROUP BY bank.bname      "
SELECT state.population FROM state WHERE state.state_name in (SELECT river.traverse FROM river WHERE river.river_name = '1'       )       
SELECT problems.problem_id FROM Problems WHERE problems.date_problem_reported > '1978-06-26'       
SELECT district.District_name FROM district JOIN store_district ON district.District_ID = store_district.District_ID JOIN store ON store_district.Store_ID = store.Store_ID WHERE store.Type = '1'     INTERSECT SELECT district.District_name FROM district JOIN store_district ON district.District_ID = store_district.District_ID JOIN store ON store_district.Store_ID = store.Store_ID WHERE store.Type = '1'         
SELECT highlow.lowest_elevation FROM highlow WHERE highlow.lowest_point = '1'       
SELECT DISTINCT student.Advisor FROM Student JOIN Voting_record ON student.StuID = voting_record.Class_Senator_Vote WHERE voting_record.Election_Cycle = 'Spring'       
SELECT count( *) FROM Council_Tax        
SELECT happy_hour.Month FROM happy_hour  GROUP BY happy_hour.Month  ORDER BY count( *) DESC LIMIT 1    
SELECT journal.name FROM journal JOIN publication ON journal.jid = publication.jid JOIN writes ON publication.pid = writes.pid JOIN author ON writes.aid = author.aid WHERE author.name = '1' GROUP BY journal.name HAVING count( publication.title) > '1'     
"SELECT employees.FIRST_NAME, employees.LAST_NAME, employees.HIRE_DATE, employees.SALARY, employees.DEPARTMENT_ID FROM employees WHERE employees.FIRST_NAME not_like 'M'       "
SELECT max( enzyme.OMIM) FROM enzyme        
SELECT track.Name FROM track WHERE track.Track_ID NOT IN (SELECT race.Track_ID FROM race        )       
"SELECT accounts.customer_id, customers.customer_first_name, customers.customer_last_name FROM Accounts JOIN Customers ON accounts.customer_id = customers.customer_id  GROUP BY accounts.customer_id  ORDER BY count( *) DESC LIMIT 1    "
"SELECT max( products_booked.booked_count), min( products_booked.booked_count), avg( products_booked.booked_count) FROM Products_Booked        "
SELECT city.Name FROM city    ORDER BY city.White DESC LIMIT 1    
SELECT department.DName FROM Department JOIN Member_of ON department.DNO = member_of.DNO  GROUP BY department.DName  ORDER BY count( *) ASC LIMIT 1    
SELECT count( *) FROM budget WHERE budget.Budgeted < 1       
SELECT DISTINCT club.ClubName FROM Club JOIN Member_of_club ON club.ClubID = Member_of_club.ClubID JOIN Student ON Member_of_club.StuID = student.StuID WHERE student.Fname = 'Davis' and student.LName = 'Steven'       
"SELECT checking.balance, accounts.name FROM CHECKING JOIN ACCOUNTS ON checking.custid = accounts.custid JOIN SAVINGS ON accounts.custid = savings.custid    ORDER BY savings.balance ASC LIMIT 1    "
"SELECT faculty.Rank, count( *) FROM Faculty  GROUP BY faculty.Rank      "
SELECT count( *) FROM Department WHERE department.Division = 'AS'       
SELECT avg( wine.Price) FROM wine JOIN appellations ON wine.Appelation = appellations.Appelation WHERE appellations.County = 'Sonoma'       
"SELECT student.Fname, student.LName FROM Student JOIN Member_of_club ON student.StuID = Member_of_club.StuID JOIN Club ON Member_of_club.ClubID = club.ClubID WHERE club.ClubName = 'Hopkins Student Enterprises' and student.Sex = 'M'       "
"SELECT DISTINCT count(DISTINCT cite.citingPaperId), paper.venueId FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = 'NLP' GROUP BY paper.venueId   ORDER BY count( cite.citingPaperId) DESC   "
SELECT DISTINCT branch.City FROM branch WHERE branch.membership_amount >= '100'       
"SELECT max( stadium.Home_Games), min( stadium.Home_Games), avg( stadium.Home_Games) FROM stadium        "
"SELECT college.cName, college.state, min( college.enr) FROM College  GROUP BY college.state      "
"SELECT accounts.custid, accounts.name FROM ACCOUNTS JOIN CHECKING ON accounts.custid = checking.custid WHERE checking.balance < (SELECT max( checking.balance) FROM CHECKING        )       "
SELECT DISTINCT count(DISTINCT student_course_enrolment.student_id) FROM Student_Course_Enrolment        
"SELECT student_course_enrolment.date_of_enrolment, student_course_enrolment.date_of_completion FROM Student_Course_Enrolment JOIN Students ON student_course_enrolment.student_id = students.student_id WHERE students.personal_name = 'Karson'       "
"SELECT rooms.bedType, avg( rooms.basePrice) FROM Rooms  GROUP BY rooms.bedType      "
SELECT city.population FROM city WHERE city.city_name = (SELECT state.capital FROM state WHERE state.area = (SELECT max( state.area) FROM state JOIN river ON state.state_name = river.traverse WHERE river.river_name = '1'       )       )       
SELECT count( *) FROM Products_for_Hire WHERE products_for_hire.product_id NOT IN (SELECT products_booked.product_id FROM Products_Booked WHERE products_booked.booked_amount > 200       )       
SELECT count( *) FROM book_club        
SELECT DISTINCT key_phrase.keyphraseId FROM keyphrase JOIN paperKeyphrase ON key_phrase.keyphraseId = paperKeyphrase.keyphraseId JOIN paper ON paperKeyphrase.paperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Luke Zettlemoyer'       
SELECT sum( sports_info.GamesPlayed) FROM SportsInfo        
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE venue.venueName = '1'       
SELECT DISTINCT station.Location FROM station        
SELECT count( *) FROM airports        
"SELECT max( customers.amount_outstanding), min( customers.amount_outstanding), avg( customers.amount_outstanding) FROM Customers        "
"SELECT track.Name, track.Location FROM track        "
SELECT grants.grant_amount FROM Grants JOIN Documents ON grants.grant_id = documents.grant_id WHERE documents.sent_date < '1986-08-26 20:49:27'     INTERSECT SELECT grants.grant_amount FROM Grants WHERE grants.grant_end_date > '1989-03-16 18:27:16'         
SELECT instruments.Instrument FROM Instruments  GROUP BY instruments.Instrument  ORDER BY count( *) DESC LIMIT 1    
SELECT sum( state.area) FROM state        
"SELECT instructor.name, teaches.course_id FROM instructor JOIN teaches ON instructor.ID = teaches.ID WHERE instructor.dept_name = 'Art'       "
"SELECT artist.Name, artist.Year_Join FROM artist WHERE artist.Country != 'United States'       "
SELECT count( *) FROM gymnast        
SELECT DISTINCT count(DISTINCT characteristics.characteristic_name) FROM Characteristics JOIN Product_Characteristics ON characteristics.characteristic_id = Product_Characteristics.characteristic_id JOIN Products ON Product_Characteristics.product_id = products.product_id WHERE products.product_name = '1'       
SELECT DISTINCT count(DISTINCT city.Status) FROM city        
"SELECT roller_coaster.Name, country.Name FROM roller_coaster JOIN country ON roller_coaster.Country_ID = country.Country_ID        "
SELECT DISTINCT reviewer.name FROM Reviewer JOIN Rating ON reviewer.rID = Rating.rID JOIN Movie ON Rating.mID = movie.mID WHERE movie.title = 'Gone with the Wind'       
SELECT DISTINCT count(DISTINCT captain.Rank) FROM captain        
SELECT count( *) FROM body_builder        
"SELECT products.product_type_code, products.product_name, products.product_price FROM Products JOIN Product_Suppliers ON products.product_id = product_suppliers.product_id WHERE product_suppliers.supplier_id = 3       "
SELECT DISTINCT student.Fname FROM Student JOIN Voting_record ON student.StuID = T2.Class_Senator_Vote        
"SELECT employees.FIRST_NAME, employees.LAST_NAME, employees.SALARY FROM employees JOIN departments ON employees.DEPARTMENT_ID = departments.DEPARTMENT_ID JOIN locations ON departments.LOCATION_ID = locations.LOCATION_ID WHERE locations.CITY = 'London'       "
SELECT state.capital FROM state JOIN highlow ON state.state_name = highlow.state_name WHERE highlow.highest_elevation = (SELECT max( highlow.highest_elevation) FROM highlow        )       
"SELECT DISTINCT paper.paperId, paper.year FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1'    ORDER BY paper.year DESC   "
SELECT count( city.city_name) FROM city        
SELECT count( *) FROM wine WHERE wine.Winery = 'Robert Biale'       
SELECT performance.Host FROM performance     ORDER BY performance.Attendance ASC   
SELECT services.Service_name FROM Services JOIN First_Notification_of_Loss ON services.Service_ID = T2.Service_ID  GROUP BY services.Service_name HAVING count( *) > 2     
SELECT trip.bike_id FROM trip WHERE trip.zip_code = 94002 GROUP BY trip.bike_id  ORDER BY count( *) DESC LIMIT 1    
SELECT song.artist_name FROM song JOIN files ON song.f_id = files.f_id    ORDER BY files.duration ASC LIMIT 1    
SELECT count( *) FROM home_game JOIN park ON home_game.park_id = park.park_id WHERE home_game.year = 2000 and park.city = 'Atlanta'       
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN venue ON paper.venueId = venue.venueId JOIN paperDataset JOIN dataset WHERE dataset.datasetName = '1' and venue.venueName = '1'       
SELECT course.CName FROM Course     ORDER BY course.Credits ASC   
"SELECT party.First_year, party.Last_year FROM party WHERE party.Party_Theme = 'Spring' or party.Party_Theme = 'Teqnology'       "
SELECT publication.title FROM publication JOIN conference ON publication.cid = conference.cid WHERE conference.name = 'VLDB' and publication.citation_num > 200 and publication.year > 2000       
SELECT customer.cust_name FROM customer JOIN bank ON customer.branch_ID = bank.branch_ID  GROUP BY customer.cust_name HAVING count( *) > 1     
"SELECT sports_info.StuID, count( *), sum( sports_info.GamesPlayed) FROM SportsInfo  GROUP BY sports_info.StuID      "
SELECT customers.country FROM customers WHERE customers.first_name = 'Roberto' and customers.last_name = 'Almeida'       
SELECT courses.course_name FROM Courses     ORDER BY courses.course_name ASC   
"SELECT employees.FIRST_NAME, employees.LAST_NAME, employees.HIRE_DATE, employees.SALARY, employees.DEPARTMENT_ID FROM employees WHERE employees.FIRST_NAME not_like 'M'    ORDER BY employees.DEPARTMENT_ID ASC   "
SELECT city.population FROM city WHERE city.city_name = '1'       
SELECT manufacturers.Founder FROM Manufacturers WHERE manufacturers.Name like '%S%'       
SELECT catalog_contents.catalog_entry_name FROM Catalog_Contents    ORDER BY catalog_contents.price_in_dollars DESC LIMIT 1    
"SELECT DISTINCT count(DISTINCT paper.paperId), paper.year FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE venue.venueName = 'NIPS' GROUP BY paper.year   ORDER BY count( paper.paperId) DESC   "
SELECT count( *) FROM Club JOIN Member_of_club ON club.ClubID = Member_of_club.ClubID JOIN Student ON Member_of_club.StuID = student.StuID WHERE student.Fname = 'Tracy' and student.LName = 'Kim'       
"SELECT DISTINCT count(DISTINCT paper.paperId), writes.authorId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 2007 and venue.venueName = 'CVPR' GROUP BY writes.authorId   ORDER BY count( paper.paperId) DESC   "
SELECT DISTINCT club.ClubName FROM Club JOIN Member_of_club ON club.ClubID = Member_of_club.ClubID JOIN Student ON Member_of_club.StuID = student.StuID WHERE student.city_code = 'BAL'       
"SELECT customer.first_name, customer.last_name, customer.customer_id FROM customer JOIN payment ON customer.customer_id = payment.customer_id  GROUP BY payment.customer_id  ORDER BY sum( payment.amount) ASC LIMIT 1    "
"SELECT cinema.Location, count( *) FROM cinema  GROUP BY cinema.Location      "
SELECT river.river_name FROM river WHERE river.traverse in (SELECT state.state_name FROM state WHERE state.population = (SELECT max( state.population) FROM state        )       )       
SELECT swimmer.name FROM swimmer WHERE swimmer.ID NOT IN (SELECT record.Swimmer_ID FROM record        )       
SELECT count( *) FROM RESTAURANT JOIN GEOGRAPHIC ON restaurant.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN LOCATION ON GEOGRAPHIC.CITY_NAME = location.CITY_NAME WHERE location.CITY_NAME = '1' and restaurant.NAME = '1'       
"SELECT DISTINCT count(DISTINCT movie.title), movie.release_year FROM directed_by JOIN director ON T2.did = director.did JOIN movie WHERE director.name = 'Woody Allen' GROUP BY movie.release_year      "
SELECT river.river_name FROM river WHERE river.traverse in (SELECT border_info.border FROM border_info WHERE border_info.state_name in (SELECT state.state_name FROM state WHERE state.capital = '1'       )       )       
SELECT DISTINCT count(DISTINCT match_season.Team) FROM match_season        
SELECT count( *) FROM Faculty        
SELECT sum( home_game.attendance) FROM home_game JOIN team ON home_game.team_id = team.team_id WHERE team.name = 'Boston Red Stockings' and home_game.year between 2000 AND 2010       
"SELECT avg( song.rating), song.languages FROM song  GROUP BY song.languages      "
SELECT count( *) FROM School        
"SELECT avg( student.Age), student.Sex FROM Student  GROUP BY student.Sex      "
SELECT products_for_hire.daily_hire_cost FROM Products_for_Hire WHERE products_for_hire.product_name like '%Book%'       
"SELECT course_authors_and_tutors.personal_name, course_authors_and_tutors.family_name, courses.author_id FROM Course_Authors_and_Tutors JOIN Courses ON course_authors_and_tutors.author_id = courses.author_id  GROUP BY courses.author_id  ORDER BY count( *) DESC LIMIT 1    "
"SELECT count( *), wine.Grape FROM wine  GROUP BY wine.Grape      "
SELECT count( *) FROM CLASS        
SELECT conference.name FROM conference JOIN publication ON conference.cid = publication.cid JOIN writes ON publication.pid = writes.pid JOIN author ON writes.aid = author.aid WHERE author.name = '1' GROUP BY conference.name HAVING count( publication.title) > '1'     
SELECT competition.Country FROM competition WHERE competition.Competition_type = 'Friendly'     INTERSECT SELECT competition.Country FROM competition WHERE competition.Competition_type = 'Tournament'         
SELECT avg( player.HS) FROM Player        
SELECT train.origin FROM train  GROUP BY train.origin HAVING count( *) > 1     
SELECT count( *) FROM GEOGRAPHIC        
"SELECT mill.name, mill.built_year FROM mill WHERE mill.type = 'Grondzeiler'       "
SELECT city.city_name FROM city WHERE city.population = (SELECT max( city.population) FROM city JOIN state ON city.state_name = T23.state_name        )       
SELECT research_outcomes.outcome_description FROM Research_Outcomes JOIN Project_Outcomes ON research_outcomes.outcome_code = T2.outcome_code        
"SELECT suppliers.supplier_name, suppliers.supplier_phone FROM Suppliers JOIN Supplier_Addresses ON suppliers.supplier_id = Supplier_Addresses.supplier_id JOIN Addresses ON Supplier_Addresses.address_id = addresses.address_id     ORDER BY addresses.address_details ASC   "
SELECT keyword.keyword FROM keyword JOIN publication_keyword ON keyword.kid = publication_keyword.kid JOIN publication ON publication_keyword.pid = publication.pid WHERE publication.title = '1'       
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' and paper.year = 1       
SELECT flight.flno FROM flight WHERE flight.origin = 'Los Angeles'       
SELECT avg( bank.no_of_customers) FROM bank        
"SELECT film.Studio, count( *) FROM film  GROUP BY film.Studio      "
SELECT customer.cust_name FROM customer        EXCEPT SELECT customer.cust_name FROM customer JOIN bank ON customer.branch_ID = bank.branch_ID JOIN loan ON bank.branch_ID = loan.branch_ID WHERE loan.loan_type = 'Mortgages'       
"SELECT perpetrator.Country, count( *) FROM perpetrator  GROUP BY perpetrator.Country  ORDER BY count( *) DESC LIMIT 1    "
SELECT count( *) FROM venue        
SELECT products.Product_Name FROM Products JOIN Products_in_Events ON products.Product_ID = T2.Product_ID JOIN Events ON T2.Event_ID = events.Event_ID  GROUP BY products.Product_Name HAVING count( *) >= 2  ORDER BY products.Product_Name ASC   
SELECT count( *) FROM teachers WHERE teachers.FirstName = 'KAWA' and teachers.LastName = 'GORDON'       
SELECT DISTINCT faculty.Rank FROM Faculty        
SELECT business.city FROM business JOIN category ON business.business_id = category.business_id WHERE business.name = '1' and category.category_name = '1'       
SELECT department.dept_name FROM department    ORDER BY department.budget ASC LIMIT 1    
"SELECT avg( player.HS), max( player.HS), min( player.HS) FROM Player        "
"SELECT max( market.Number_cities), min( market.Number_cities) FROM market        "
SELECT available_policies.Customer_Phone FROM Available_Policies        
"SELECT artist.gender, artist.artist_name FROM artist JOIN song ON artist.artist_name = song.artist_name    ORDER BY song.resolution ASC LIMIT 1    "
SELECT course.title FROM course WHERE course.course_id NOT IN (SELECT prerequisite.course_id FROM prereq        )       
SELECT business.name FROM business JOIN category ON business.business_id = category.business_id WHERE business.city = 'Los Angeles' and business.rating > 3 and business.review_count > 30 and category.category_name = 'Bars'       
SELECT faculty.Building FROM Faculty JOIN Course ON faculty.FacID = course.Instructor  GROUP BY faculty.Building  ORDER BY count( *) DESC LIMIT 1    
SELECT count( *) FROM Student WHERE student.Sex = 'M' and student.StuID in (SELECT has_allergy.StuID FROM Has_Allergy JOIN Allergy_Type ON has_allergy.Allergy = allergy_type.Allergy WHERE allergy_type.AllergyType = 'food'       )       
SELECT avg( county.Population) FROM county        
"SELECT movie.title, rating.mID FROM Movie JOIN Rating ON movie.mID = rating.mID  GROUP BY rating.mID  ORDER BY count( *) DESC LIMIT 1    "
SELECT documents.document_name FROM Documents WHERE documents.document_name like '%CV%'       
"SELECT trip.start_station_id, trip.start_station_name FROM trip  GROUP BY trip.start_station_id, trip.start_station_name HAVING count( *) >= 200     "
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId JOIN venue ON paper.venueId = venue.venueId WHERE key_phrase.keyphraseName = '1' and paper.year = 1 and venue.venueName = '1'       
SELECT people.Sex FROM people JOIN candidate ON people.People_ID = candidate.People_ID  GROUP BY people.Sex  ORDER BY avg( candidate.Unsure_rate) DESC LIMIT 1    
"SELECT DISTINCT reviewer.name, movie.title, rating.stars FROM Reviewer JOIN Rating ON reviewer.rID = rating.rID JOIN Movie ON rating.mID = movie.mID WHERE movie.director = '1'       "
SELECT DISTINCT count(DISTINCT cite.citingPaperId) FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1' and author.authorName = '1'       
SELECT claims.Date_Claim_Made FROM Claims WHERE claims.Amount_Settled <= (SELECT avg( claims.Amount_Settled) FROM Claims        )       
"SELECT employees.FIRST_NAME, employees.LAST_NAME, employees.DEPARTMENT_ID FROM employees WHERE employees.SALARY in (SELECT min( employees.SALARY) FROM employees        )       "
SELECT artist.country FROM artist JOIN song ON artist.artist_name = song.artist_name  GROUP BY artist.country  ORDER BY count( *) ASC LIMIT 1    
SELECT races.name FROM races WHERE races.time > '1' or races.time < '1'       
SELECT weather.date FROM weather WHERE weather.mean_sea_level_pressure_inches between 30.3 AND 31       
SELECT program.Origin FROM program     ORDER BY program.Origin ASC   
SELECT instructor.name FROM instructor WHERE instructor.salary > (SELECT min( instructor.salary) FROM instructor WHERE instructor.dept_name = 'Biology'       )       
SELECT wrestler.Name FROM wrestler WHERE wrestler.Days_held < '100'       
"SELECT addresses.state_province_county, addresses.country FROM Addresses WHERE addresses.zip_postcode like '%4%'       "
SELECT customer.cust_name FROM customer    ORDER BY customer.credit_score ASC LIMIT 1    
SELECT highlow.lowest_point FROM highlow WHERE highlow.lowest_elevation = (SELECT min( highlow.lowest_elevation) FROM highlow        )       
SELECT book.Title FROM book WHERE book.Writer != 'Elaine Lee'       
SELECT state.state_name FROM state WHERE state.area = (SELECT min( state.area) FROM state        )       
SELECT DISTINCT count(DISTINCT airports.city) FROM airports WHERE airports.country = 'Greenland'       
SELECT savings.balance FROM SAVINGS JOIN ACCOUNTS ON savings.custid = ACCOUNTS.custid JOIN CHECKING ON ACCOUNTS.custid = checking.custid    ORDER BY checking.balance DESC LIMIT 1    
SELECT DISTINCT count(DISTINCT cite.citedPaperId) FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Mirella Lapata'       
SELECT DISTINCT addresses.city FROM Addresses        
SELECT count( *) FROM Student        
"SELECT DISTINCT count(DISTINCT cite.citingPaperId), paper_key_phrase.keyphraseId, paper.paperId FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paper_key_phrase.paperId JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 1 and venue.venueName = '1' GROUP BY paper_key_phrase.paperId   ORDER BY count( cite.citingPaperId) DESC   "
"SELECT song.song_name, song.releasedate FROM song    ORDER BY song.releasedate DESC LIMIT 1    "
SELECT DISTINCT songs.Title FROM Songs JOIN Vocals ON songs.SongId = T2.SongId        EXCEPT SELECT songs.Title FROM Songs JOIN Vocals ON songs.SongId = vocals.SongId WHERE vocals.Type = '1'       
SELECT count( *) FROM submission        
"SELECT player.Player, player.Years_Played FROM player JOIN team ON player.Team = team.Team_id WHERE team.Name = 'Columbus Crew'       "
"SELECT job_history.EMPLOYEE_ID, max( job_history.END_DATE) FROM job_history  GROUP BY job_history.EMPLOYEE_ID      "
SELECT party.Party FROM party  GROUP BY party.Party HAVING count( *) >= 2     
SELECT count( *) FROM party        
"SELECT movie.title, rating.stars, movie.director, max( rating.stars) FROM Movie JOIN Rating ON movie.mID = rating.mID WHERE movie.director != 'null' GROUP BY rating.mID      "
SELECT count( river.river_name) FROM river WHERE river.traverse = '1'       
SELECT physician.Name FROM Physician JOIN Prescribes ON physician.EmployeeID = prescribes.Physician    ORDER BY prescribes.Dose DESC LIMIT 1    
SELECT journal.name FROM journal JOIN publication ON journal.jid = publication.jid JOIN publication_keyword ON publication.pid = publication_keyword.pid JOIN keyword ON publication_keyword.kid = keyword.kid WHERE keyword.keyword = 'Relational Database' GROUP BY journal.name  ORDER BY count( publication.title) DESC LIMIT 1    
SELECT customers.Customer_Details FROM Customers JOIN Policies ON customers.Customer_ID = policies.Customer_ID WHERE policies.Start_Date = (SELECT max( policies.Start_Date) FROM Policies        )       
"SELECT submission.Author, submission.College FROM submission        "
SELECT count( *) FROM League JOIN Country ON league.country_id = country.id WHERE country.name = 'England'       
SELECT reference_incident_type.incident_type_description FROM Ref_Incident_Type WHERE reference_incident_type.incident_type_code = 'VIOLENCE'       
SELECT country.country FROM country JOIN city ON country.country_id = T2.country_id  GROUP BY country.country HAVING count( *) >= 3     
SELECT assets.asset_model FROM Assets WHERE assets.asset_id NOT IN (SELECT fault_log.asset_id FROM Fault_Log        )       
SELECT city.Status FROM city JOIN farm_competition ON city.City_ID = T2.Host_city_ID  GROUP BY city.Status  ORDER BY count( *) DESC LIMIT 1    
"SELECT student.Fname, student.LName FROM Student WHERE student.Age > 18 and student.Major = 600       "
"SELECT cmi_cross_references.cmi_cross_ref_id, cmi_cross_references.source_system_code FROM CMI_Cross_References JOIN Council_Tax ON cmi_cross_references.cmi_cross_ref_id = T2.cmi_cross_ref_id  GROUP BY T2.cmi_cross_ref_id HAVING count( *) >= 1     "
SELECT physician.Name FROM Physician JOIN Department ON physician.EmployeeID = department.Head JOIN Affiliated_With ON department.DepartmentID = T3.Department WHERE department.Name = 'Surgery' or department.Name = 'Psychiatry'       
SELECT DISTINCT count(DISTINCT keyword.keyword) FROM keyword JOIN publication_keyword ON keyword.kid = publication_keyword.kid JOIN publication ON publication_keyword.pid = publication.pid WHERE publication.title = '1'       
"SELECT station.name, station.id FROM station JOIN status ON station.id = T2.station_id  GROUP BY T2.station_id HAVING avg( T2.bikes_available) > 1    UNION SELECT station.name, station.id FROM station WHERE station.installation_date like '%1%'        "
"SELECT products.Product_Type_Code, count( *) FROM Products  GROUP BY products.Product_Type_Code      "
SELECT reference_colors.color_description FROM Ref_Colors JOIN Products ON reference_colors.color_code = products.color_code WHERE products.product_name = 'catnip'       
SELECT count( *) FROM Songs        
SELECT city.City FROM city WHERE city.Regional_Population > 1      UNION SELECT city.City FROM city WHERE city.Regional_Population < 1        
"SELECT invoices.billing_state, count( *) FROM invoices WHERE invoices.billing_country = 'USA' GROUP BY invoices.billing_state      "
SELECT weather.cloud_cover FROM weather WHERE weather.zip_code = 94107 GROUP BY weather.cloud_cover  ORDER BY count( *) DESC LIMIT 1    
"SELECT max( classroom.capacity), avg( classroom.capacity), classroom.building FROM classroom  GROUP BY classroom.building      "
SELECT individuals.individual_last_name FROM Individuals JOIN Organization_Contact_Individuals ON individuals.individual_id = organization_contact_individuals.individual_id JOIN Organizations ON organization_contact_individuals.organization_id = organizations.organization_id WHERE organizations.uk_vat_number = (SELECT max( organizations.uk_vat_number) FROM Organizations        )   ORDER BY organization_contact_individuals.date_contact_to ASC LIMIT 1    
SELECT DISTINCT student.Fname FROM Student JOIN Enrolled_in ON student.StuID = Enrolled_in.StuID JOIN Gradeconversion ON Enrolled_in.Grade = grade_conversion.lettergrade WHERE grade_conversion.gradepoint >= 3.8       
SELECT keyword.keyword FROM keyword        
SELECT tourist_attractions.Name FROM Tourist_Attractions JOIN Visits ON tourist_attractions.Tourist_Attraction_ID = Visits.Tourist_Attraction_ID JOIN Visitors ON Visits.Tourist_ID = visitors.Tourist_ID WHERE visitors.Tourist_Details = 'Vincent'       
SELECT count( *) FROM PROFESSOR JOIN DEPARTMENT ON professor.DEPT_CODE = department.DEPT_CODE WHERE department.DEPT_NAME = 'Accounting' or department.DEPT_NAME = 'Biology'       
SELECT DISTINCT count(DISTINCT project_staff.role_code) FROM Project_Staff        
SELECT DISTINCT count(DISTINCT review.text) FROM review JOIN business ON review.business_id = business.business_id JOIN category ON business.business_id = category.business_id WHERE business.name = '1' and business.state = '1' and category.category_name = '1'       
SELECT count( *) FROM author        
SELECT mountain.Range FROM mountain  GROUP BY mountain.Range  ORDER BY count( *) DESC LIMIT 1    
SELECT aircraft.Aircraft FROM aircraft WHERE aircraft.Aircraft_ID NOT IN (SELECT match.Winning_Aircraft FROM match        )       
SELECT student.StuID FROM Student        EXCEPT SELECT sports_info.StuID FROM SportsInfo        
"SELECT DISTINCT student.Fname, student.LName FROM Student JOIN Voting_record ON student.StuID = T2.Class_Senator_Vote WHERE student.Age = 18       "
SELECT staff.first_name FROM Staff        EXCEPT SELECT staff.first_name FROM Staff JOIN Lessons ON staff.staff_id = T3.staff_id        
SELECT count( *) FROM Customers JOIN Customers_Cards WHERE customers.customer_first_name = 'Blanche' and customers.customer_last_name = 'Huels' and customers_cards.card_type_code = 'Credit'       
SELECT person.name FROM Person JOIN PersonFriend ON person.name = person_friend.friend WHERE person_friend.friend = 'Zach' and person.gender = 'female'       
SELECT reference_product_categories.product_category_description FROM Ref_Product_Categories WHERE reference_product_categories.product_category_code = 'Spices'       
SELECT avg( farm.Working_Horses) FROM farm WHERE farm.Total_Horses > 5000       
SELECT count( *) FROM Apartment_Buildings        
SELECT count( *) FROM author        
"SELECT instructor.name, instructor.salary FROM instructor JOIN department ON instructor.dept_name = department.dept_name JOIN student ON department.dept_name = student.dept_name WHERE student.dept_name = 'Math'       "
SELECT people.Name FROM people JOIN gymnast ON people.People_ID = T2.Gymnast_ID        
SELECT entrepreneur.Investor FROM entrepreneur  GROUP BY entrepreneur.Investor  ORDER BY count( *) DESC LIMIT 1    
"SELECT film.Title, max( schedule.Price) FROM film JOIN schedule ON film.Film_ID = schedule.Film_ID  GROUP BY film.Title      "
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and location.STREET_NAME = '1' and restaurant.RATING > 1       "
"SELECT section.building, section.room_number, section.semester, section.year FROM section JOIN course ON section.course_id = course.course_id WHERE course.dept_name = 'Psychology'    ORDER BY course.title ASC   "
"SELECT staff.staff_name, maintenance_engineers.first_name, maintenance_engineers.last_name FROM Staff JOIN Engineer_Visits ON staff.staff_id = Engineer_Visits.contact_staff_id JOIN Maintenance_Engineers ON Engineer_Visits.engineer_id = maintenance_engineers.engineer_id        "
SELECT count( *) FROM Financial_Transactions JOIN Accounts ON financial_transactions.account_id = accounts.account_id WHERE accounts.account_name = '337'       
SELECT count( *) FROM CLASS        
SELECT music_festival.Category FROM music_festival  GROUP BY music_festival.Category HAVING count( *) > 1     
SELECT employee.name FROM employee        EXCEPT SELECT employee.name FROM employee JOIN certificate ON employee.eid = certificate.eid JOIN aircraft ON certificate.aid = aircraft.aid WHERE aircraft.name = 'Boeing 737-800'       
SELECT addresses.city FROM Addresses JOIN Customers ON addresses.address_id = customers.customer_address_id  GROUP BY addresses.city  ORDER BY count( *) DESC LIMIT 1    
SELECT csu_fees.CampusFee FROM csu_fees JOIN Campuses ON csu_fees.Campus = campuses.Id WHERE campuses.Campus = 'San Jose State University' and csu_fees.Year = 1996       
SELECT activity.activity_name FROM Activity JOIN Participates_in ON activity.actid = T3.actid JOIN Student ON T3.stuid = student.StuID  GROUP BY activity.activity_name  ORDER BY count( *) DESC LIMIT 1    
SELECT savings.balance FROM SAVINGS JOIN ACCOUNTS ON savings.custid = ACCOUNTS.custid JOIN CHECKING ON ACCOUNTS.custid = checking.custid    ORDER BY checking.balance DESC LIMIT 1    
SELECT state.population FROM state WHERE state.state_name in (SELECT river.traverse FROM river WHERE river.river_name = '1'       )       
"SELECT count( *), student.DEPT_CODE FROM STUDENT  GROUP BY student.DEPT_CODE      "
SELECT festival_detail.Festival_Name FROM festival_detail JOIN nomination ON festival_detail.Festival_ID = nomination.Festival_ID JOIN artwork ON nomination.Artwork_ID = artwork.Artwork_ID WHERE artwork.Type = 'Program Talent Show'       
"SELECT customers.customer_first_name, customers.customer_last_name FROM Customers JOIN Accounts ON customers.customer_id = accounts.customer_id WHERE accounts.account_name = '900'       "
SELECT products.product_details FROM Products WHERE products.product_details like '%Latte%' or products.product_details like '%Americano%'       
SELECT DISTINCT cite.citingPaperId FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN venue ON paper.venueId = venue.venueId WHERE venue.venueName = 'ACL' GROUP BY cite.citingPaperId HAVING count( cite.citedPaperId) < 5     
SELECT DISTINCT count(DISTINCT user.name) FROM user JOIN review ON user.user_id = review.user_id JOIN business ON review.business_id = business.business_id JOIN category ON business.business_id = category.business_id WHERE business.name = '1' and category.category_name = '1' and review.year = 1       
SELECT employees.DEPARTMENT_ID FROM employees  GROUP BY employees.DEPARTMENT_ID HAVING count( employees.COMMISSION_PCT) > 10     
SELECT course_authors_and_tutors.address_line_1 FROM Course_Authors_and_Tutors WHERE course_authors_and_tutors.personal_name = 'Cathrine'       
"SELECT roles.role_description, count( employees.employee_id) FROM Roles JOIN Employees ON roles.role_code = employees.role_code  GROUP BY roles.role_description HAVING count( employees.employee_id) > 1     "
SELECT party.Party_Theme FROM party     ORDER BY party.Number_of_hosts ASC   
SELECT accounts.name FROM ACCOUNTS JOIN CHECKING ON accounts.custid = checking.custid WHERE checking.balance < (SELECT avg( checking.balance) FROM CHECKING        )       
SELECT tourist_attractions.Name FROM Tourist_Attractions JOIN Tourist_Attraction_Features ON tourist_attractions.Tourist_Attraction_ID = Tourist_Attraction_Features.Tourist_Attraction_ID JOIN Features ON Tourist_Attraction_Features.Feature_ID = features.Feature_ID WHERE features.Feature_Details = '1'      UNION SELECT tourist_attractions.Name FROM Tourist_Attractions JOIN Tourist_Attraction_Features ON tourist_attractions.Tourist_Attraction_ID = Tourist_Attraction_Features.Tourist_Attraction_ID JOIN Features ON Tourist_Attraction_Features.Feature_ID = features.Feature_ID WHERE features.Feature_Details = '1'        
"SELECT storm.Name, storm.Dates_active, storm.Number_Deaths FROM storm WHERE storm.Number_Deaths >= 1       "
SELECT albums.title FROM albums JOIN tracks ON albums.id = T2.album_id  GROUP BY albums.title HAVING count( albums.id) > 10     
SELECT employees.Employee_ID FROM Employees WHERE employees.Employee_Name = 'Ebba'       
SELECT DISTINCT count(DISTINCT border_info.border) FROM border_info WHERE border_info.state_name in (SELECT river.traverse FROM river WHERE river.river_name = '1'       )       
"SELECT avg( student.Age), student.city_code FROM Student  GROUP BY student.city_code      "
"SELECT DISTINCT customers.customer_first_name, customers.customer_last_name, customers.phone_number FROM Customers JOIN Accounts ON customers.customer_id = T2.customer_id        "
SELECT people.Hometown FROM people JOIN gymnast ON people.People_ID = gymnast.Gymnast_ID  GROUP BY people.Hometown  ORDER BY count( *) DESC LIMIT 1    
SELECT director.birth_city FROM director WHERE director.name = '1'       
SELECT address.address FROM address JOIN store ON address.address_id = store.address_id WHERE store.store_id = 1       
SELECT city.City FROM city JOIN temperature ON city.City_ID = temperature.City_ID WHERE temperature.Feb > 1      UNION SELECT city.City FROM city JOIN hosting_city ON city.City_ID = T4.Host_City         
"SELECT staff.staff_name, staff.staff_gender FROM Staff JOIN Staff_Department_Assignments ON staff.staff_id = staff_department_assignments.staff_id WHERE staff_department_assignments.job_title_code = 'Sales Person'       EXCEPT SELECT staff.staff_name, staff.staff_gender FROM Staff JOIN Staff_Department_Assignments ON staff.staff_id = staff_department_assignments.staff_id WHERE staff_department_assignments.job_title_code = 'Clerical Staff'       "
SELECT keyword.keyword FROM keyword JOIN publication_keyword ON keyword.kid = publication_keyword.kid JOIN publication ON publication_keyword.pid = publication.pid JOIN conference ON publication.cid = conference.cid WHERE conference.name = 'VLDB' GROUP BY keyword.keyword  ORDER BY count( publication.title) DESC LIMIT 1    
SELECT mountain.Name FROM mountain    ORDER BY mountain.Height DESC LIMIT 1    
"SELECT sum( manufacturers.Revenue), manufacturers.Founder FROM Manufacturers  GROUP BY manufacturers.Founder      "
"SELECT rooms.decor, count( *) FROM Rooms WHERE rooms.basePrice > 120 GROUP BY rooms.decor      "
SELECT county_public_safety.Police_force FROM county_public_safety WHERE county_public_safety.Location = 'East'     INTERSECT SELECT county_public_safety.Police_force FROM county_public_safety WHERE county_public_safety.Location = 'West'         
"SELECT count( *), dorm.dorm_name FROM Student JOIN Lives_in ON student.StuID = Lives_in.stuid JOIN Dorm ON Lives_in.dormid = dorm.dormid WHERE student.Age > 20 GROUP BY dorm.dorm_name      "
SELECT publication.title FROM publication WHERE publication.year > 2000   ORDER BY publication.citation_num DESC LIMIT 1    
"SELECT products.Name, max( products.Price), manufacturers.Name FROM Products JOIN Manufacturers ON products.Manufacturer = manufacturers.Code  GROUP BY products.Manufacturer      "
"SELECT DISTINCT customer.cust_name, customer.credit_score FROM customer JOIN bank ON customer.branch_ID = bank.branch_ID JOIN loan ON bank.branch_ID = T2.branch_ID        "
SELECT reservations.Kids FROM Reservations WHERE reservations.CheckIn = '2010-09-21' and reservations.FirstName = 'DAMIEN' and reservations.LastName = 'TRACHSEL'       
SELECT business.review_count FROM business WHERE business.name = 'Acacia Cafe'       
SELECT people.Hometown FROM people WHERE people.Age > 23     INTERSECT SELECT people.Hometown FROM people WHERE people.Age < 20         
SELECT player.player_api_id FROM Player WHERE player.height >= 180     INTERSECT SELECT player_attributes.player_api_id FROM Player_Attributes WHERE player_attributes.overall_rating > 85         
SELECT count( *) FROM All_Documents WHERE all_documents.Document_Type_Code = 'CV' or all_documents.Document_Type_Code = 'BK'       
"SELECT climber.Name, mountain.Name FROM climber JOIN mountain ON climber.Mountain_ID = mountain.Mountain_ID        "
"SELECT projects.Project_ID, projects.Project_Details FROM Projects        "
SELECT count( *) FROM author        
SELECT count( *) FROM branch WHERE branch.membership_amount > (SELECT avg( branch.membership_amount) FROM branch        )       
SELECT dorm.dorm_name FROM Dorm WHERE dorm.student_capacity > 300       
SELECT list.LastName FROM list WHERE list.Classroom = 111       
SELECT employee.Phone FROM Employee        
SELECT actor.Name FROM actor     ORDER BY actor.Name ASC   
SELECT park.park_name FROM park JOIN home_game ON park.park_id = home_game.park_id WHERE home_game.year = 2008   ORDER BY home_game.attendance DESC LIMIT 1    
SELECT state.density FROM state WHERE state.capital = '1'       
SELECT available_policies.Customer_Phone FROM Available_Policies WHERE available_policies.policy_type_code = (SELECT available_policies.policy_type_code FROM Available_Policies  GROUP BY available_policies.policy_type_code  ORDER BY count( *) DESC LIMIT 1    )       
"SELECT avg( customer.acc_bal), customer.acc_type FROM customer WHERE customer.credit_score < 50 GROUP BY customer.acc_type      "
SELECT highlow.highest_point FROM highlow WHERE highlow.state_name in (SELECT state.state_name FROM state WHERE state.capital = '1'       )       
"SELECT department.DEPT_NAME, department.DEPT_ADDRESS FROM DEPARTMENT JOIN STUDENT ON department.DEPT_CODE = student.DEPT_CODE  GROUP BY student.DEPT_CODE  ORDER BY count( *) DESC LIMIT 1    "
"SELECT drivers.driverId, drivers.surname FROM drivers JOIN lapTimes ON drivers.driverId = lap_times.driverId    ORDER BY lap_times.milliseconds DESC LIMIT 1    "
SELECT customer.cust_name FROM customer        EXCEPT SELECT customer.cust_name FROM customer WHERE customer.acc_type = '1'       
SELECT shops.Shop_Details FROM Shops JOIN Tourist_Attractions ON shops.Shop_ID = tourist_attractions.Tourist_Attraction_ID WHERE tourist_attractions.How_to_Get_There = 'walk'       
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paperDataset JOIN dataset JOIN paper WHERE dataset.datasetName like '%ImageNet%'       
SELECT course.title FROM course JOIN prereq ON course.course_id = T2.prereq_id  GROUP BY course.title HAVING count( *) = 2     
SELECT count( *) FROM RESTAURANT JOIN GEOGRAPHIC ON restaurant.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN LOCATION ON GEOGRAPHIC.CITY_NAME = location.CITY_NAME WHERE location.CITY_NAME = '1' and restaurant.FOOD_TYPE = '1'       
SELECT count( *) FROM customers WHERE customers.city = 'Prague'       
"SELECT technician.Name, count( *) FROM technician JOIN repair_assignment ON technician.technician_id = repair_assignment.technician_id  GROUP BY technician.Name      "
SELECT count( *) FROM Roles        
SELECT employees.Employee_Name FROM Employees WHERE employees.Role_Code = 'HR'       
SELECT artwork.Name FROM artwork WHERE artwork.Artwork_ID NOT IN (SELECT nomination.Artwork_ID FROM nomination        )       
"SELECT artist.artist_name, artist.country FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.resolution > 900 GROUP BY song.artist_name HAVING count( *) >= 1     "
SELECT stadium.name FROM stadium WHERE stadium.name like '%Bank%'       
SELECT grapes.Color FROM grapes JOIN wine ON grapes.Grape = wine.Grape  GROUP BY grapes.Color  ORDER BY avg( wine.Price) DESC LIMIT 1    
SELECT actor.name FROM actor WHERE actor.birth_city = 'Tehran'       
SELECT count( *) FROM state        
SELECT DISTINCT count(DISTINCT player.Position) FROM player        
SELECT musical.Nominee FROM musical  GROUP BY musical.Nominee HAVING count( *) > 2     
SELECT DISTINCT count(DISTINCT actor.name) FROM actor JOIN cast ON actor.aid = T3.aid JOIN movie WHERE movie.title = 'Saving Private Ryan'       
"SELECT player.Position, avg( player.Points) FROM player  GROUP BY player.Position      "
"SELECT rooms.roomName, reservations.Rate, reservations.CheckIn, reservations.CheckOut FROM Rooms JOIN Reservations ON rooms.RoomId = reservations.Room    ORDER BY reservations.Rate DESC LIMIT 1    "
SELECT * FROM Products WHERE products.Price between 60 AND 120       
SELECT people.Name FROM people JOIN perpetrator ON people.People_ID = perpetrator.People_ID WHERE perpetrator.Country = 'China' or perpetrator.Country = 'Japan'       
SELECT DISTINCT person_friend.name FROM PersonFriend JOIN Person ON person_friend.friend = person.name WHERE person.age < (SELECT avg( person.age) FROM Person        )       
"SELECT invoices.billing_country, avg( invoices.total) FROM invoices  GROUP BY invoices.billing_country  ORDER BY avg( invoices.total) DESC LIMIT 1    "
SELECT DISTINCT count(DISTINCT students_in_detention.student_id) FROM Students_in_Detention        
SELECT match_season.College FROM match_season JOIN team ON match_season.Team = team.Team_id  GROUP BY match_season.College HAVING count( *) >= 2  ORDER BY match_season.College DESC   
SELECT DISTINCT student.city_code FROM Student        
SELECT station.Location FROM station        EXCEPT SELECT station.Location FROM station WHERE station.Number_of_Platforms >= 15       
SELECT authors.lname FROM Authors JOIN Authorship ON authors.authID = Authorship.authID JOIN Papers ON Authorship.paperID = papers.paperID WHERE papers.title like '%Monadic%'       
SELECT DISTINCT journal.journalId FROM journal JOIN paper ON journal.journalId = paper.journalId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
SELECT customers.Customer_Details FROM Customers JOIN Policies ON customers.Customer_ID = policies.Customer_ID  GROUP BY customers.Customer_Details  ORDER BY count( *) DESC LIMIT 1    
SELECT count( *) FROM Student_Tests_Taken WHERE student_tests_taken.test_result = 'Fail'       
SELECT reviewer.name FROM Reviewer JOIN Rating ON reviewer.rID = rating.rID WHERE rating.stars > 3       
SELECT sum( faculty.Faculty) FROM faculty WHERE faculty.Year = 2002       
"SELECT teachers.FirstName, teachers.LastName FROM teachers JOIN list  GROUP BY teachers.LastName  ORDER BY count( *) DESC LIMIT 1    "
SELECT DISTINCT customer_orders.customer_id FROM Customer_Orders WHERE customer_orders.order_date > (SELECT min( customer_orders.order_date) FROM Customer_Orders WHERE customer_orders.order_status_code = 'Cancelled'       )       
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and location.STREET_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT DISTINCT paper.paperId FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE venue.venueName = '1'       
SELECT authors.fname FROM Authors JOIN Authorship ON authors.authID = Authorship.authID JOIN Papers ON Authorship.paperID = papers.paperID WHERE papers.title like '%Functional%'       
SELECT county_public_safety.Name FROM county_public_safety     ORDER BY county_public_safety.Population DESC   
SELECT DISTINCT competition.Year FROM competition WHERE competition.Competition_type != 'Tournament'       
"SELECT customers_cards.customer_id, customers.customer_first_name, customers.customer_last_name FROM Customers JOIN Customers_Cards  GROUP BY customers.customer_id HAVING count( *) >= 2     "
SELECT organisations.organisation_type FROM Organisations JOIN Research_Staff ON organisations.organisation_id = research_staff.employer_organisation_id  GROUP BY organisations.organisation_type  ORDER BY count( *) DESC LIMIT 1    
SELECT ship.Name FROM Ship JOIN captain ON ship.Ship_ID = captain.Ship_ID WHERE captain.Rank = 'Midshipman'     INTERSECT SELECT ship.Name FROM Ship JOIN captain ON ship.Ship_ID = captain.Ship_ID WHERE captain.Rank = 'Lieutenant'         
SELECT catalogs.catalog_publisher FROM Catalogs  GROUP BY catalogs.catalog_publisher  ORDER BY count( *) DESC LIMIT 1    
SELECT student.LName FROM Student WHERE student.Age = (SELECT min( student.Age) FROM Student        )       
SELECT count( river.river_name) FROM river WHERE river.river_name = '1'       
SELECT candidates.candidate_id FROM Candidates JOIN People ON candidates.candidate_id = people.person_id WHERE people.email_address = 'stanley.monahan@example.org'       
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE restaurant.NAME = '1'       "
SELECT party.Party_name FROM party WHERE party.Party_ID NOT IN (SELECT member.Party_ID FROM member        )       
SELECT course_authors_and_tutors.address_line_1 FROM Course_Authors_and_Tutors JOIN Courses ON course_authors_and_tutors.author_id = courses.author_id WHERE courses.course_name = 'operating system' or courses.course_name = 'data structure'       
SELECT tryout.cName FROM Tryout WHERE tryout.pPos = '1'     INTERSECT SELECT tryout.cName FROM Tryout WHERE tryout.pPos = '1'         
SELECT count( *) FROM airport WHERE airport.id NOT IN (SELECT flight.airport_id FROM flight WHERE flight.Pilot = 'Thompson'       )       
SELECT border_info.border FROM border_info WHERE border_info.state_name = '1'       
SELECT reviewer.name FROM Reviewer JOIN Rating ON reviewer.rID = T2.rID  GROUP BY reviewer.name HAVING count( *) >= 3     
SELECT DISTINCT count(DISTINCT business.name) FROM business JOIN review ON business.business_id = review.business_id JOIN user ON review.user_id = user.user_id WHERE review.year = 2010 and user.name = 'Michelle'       
SELECT count( *) FROM game WHERE game.id NOT IN (SELECT injury_accident.game_id FROM injury_accident        )       
"SELECT employees.EMPLOYEE_ID, countries.COUNTRY_NAME FROM employees JOIN departments ON employees.DEPARTMENT_ID = departments.DEPARTMENT_ID JOIN locations ON departments.LOCATION_ID = locations.LOCATION_ID JOIN countries ON locations.COUNTRY_ID = countries.COUNTRY_ID        "
SELECT count( *) FROM GEOGRAPHIC        
SELECT river.traverse FROM river WHERE river.length = (SELECT max( river.length) FROM river        )       
SELECT employee.EMP_FNAME FROM EMPLOYEE JOIN CLASS ON employee.EMP_NUM = T2.PROF_NUM  GROUP BY employee.EMP_FNAME HAVING count( *) > 1     
"SELECT home_game.year, avg( home_game.attendance) FROM home_game  GROUP BY home_game.year      "
"SELECT DISTINCT drivers.forename, drivers.surname FROM drivers JOIN lapTimes ON drivers.driverId = lap_times.driverId WHERE lap_times.milliseconds < 93000       "
"SELECT max( rating.stars), movie.year FROM Rating JOIN Movie ON rating.mID = movie.mID WHERE movie.year = (SELECT max( movie.year) FROM Movie        ) GROUP BY movie.year      "
SELECT DISTINCT count(DISTINCT teaches.ID) FROM teaches WHERE teaches.semester = 'Spring' and teaches.year = 2010       
SELECT performance.Location FROM performance  GROUP BY performance.Location HAVING count( *) >= 2     
SELECT count( *) FROM PROFESSOR JOIN DEPARTMENT ON professor.DEPT_CODE = department.DEPT_CODE WHERE department.DEPT_NAME = 'Accounting'       
SELECT customers.customer_name FROM Customers JOIN Orders ON customers.customer_id = Orders.customer_id JOIN Order_Items ON Orders.order_id = order_items.order_id JOIN Products ON order_items.product_id = products.product_id WHERE order_items.order_item_status = 'Cancel' and products.product_name = 'food' GROUP BY customers.customer_name HAVING count( *) >= 1     
"SELECT section.semester, section.year FROM section JOIN course ON section.course_id = course.course_id  GROUP BY section.course_id  ORDER BY count( *) DESC LIMIT 1    "
"SELECT DISTINCT problem_log.problem_id, problem_log.problem_log_id FROM Problem_Log JOIN Staff ON problem_log.assigned_to_staff_id = staff.staff_id WHERE staff.staff_first_name = 'Rylan' and staff.staff_last_name = 'Homenick'       "
SELECT player.Player_name FROM player JOIN player_coach ON player.Player_ID = player_coach.Player_ID JOIN coach ON player_coach.Coach_ID = coach.Coach_ID WHERE coach.Rank = 1       
SELECT instructor.name FROM instructor WHERE instructor.ID NOT IN (SELECT teaches.ID FROM teaches WHERE teaches.semester = 'Spring'       )       
SELECT job_history.EMPLOYEE_ID FROM job_history JOIN jobs ON job_history.JOB_ID = jobs.JOB_ID  GROUP BY job_history.EMPLOYEE_ID HAVING count( *) >= 2     
SELECT player.Team FROM player    ORDER BY player.Age DESC LIMIT 1    
SELECT customers.Customer_Details FROM Customers     ORDER BY customers.Customer_Details ASC   
SELECT city.state_name FROM city WHERE city.population = (SELECT max( city.population) FROM city JOIN state ON city.state_name = T23.state_name        )       
SELECT count( *) FROM Addresses        
SELECT book.Title FROM book WHERE book.Book_ID NOT IN (SELECT publication.Book_ID FROM publication        )       
SELECT river.length FROM river WHERE river.length = (SELECT max( river.length) FROM river        )       
SELECT county_public_safety.Case_burden FROM county_public_safety     ORDER BY county_public_safety.Population DESC   
SELECT DISTINCT apartment_buildings.building_description FROM Apartment_Buildings        
SELECT course.title FROM course     ORDER BY course.title ASC   
"SELECT courses.course_name, courses.course_description FROM Courses JOIN Subjects ON courses.subject_id = subjects.subject_id WHERE subjects.subject_name = 'Computer Science'       "
"SELECT count( *), airports.city FROM airports WHERE airports.country = 'United States' GROUP BY airports.city   ORDER BY count( *) DESC   "
SELECT count( *) FROM GEOGRAPHIC        
SELECT host.Nationality FROM host  GROUP BY host.Nationality  ORDER BY count( *) DESC LIMIT 1    
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Peter Mertens' and author.authorName = 'Dina Barbian'       
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
"SELECT school.School_name, school.Location, school.Mascot FROM School        "
SELECT DISTINCT count(DISTINCT songs.Title) FROM Songs JOIN Vocals ON songs.SongId = vocals.SongId WHERE vocals.Type = '1'       
SELECT max( student.Age) FROM Student        
SELECT trip.id FROM trip    ORDER BY trip.duration ASC LIMIT 1    
SELECT parts.part_name FROM Parts JOIN Part_Faults ON parts.part_id = part_faults.part_id  GROUP BY parts.part_name  ORDER BY count( *) ASC LIMIT 1    
SELECT DISTINCT count(DISTINCT photos.Name) FROM Photos        
SELECT available_policies.policy_type_code FROM Available_Policies  GROUP BY available_policies.policy_type_code  ORDER BY count( *) DESC LIMIT 1    
SELECT party.Minister FROM party    ORDER BY party.Left_office DESC LIMIT 1    
SELECT nurse.Name FROM Nurse JOIN Appointment ON nurse.EmployeeID = appointment.PrepNurse  GROUP BY nurse.Name  ORDER BY count( *) DESC LIMIT 1    
SELECT projects.Name FROM Projects JOIN AssignedTo ON projects.Code = AssignedTo.Project JOIN Scientists ON AssignedTo.Scientist = scientists.SSN WHERE scientists.Name like '%Smith%'       
"SELECT avg( dorm.student_capacity), sum( dorm.student_capacity) FROM Dorm WHERE dorm.gender = '1'       "
SELECT max( airports.elevation) FROM airports WHERE airports.country = 'Iceland'       
SELECT avg( student.STU_GPA) FROM STUDENT JOIN ENROLL ON student.STU_NUM = ENROLL.STU_NUM JOIN CLASS ON ENROLL.CLASS_CODE = class.CLASS_CODE WHERE class.CRS_CODE = 'ACCT-211'       
SELECT DISTINCT count(DISTINCT club.ClubName) FROM Club JOIN Member_of_club ON club.ClubID = Member_of_club.ClubID JOIN Student ON Member_of_club.StuID = student.StuID WHERE student.Fname = 'Eric' and student.LName = 'Tai'       
SELECT sum( invoices.total) FROM invoices JOIN customers ON invoices.customer_id = customers.id WHERE customers.first_name = 'Lucas' and customers.last_name = 'Mancini'       
SELECT person.name FROM Person JOIN PersonFriend ON person.name = person_friend.friend WHERE person_friend.friend = 'Bob'       
"SELECT film.title, film.rental_rate FROM film    ORDER BY film.rental_rate DESC LIMIT 1    "
SELECT DISTINCT invoices.payment_method_code FROM Invoices        
SELECT DISTINCT customers.customer_name FROM Customers JOIN Customer_Orders ON customers.customer_id = customer_orders.customer_id WHERE customer_orders.order_status_code = 'Pending'    ORDER BY customer_orders.customer_id ASC   
SELECT DISTINCT count(DISTINCT papers.title) FROM Papers JOIN Authorship ON papers.paperID = Authorship.paperID JOIN Inst ON Authorship.instID = institution.instID WHERE institution.name = 'Tokohu University'       
"SELECT people.Name, people.Age FROM people WHERE people.Is_Male = '1' and people.People_ID NOT IN (SELECT wedding.Male_ID FROM wedding        )       "
SELECT member.Member_Name FROM member JOIN party ON member.Party_ID = party.Party_ID WHERE party.Party_name != 'Progress Party'       
"SELECT artist.Name, artist.Year_Join FROM artist WHERE artist.Country != 'United States'       "
SELECT student.StuID FROM Student WHERE student.Advisor = 1121       
SELECT restaurant.Rating FROM Restaurant WHERE restaurant.ResName = 'Subway'       
SELECT count( *) FROM salary JOIN team WHERE team.name = 'Boston Red Stockings' and salary.year = 2000       
"SELECT count( *), product.product_id FROM Problems JOIN Product ON problems.product_id = product.product_id  GROUP BY product.product_id      "
"SELECT student.STU_FNAME, student.STU_GPA FROM STUDENT WHERE student.STU_GPA < (SELECT avg( student.STU_GPA) FROM STUDENT        )       "
SELECT DISTINCT count(DISTINCT tryout.cName) FROM Tryout        
SELECT DISTINCT key_phrase.keyphraseId FROM keyphrase JOIN paperKeyphrase ON key_phrase.keyphraseId = paperKeyphrase.keyphraseId JOIN paper ON paperKeyphrase.paperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Luke Zettlemoyer'       
SELECT documents.document_id FROM Documents WHERE documents.document_status_code = '1' and documents.document_type_code = '1'       EXCEPT SELECT documents.document_id FROM Documents JOIN Ref_Shipping_Agents ON documents.shipping_agent_code = reference_shipping_agents.shipping_agent_code WHERE reference_shipping_agents.shipping_agent_name = '1'       
SELECT tracks.milliseconds FROM tracks WHERE tracks.name = 'Fast As a Shark'       
SELECT count( *) FROM accelerator_compatible_browser JOIN Web_client_accelerator ON accelerator_compatible_browser.accelerator_id = web_client_accelerator.id WHERE web_client_accelerator.id NOT IN (SELECT accelerator_compatible_browser.accelerator_id FROM accelerator_compatible_browser        )       
"SELECT manufacturer.Name, manufacturer.Open_Year FROM manufacturer WHERE manufacturer.Num_of_Shops > 10 or manufacturer.Num_of_Factories < 10       "
SELECT sum( department.budget) FROM department WHERE department.dept_name = 'Marketing' or department.dept_name = 'Finance'       
SELECT count( *) FROM venue        
SELECT count( *) FROM venue        
SELECT count( *) FROM Student JOIN Voting_record ON student.StuID = voting_record.Class_Senator_Vote WHERE student.city_code = 'NYC' and voting_record.Election_Cycle = 'Spring'       
SELECT DISTINCT count(DISTINCT department.SCHOOL_CODE) FROM DEPARTMENT        
SELECT count( river.traverse) FROM river WHERE river.length > 1       
SELECT follows.f1 FROM follows JOIN user_profiles ON follows.f2 = user_profiles.uid WHERE user_profiles.name = 'Mary'     INTERSECT SELECT follows.f1 FROM follows JOIN user_profiles ON follows.f2 = user_profiles.uid WHERE user_profiles.name = 'Susan'         
SELECT journal.name FROM journal JOIN publication ON journal.jid = publication.jid JOIN publication_keyword ON publication.pid = publication_keyword.pid JOIN keyword ON publication_keyword.kid = keyword.kid WHERE keyword.keyword = 'Relational Database' GROUP BY journal.name HAVING count( publication.title) > '60'     
SELECT publication.title FROM publication JOIN conference ON publication.cid = conference.cid WHERE conference.name = 'VLDB' and publication.year > 2000       
SELECT artist.Famous_Title FROM artist WHERE artist.Artist = 'Triumfall'       
SELECT count( *) FROM teachers JOIN list WHERE list.FirstName = 'MADLOCK' and list.LastName = 'RAY'       
"SELECT shop.Open_Date, shop.Open_Year FROM shop WHERE shop.Shop_Name = 'Apple'       "
SELECT sum( checking.balance) FROM CHECKING        
SELECT invoices.payment_method_code FROM Invoices  GROUP BY invoices.payment_method_code  ORDER BY count( *) DESC LIMIT 1    
"SELECT customers.address_line_1, customers.address_line_2 FROM Customers WHERE customers.email_address = 'vbogisich@example.org'       "
SELECT sum( visits_restaurant.Spent) FROM Visits_Restaurant JOIN Student ON visits_restaurant.StuID = student.StuID WHERE student.Fname = 'Linda' and student.LName = 'Smith'       
"SELECT allergy_type.AllergyType, count( *) FROM Allergy_Type  GROUP BY allergy_type.AllergyType      "
"SELECT count( *), match.Competition FROM match  GROUP BY match.Competition      "
SELECT bank.state FROM bank  GROUP BY bank.state  ORDER BY sum( bank.no_of_customers) DESC LIMIT 1    
SELECT count( *) FROM state        
SELECT count( *) FROM flight        
SELECT album.Title FROM Album     ORDER BY album.Title ASC   
SELECT station.Name FROM station JOIN train_station ON station.Station_ID = train_station.Station_ID JOIN train ON train_station.Train_ID = train.Train_ID WHERE train.Name = 'Ananthapuri Express'     INTERSECT SELECT station.Name FROM station JOIN train_station ON station.Station_ID = train_station.Station_ID JOIN train ON train_station.Train_ID = train.Train_ID WHERE train.Name = 'Guruvayur Express'         
SELECT DISTINCT count(DISTINCT customers.payment_method) FROM Customers        
SELECT count( *) FROM invoices WHERE invoices.billing_city = 'Chicago' and invoices.billing_state = 'IL'       
"SELECT shop.Shop_Name, device.Carrier FROM shop JOIN stock ON shop.Shop_ID = stock.Shop_ID JOIN device ON stock.Device_ID = device.Device_ID        "
SELECT station.Location FROM station  GROUP BY station.Location HAVING count( *) = 1     
"SELECT products.product_id, products.product_name FROM Products WHERE products.product_price < 600 or products.product_price > 900       "
"SELECT employees.first_name, employees.last_name FROM employees    ORDER BY employees.hire_date ASC LIMIT 1    "
SELECT sum( manufacturers.Revenue) FROM Manufacturers WHERE manufacturers.Headquarter = 'Austin'       
SELECT department.SCHOOL_CODE FROM DEPARTMENT WHERE department.DEPT_NAME = 'Accounting'       
SELECT state.population FROM state WHERE state.state_name = '1'       
"SELECT party.Party_name, count( *) FROM party JOIN member ON party.Party_ID = member.Party_ID  GROUP BY party.Party_name      "
SELECT user.user_id FROM user WHERE user.name = 'Michelle'       
SELECT count( *) FROM Third_Party_Companies        
SELECT movie.budget FROM movie WHERE movie.release_year = 2007 and movie.title = 'Juno'       
SELECT avg( player.Points) FROM player JOIN club ON player.Club_ID = club.Club_ID WHERE club.name = 'AIB'       
SELECT director.name FROM director JOIN directed_by ON director.did = directed_by.did JOIN copyright ON directed_by.msid = copyright.msid JOIN cast ON copyright.msid = cast.msid JOIN actor ON cast.aid = actor.aid JOIN movie WHERE actor.name = 'Kate Winslet'       
"SELECT products.Name, products.Price FROM Products        "
SELECT DISTINCT count(DISTINCT sports_info.SportName) FROM SportsInfo        
"SELECT election.Delegate, election.Committee FROM election        "
SELECT director.name FROM director JOIN directed_by ON director.did = T3.did JOIN movie WHERE movie.release_year = 2015 and movie.title = 'Joy'       
"SELECT teachers.FirstName, teachers.LastName FROM teachers JOIN list WHERE list.FirstName = 'EVELINA' and list.LastName = 'BROMLEY'       "
"SELECT film.Title, film.Directed_by FROM film        "
SELECT DISTINCT phone.Hardware_Model_name FROM phone JOIN screen_mode ON phone.screen_mode = screen_mode.Graphics_mode WHERE screen_mode.Type = 'Graphics' or phone.Company_name = 'Nokia Corporation'       
SELECT DISTINCT document_locations.Location_Code FROM Document_Locations        
"SELECT employees.first_name, employees.last_name FROM employees JOIN customers ON employees.id = customers.support_rep_id  GROUP BY employees.reports_to  ORDER BY count( *) DESC LIMIT 1    "
SELECT avg( student.Age) FROM Student JOIN Voting_record ON student.StuID = voting_record.Class_Senator_Vote WHERE student.Sex = 'F' and voting_record.Election_Cycle = 'Spring'       
SELECT manufacturers.Name FROM Manufacturers WHERE manufacturers.Revenue between 100 AND 150       
SELECT count( *) FROM venue        
SELECT volume.Song FROM volume    ORDER BY volume.Weeks_on_Top DESC LIMIT 1    
"SELECT reference_locations.Location_Name, reference_locations.Location_Description FROM Ref_Locations WHERE reference_locations.Location_Code = '1'       "
SELECT film.Studio FROM film  GROUP BY film.Studio HAVING count( *) >= 2     
SELECT wine.Name FROM wine WHERE wine.Score > 90       
"SELECT employees.EMPLOYEE_ID, employees.FIRST_NAME, employees.LAST_NAME, employees.JOB_ID FROM employees WHERE employees.SALARY > (SELECT max( employees.SALARY) FROM employees WHERE employees.JOB_ID = '1'       )       "
SELECT actor.name FROM actor JOIN cast ON actor.aid = cast.aid JOIN movie WHERE cast.role = Alan Turing and movie.title = 'The Imitation Game'       
SELECT publication.Publication_Date FROM publication    ORDER BY publication.Price ASC LIMIT 1    
SELECT count( *) FROM Student JOIN Has_Allergy ON student.StuID = Has_Allergy.StuID JOIN Allergy_Type ON Has_Allergy.Allergy = allergy_type.Allergy WHERE allergy_type.AllergyType = 'food'       
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Peter Mertens' and author.authorName = 'Dina Barbian'       
"SELECT movie.title, rating.stars, movie.director, max( rating.stars) FROM Movie JOIN Rating ON movie.mID = rating.mID WHERE movie.director != '1' GROUP BY rating.mID      "
SELECT ship.Name FROM ship    ORDER BY ship.Tonnage DESC LIMIT 1    
"SELECT student.Fname, student.LName FROM Student WHERE student.Major != (SELECT student.Major FROM Student  GROUP BY student.Major  ORDER BY count( *) DESC LIMIT 1    )       "
SELECT student.StuID FROM Student        EXCEPT SELECT participates_in.stuid FROM Participates_in        
SELECT avg( salary.salary) FROM salary JOIN team WHERE team.name = 'Boston Red Stockings'       
SELECT customers.customer_name FROM Customers JOIN Customer_Orders ON customers.customer_id = customer_orders.customer_id    ORDER BY customer_orders.order_date DESC LIMIT 1    
SELECT sum( loan.amount) FROM loan JOIN bank ON loan.branch_ID = bank.branch_ID WHERE bank.state = 'New York'       
SELECT appellations.County FROM appellations JOIN wine ON appellations.Appelation = wine.Appelation WHERE wine.Score > 90 GROUP BY appellations.County  ORDER BY count( *) DESC LIMIT 1    
"SELECT manufacturers.Name, manufacturers.Headquarter, manufacturers.Founder FROM Manufacturers    ORDER BY manufacturers.Revenue DESC LIMIT 1    "
SELECT swimmer.name FROM swimmer JOIN record ON swimmer.ID = record.Swimmer_ID WHERE record.Result = 'Win'       
SELECT artist.Name FROM Artist        EXCEPT SELECT artist.Name FROM Artist JOIN Album ON artist.ArtistId = T3.ArtistId        
SELECT count( *) FROM song JOIN files ON song.f_id = files.f_id WHERE files.duration like '%1%'       
SELECT flight.destination FROM flight  GROUP BY flight.destination  ORDER BY count( *) ASC LIMIT 1    
SELECT scientists.Name FROM Scientists     ORDER BY scientists.Name ASC   
SELECT count( *) FROM author        
SELECT DISTINCT orders.order_id FROM Orders     ORDER BY orders.date_order_placed ASC   
SELECT artist.Famous_Title FROM artist WHERE artist.Artist_ID NOT IN (SELECT volume.Artist_ID FROM volume        )       
"SELECT reference_locations.Location_Name, document_locations.Location_Code FROM Ref_Locations JOIN Document_Locations ON reference_locations.Location_Code = document_locations.Location_Code  GROUP BY document_locations.Location_Code  ORDER BY count( *) ASC LIMIT 1    "
SELECT DISTINCT student.Age FROM Student JOIN Voting_record ON student.StuID = voting_record.Class_Senator_Vote WHERE voting_record.Election_Cycle = 'Fall'       
SELECT captain.Rank FROM captain  GROUP BY captain.Rank  ORDER BY count( *) DESC LIMIT 1    
"SELECT employees.EMPLOYEE_ID, employees.FIRST_NAME, employees.LAST_NAME FROM employees WHERE employees.DEPARTMENT_ID in (SELECT employees.DEPARTMENT_ID FROM employees WHERE employees.FIRST_NAME like '%T%'       )       "
SELECT gymnast.Total_Points FROM gymnast     ORDER BY gymnast.Total_Points DESC   
"SELECT country.Name, avg( roller_coaster.Speed) FROM country JOIN roller_coaster ON country.Country_ID = roller_coaster.Country_ID  GROUP BY country.Name      "
SELECT tourist_attractions.Name FROM Tourist_Attractions JOIN Tourist_Attraction_Features ON tourist_attractions.Tourist_Attraction_ID = Tourist_Attraction_Features.Tourist_Attraction_ID JOIN Features ON Tourist_Attraction_Features.Feature_ID = features.Feature_ID WHERE features.Feature_Details = '1'      UNION SELECT tourist_attractions.Name FROM Tourist_Attractions JOIN Tourist_Attraction_Features ON tourist_attractions.Tourist_Attraction_ID = Tourist_Attraction_Features.Tourist_Attraction_ID JOIN Features ON Tourist_Attraction_Features.Feature_ID = features.Feature_ID WHERE features.Feature_Details = '1'        
SELECT customers.email_address FROM Customers JOIN Complaints ON customers.customer_id = complaints.customer_id  GROUP BY customers.email_address  ORDER BY count( *) ASC LIMIT 1    
SELECT max( climber.Points) FROM climber WHERE climber.Country = 'United Kingdom'       
"SELECT instructor.dept_name, avg( instructor.salary) FROM instructor  GROUP BY instructor.dept_name HAVING avg( instructor.salary) > 42000     "
SELECT count( *) FROM people WHERE people.Is_Male = 'F' and people.Age > 30       
SELECT state.state_name FROM state WHERE state.capital = '1'       
SELECT course.title FROM course WHERE course.course_id NOT IN (SELECT prerequisite.course_id FROM prereq        )       
SELECT river.river_name FROM river WHERE river.length = (SELECT max( river.length) FROM river WHERE river.traverse = '1'       ) and river.traverse = '1'       
"SELECT DISTINCT count(DISTINCT paper.paperId), key_phrase.keyphraseId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 2015 and venue.venueName = 'NIPS' GROUP BY key_phrase.keyphraseId   ORDER BY count( paper.paperId) DESC   "
SELECT avg( manager.Age) FROM manager        
"SELECT movie.title, movie.director FROM Movie JOIN Rating ON movie.mID = rating.mID WHERE rating.stars > (SELECT avg( rating.stars) FROM Rating JOIN Movie ON rating.mID = movie.mID WHERE movie.director = 'James Cameron'       )       "
SELECT phone.Name FROM phone WHERE phone.Carrier = 'Sprint' or phone.Carrier = 'TMobile'       
"SELECT max( settlements.Settlement_Amount), min( settlements.Settlement_Amount) FROM Settlements        "
SELECT organization.name FROM organization        
SELECT count( *) FROM device        
"SELECT takes_classes.semester, takes_classes.year FROM takes JOIN student ON takes_classes.ID = student.ID  GROUP BY takes_classes.ID  ORDER BY count( *) ASC LIMIT 1    "
SELECT company.Headquarters FROM company WHERE company.Main_Industry = 'Banking' GROUP BY company.Headquarters HAVING count( *) >= 2     
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT accounts.other_account_details FROM Accounts WHERE accounts.account_name = '338'       
"SELECT customers.customer_name, customers.customer_phone FROM Customers WHERE customers.customer_id NOT IN (SELECT customer_address_history.customer_id FROM Customer_Address_History        )       "
"SELECT rooms.decor, avg( rooms.basePrice), min( rooms.basePrice) FROM Rooms  GROUP BY rooms.decor      "
SELECT count( *) FROM Customers        
"SELECT avg( person.age), person.job FROM Person  GROUP BY person.job      "
"SELECT staff.staff_first_name, staff.staff_last_name FROM Staff JOIN Problems ON staff.staff_id = Problems.reported_by_staff_id JOIN Product ON Problems.product_id = product.product_id WHERE product.product_name = 'rem'       EXCEPT SELECT staff.staff_first_name, staff.staff_last_name FROM Staff JOIN Problems ON staff.staff_id = Problems.reported_by_staff_id JOIN Product ON Problems.product_id = product.product_id WHERE product.product_name = 'aut'       "
SELECT festival_detail.Year FROM festival_detail  GROUP BY festival_detail.Year HAVING count( *) > 1     
"SELECT medicine.id, medicine.name FROM medicine JOIN medicine_enzyme_interaction ON medicine.id = T2.medicine_id  GROUP BY medicine.id HAVING count( *) >= 1     "
"SELECT student.Fname, student.LName FROM Student JOIN Minor_in ON student.StuID = minor_in.StuID WHERE minor_in.DNO = 140       "
SELECT count( *) FROM state        
SELECT country.Official_native_language FROM country WHERE country.Official_native_language like '%English%'       
"SELECT station.id, station.local_authority FROM station JOIN weekly_weather ON station.id = weekly_weather.station_id  GROUP BY weekly_weather.station_id  ORDER BY avg( weekly_weather.high_temperature) DESC LIMIT 1    "
SELECT people.Birth_Place FROM people  GROUP BY people.Birth_Place HAVING count( *) >= 2     
"SELECT mountain.id, mountain.name FROM mountain JOIN photos ON mountain.id = T2.mountain_id  GROUP BY T2.mountain_id HAVING count( *) >= 2     "
SELECT sum( dorm.student_capacity) FROM Dorm        
SELECT checking.balance FROM CHECKING JOIN ACCOUNTS ON checking.custid = accounts.custid WHERE accounts.name like '%ee%'       
SELECT count( *) FROM Lessons JOIN Customers ON lessons.customer_id = customers.customer_id WHERE customers.first_name = '1' and customers.last_name = '1' and lessons.lesson_status_code = '1'       
SELECT DISTINCT count(DISTINCT publication.title) FROM publication JOIN writes ON publication.pid = writes.pid JOIN author ON writes.aid = author.aid WHERE author.name = '1' and author.name = '1' and author.name = '1'       
SELECT wrestler.Reign FROM wrestler  GROUP BY wrestler.Reign  ORDER BY count( *) DESC LIMIT 1    
"SELECT people.Name, people.Sex, min( candidate.Oppose_rate) FROM people JOIN candidate ON people.People_ID = candidate.People_ID  GROUP BY candidate.People_ID      "
SELECT ship.Flag FROM Ship  GROUP BY ship.Flag  ORDER BY count( *) DESC LIMIT 1    
"SELECT payments.Payment_ID, payments.Date_Payment_Made, payments.Amount_Payment FROM Payments WHERE payments.Payment_Method_Code = 'Visa'       "
SELECT count( *) FROM Inst        
SELECT DISTINCT cite.citingPaperId FROM cite JOIN paper ON cite.citingPaperId = T2.paperId  GROUP BY cite.citingPaperId HAVING count( cite.citedPaperId) > 10     
"SELECT products.product_id, products.product_name FROM Products WHERE products.product_price < 600 or products.product_price > 900       "
SELECT mountain.Height FROM mountain JOIN climber ON mountain.Mountain_ID = climber.Mountain_ID    ORDER BY climber.Points DESC LIMIT 1    
SELECT DISTINCT paper.paperId FROM paperDataset JOIN dataset JOIN paper WHERE dataset.datasetName = 'WebKB'       
SELECT guests.date_of_birth FROM Guests WHERE guests.gender_code = 'Male'       
"SELECT reference_service_types.Service_Type_Description, reference_service_types.Service_Type_Code FROM Ref_Service_Types JOIN Services ON reference_service_types.Service_Type_Code = services.Service_Type_Code  GROUP BY services.Service_Type_Code  ORDER BY count( *) DESC LIMIT 1    "
SELECT ship.Name FROM ship     ORDER BY ship.Tonnage ASC   
SELECT river.river_name FROM river WHERE river.length = (SELECT max( river.length) FROM river WHERE river.traverse = '1'       ) and river.traverse = '1'       
"SELECT party.Party_name, region.Region_name FROM party JOIN region ON party.Region_ID = region.Region_ID        "
SELECT people.Hometown FROM people JOIN gymnast ON people.People_ID = T2.Gymnast_ID  GROUP BY people.Hometown HAVING count( *) >= 2     
SELECT claims.Date_Claim_Made FROM Claims WHERE claims.Amount_Settled <= (SELECT avg( claims.Amount_Settled) FROM Claims        )       
SELECT count( river.river_name) FROM river JOIN state ON river.traverse = state.state_name JOIN highlow ON state.state_name = highlow.state_name WHERE highlow.highest_elevation = (SELECT max( highlow.highest_elevation) FROM highlow        )       
"SELECT count( *), product.product_id FROM Problems JOIN Product ON problems.product_id = product.product_id  GROUP BY product.product_id      "
SELECT customers.Customer_name FROM Customers JOIN Customers_Policies ON customers.Customer_ID = T2.Customer_ID  GROUP BY customers.Customer_name  ORDER BY count( *) DESC LIMIT 1    
SELECT department.DName FROM Department WHERE department.Division = 'AS'      UNION SELECT department.DName FROM Department WHERE department.Division = 'EN' and department.Building = 'NEB'        
SELECT ship.Name FROM Ship JOIN captain ON ship.Ship_ID = captain.Ship_ID    ORDER BY captain.age ASC LIMIT 1    
"SELECT products.Code, products.Name, min( products.Price) FROM Products  GROUP BY products.Name      "
"SELECT student.Major, count( *) FROM Student  GROUP BY student.Major  ORDER BY count( student.Major) ASC LIMIT 1    "
SELECT transactions.date_of_transaction FROM Transactions WHERE transactions.share_count > '100' or transactions.amount_of_transaction > 1000       
SELECT count( *) FROM Appointment        
SELECT max( accounts.Account_Details) FROM Accounts       UNION SELECT accounts.Account_Details FROM Accounts WHERE accounts.Account_Details like '%5%'        
"SELECT rooms.roomName, rooms.RoomId FROM Rooms WHERE rooms.basePrice > 160 and rooms.maxOccupancy > 2       "
"SELECT DISTINCT count(DISTINCT department.DEPT_NAME), department.SCHOOL_CODE FROM DEPARTMENT  GROUP BY department.SCHOOL_CODE      "
SELECT avg( transactions.amount_of_transaction) FROM Transactions WHERE transactions.transaction_type_code = 'SALE'       
SELECT mountain.Country FROM mountain  GROUP BY mountain.Country HAVING count( *) > 1     
SELECT DISTINCT count(DISTINCT injury_accident.Injury) FROM injury_accident JOIN game ON injury_accident.game_id = game.id WHERE game.Season > 2010       
SELECT city.state_name FROM city WHERE city.city_name = '1'       
SELECT airlines.country FROM airlines WHERE airlines.name like '%Orbit%'       
SELECT performers.Customer_Phone FROM Performers WHERE performers.Customer_Name = 'Ashley'       
SELECT DISTINCT department.Name FROM Department JOIN Affiliated_With ON department.DepartmentID = affiliated_with.Department WHERE affiliated_with.PrimaryAffiliation = 1       
SELECT reviewer.rID FROM Reviewer WHERE reviewer.name = 'Daniel Lewis'       
SELECT accounts.name FROM ACCOUNTS JOIN CHECKING ON accounts.custid = checking.custid    ORDER BY checking.balance ASC LIMIT 1    
SELECT city.Official_Name FROM city WHERE city.Population > 1500 or city.Population < 500       
SELECT business.name FROM business JOIN checkin ON business.business_id = checkin.business_id  GROUP BY business.name  ORDER BY sum( checkin.count) DESC LIMIT 1    
SELECT documents_with_expenses.Document_ID FROM Documents_with_Expenses JOIN Ref_Budget_Codes ON documents_with_expenses.Budget_Type_Code = reference_budget_codes.Budget_Type_Code WHERE reference_budget_codes.Budget_Type_Description = 'Government'       
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paperDataset JOIN dataset JOIN paper WHERE dataset.datasetName like '%ImageNet%'       
SELECT gas_station.Manager_Name FROM gas_station JOIN station_company ON gas_station.Station_ID = station_company.Station_ID JOIN company ON station_company.Company_ID = company.Company_ID WHERE company.Company = 'ExxonMobil'       
SELECT captain.Name FROM captain     ORDER BY captain.age DESC   
SELECT count( *) FROM venue        
SELECT DISTINCT locations.Location_Name FROM Locations        
SELECT actor.name FROM actor WHERE actor.birth_city = 'Austin' and actor.birth_year > 1980       
SELECT state.state_name FROM state WHERE state.density = (SELECT min( state.density) FROM state        )       
SELECT student.Advisor FROM Student WHERE student.city_code = 'BAL'       
SELECT movie.title FROM Movie WHERE movie.mID NOT IN (SELECT rating.mID FROM Rating        )       
SELECT attribute_definitions.attribute_data_type FROM Attribute_Definitions  GROUP BY attribute_definitions.attribute_data_type HAVING count( *) > 3     
SELECT avg( user_profiles.followers) FROM user_profiles JOIN tweets ON user_profiles.uid = T2.uid        
"SELECT images.image_name, images.image_url FROM Images     ORDER BY images.image_name ASC   "
SELECT game.Date FROM game     ORDER BY game.Home_team DESC   
"SELECT exhibition.Theme, exhibition.Year FROM exhibition     ORDER BY exhibition.Ticket_Price DESC   "
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Peter Mertens' and author.authorName = 'Dina Barbian'       
SELECT count( *) FROM Customers        
SELECT actor.name FROM actor WHERE actor.birth_city = '1' and actor.birth_year > 1 and actor.gender = '1'       
SELECT avg( student.Age) FROM Student WHERE student.StuID in (SELECT has_allergy.StuID FROM Has_Allergy JOIN Allergy_Type ON has_allergy.Allergy = allergy_type.Allergy WHERE allergy_type.AllergyType = 'food'       )       
SELECT student.Fname FROM Student WHERE student.Major = 600       
SELECT branch.Open_year FROM branch  GROUP BY branch.Open_year HAVING count( *) >= 2     
"SELECT member.Name, college.Name FROM member JOIN college ON member.College_ID = college.College_ID        "
SELECT storm.Name FROM storm WHERE storm.Storm_ID NOT IN (SELECT affected_region.Storm_ID FROM affected_region        )       
SELECT state.area FROM state WHERE state.density = (SELECT min( state.density) FROM state        )       
SELECT count( *) FROM STUDENT JOIN ENROLL ON student.STU_NUM = T3.STU_NUM JOIN CLASS ON T3.CLASS_CODE = class.CLASS_CODE JOIN DEPARTMENT ON student.DEPT_CODE = department.DEPT_CODE WHERE department.DEPT_NAME = 'Accounting'       
SELECT volume.Song FROM volume JOIN music_festival ON volume.Volume_ID = music_festival.Volume WHERE music_festival.Result = '1'       
SELECT songs.Title FROM Songs JOIN Vocals ON songs.SongId = vocals.SongId  GROUP BY songs.Title  ORDER BY count( *) DESC LIMIT 1    
"SELECT employees.FIRST_NAME, employees.LAST_NAME, employees.DEPARTMENT_ID FROM employees WHERE employees.SALARY in (SELECT min( employees.SALARY) FROM employees        )       "
SELECT student.Fname FROM Student WHERE student.Age > 22       
"SELECT journalist.Name, count( *) FROM journalist JOIN news_report ON journalist.journalist_ID = news_report.journalist_ID  GROUP BY journalist.Name      "
SELECT count( *) FROM Addresses        
SELECT customer.store_id FROM customer  GROUP BY customer.store_id  ORDER BY count( *) DESC LIMIT 1    
SELECT festival_detail.Year FROM festival_detail WHERE festival_detail.Location = 'United States'     INTERSECT SELECT festival_detail.Year FROM festival_detail WHERE festival_detail.Location != 'United States'         
SELECT DISTINCT club.Region FROM club     ORDER BY club.Region ASC   
SELECT airlines.name FROM airlines JOIN routes ON airlines.alid = routes.alid  GROUP BY airlines.name  ORDER BY count( *) DESC LIMIT 1    
"SELECT policies.Policy_Type_Code, count( *) FROM Policies  GROUP BY policies.Policy_Type_Code      "
SELECT catalog_contents.catalog_entry_name FROM Catalog_Contents JOIN Catalog_Contents_Additional_Attributes ON catalog_contents.catalog_entry_id = catalog_contents_additional_attributes.catalog_entry_id WHERE catalog_contents_additional_attributes.catalog_level_number = 8       
SELECT count( *) FROM state        
SELECT count( *) FROM customers WHERE customers.first_name = 'Lucas' and customers.last_name = 'Mancini'       
"SELECT student_course_enrolment.date_of_enrolment, student_course_enrolment.date_of_completion FROM Student_Course_Enrolment        "
SELECT apartment_facilities.facility_code FROM Apartment_Facilities JOIN Apartments ON apartment_facilities.apt_id = apartments.apt_id WHERE apartments.bedroom_count > 4       
SELECT avg( student.Age) FROM Student JOIN Member_of_club ON student.StuID = Member_of_club.StuID JOIN Club ON Member_of_club.ClubID = club.ClubID WHERE club.ClubName = 'Bootup Baltimore'       
SELECT count( *) FROM county        
SELECT DISTINCT count(DISTINCT business.name) FROM business JOIN neighbourhood ON business.business_id = neighbourhood.business_id WHERE business.city = 'Madison' and neighbourhood.neighbourhood_name = 'Stone Meadows'       
SELECT playlists.name FROM playlists        
"SELECT DISTINCT count(DISTINCT department.DEPT_NAME), department.SCHOOL_CODE FROM DEPARTMENT  GROUP BY department.SCHOOL_CODE HAVING count( department.DEPT_NAME) < '5'     "
SELECT city.city_name FROM city WHERE city.state_name = '1'       
SELECT count( *) FROM bank        
"SELECT airports.city, count( *) FROM airports  GROUP BY airports.city HAVING count( *) > 1     "
"SELECT actor.Character, actor.Duration FROM actor        "
SELECT count( *) FROM Accounts        
SELECT avg( party.Number_of_hosts) FROM party        
SELECT school.School_name FROM School JOIN endowment ON school.School_id = T2.School_id  GROUP BY school.School_name HAVING sum( T2.amount) <= 10     
SELECT sum( savings.balance) FROM SAVINGS JOIN ACCOUNTS ON savings.custid = accounts.custid WHERE accounts.name != 'Brown'       
SELECT cinema.Location FROM cinema WHERE cinema.Capacity > 300 GROUP BY cinema.Location HAVING count( *) >= 2     
"SELECT accounts.name, checking.balance FROM ACCOUNTS JOIN CHECKING ON accounts.custid = checking.custid JOIN SAVINGS ON accounts.custid = savings.custid WHERE savings.balance > (SELECT avg( savings.balance) FROM SAVINGS        )       "
SELECT count( *) FROM Student WHERE student.city_code = 'HKG' or student.city_code = 'CHI'       
SELECT state.density FROM state WHERE state.area = (SELECT min( state.area) FROM state        )       
SELECT avg( mountain.Prominence) FROM mountain WHERE mountain.Country = 'Morocco'       
SELECT river.traverse FROM river WHERE river.river_name = '1'       
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = 'Question Answering'       
SELECT problems.problem_id FROM Problems JOIN Product ON problems.product_id = product.product_id WHERE product.product_name = 'voluptatem' and problems.date_problem_reported > '1995'       
"SELECT addresses.state_province_county, addresses.country FROM Addresses WHERE addresses.zip_postcode like '%4%'       "
"SELECT avg( exhibition.Ticket_Price), min( exhibition.Ticket_Price), max( exhibition.Ticket_Price) FROM exhibition WHERE exhibition.Year < 2009       "
SELECT count( *) FROM Customers        
SELECT DISTINCT bank.bname FROM bank JOIN loan ON bank.branch_ID = T2.branch_ID        
SELECT count( *) FROM Student        
SELECT policies.Policy_Type_Code FROM Policies JOIN Customers ON policies.Customer_ID = customers.Customer_ID  GROUP BY policies.Policy_Type_Code HAVING count( *) > 2     
SELECT DISTINCT writes.authorId FROM writes JOIN paper ON writes.paperId = paper.paperId JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 1 and venue.venueName = '1'       
SELECT DISTINCT cinema.Location FROM cinema        
SELECT DISTINCT trip.start_station_name FROM trip WHERE trip.duration < 100       
SELECT DISTINCT count(DISTINCT people.Birth_Place) FROM people        
SELECT count( *) FROM PROFESSOR WHERE professor.PROF_HIGH_DEGREE = 'Ph.D.' or professor.PROF_HIGH_DEGREE = 'MA'       
SELECT song.song_name FROM song WHERE song.rating < (SELECT min( song.rating) FROM song WHERE song.languages = 'english'       )       
"SELECT DISTINCT count(DISTINCT student.Major), count(DISTINCT student.city_code) FROM Student        "
"SELECT part_faults.fault_short_name, skills.skill_description FROM Part_Faults JOIN Skills_Required_To_Fix ON part_faults.part_fault_id = Skills_Required_To_Fix.part_fault_id JOIN Skills ON Skills_Required_To_Fix.skill_id = skills.skill_id        "
SELECT avg( flight.Velocity) FROM flight WHERE flight.Pilot = 'Thompson'       
SELECT artist.Name FROM Artist JOIN Album ON artist.ArtistId = album.ArtistId  GROUP BY artist.Name  ORDER BY count( *) DESC LIMIT 1    
"SELECT invoices.billing_state, count( *), sum( invoices.total) FROM invoices WHERE invoices.billing_state = 'CA' GROUP BY invoices.billing_state      "
"SELECT avg( storm.Damage_millions_USD), max( storm.Damage_millions_USD) FROM storm WHERE storm.Max_speed > 1000       "
SELECT count( *) FROM School        
SELECT river.river_name FROM river WHERE river.traverse = '1'       
SELECT count( *) FROM member WHERE member.Membership_card = '1'       
"SELECT customers.customer_name, customers.customer_id FROM Customers WHERE customers.customer_address like '%TN%'       "
SELECT cast.role FROM cast JOIN actor ON cast.aid = T2.aid JOIN movie WHERE movie.title = 'Daddy Long Legs'       
SELECT teachers.LastName FROM teachers JOIN list WHERE list.FirstName = 'GELL' and list.LastName = 'TAMI'       
SELECT avg( roller_coaster.Speed) FROM roller_coaster        
SELECT city.city_name FROM city WHERE city.population = (SELECT max( city.population) FROM city        )       
SELECT musical.Nominee FROM musical WHERE musical.Award = '1' or musical.Award = '1'       
SELECT addresses.address_details FROM Addresses JOIN Customer_Addresses ON addresses.address_id = customer_addresses.address_id WHERE customer_addresses.customer_id = 10       
"SELECT departments.DEPARTMENT_NAME, count( *) FROM departments JOIN employees ON departments.DEPARTMENT_ID = employees.DEPARTMENT_ID  GROUP BY departments.DEPARTMENT_NAME      "
SELECT csu_fees.CampusFee FROM csu_fees JOIN Campuses ON csu_fees.Campus = campuses.Id WHERE campuses.Campus = 'San Francisco State University' and csu_fees.Year = 1996       
"SELECT customers.customer_first_name, customers.customer_last_name FROM Customers        EXCEPT SELECT customers.customer_first_name, customers.customer_last_name FROM Customers JOIN Accounts        "
"SELECT checking.balance, savings.balance FROM CHECKING JOIN ACCOUNTS ON checking.custid = accounts.custid JOIN SAVINGS ON accounts.custid = savings.custid WHERE accounts.name = 'Brown'       "
"SELECT DISTINCT paper.paperId, paper.year FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1'    ORDER BY paper.year DESC   "
SELECT director.name FROM director JOIN directed_by ON director.did = T3.did JOIN movie WHERE movie.title = 'James Bond'       
SELECT technician.Starting_Year FROM technician    ORDER BY technician.Age DESC LIMIT 1    
SELECT count( *) FROM Club JOIN Member_of_club ON club.ClubID = Member_of_club.ClubID JOIN Student ON Member_of_club.StuID = student.StuID WHERE student.Fname = 'Linda' and student.LName = 'Smith'       
SELECT count( *) FROM csu_fees WHERE csu_fees.CampusFee > (SELECT avg( csu_fees.CampusFee) FROM csu_fees        )       
"SELECT staff.staff_id, staff.staff_name FROM Staff JOIN Staff_Department_Assignments ON staff.staff_id = staff_department_assignments.staff_id    ORDER BY staff_department_assignments.date_assigned_to ASC LIMIT 1    "
"SELECT movie.title, rating.stars, movie.director, min( rating.stars) FROM Movie JOIN Rating ON movie.mID = rating.mID  GROUP BY rating.mID      "
SELECT DISTINCT * FROM employees WHERE employees.EMPLOYEE_ID = 1       
SELECT payments.Payment_Method_Code FROM Payments  GROUP BY payments.Payment_Method_Code  ORDER BY count( *) DESC LIMIT 1    
SELECT DISTINCT count(DISTINCT movie.title) FROM cast JOIN actor ON T2.aid = actor.aid JOIN movie WHERE actor.name = 'Shahab Hosseini'       
SELECT county.County_name FROM county    ORDER BY county.Population DESC LIMIT 1    
"SELECT employees.EMPLOYEE_ID, employees.SALARY FROM employees WHERE employees.MANAGER_ID = (SELECT employees.EMPLOYEE_ID FROM employees WHERE employees.FIRST_NAME = 'Payam'       )       "
SELECT DISTINCT genres.name FROM genres        
"SELECT member.Card_Number, member.Name, member.Hometown FROM member     ORDER BY member.Level DESC   "
"SELECT attribute_definitions.attribute_name, attribute_definitions.attribute_id FROM Attribute_Definitions JOIN Catalog_Contents_Additional_Attributes WHERE catalog_contents_additional_attributes.attribute_value = '0'       "
SELECT people.Age FROM people JOIN gymnast ON people.People_ID = gymnast.Gymnast_ID     ORDER BY gymnast.Total_Points DESC   
SELECT * FROM people        
"SELECT faculty.Fname, faculty.Lname FROM Faculty JOIN Faculty_Participates_in ON faculty.FacID = Faculty_Participates_in.FacID JOIN Activity ON Faculty_Participates_in.actid = Activity.actid JOIN Participates_in ON Activity.actid = Participates_in.actid JOIN Student ON Participates_in.stuid = student.StuID WHERE student.Fname = 'Linda' and student.LName = 'Smith'       "
SELECT organization.name FROM organization JOIN author WHERE author.name = '1'       
SELECT count( *) FROM Club JOIN Member_of_club ON club.ClubID = Member_of_club.ClubID JOIN Student ON Member_of_club.StuID = student.StuID WHERE student.Fname = 'Linda' and student.LName = 'Smith'       
"SELECT team.team_id, team.rank FROM team JOIN home_game ON team.team_id = home_game.team_id WHERE home_game.year = 2014 GROUP BY home_game.team_id  ORDER BY avg( home_game.attendance) DESC LIMIT 1    "
SELECT medicine_enzyme_interaction.interaction_type FROM medicine_enzyme_interaction JOIN enzyme ON medicine_enzyme_interaction.enzyme_id = enzyme.id JOIN medicine ON medicine_enzyme_interaction.medicine_id = medicine.id WHERE enzyme.name = 'ALA synthase' and medicine.name = 'Aripiprazole'       
"SELECT airports.name, airports.city, routes.src_apid FROM airports JOIN routes ON airports.apid = routes.src_apid  GROUP BY routes.src_apid  ORDER BY count( *) DESC LIMIT 1    "
SELECT DISTINCT paper.paperId FROM paperDataset JOIN dataset JOIN paper WHERE dataset.datasetName = 'ImageNet' and paper.year = 2014       
SELECT user.name FROM user JOIN review ON user.user_id = T2.user_id  GROUP BY user.name HAVING avg( T2.rating) < 3     
SELECT customers.customer_name FROM Customers JOIN Orders ON customers.customer_id = orders.customer_id WHERE orders.order_status = 'On Road'     INTERSECT SELECT customers.customer_name FROM Customers JOIN Orders ON customers.customer_id = orders.customer_id WHERE orders.order_status = 'Shipped'         
SELECT pilot.Name FROM pilot WHERE pilot.Age <= 30    ORDER BY pilot.Name DESC   
"SELECT host.Nationality, count( *) FROM host  GROUP BY host.Nationality      "
SELECT count( *) FROM Student        
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Liwen Xiong' and paper.year = 2015       
SELECT DISTINCT grapes.Grape FROM grapes JOIN wine ON grapes.Grape = wine.Grape WHERE grapes.Color = '1' and wine.Score > 1       
SELECT min( transactions.amount_of_transaction) FROM Transactions WHERE transactions.transaction_type_code = 'PUR' and transactions.share_count > '50'       
SELECT club.name FROM club JOIN player ON club.Club_ID = player.Club_ID WHERE player.Position = 'Right Wing'       
SELECT campuses.Campus FROM Campuses WHERE campuses.Location = 'Chico'       
SELECT author.homepage FROM author WHERE author.name = '1'       
"SELECT transactions.transaction_type_code, avg( transactions.amount_of_transaction) FROM Transactions  GROUP BY transactions.transaction_type_code      "
SELECT reviewer.rID FROM Reviewer WHERE reviewer.name like '%Mike%'       
SELECT customers.customer_name FROM Customers JOIN Orders ON customers.customer_id = orders.customer_id  GROUP BY customers.customer_name  ORDER BY count( *) DESC LIMIT 1    
"SELECT customer_payments.payment_method_code, count( *) FROM Customer_Payments  GROUP BY customer_payments.payment_method_code      "
SELECT representative.Name FROM representative WHERE representative.Representative_ID NOT IN (SELECT election.Representative_ID FROM election        )       
"SELECT faculty.Fname, faculty.Lname FROM Faculty WHERE faculty.Rank = 'Instructor'       "
"SELECT manufacturers.Name, manufacturers.Headquarter FROM Manufacturers     ORDER BY manufacturers.Revenue DESC   "
SELECT count( *) FROM Person WHERE person.age > (SELECT max( person.age) FROM Person WHERE person.job = 'engineer'       )       
SELECT products_for_hire.product_name FROM Products_for_Hire JOIN View_Product_Availability ON products_for_hire.product_id = view_product_availability.product_id WHERE view_product_availability.available_yn = '1'       
SELECT DISTINCT addresses.city FROM Addresses        
"SELECT DISTINCT author.authorId, paper.paperId FROM author JOIN writes ON author.authorId = writes.authorId JOIN paper ON writes.paperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE author.authorName = '1' and key_phrase.keyphraseName = '1'       "
SELECT count( *) FROM Inst        
SELECT swimmer.name FROM swimmer JOIN record ON swimmer.ID = record.Swimmer_ID  GROUP BY swimmer.name  ORDER BY count( *) DESC LIMIT 1    
"SELECT employee.EMP_FNAME, professor.PROF_OFFICE FROM EMPLOYEE JOIN PROFESSOR ON employee.EMP_NUM = professor.EMP_NUM JOIN DEPARTMENT ON professor.DEPT_CODE = department.DEPT_CODE WHERE department.DEPT_NAME = '1' and professor.PROF_HIGH_DEGREE = '1'       "
SELECT documents.Document_ID FROM Documents JOIN Documents_with_Expenses ON documents.Document_ID = T2.Document_ID WHERE documents.Document_Name like '%s%'       
"SELECT count( *), accounts.customer_id FROM Accounts  GROUP BY accounts.customer_id      "
SELECT mountain.state_name FROM mountain WHERE mountain.mountain_altitude = (SELECT max( mountain.mountain_altitude) FROM mountain        )       
SELECT DISTINCT people.Hometown FROM people JOIN gymnast ON people.People_ID = gymnast.Gymnast_ID WHERE gymnast.Total_Points > 57.5       
SELECT count( *) FROM aircraft        
SELECT patient.Name FROM Patient        EXCEPT SELECT patient.Name FROM Patient JOIN Prescribes ON patient.SSN = Prescribes.Patient JOIN Medication ON Prescribes.Medication = medication.Code WHERE medication.Name = 'Procrastin-X'       
SELECT DISTINCT key_phrase.keyphraseId FROM keyphrase JOIN paperKeyphrase ON key_phrase.keyphraseId = paperKeyphrase.keyphraseId JOIN paper ON paperKeyphrase.paperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Luke Zettlemoyer'       
"SELECT competition.Competition_type, count( *) FROM competition  GROUP BY competition.Competition_type      "
SELECT employee.EMP_FNAME FROM EMPLOYEE WHERE employee.EMP_JOBCODE = '1'       EXCEPT SELECT employee.EMP_FNAME FROM EMPLOYEE JOIN CLASS ON employee.EMP_NUM = T3.PROF_NUM        
"SELECT document_locations.Date_in_Location_From, document_locations.Date_in_Locaton_To FROM Document_Locations JOIN All_Documents ON document_locations.Document_ID = all_documents.Document_ID WHERE all_documents.Document_Name = 'Robin CV'       "
SELECT customers.customer_status_code FROM Customers  GROUP BY customers.customer_status_code  ORDER BY count( *) ASC LIMIT 1    
SELECT district.District_name FROM district    ORDER BY district.City_Area ASC LIMIT 1    
SELECT track.Location FROM track WHERE track.Seating > 90000     INTERSECT SELECT track.Location FROM track WHERE track.Seating < 70000         
SELECT movie.title FROM movie JOIN keyword JOIN tags WHERE keyword.keyword = '1'       
SELECT building.Name FROM building WHERE building.building_id NOT IN (SELECT institution.building_id FROM Institution        )       
SELECT product_suppliers.product_id FROM Product_Suppliers JOIN Products ON product_suppliers.product_id = products.product_id WHERE product_suppliers.supplier_id = 2 and products.product_price > (SELECT avg( products.product_price) FROM Products        )       
SELECT count( *) FROM Ref_Document_Types        
SELECT count( *) FROM Rating WHERE rating.stars > 3       
SELECT customers.Customer_name FROM Customers JOIN Customers_Policies ON customers.Customer_ID = T2.Customer_ID  GROUP BY customers.Customer_name  ORDER BY count( *) DESC LIMIT 1    
SELECT farm_competition.Theme FROM farm_competition JOIN city ON farm_competition.Host_city_ID = city.City_ID WHERE city.Population > 1000       
SELECT movie.Director FROM movie WHERE movie.Year = 2000     INTERSECT SELECT movie.Director FROM movie WHERE movie.Year = 1999         
SELECT match.Match_ID FROM match WHERE match.Competition = '1994 FIFA World Cup qualification'       
SELECT movie.title FROM Movie WHERE movie.director = 'James Cameron' and movie.year > 2000       
SELECT DISTINCT cite.citingPaperId FROM cite JOIN paper ON cite.citingPaperId = T2.paperId  GROUP BY cite.citingPaperId HAVING count( cite.citedPaperId) >= 5     
SELECT bookings.Status_Code FROM Bookings  GROUP BY bookings.Status_Code  ORDER BY count( *) DESC LIMIT 1    
SELECT player.Player_name FROM player WHERE player.Player_ID NOT IN (SELECT player_coach.Player_ID FROM player_coach        )       
SELECT count( *) FROM Companies WHERE companies.Industry = 'Banking' or companies.Industry = 'Conglomerate'       
SELECT scientists.Name FROM Scientists        EXCEPT SELECT scientists.Name FROM Scientists JOIN AssignedTo ON scientists.SSN = AssignedTo.Scientist JOIN Projects ON AssignedTo.Project = projects.Code WHERE projects.Hours = (SELECT max( projects.Hours) FROM Projects        )       
"SELECT department.dept_name, department.building FROM department WHERE department.budget > (SELECT avg( department.budget) FROM department        )       "
SELECT business.name FROM business JOIN category ON business.business_id = category.business_id WHERE business.state = '1' and category.category_name = '1' and category.category_name = '1'       
SELECT song.song_name FROM song WHERE song.rating < (SELECT min( song.rating) FROM song WHERE song.languages = 'english'       )       
SELECT party.Location FROM party JOIN party_host ON party.Party_ID = party_host.Party_ID JOIN host ON party_host.Host_ID = host.Host_ID WHERE host.Age > '50'       
"SELECT musical.Nominee, count( *) FROM musical  GROUP BY musical.Nominee      "
"SELECT customers.customer_name, count( *) FROM Customers JOIN Orders ON customers.customer_id = orders.customer_id  GROUP BY customers.customer_name HAVING count( *) >= 2     "
"SELECT avg( school.Enrollment), max( school.Enrollment), min( school.Enrollment) FROM School        "
SELECT mountain.Name FROM mountain WHERE mountain.Height > 5000 or mountain.Prominence > 1000       
SELECT border_info.border FROM border_info WHERE border_info.state_name in (SELECT river.traverse FROM river WHERE river.length = (SELECT max( river.length) FROM river        )       )       
"SELECT documents.document_name, documents.access_count FROM Documents     ORDER BY documents.document_name ASC   "
SELECT teachers.LastName FROM teachers WHERE teachers.Classroom = 109       
SELECT count( *) FROM Institution WHERE institution.Institution_id NOT IN (SELECT protein.Institution_id FROM protein        )       
SELECT border_info.border FROM border_info WHERE border_info.state_name in (SELECT state.state_name FROM state WHERE state.population = (SELECT min( state.population) FROM state        )       )       
SELECT product_suppliers.product_id FROM Product_Suppliers JOIN Products ON product_suppliers.product_id = products.product_id WHERE product_suppliers.supplier_id = 2 and products.product_price > (SELECT avg( products.product_price) FROM Products        )       
"SELECT company.Rank, company.Company, company.Market_Value FROM company WHERE company.Main_Industry = 'Banking'    ORDER BY company.Sales_billion ASC   "
SELECT school.Location FROM school WHERE school.School_ID NOT IN (SELECT player.School_ID FROM player        )       
SELECT publication.title FROM publication JOIN conference ON publication.cid = conference.cid WHERE conference.name = 'VLDB' and publication.citation_num > 200       
"SELECT climber.Country, count( *) FROM climber  GROUP BY climber.Country      "
SELECT employee.eid FROM employee        EXCEPT SELECT certificate.eid FROM certificate        
SELECT apartment_buildings.building_full_name FROM Apartment_Buildings WHERE apartment_buildings.building_full_name like '%court%'       
SELECT flight.flno FROM flight JOIN aircraft ON flight.aid = aircraft.aid WHERE aircraft.name = 'Airbus A340-300'       
SELECT courses.course_name FROM Courses JOIN Student_Course_Enrolment ON courses.course_id = T2.course_id  GROUP BY courses.course_name HAVING count( *) = 1     
SELECT count( *) FROM venue        
"SELECT branch.Name, branch.City FROM branch WHERE branch.Branch_ID NOT IN (SELECT membership_register_branch.Branch_ID FROM membership_register_branch        )       "
SELECT DISTINCT count(DISTINCT business.name) FROM business JOIN category ON business.business_id = category.business_id WHERE business.state = '1' and category.category_name = '1'       
SELECT people.Name FROM people JOIN gymnast ON people.People_ID = T2.Gymnast_ID WHERE people.Hometown != 'Santo Domingo'       
SELECT constructors.name FROM constructors JOIN constructorStandings ON constructors.constructorId = constructor_standings.constructorId WHERE constructors.nationality = 'Japanese' and constructor_standings.points > 5       
"SELECT faculty.FacID, count( *) FROM Faculty JOIN Faculty_Participates_in ON faculty.FacID = Faculty_Participates_in.FacID JOIN Activity ON Faculty_Participates_in.actid = Activity.actid JOIN Participates_in ON Activity.actid = Participates_in.actid JOIN Student ON Participates_in.stuid = student.StuID  GROUP BY faculty.FacID      "
SELECT sum( lessons.lesson_time) FROM Lessons JOIN Customers ON lessons.customer_id = customers.customer_id WHERE customers.first_name = 'Rylan' and customers.last_name = 'Goodwin'       
SELECT people.Name FROM people JOIN candidate ON people.People_ID = T2.People_ID WHERE people.Sex = 'F'    ORDER BY people.Name ASC   
SELECT city.city_name FROM city WHERE city.population = (SELECT max( city.population) FROM city JOIN state ON city.state_name = T23.state_name        )       
SELECT student.StuID FROM Student WHERE student.Age = (SELECT max( student.Age) FROM Student        )       
"SELECT hotels.star_rating_code, avg( hotels.price_range) FROM Hotels  GROUP BY hotels.star_rating_code      "
SELECT count( *) FROM club        
SELECT keyword.keyword FROM keyword JOIN publication_keyword ON keyword.kid = publication_keyword.kid JOIN publication ON publication_keyword.pid = publication.pid JOIN conference ON publication.cid = conference.cid WHERE conference.name = 'VLDB'       
SELECT instructor.name FROM instructor JOIN advisor ON instructor.ID = T2.i_ID  GROUP BY instructor.name HAVING count( *) > 1     
SELECT user.name FROM user JOIN tip ON user.user_id = T2.user_id JOIN business ON T2.business_id = business.business_id JOIN category ON business.business_id = category.business_id WHERE category.category_name = 'Pet Groomers'       
"SELECT DISTINCT count(DISTINCT paper.paperId), paper.year FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1' GROUP BY paper.year      "
SELECT document_drafts.draft_details FROM Document_Drafts WHERE document_drafts.document_id = 7       
SELECT addresses.City_Town FROM Addresses JOIN Stores ON addresses.Address_ID = stores.Address_ID WHERE stores.Store_Name = 'FJA Filming'       
SELECT DISTINCT paper.venueId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Daniella Coelho'       
SELECT has_allergy.Allergy FROM Has_Allergy  GROUP BY has_allergy.Allergy  ORDER BY count( *) DESC LIMIT 1    
SELECT avg( manufacturer.Num_of_Factories) FROM manufacturer WHERE manufacturer.Num_of_Shops > 20       
"SELECT browser.id, browser.name, browser.market_share FROM browser        "
SELECT highlow.state_name FROM highlow WHERE highlow.lowest_elevation = (SELECT min( highlow.lowest_elevation) FROM highlow        )       
SELECT count( *) FROM teachers WHERE teachers.FirstName = 'LORIA' and teachers.LastName = 'ONDERSMA'       
SELECT DISTINCT count(DISTINCT review.text) FROM review JOIN business ON review.business_id = business.business_id JOIN neighbourhood ON business.business_id = neighbourhood.business_id WHERE neighbourhood.neighbourhood_name = 'South Summerlin'       
SELECT sum( salary.salary) FROM salary JOIN team WHERE team.name = 'Boston Red Stockings' and salary.year = 2010       
SELECT river.length FROM river WHERE river.river_name = '1'       
SELECT organizations.organization_name FROM Organizations JOIN Organization_Contact_Individuals ON organizations.organization_id = T3.organization_id JOIN Individuals ON T3.individual_id = individuals.individual_id  GROUP BY organizations.organization_name  ORDER BY count( *) DESC LIMIT 1    
SELECT count( *) FROM event        
SELECT student.Fname FROM Student WHERE student.Major = 600       
"SELECT DISTINCT count(DISTINCT paper.paperId), writes.authorId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN venue ON paper.venueId = venue.venueId WHERE venue.venueName = '1' GROUP BY writes.authorId   ORDER BY count( paper.paperId) DESC   "
SELECT channel.Owner FROM channel    ORDER BY channel.Rating_in_percent DESC LIMIT 1    
SELECT count( *) FROM Tryout WHERE tryout.pPos = 'goalie'       
SELECT count( border_info.border) FROM border_info WHERE border_info.state_name = '1'       
"SELECT movie.Title, movie.Director FROM movie WHERE movie.Year <= 2000   ORDER BY movie.Gross_worldwide DESC LIMIT 1    "
SELECT addresses.city FROM Addresses JOIN Customers ON addresses.address_id = customers.customer_address_id  GROUP BY addresses.city  ORDER BY count( *) DESC LIMIT 1    
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
SELECT aircraft.name FROM aircraft    ORDER BY aircraft.distance ASC LIMIT 1    
"SELECT document_locations.Location_Code, count( *) FROM Document_Locations  GROUP BY document_locations.Location_Code      "
SELECT reference_service_types.Service_Type_Description FROM Ref_Service_Types JOIN Services ON reference_service_types.Service_Type_Code = services.Service_Type_Code WHERE services.Product_Price > 100       
"SELECT customer_payments.payment_method_code, count( *) FROM Customer_Payments  GROUP BY customer_payments.payment_method_code      "
"SELECT behavior_incident.student_id, students.last_name FROM Behavior_Incident JOIN Students ON behavior_incident.student_id = students.student_id  GROUP BY behavior_incident.student_id  ORDER BY count( *) DESC LIMIT 1    "
"SELECT film.Title, film.Directed_by FROM film WHERE film.Film_ID NOT IN (SELECT schedule.Film_ID FROM schedule        )       "
SELECT customers.customer_name FROM Customers        EXCEPT SELECT customers.customer_name FROM Customers JOIN Customer_Orders ON customers.customer_id = Customer_Orders.customer_id JOIN Order_Items ON Customer_Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = products.product_id WHERE products.product_details = 'Latte'       
SELECT DISTINCT count(DISTINCT writes.paperId) FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
"SELECT driver.Name, driver.Home_city, driver.Age FROM driver        "
SELECT phone.Carrier FROM phone  GROUP BY phone.Carrier  ORDER BY count( *) DESC LIMIT 1    
SELECT count( stay.Patient) FROM Stay WHERE stay.Room = 112       
SELECT DISTINCT count(DISTINCT writes.paperId) FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
"SELECT employees.DEPARTMENT_ID, avg( employees.SALARY) FROM employees WHERE employees.COMMISSION_PCT != null GROUP BY employees.DEPARTMENT_ID      "
"SELECT faculty.Fname, faculty.Lname FROM Faculty JOIN Faculty_Participates_in ON faculty.FacID = T3.FacID JOIN Activity ON T3.actid = activity.actid  GROUP BY T3.FacID  ORDER BY count( *) DESC LIMIT 1    "
SELECT DISTINCT count(DISTINCT author.name) FROM author JOIN writes ON author.aid = writes.aid JOIN publication ON writes.pid = publication.pid JOIN conference ON publication.cid = conference.cid WHERE conference.name = 'VLDB'       
SELECT sum( purchase.Total_pounds) FROM purchase JOIN branch ON purchase.Branch_ID = branch.Branch_ID WHERE branch.City = 'London' and purchase.Year = '2018'       
SELECT customers.customer_name FROM Customers JOIN Customer_Addresses ON customers.customer_id = Customer_Addresses.customer_id JOIN Addresses ON Customer_Addresses.address_id = addresses.address_id WHERE addresses.state_province_county = 'Colorado'       
SELECT business.name FROM business JOIN category ON business.business_id = category.business_id JOIN review ON business.business_id = review.business_id JOIN user ON review.user_id = user.user_id WHERE business.city = '1' and category.category_name = '1' and user.name = '1'       
SELECT highlow.lowest_point FROM highlow JOIN state ON highlow.state_name = state.state_name WHERE state.state_name in (SELECT state.state_name FROM state WHERE state.area = (SELECT max( state.area) FROM state        )       )       
"SELECT DISTINCT count(DISTINCT student.ID), count(DISTINCT instructor.ID), instructor.dept_name FROM student JOIN department ON student.dept_name = T3.dept_name JOIN instructor ON T3.dept_name = instructor.dept_name  GROUP BY instructor.dept_name      "
SELECT problems.problem_id FROM Problems JOIN Staff ON problems.reported_by_staff_id = T2.staff_id WHERE problems.date_problem_reported < (SELECT min( problems.date_problem_reported) FROM Problems JOIN Staff ON problems.reported_by_staff_id = staff.staff_id WHERE staff.staff_first_name = 'Lysanne' and staff.staff_last_name = 'Turcotte'       )       
"SELECT count( *), postseason.year FROM postseason JOIN team WHERE team.name = 'Boston Red Stockings' GROUP BY postseason.year      "
"SELECT count( *), airports.name FROM routes JOIN airports ON routes.src_apid = airports.apid  GROUP BY airports.name   ORDER BY count( *) DESC   "
SELECT school.Location FROM school     ORDER BY school.Founded DESC   
SELECT scientists.Name FROM Scientists JOIN AssignedTo ON scientists.SSN = T2.Scientist        
"SELECT rooms.bedType, avg( rooms.basePrice) FROM Rooms  GROUP BY rooms.bedType      "
SELECT sum( home_game.games) FROM home_game JOIN team ON home_game.team_id = team.team_id WHERE team.name = 'Boston Red Stockings' and home_game.year between 1990 AND 2000       
SELECT count( *) FROM Lessons JOIN Customers ON lessons.customer_id = customers.customer_id WHERE customers.first_name = 'Ray'       
SELECT count( person_friend.friend) FROM PersonFriend JOIN Person ON person_friend.friend = person.name WHERE person.name = 'Dan'       
SELECT count( *) FROM player        
"SELECT school.School_name, budget.Budgeted, budget.Invested FROM School JOIN budget ON school.School_id = budget.School_id WHERE budget.Year >= 2002       "
"SELECT company.Company, company.Main_Industry FROM company WHERE company.Headquarters != 'USA'       "
SELECT student.Fname FROM Student WHERE student.Age > 20       
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and restaurant.NAME = '1'       "
SELECT DISTINCT count(DISTINCT broadcast.Program_ID) FROM broadcast WHERE broadcast.Time_of_day = 'Night'       
SELECT count( *) FROM editor        
SELECT faculty.Faculty FROM faculty JOIN Campuses ON faculty.Campus = campuses.Id WHERE faculty.Year = 2002 and campuses.Campus = 'Long Beach State University'       
SELECT store.Store_Name FROM store JOIN store_district ON store.Store_ID = store_district.Store_ID JOIN district ON store_district.District_ID = district.District_ID WHERE district.District_name = 'Khanewal District'       
SELECT count( *) FROM Ref_Characteristic_Types        
"SELECT DISTINCT pit_stops.driverId, pit_stops.stop FROM pitStops WHERE pit_stops.duration > (SELECT min( pit_stops.duration) FROM pitStops WHERE pit_stops.raceId = 841       )       "
"SELECT count( *), match.Competition FROM match  GROUP BY match.Competition      "
SELECT count( *) FROM College        
"SELECT exhibition.Theme, exhibition_record.Date, exhibition_record.Attendance FROM exhibition JOIN exhibition_record ON exhibition.Exhibition_ID = exhibition_record.Exhibition_ID WHERE exhibition.Year = 2004       "
SELECT teaches.ID FROM teaches WHERE teaches.semester = 'Fall' and teaches.year = 2009       EXCEPT SELECT teaches.ID FROM teaches WHERE teaches.semester = 'Spring' and teaches.year = 2010       
SELECT river.river_name FROM river  GROUP BY river.river_name  ORDER BY count( river.traverse) DESC LIMIT 1    
SELECT DISTINCT count(DISTINCT club.ClubName) FROM Club JOIN Member_of_club ON club.ClubID = Member_of_club.ClubID JOIN Student ON Member_of_club.StuID = student.StuID WHERE student.Fname = 'Eric' and student.LName = 'Tai'       
SELECT customers.Customer_name FROM Customers JOIN Customers_Policies ON customers.Customer_ID = Customers_Policies.Customer_ID JOIN First_Notification_of_Loss ON Customers_Policies.Customer_ID = First_Notification_of_Loss.Customer_ID JOIN Services ON First_Notification_of_Loss.Service_ID = services.Service_ID WHERE services.Service_name = '1'     INTERSECT SELECT customers.Customer_name FROM Customers JOIN Customers_Policies ON customers.Customer_ID = Customers_Policies.Customer_ID JOIN First_Notification_of_Loss ON Customers_Policies.Customer_ID = First_Notification_of_Loss.Customer_ID JOIN Services ON First_Notification_of_Loss.Service_ID = services.Service_ID WHERE services.Service_name = '1'         
SELECT documents_mailed.mailing_date FROM Documents_Mailed WHERE documents_mailed.document_id = 7       
SELECT state.state_name FROM state WHERE state.population = (SELECT max( state.population) FROM state        )       
"SELECT checkin.day, sum( checkin.count) FROM checkin JOIN business ON checkin.business_id = business.business_id JOIN category ON business.business_id = category.business_id WHERE business.city = '1' and category.category_name = '1' and category.category_name = '1' GROUP BY checkin.day      "
SELECT mountain.state_name FROM mountain WHERE mountain.mountain_name = '1'       
SELECT instructor.name FROM instructor JOIN department ON instructor.dept_name = department.dept_name JOIN student ON department.dept_name = student.dept_name WHERE student.dept_name = 'Math'    ORDER BY student.tot_cred ASC   
SELECT investors.Investor_details FROM Investors        
"SELECT manufacturer.Manufacturer_ID, manufacturer.Num_of_Shops FROM manufacturer JOIN furniture_manufacte ON manufacturer.Manufacturer_ID = furniture_manufacte.Manufacturer_ID    ORDER BY furniture_manufacte.Price_in_Dollar DESC LIMIT 1    "
"SELECT student.LName, student.Age FROM Student WHERE student.StuID in (SELECT has_allergy.StuID FROM Has_Allergy WHERE has_allergy.Allergy = '1'       )       "
SELECT DISTINCT paper.paperId FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 1 and venue.venueName = '1'       
"SELECT course.CRS_CREDIT, course.CRS_DESCRIPTION FROM COURSE WHERE course.CRS_CODE = 'CIS-220'       "
"SELECT head.name, head.born_state, head.age FROM head     ORDER BY head.age ASC   "
"SELECT host.Nationality, count( *) FROM host  GROUP BY host.Nationality      "
SELECT branch.City FROM branch        EXCEPT SELECT branch.City FROM branch WHERE branch.membership_amount > '100'       
SELECT river.length FROM river WHERE river.length = (SELECT max( river.length) FROM river WHERE river.traverse = '1'       ) and river.traverse = '1'       
"SELECT train.Name, train.Service FROM train     ORDER BY train.Time ASC   "
"SELECT DISTINCT cite.citedPaperId, count(DISTINCT cite.citedPaperId) FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' GROUP BY cite.citedPaperId   ORDER BY count( cite.citedPaperId) DESC   "
SELECT count( *) FROM item        
SELECT journalist.Nationality FROM journalist    ORDER BY journalist.Years_working DESC LIMIT 1    
SELECT companies.Industry FROM Companies WHERE companies.Headquarters = 'USA'     INTERSECT SELECT companies.Industry FROM Companies WHERE companies.Headquarters = 'China'         
SELECT branch.City FROM branch        EXCEPT SELECT branch.City FROM branch WHERE branch.membership_amount > '100'       
SELECT claims.Effective_Date FROM Claims JOIN Settlements ON claims.Claim_ID = settlements.Claim_ID  GROUP BY claims.Effective_Date  ORDER BY sum( settlements.Settlement_Amount) DESC LIMIT 1    
SELECT elimination.Time FROM Elimination JOIN wrestler ON elimination.Wrestler_ID = wrestler.Wrestler_ID    ORDER BY wrestler.Days_held DESC LIMIT 1    
SELECT count( *) FROM Assessment_Notes        
SELECT city.population FROM city WHERE city.city_name = '1'       
SELECT DISTINCT count(DISTINCT products_for_hire.product_type_code) FROM Products_for_Hire        
SELECT state.population FROM state WHERE state.state_name = '1'       
SELECT river.traverse FROM river WHERE river.river_name = '1'       
SELECT count( *) FROM regions        
SELECT sum( savings.balance) FROM SAVINGS JOIN ACCOUNTS ON savings.custid = accounts.custid WHERE accounts.name != 'Brown'       
SELECT DISTINCT products.product_color FROM Products        
SELECT customer.cust_name FROM customer    ORDER BY customer.credit_score ASC LIMIT 1    
SELECT river.river_name FROM river WHERE river.traverse = '1'       
"SELECT flight.flno, flight.origin, flight.destination FROM flight     ORDER BY flight.origin ASC   "
"SELECT DISTINCT count(DISTINCT paper.paperId), writes.authorId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' GROUP BY writes.authorId   ORDER BY count( paper.paperId) DESC   "
"SELECT assessment_notes.teacher_id, teachers.first_name FROM Assessment_Notes JOIN Teachers ON assessment_notes.teacher_id = teachers.teacher_id  GROUP BY assessment_notes.teacher_id  ORDER BY count( *) DESC LIMIT 1    "
"SELECT DISTINCT count(DISTINCT paper.paperId), writes.authorId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' GROUP BY writes.authorId   ORDER BY count( paper.paperId) DESC   "
SELECT tourist_attractions.Name FROM Tourist_Attractions JOIN Visits ON tourist_attractions.Tourist_Attraction_ID = Visits.Tourist_Attraction_ID JOIN Visitors ON Visits.Tourist_ID = visitors.Tourist_ID WHERE visitors.Tourist_Details = 'Vincent'     INTERSECT SELECT tourist_attractions.Name FROM Tourist_Attractions JOIN Visits ON tourist_attractions.Tourist_Attraction_ID = Visits.Tourist_Attraction_ID JOIN Visitors ON Visits.Tourist_ID = visitors.Tourist_ID WHERE visitors.Tourist_Details = 'Marcelle'         
SELECT student.Fname FROM Student     ORDER BY student.Age DESC   
SELECT publication.year FROM publication WHERE publication.title = '1'       
SELECT artwork.Name FROM artwork     ORDER BY artwork.Name ASC   
SELECT cinema.Location FROM cinema WHERE cinema.Capacity > 300 GROUP BY cinema.Location HAVING count( *) > 1     
SELECT count( *) FROM csu_fees WHERE csu_fees.CampusFee > (SELECT avg( csu_fees.CampusFee) FROM csu_fees        )       
SELECT city.state_name FROM city WHERE city.city_name = '1'       
"SELECT technician.Team, technician.Starting_Year FROM technician        "
SELECT * FROM swimmer        
SELECT rating.mID FROM Rating        EXCEPT SELECT rating.mID FROM Rating JOIN Reviewer ON rating.rID = reviewer.rID WHERE reviewer.name = 'Brittany Harris'       
SELECT artist.Famous_Release_date FROM artist    ORDER BY artist.Age DESC LIMIT 1    
SELECT sum( loan.amount) FROM loan JOIN bank ON loan.branch_ID = bank.branch_ID WHERE bank.state = 'New York'       
SELECT projects.Project_Details FROM Projects JOIN Documents ON projects.Project_ID = documents.Project_ID WHERE documents.Document_Name = 'King Book'       
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = geographic.CITY_NAME JOIN RESTAURANT ON geographic.CITY_NAME = restaurant.CITY_NAME WHERE geographic.REGION = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT DISTINCT instruments.Instrument FROM Instruments        
"SELECT count( *), people.Sex FROM people WHERE people.Weight > 85 GROUP BY people.Sex      "
SELECT airports.city FROM airports WHERE airports.country = 'United States' GROUP BY airports.city HAVING count( *) > 3     
SELECT playlists.name FROM playlists JOIN playlist_tracks ON playlists.id = T2.playlist_id  GROUP BY playlists.name HAVING count( T2.track_id) > 100     
SELECT DISTINCT products.product_size FROM Products        
"SELECT employees.SALARY, employees.MANAGER_ID FROM employees WHERE employees.MANAGER_ID != 1       "
SELECT salary.salary FROM salary WHERE salary.year = 2010      UNION SELECT salary.salary FROM salary WHERE salary.year = 2001        
SELECT customers.Customer_Details FROM Customers       UNION SELECT staff.Staff_Details FROM Staff         
"SELECT DISTINCT paper.paperId, paper.year FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1'    ORDER BY paper.year DESC   "
SELECT avg( wine.Price) FROM wine WHERE wine.Appelation NOT IN (SELECT appellations.Appelation FROM appellations JOIN wine ON appellations.Appelation = T23.Appelation WHERE appellations.County = 'Sonoma'       )       
SELECT DISTINCT writes.paperId FROM writes JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Peter Mertens' and author.authorName = 'Dina Barbian'       
"SELECT technician.Team, count( *) FROM technician  GROUP BY technician.Team      "
SELECT activity.activity_name FROM Activity        
SELECT publication.title FROM publication JOIN writes ON publication.pid = writes.pid JOIN author ON writes.aid = author.aid JOIN conference ON publication.cid = conference.cid WHERE author.name = '1' and conference.name = '1'       
SELECT state.area FROM state WHERE state.state_name = '1'       
SELECT DISTINCT match_season.Position FROM match_season WHERE match_season.College = 'UCLA' or match_season.College = 'Duke'       
SELECT DISTINCT author.authorId FROM author JOIN writes ON author.authorId = writes.authorId JOIN paper ON writes.paperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE author.authorName = 'Philipp Koehn' and key_phrase.keyphraseName = 'Machine Translation Output'       
SELECT count( *) FROM driver        
SELECT student.city_code FROM Student WHERE student.LName = 'Kim'       
"SELECT order_items.order_id, sum( order_items.product_quantity) FROM Order_Items  GROUP BY order_items.order_id      "
SELECT documents.document_name FROM Documents  GROUP BY documents.document_name  ORDER BY count( *) DESC LIMIT 1  INTERSECT SELECT documents.document_name FROM Documents  GROUP BY documents.document_name  ORDER BY count( *) DESC LIMIT 1      
SELECT river.river_name FROM river JOIN state ON river.traverse = state.state_name JOIN highlow ON state.state_name = highlow.state_name WHERE highlow.highest_elevation = (SELECT max( highlow.highest_elevation) FROM highlow        )   ORDER BY river.length DESC LIMIT 1    
SELECT wine.Appelation FROM wine WHERE wine.Year > 2008       EXCEPT SELECT appellations.Appelation FROM appellations WHERE appellations.Area = 'Central Coast'       
SELECT count( *) FROM buildings        
SELECT count( *) FROM enzyme        
"SELECT DISTINCT cite.citedPaperId, count(DISTINCT cite.citingPaperId) FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = 'Artificial Intelligence' GROUP BY cite.citedPaperId   ORDER BY count( cite.citingPaperId) DESC   "
SELECT problems.product_id FROM Problems JOIN Staff ON problems.reported_by_staff_id = staff.staff_id WHERE staff.staff_first_name = 'Dameon' and staff.staff_last_name = 'Frami'      UNION SELECT problems.product_id FROM Problems JOIN Staff ON problems.reported_by_staff_id = staff.staff_id WHERE staff.staff_first_name = 'Jolie' and staff.staff_last_name = 'Weber'        
SELECT branch.City FROM branch WHERE branch.Open_year = '2001' and branch.membership_amount > '100'       
SELECT publication.title FROM publication JOIN writes ON publication.pid = writes.pid JOIN author ON writes.aid = author.aid WHERE author.name = '1' and author.name = '1' and publication.year < 1       
SELECT count( *) FROM Ref_Characteristic_Types        
SELECT avg( student.Age) FROM Student JOIN Voting_record ON student.StuID = voting_record.Class_Senator_Vote WHERE student.city_code = 'NYC' and voting_record.Election_Cycle = 'Spring'       
"SELECT staff.first_name, staff.last_name FROM Staff JOIN Addresses ON staff.staff_address_id = addresses.address_id WHERE addresses.city = 'Damianfort'       "
SELECT DISTINCT paper.journalId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = 'Temporal Data'       
"SELECT employee.FirstName, employee.LastName FROM Employee WHERE employee.City = 'Calgary'       "
SELECT people.Name FROM people WHERE people.People_ID NOT IN (SELECT candidate.People_ID FROM candidate        )       
"SELECT architect.id, architect.name FROM architect JOIN bridge ON architect.id = T2.architect_id  GROUP BY T2.architect_id HAVING count( *) >= 3     "
"SELECT region.Region_code, region.Region_name FROM region     ORDER BY region.Region_code ASC   "
SELECT organizations.organization_name FROM Organizations WHERE organizations.organization_name like '%Party%'       
SELECT DISTINCT count(DISTINCT rooms.bedType) FROM Rooms        
SELECT lessons.lesson_id FROM Lessons JOIN Staff ON lessons.staff_id = staff.staff_id WHERE staff.first_name = 'Janessa' and staff.last_name = 'Sawayn' and staff.nickname like '%s%'       
SELECT accounts.name FROM ACCOUNTS JOIN SAVINGS ON accounts.custid = T2.custid JOIN CHECKING ON accounts.custid = checking.custid WHERE checking.balance > 1       
SELECT candidate_assessments.candidate_id FROM Candidate_Assessments    ORDER BY candidate_assessments.assessment_date DESC LIMIT 1    
"SELECT medicine.id, medicine.Trade_Name FROM medicine JOIN medicine_enzyme_interaction ON medicine.id = T2.medicine_id  GROUP BY medicine.id HAVING count( *) >= 3     "
"SELECT injury_accident.Player, injury_accident.Number_of_matches, injury_accident.Source FROM injury_accident WHERE injury_accident.Injury != 'Knee problem'       "
SELECT city.Status FROM city  GROUP BY city.Status  ORDER BY count( *) DESC LIMIT 1    
SELECT parties.payment_method_code FROM Parties  GROUP BY parties.payment_method_code HAVING count( *) > 3     
SELECT DISTINCT paper.venueId FROM paper WHERE paper.year = 2013       
SELECT city.state_name FROM city WHERE city.city_name = '1'       
SELECT patient.Name FROM Patient        EXCEPT SELECT patient.Name FROM Patient JOIN Prescribes ON patient.SSN = Prescribes.Patient JOIN Medication ON Prescribes.Medication = medication.Code WHERE medication.Name = 'Procrastin-X'       
"SELECT invoices.invoice_number, invoices.invoice_date FROM Invoices JOIN Financial_Transactions ON invoices.invoice_number = financial_transactions.invoice_number  GROUP BY financial_transactions.invoice_number  ORDER BY count( *) DESC LIMIT 1    "
SELECT DISTINCT count(DISTINCT member_of_club.Position) FROM Member_of_club JOIN Club ON member_of_club.ClubID = club.ClubID WHERE club.ClubName = 'Bootup Baltimore'       
SELECT staff.Name FROM Staff JOIN Tourist_Attractions ON staff.Tourist_Attraction_ID = tourist_attractions.Tourist_Attraction_ID WHERE tourist_attractions.Name = 'US museum'       
SELECT cmi_cross_references.cmi_cross_ref_id FROM CMI_Cross_References        EXCEPT SELECT parking_fines.cmi_cross_ref_id FROM Parking_Fines        
"SELECT student.Fname, student.Major FROM Student WHERE student.StuID NOT IN (SELECT has_allergy.StuID FROM Has_Allergy WHERE has_allergy.Allergy = '1'       )       "
SELECT DISTINCT count(DISTINCT publication.title) FROM publication JOIN writes ON publication.pid = writes.pid JOIN author ON writes.aid = author.aid WHERE author.name = '1' and author.name = '1'       
SELECT count( person_friend.friend) FROM PersonFriend JOIN Person ON person_friend.friend = person.name WHERE person.name = 'Dan'       
"SELECT apartment_bookings.booking_status_code, count( *) FROM Apartment_Bookings  GROUP BY apartment_bookings.booking_status_code      "
SELECT aircraft.name FROM aircraft JOIN certificate ON aircraft.aid = T2.aid  GROUP BY aircraft.name  ORDER BY count( *) DESC LIMIT 1    
SELECT avg( student.Age) FROM Student JOIN Voting_record ON student.StuID = voting_record.Class_Senator_Vote WHERE student.city_code = 'NYC' and voting_record.Election_Cycle = 'Spring'       
"SELECT faculty.Fname, faculty.Lname FROM Faculty JOIN Faculty_Participates_in ON faculty.FacID = Faculty_Participates_in.FacID JOIN Activity ON Faculty_Participates_in.actid = Activity.actid JOIN Participates_in ON Activity.actid = Participates_in.actid JOIN Student ON Participates_in.stuid = student.StuID WHERE student.Fname = 'Linda' and student.LName = 'Smith'       "
"SELECT count( *), postseason.year FROM postseason JOIN team WHERE team.name = 'Boston Red Stockings' GROUP BY postseason.year      "
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1' and paper.year > 1       
SELECT storm.Name FROM storm        EXCEPT SELECT storm.Name FROM storm JOIN affected_region ON storm.Storm_ID = T3.Storm_ID  GROUP BY storm.Name HAVING count( *) >= 2     
"SELECT film_market_estimation.Low_Estimate, film_market_estimation.High_Estimate FROM film_market_estimation        "
SELECT player.Player_name FROM player    ORDER BY player.Votes DESC LIMIT 1    
SELECT submission.Author FROM submission WHERE submission.Submission_ID NOT IN (SELECT acceptance.Submission_ID FROM Acceptance        )       
SELECT state.state_name FROM state WHERE state.state_name in (SELECT border_info.border FROM border_info WHERE border_info.state_name = '1'       )   ORDER BY state.population DESC LIMIT 1    
SELECT count( *) FROM architect        
"SELECT useracct.name, count( *) FROM useracct JOIN review ON useracct.u_id = review.u_id  GROUP BY useracct.name      "
SELECT count( river.river_name) FROM river WHERE river.traverse = '1'       
SELECT match_season.Player FROM match_season     ORDER BY match_season.College ASC   
"SELECT university.School, university.Location FROM university WHERE university.Affiliation = '1'       "
"SELECT musical.Nominee, count( *) FROM musical  GROUP BY musical.Nominee      "
SELECT actor.name FROM actor WHERE actor.birth_city = 'Tehran'       
SELECT neighbourhood.neighbourhood_name FROM neighbourhood JOIN business ON neighbourhood.business_id = business.business_id JOIN category ON business.business_id = category.business_id WHERE business.name = '1' and category.category_name = '1'       
SELECT count( *) FROM airports        
"SELECT tourist_attractions.How_to_Get_There, count( *) FROM Tourist_Attractions  GROUP BY tourist_attractions.How_to_Get_There      "
SELECT ship.Name FROM ship    ORDER BY ship.Tonnage DESC LIMIT 1    
SELECT device.Carrier FROM device JOIN stock ON device.Device_ID = T2.Device_ID  GROUP BY device.Carrier HAVING count( *) > 1     
SELECT author.name FROM author JOIN writes ON author.aid = writes.aid JOIN publication ON writes.pid = publication.pid JOIN organization WHERE T3.name = '1' GROUP BY author.name  ORDER BY sum( publication.citation_num) DESC LIMIT 1    
SELECT DISTINCT invoice.BillingCountry FROM Invoice        
SELECT volume.Issue_Date FROM volume    ORDER BY volume.Weeks_on_Top ASC LIMIT 1    
SELECT publication.title FROM publication JOIN writes ON publication.pid = writes.pid JOIN author ON writes.aid = author.aid JOIN conference ON publication.cid = conference.cid WHERE author.name = '1' and conference.name = '1' and publication.citation_num > 1       
SELECT undergoes.Patient FROM Undergoes    ORDER BY undergoes.DateUndergoes ASC LIMIT 1    
SELECT count( *) FROM albums JOIN artists ON albums.artist_id = sqlite_sequence.id WHERE sqlite_sequence.name = 'Billy Cobham'       
"SELECT products.product_name, count( *) FROM Products JOIN Order_Items ON products.product_id = order_items.product_id JOIN Orders ON order_items.order_id = T4.order_id JOIN Customers ON T4.customer_id = customers.customer_id  GROUP BY products.product_name      "
SELECT highlow.highest_point FROM highlow WHERE highlow.highest_elevation = (SELECT max( highlow.highest_elevation) FROM highlow        )       
SELECT song.languages FROM song  GROUP BY song.languages  ORDER BY count( *) DESC LIMIT 1    
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = geographic.CITY_NAME JOIN RESTAURANT ON geographic.CITY_NAME = restaurant.CITY_NAME WHERE geographic.REGION = '1' and restaurant.FOOD_TYPE = '1'       "
SELECT wine.Winery FROM wine JOIN grapes ON wine.Grape = grapes.Grape WHERE grapes.Color = '1' GROUP BY wine.Winery  ORDER BY count( *) DESC LIMIT 1    
SELECT staff.first_name FROM Staff JOIN Complaints ON staff.staff_id = complaints.staff_id  GROUP BY staff.first_name  ORDER BY count( *) ASC LIMIT 1    
SELECT DISTINCT count(DISTINCT movie.Director) FROM movie        
SELECT DISTINCT lots.lot_details FROM Lots        
"SELECT max( farm.Cows), min( farm.Cows) FROM farm        "
SELECT school.Location FROM school JOIN player ON school.School_ID = T2.School_ID  GROUP BY school.Location HAVING count( *) > 1     
SELECT people.Name FROM people JOIN entrepreneur ON people.People_ID = T2.People_ID    ORDER BY people.Weight DESC LIMIT 1    
"SELECT max( chip_model.RAM_MiB), min( chip_model.RAM_MiB) FROM chip_model JOIN phone ON chip_model.Model_name = phone.chip_model WHERE phone.Company_name = 'Nokia Corporation'       "
"SELECT customers.customer_id, customers.customer_first_name FROM Customers        EXCEPT SELECT customers_cards.customer_id, customers.customer_first_name FROM Customers JOIN Customers_Cards WHERE customers_cards.card_type_code = 'Credit'       "
SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name = '1'       
SELECT count( *) FROM Students JOIN Student_Course_Registrations ON students.student_id = Student_Course_Registrations.student_id JOIN Courses ON Student_Course_Registrations.course_id = courses.course_id WHERE courses.course_name = 'English'       
SELECT people.Name FROM people     ORDER BY people.Date_of_Birth ASC   
SELECT count( *) FROM GEOGRAPHIC        
SELECT DISTINCT writes.paperId FROM writes JOIN paper ON writes.paperId = paper.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'    ORDER BY paper.year DESC   
SELECT DISTINCT count(DISTINCT medicine.FDA_approved) FROM medicine        
SELECT river.river_name FROM river WHERE river.traverse = '1'       
"SELECT count( *), product.product_name FROM Problems JOIN Product ON problems.product_id = product.product_id  GROUP BY product.product_name  ORDER BY count( *) DESC LIMIT 1    "
"SELECT wrestler.Reign, wrestler.Days_held FROM wrestler        "
SELECT highlow.highest_elevation FROM highlow WHERE highlow.highest_point = '1'       
SELECT * FROM employees WHERE employees.HIRE_DATE > '1987-09-07'       
"SELECT sum( storm.Number_Deaths), sum( storm.Damage_millions_USD) FROM storm WHERE storm.Max_speed > (SELECT avg( storm.Max_speed) FROM storm        )       "
SELECT DISTINCT movie.title FROM Movie        EXCEPT SELECT movie.title FROM Movie JOIN Rating ON movie.mID = Rating.mID JOIN Reviewer ON Rating.rID = reviewer.rID WHERE reviewer.name = 'Chris Jackson'       
SELECT DISTINCT writes.authorId FROM writes JOIN paper ON writes.paperId = paper.paperId JOIN venue ON paper.venueId = venue.venueId WHERE venue.venueName = 'NIPS'       
SELECT physician.Name FROM Physician WHERE physician.Position like '%senior%'       
SELECT DISTINCT count(DISTINCT injury_accident.Source) FROM injury_accident        
SELECT station.name FROM station WHERE station.city = 'Palo Alto'       EXCEPT SELECT trip.end_station_name FROM trip JOIN station  GROUP BY trip.end_station_name HAVING count( *) > 100     
SELECT neighbourhood.neighbourhood_name FROM neighbourhood JOIN business ON neighbourhood.business_id = business.business_id WHERE business.city = 'Madison' GROUP BY neighbourhood.neighbourhood_name  ORDER BY count( business.name) DESC LIMIT 1    
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 1 and venue.venueName = '1'       
SELECT state.state_name FROM state WHERE state.area = (SELECT min( state.area) FROM state        )       
SELECT company.Headquarters FROM company        EXCEPT SELECT company.Headquarters FROM company WHERE company.Main_Industry = 'Banking'       
SELECT person.name FROM Person WHERE person.gender = 'male' and person.age = (SELECT min( person.age) FROM Person WHERE person.gender = 'male'       )       
SELECT count( *) FROM venue        
SELECT rooms.decor FROM Rooms WHERE rooms.roomName = 'Recluse and defiance'       
SELECT actor.Name FROM actor     ORDER BY actor.Name ASC   
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId JOIN venue ON paper.venueId = venue.venueId WHERE key_phrase.keyphraseName = 'TAIL' and venue.venueName = 'NIPS'       
SELECT aircraft.name FROM aircraft WHERE aircraft.distance > (SELECT avg( aircraft.distance) FROM aircraft        )       
SELECT DISTINCT student.Fname FROM Student        
"SELECT avg( instructor.salary), count( *) FROM instructor JOIN department ON instructor.dept_name = department.dept_name    ORDER BY department.budget DESC LIMIT 1    "
"SELECT drama_workshop_groups.Store_Phone, drama_workshop_groups.Store_Email_Address FROM Drama_Workshop_Groups JOIN Services ON drama_workshop_groups.Workshop_Group_ID = services.Workshop_Group_ID WHERE services.Product_Name = 'film'       "
SELECT city.Name FROM city WHERE city.County_ID = (SELECT county_public_safety.County_ID FROM county_public_safety    ORDER BY county_public_safety.Police_officers DESC LIMIT 1    )       
"SELECT products.product_type_code, max( products.product_price), min( products.product_price) FROM Products  GROUP BY products.product_type_code      "
SELECT student.StuID FROM Student WHERE student.Sex = 'F'     INTERSECT SELECT sports_info.StuID FROM SportsInfo WHERE sports_info.SportName = 'Football'         
SELECT drama_workshop_groups.Store_Name FROM Drama_Workshop_Groups        
"SELECT film.Title, film.Studio FROM film WHERE film.Studio like '%Universal%'       "
"SELECT avg( student.Age), student.Sex FROM Student  GROUP BY student.Sex      "
"SELECT products.product_name, count( *) FROM Products  GROUP BY products.product_name      "
SELECT documents.Document_Type_Code FROM Documents  GROUP BY documents.Document_Type_Code  ORDER BY count( *) DESC LIMIT 1    
SELECT DISTINCT student.LName FROM Student JOIN Voting_record ON student.StuID = T2.Class_Senator_Vote        
SELECT party.Party FROM party JOIN election ON party.Party_ID = T2.Party  GROUP BY party.Party  ORDER BY count( *) DESC LIMIT 1    
SELECT railway.Builder FROM railway JOIN train ON railway.Railway_ID = train.Railway_ID WHERE train.Name = 'Andaman Exp'       
SELECT editor.Name FROM editor JOIN journal_committee ON editor.Editor_ID = journal_committee.Editor_ID JOIN journal ON journal_committee.Journal_ID = journal.Journal_ID WHERE journal.Sales > 3000       
SELECT companies.name FROM Companies     ORDER BY companies.Market_Value_billion DESC   
"SELECT cinema.Name, cinema.Location FROM cinema    ORDER BY cinema.Capacity DESC LIMIT 1    "
SELECT university.Founded FROM university WHERE university.Affiliation != 'Public'   ORDER BY university.Founded DESC LIMIT 1    
"SELECT employees.FIRST_NAME, employees.LAST_NAME, employees.HIRE_DATE, employees.SALARY, employees.DEPARTMENT_ID FROM employees WHERE employees.FIRST_NAME not_like 'M'       "
SELECT farm.Total_Horses FROM farm     ORDER BY farm.Total_Horses ASC   
SELECT city.city_name FROM city WHERE city.population = (SELECT max( city.population) FROM city WHERE city.state_name = '1'       ) and city.state_name = '1'       
"SELECT students.student_id, count( *) FROM Students JOIN Student_Course_Registrations ON students.student_id = Student_Course_Registrations.student_id JOIN Courses ON Student_Course_Registrations.course_id = courses.course_id  GROUP BY students.student_id      "
"SELECT faculty.Rank, faculty.Fname, faculty.Lname FROM Faculty        "
"SELECT count( *), class.CLASS_ROOM FROM CLASS  GROUP BY class.CLASS_ROOM HAVING count( *) >= 2     "
SELECT DISTINCT wine.Winery FROM wine WHERE wine.Price between 50 AND 100       
SELECT state.state_name FROM state        
SELECT * FROM people        
SELECT count( paper.paperId) FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
SELECT ship.Type FROM ship  GROUP BY ship.Type  ORDER BY count( *) DESC LIMIT 1    
SELECT employee.name FROM employee JOIN certificate ON employee.eid = certificate.eid JOIN aircraft ON certificate.aid = aircraft.aid WHERE aircraft.name = 'Boeing 737-800'     INTERSECT SELECT employee.name FROM employee JOIN certificate ON employee.eid = certificate.eid JOIN aircraft ON certificate.aid = aircraft.aid WHERE aircraft.name = 'Airbus A340-300'         
SELECT movie.release_year FROM movie WHERE movie.title = 'The Imitation Game'       
SELECT count( *) FROM venue        
SELECT phone.Carrier FROM phone WHERE phone.Memory_in_G < 32     INTERSECT SELECT phone.Carrier FROM phone WHERE phone.Memory_in_G > 64         
"SELECT player.Player_name, player.Residence FROM player WHERE player.Occupation != 'Researcher'       "
SELECT papers.title FROM Papers JOIN Authorship ON papers.paperID = authorship_count.paperID WHERE authorship_count.authOrder = (SELECT max( authorship_count.authOrder) FROM Authorship        )       
SELECT count( *) FROM park WHERE park.state = 'NY'       
SELECT avg( companies.Profits_billion) FROM Companies        
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1'       "
"SELECT student.Fname, student.LName FROM Student JOIN SportsInfo ON student.StuID = sports_info.StuID  GROUP BY sports_info.StuID  ORDER BY count( *) DESC LIMIT 1    "
SELECT count( *) FROM city JOIN country ON city.country_id = country.country_id WHERE country.country = 'Australia'       
SELECT reservations.Kids FROM Reservations WHERE reservations.CheckIn = '2010-09-21' and reservations.FirstName = 'DAMIEN' and reservations.LastName = 'TRACHSEL'       
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 1 and venue.venueName = '1'       
SELECT staff.date_of_birth FROM Staff WHERE staff.first_name = 'Janessa' and staff.last_name = 'Sawayn'       
"SELECT restaurant.ResName, restaurant.Rating FROM Restaurant    ORDER BY restaurant.Rating DESC LIMIT 1    "
"SELECT department_stores.dept_store_id, department_stores.store_name FROM Department_Stores JOIN Departments ON department_stores.dept_store_id = departments.dept_store_id WHERE departments.department_name = '1'     INTERSECT SELECT department_stores.dept_store_id, department_stores.store_name FROM Department_Stores JOIN Departments ON department_stores.dept_store_id = departments.dept_store_id WHERE departments.department_name = '1'         "
"SELECT people.Name, people.Sex, min( candidate.Oppose_rate) FROM people JOIN candidate ON people.People_ID = candidate.People_ID  GROUP BY candidate.People_ID      "
SELECT campuses.Campus FROM Campuses WHERE campuses.Year = 1958       
SELECT airport.Country FROM airport  GROUP BY airport.Country HAVING count( *) > 2     
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId JOIN venue ON paper.venueId = venue.venueId WHERE author.authorName = '1' and venue.venueName = '1'       
SELECT DISTINCT journal.Theme FROM journal        
SELECT highlow.highest_point FROM highlow        
SELECT member.Member_Name FROM member        EXCEPT SELECT member.Member_Name FROM member JOIN party_events ON member.Member_ID = T3.Member_in_charge_ID        
SELECT student_course_attendance.student_id FROM Student_Course_Attendance JOIN Student_Course_Registrations ON student_course_attendance.student_id = Student_Course_Registrations.student_id JOIN Courses ON Student_Course_Registrations.course_id = courses.course_id WHERE courses.course_name = 'statistics'    ORDER BY student_course_attendance.date_of_attendance ASC   
SELECT DISTINCT visits.Visit_Date FROM Visits        
SELECT river.river_name FROM river WHERE river.length = (SELECT max( river.length) FROM river        )       
SELECT stadium.Country FROM stadium  GROUP BY stadium.Country  ORDER BY count( *) DESC LIMIT 1    
SELECT author.name FROM author JOIN writes ON author.aid = writes.aid JOIN publication ON writes.pid = publication.pid JOIN conference ON publication.cid = conference.cid WHERE conference.name = 'VLDB' and publication.year < 2002       
SELECT count( *) FROM Products JOIN Ref_Colors ON products.color_code = reference_colors.color_code JOIN Product_Characteristics ON products.product_id = Product_Characteristics.product_id JOIN Characteristics ON Product_Characteristics.characteristic_id = characteristics.characteristic_id WHERE reference_colors.color_description = 'red' and characteristics.characteristic_name = 'slow'       
SELECT river.traverse FROM river WHERE river.length = (SELECT max( river.length) FROM river        )       
SELECT section.course_id FROM section WHERE section.semester = '1' and section.year = 1       EXCEPT SELECT section.course_id FROM section WHERE section.semester = '1' and section.year = 1       
SELECT customer.cust_name FROM customer WHERE customer.acc_type = '1'     INTERSECT SELECT customer.cust_name FROM customer WHERE customer.acc_type = '1'         
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId JOIN venue ON paper.venueId = venue.venueId WHERE author.authorName = '1' and venue.venueName = '1'       
SELECT documents.document_type_code FROM Documents  GROUP BY documents.document_type_code HAVING count( *) > 1     
SELECT count( *) FROM Member_of_club JOIN Club ON member_of_club.ClubID = club.ClubID JOIN Student ON member_of_club.StuID = student.StuID WHERE club.ClubName = 'Bootup Baltimore' and student.Age < 18       
SELECT class.CLASS_CODE FROM CLASS WHERE class.CLASS_ROOM = 'KLR209'       
SELECT count( *) FROM Physician        
SELECT DISTINCT documents_to_be_destroyed.Destruction_Authorised_by_Employee_ID FROM Documents_to_be_Destroyed        
SELECT state.population FROM state WHERE state.state_name in (SELECT river.traverse FROM river WHERE river.river_name = '1'       )       
"SELECT airlines.name, routes.alid FROM airlines JOIN routes ON airlines.alid = routes.alid  GROUP BY routes.alid  ORDER BY count( *) DESC LIMIT 1    "
SELECT DISTINCT count(DISTINCT channel.Owner) FROM channel        
"SELECT DISTINCT paper.paperId, paper.year FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1'    ORDER BY paper.year DESC   "
"SELECT employees.FIRST_NAME, employees.LAST_NAME, employees.SALARY FROM employees WHERE employees.COMMISSION_PCT = null       "
SELECT DISTINCT product.product_name FROM Product     ORDER BY product.product_id ASC   
"SELECT employee.EMP_LNAME, employee.EMP_HIREDATE FROM EMPLOYEE JOIN PROFESSOR ON employee.EMP_NUM = professor.EMP_NUM WHERE professor.PROF_OFFICE = 'DRE 102'       "
"SELECT parts.part_name, count( *) FROM Parts JOIN Asset_Parts ON parts.part_id = Asset_Parts.part_id JOIN Assets ON Asset_Parts.asset_id = assets.asset_id  GROUP BY parts.part_name      "
SELECT count( *) FROM venue        
"SELECT customer.cust_name, customer.acc_type, customer.acc_bal FROM customer    ORDER BY customer.credit_score DESC LIMIT 1    "
"SELECT hotels.other_hotel_details, hotels.star_rating_code FROM Hotels    ORDER BY hotels.price_range ASC LIMIT 1    "
SELECT avg( airport.International_Passengers) FROM airport        
SELECT courses.course_description FROM Courses WHERE courses.course_name = 'database'       
SELECT companies.Headquarters FROM Companies  GROUP BY companies.Headquarters HAVING count( *) > 2     
"SELECT settlements.Date_Claim_Made, settlements.Date_Claim_Settled FROM Settlements        "
SELECT restaurant.ResName FROM Restaurant        
SELECT weather.zip_code FROM weather  GROUP BY weather.zip_code HAVING avg( weather.mean_visibility_miles) < 10     
"SELECT publication.year, sum( publication.citation_num) FROM publication JOIN conference ON publication.cid = conference.cid WHERE conference.name = 'VLDB' GROUP BY publication.year      "
SELECT count( *) FROM Rooms        
SELECT faculty.Building FROM Faculty JOIN Course ON faculty.FacID = course.Instructor  GROUP BY faculty.Building  ORDER BY count( *) DESC LIMIT 1    
SELECT order_items.product_id FROM Order_Items  GROUP BY order_items.product_id HAVING count( *) > 3    UNION SELECT product_suppliers.product_id FROM Product_Suppliers  GROUP BY product_suppliers.product_id HAVING sum( product_suppliers.total_amount_purchased) > '80000'      
"SELECT reviewer.name, avg( rating.stars) FROM Reviewer JOIN Rating ON reviewer.rID = rating.rID  GROUP BY reviewer.name      "
"SELECT teachers.FirstName, teachers.LastName FROM teachers JOIN list  GROUP BY teachers.LastName  ORDER BY count( *) DESC LIMIT 1    "
"SELECT student.Fname, student.LName FROM Student JOIN Member_of_club ON student.StuID = member_of_club.StuID JOIN Club ON member_of_club.ClubID = club.ClubID WHERE club.ClubName = 'Bootup Baltimore' and member_of_club.Position = 'President'       "
SELECT DISTINCT count(DISTINCT actor.last_name) FROM actor        
SELECT actor.name FROM actor WHERE actor.nationality = 'Afghanistan'       
SELECT policies.Policy_Type_Code FROM Policies JOIN Customers ON policies.Customer_ID = customers.Customer_ID WHERE customers.Customer_Details = 'Dayana Robel'       
SELECT avg( csu_fees.CampusFee) FROM csu_fees WHERE csu_fees.Year = 1996       
"SELECT election.Delegate, county.County_name FROM election JOIN county ON election.District = county.County_Id        "
SELECT business.city FROM business JOIN category ON business.business_id = category.business_id WHERE business.name = '1' and business.state = '1' and category.category_name = '1'       
"SELECT customer_events.date_moved_in, customers.customer_id, customers.customer_details FROM Customer_Events JOIN Customers ON customer_events.customer_id = customers.customer_id        "
SELECT wine.Winery FROM wine  GROUP BY wine.Winery HAVING count( *) >= 4     
SELECT DISTINCT count(DISTINCT cite.citedPaperId) FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
SELECT student.Advisor FROM Student  GROUP BY student.Advisor HAVING count( *) >= 2     
SELECT state.population FROM state WHERE state.state_name = '1'       
SELECT count( *) FROM city JOIN country ON city.country_id = country.country_id WHERE country.country = 'Australia'       
SELECT DISTINCT count(DISTINCT results.driverId) FROM results WHERE results.raceId NOT IN (SELECT races.raceId FROM races WHERE races.year != 2009       )       
"SELECT roller_coaster.Length, roller_coaster.Height FROM roller_coaster        "
SELECT appellations.County FROM appellations JOIN wine ON appellations.Appelation = wine.Appelation WHERE wine.Score > 90 GROUP BY appellations.County  ORDER BY count( *) DESC LIMIT 1    
SELECT customer.LastName FROM Customer JOIN Employee ON customer.SupportRepId = T2.EmployeeId  GROUP BY customer.LastName HAVING count( *) <= 20     
"SELECT products.product_type_code, avg( products.product_price) FROM Products  GROUP BY products.product_type_code      "
SELECT sum( sports_info.GamesPlayed) FROM SportsInfo WHERE sports_info.SportName = '1' and sports_info.OnScholarship = '1'       
"SELECT documents.Document_ID, documents.Document_Name FROM Documents        "
SELECT dorm_amenity.amenity_name FROM Dorm_amenity JOIN Has_amenity ON dorm_amenity.amenid = Has_amenity.amenid JOIN Dorm ON Has_amenity.dormid = Dorm.dormid JOIN Lives_in ON Dorm.dormid = Lives_in.dormid JOIN Student ON Lives_in.stuid = student.StuID WHERE student.LName = 'Smith'       
"SELECT list.FirstName, list.LastName FROM list JOIN teachers WHERE teachers.FirstName = 'OTHA' and teachers.LastName = 'MOYER'       "
SELECT documents.response_received_date FROM Documents JOIN Document_Types ON documents.document_type_code = document_types.document_type_code JOIN Grants ON documents.grant_id = grants.grant_id WHERE document_types.document_description = 'Regular' or grants.grant_amount > 100       
SELECT faculty.Building FROM Faculty WHERE faculty.Rank = 'Professor' GROUP BY faculty.Building HAVING count( *) >= 10     
SELECT people.Name FROM people JOIN body_builder ON people.People_ID = body_builder.People_ID WHERE body_builder.Total > 300       
SELECT policies.Policy_Type_Code FROM Policies  GROUP BY policies.Policy_Type_Code  ORDER BY count( *) DESC LIMIT 1    
"SELECT things.thing_id, things.Type_of_Thing_Code, organizations.organization_details FROM Things JOIN Organizations ON things.organization_id = organizations.organization_id        "
SELECT DISTINCT count(DISTINCT publication.title) FROM publication JOIN conference ON publication.cid = conference.cid JOIN publication_keyword ON publication.pid = publication_keyword.pid JOIN keyword ON publication_keyword.kid = keyword.kid WHERE conference.name = 'VLDB' and keyword.keyword = 'Information Retrieval'       
SELECT count( *) FROM Student        
"SELECT artist.artist_name, artist.country FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.song_name like '%1%'       "
SELECT student_course_enrolment.date_of_enrolment FROM Student_Course_Enrolment JOIN Courses ON student_course_enrolment.course_id = courses.course_id WHERE courses.course_name = 'Spanish'       
SELECT roles.role_description FROM Roles WHERE roles.role_code = 'ED'       
SELECT inventory.store_id FROM inventory  GROUP BY inventory.store_id  ORDER BY count( *) DESC LIMIT 1    
SELECT state.capital FROM state WHERE state.state_name = '1'       
SELECT border_info.border FROM border_info WHERE border_info.state_name = '1'       
"SELECT customer.state, customer.acc_type, customer.credit_score FROM customer WHERE customer.no_of_loans = 0       "
SELECT match_season.College FROM match_season JOIN team ON match_season.Team = team.Team_id  GROUP BY match_season.College HAVING count( *) >= 2     
SELECT count( *) FROM College WHERE college.enr > 15000       
SELECT count( *) FROM circuits        
SELECT count( *) FROM store        
SELECT count( *) FROM Products WHERE products.product_price > (SELECT avg( products.product_price) FROM Products        )       
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = 'Question Answering'       
SELECT DISTINCT count(DISTINCT dorm.gender) FROM Dorm        
SELECT film_market_estimation.Year FROM film_market_estimation JOIN market ON film_market_estimation.Market_ID = market.Market_ID WHERE market.Country = 'Japan'    ORDER BY film_market_estimation.Year DESC   
SELECT DISTINCT count(DISTINCT songs.Title) FROM Songs JOIN Tracklists ON songs.SongId = Tracklists.SongId JOIN Albums ON Tracklists.AlbumId = albums.AId WHERE albums.Type = '1'       
SELECT count( *) FROM market WHERE market.Number_cities < 300       
SELECT artist.Name FROM artist WHERE artist.Artist_ID NOT IN (SELECT exhibition.Artist_ID FROM exhibition        )       
SELECT manager.Name FROM manager     ORDER BY manager.Level ASC   
SELECT count( river.river_name) FROM river WHERE river.traverse NOT IN (SELECT state.state_name FROM state WHERE state.capital = '1'       )       
SELECT artist.artist_name FROM artist WHERE artist.country = 'UK'     INTERSECT SELECT artist.artist_name FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.languages = 'english'         
SELECT DISTINCT club.ClubName FROM Club JOIN Member_of_club ON club.ClubID = Member_of_club.ClubID JOIN Student ON Member_of_club.StuID = student.StuID WHERE student.city_code = 'HOU'       
"SELECT count( *), captain.Rank FROM captain  GROUP BY captain.Rank      "
SELECT actor.name FROM actor JOIN cast ON actor.aid = T3.aid JOIN movie WHERE actor.name = 'Gabriele Ferzetti'   ORDER BY movie.release_year DESC LIMIT 1    
SELECT shop.Shop_Name FROM shop WHERE shop.Shop_ID NOT IN (SELECT stock.Shop_ID FROM stock        )       
"SELECT avg( cinema.Capacity), min( cinema.Capacity), max( cinema.Capacity) FROM cinema WHERE cinema.Openning_year >= 2011       "
SELECT people.Name FROM people JOIN entrepreneur ON people.People_ID = entrepreneur.People_ID WHERE entrepreneur.Investor != 'Rachel Elnaugh'       
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paperDataset JOIN dataset JOIN paper WHERE dataset.datasetName like '%ImageNet%'       
"SELECT DISTINCT voting_record.Registration_Date, voting_record.Election_Cycle FROM Voting_record        "
SELECT job_history.JOB_ID FROM job_history JOIN jobs ON job_history.JOB_ID = jobs.JOB_ID WHERE job_history.END_DATE > '1' GROUP BY job_history.JOB_ID HAVING count( *) >= 1     
SELECT DISTINCT count(DISTINCT actor.name) FROM actor WHERE actor.birth_city = '1' and actor.birth_year > 1 and actor.gender = '1'       
"SELECT customers.customer_name, customers.customer_phone FROM Customers JOIN Mailshot_Customers ON customers.customer_id = mailshot_customers.customer_id WHERE mailshot_customers.outcome_code = 'No Response'       "
"SELECT customers.customer_status_code, customers.cell_mobile_phone_number, customers.email_address FROM Customers WHERE customers.first_name = 'Marina' or customers.last_name = 'Kohler'       "
SELECT city.population FROM city WHERE city.city_name = (SELECT state.capital FROM state WHERE state.state_name = '1'       )       
"SELECT furniture.Market_Rate, furniture.Name FROM furniture WHERE furniture.Furniture_ID NOT IN (SELECT furniture_manufacte.Furniture_ID FROM furniture_manufacte        )       "
SELECT member.Name FROM member WHERE member.Member_ID NOT IN (SELECT member_attendance.Member_ID FROM member_attendance        )       
SELECT publication.title FROM publication JOIN journal ON publication.jid = journal.jid WHERE journal.name = 'PVLDB'       
"SELECT employees.FIRST_NAME, employees.LAST_NAME, departments.DEPARTMENT_NAME, locations.CITY, locations.STATE_PROVINCE FROM employees JOIN departments ON employees.DEPARTMENT_ID = departments.DEPARTMENT_ID JOIN locations ON departments.LOCATION_ID = locations.LOCATION_ID        "
"SELECT checking.balance, savings.balance FROM CHECKING JOIN ACCOUNTS ON checking.custid = accounts.custid JOIN SAVINGS ON accounts.custid = savings.custid WHERE accounts.name = 'Brown'       "
SELECT count( *) FROM Participants WHERE participants.Participant_Type_Code = 'Organizer'       
SELECT DISTINCT count(DISTINCT teaches.ID) FROM teaches WHERE teaches.semester = '1' and teaches.year = 1       
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and location.STREET_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT characteristics.characteristic_name FROM Characteristics JOIN Product_Characteristics ON characteristics.characteristic_id = Product_Characteristics.characteristic_id JOIN Products ON Product_Characteristics.product_id = products.product_id WHERE products.product_name = 'sesame'       
"SELECT match.Location, aircraft.Aircraft FROM match JOIN aircraft ON match.Winning_Aircraft = aircraft.Aircraft_ID        "
"SELECT employees.FIRST_NAME, employees.DEPARTMENT_ID FROM employees WHERE employees.LAST_NAME = 'McEwen'       "
SELECT store.Store_Name FROM store JOIN store_district ON store.Store_ID = store_district.Store_ID WHERE store_district.District_ID = (SELECT district.District_ID FROM district    ORDER BY district.City_Population DESC LIMIT 1    )       
SELECT count( *) FROM Accounts        
SELECT people.Name FROM people JOIN entrepreneur ON people.People_ID = entrepreneur.People_ID WHERE entrepreneur.Investor != 'Rachel Elnaugh'       
SELECT assessment_notes.text_of_notes FROM Assessment_Notes JOIN Teachers ON assessment_notes.teacher_id = teachers.teacher_id WHERE teachers.last_name = 'Schuster'       
SELECT airlines.country FROM airlines WHERE airlines.name like '%Orbit%'       
SELECT count( *) FROM medicine WHERE medicine.FDA_approved = '1'       
"SELECT claims.Amount_Settled, claims.Amount_Claimed FROM Claims    ORDER BY claims.Amount_Claimed DESC LIMIT 1    "
SELECT book_club.Publisher FROM book_club        EXCEPT SELECT book_club.Publisher FROM book_club WHERE book_club.Year = 1989       
SELECT count( *) FROM university WHERE university.Location like '%NY%'       
"SELECT sum( savings.balance), accounts.name FROM SAVINGS JOIN ACCOUNTS ON savings.custid = accounts.custid  GROUP BY accounts.name      "
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = geographic.CITY_NAME JOIN RESTAURANT ON geographic.CITY_NAME = restaurant.CITY_NAME WHERE geographic.REGION = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT scientists.Name FROM Scientists        EXCEPT SELECT scientists.Name FROM Scientists JOIN AssignedTo ON scientists.SSN = AssignedTo.Scientist JOIN Projects ON AssignedTo.Project = projects.Code WHERE projects.Hours = (SELECT max( projects.Hours) FROM Projects        )       
SELECT max( highlow.highest_elevation) FROM highlow        
"SELECT projects.Project_ID, projects.Project_Details FROM Projects JOIN Documents ON projects.Project_ID = T2.Project_ID  GROUP BY T2.Project_ID HAVING count( *) > 2     "
SELECT count( *) FROM customers JOIN employees ON customers.support_rep_id = employees.id WHERE employees.first_name = 'Steve' and employees.last_name = 'Johnson'       
SELECT count( *) FROM train        
"SELECT count( *), class.CRS_CODE FROM COURSE JOIN CLASS ON course.CRS_CODE = class.CRS_CODE  GROUP BY class.CRS_CODE      "
SELECT products.Product_Type_Code FROM Products  GROUP BY products.Product_Type_Code HAVING count( *) >= 2     
SELECT avg( results.fastestLapSpeed) FROM results JOIN races ON results.raceId = races.raceId WHERE races.year = 2008 and races.name = 'Monaco Grand Prix'       
"SELECT entrepreneur.Company, entrepreneur.Investor FROM entrepreneur        "
SELECT book_club.Category FROM book_club WHERE book_club.Year > 1989 GROUP BY book_club.Category HAVING count( *) >= 2     
SELECT city.Status FROM city WHERE city.Population > 1500     INTERSECT SELECT city.Status FROM city WHERE city.Population < 500         
SELECT employee.name FROM employee WHERE employee.salary > (SELECT avg( employee.salary) FROM employee        )       
SELECT DISTINCT match_season.Position FROM match_season        
SELECT shop.Shop_Name FROM shop    ORDER BY shop.Open_Year DESC LIMIT 1    
SELECT avg( products.Product_Price) FROM Products        
SELECT count( *) FROM routes JOIN airlines ON routes.alid = airlines.alid WHERE airlines.name = 'American Airlines'       
SELECT gas_station.Location FROM gas_station JOIN station_company ON gas_station.Station_ID = station_company.Station_ID JOIN company ON station_company.Company_ID = company.Company_ID WHERE company.Market_Value > 100       
SELECT city.Name FROM city     ORDER BY city.Name ASC   
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = 'Question Answering'       
"SELECT parts.part_id, parts.chargeable_amount FROM Parts    ORDER BY parts.chargeable_amount ASC LIMIT 1    "
SELECT count( *) FROM Vocals JOIN Songs ON vocals.SongId = songs.SongId WHERE songs.Title = 'Demon Kitty Rag'       
SELECT dependent.Dependent_name FROM dependent WHERE dependent.Relationship = 'Spouse'       
"SELECT addresses.state_province_county, count( *) FROM Addresses JOIN Customer_Addresses ON addresses.address_id = Customer_Addresses.address_id JOIN Customers ON Customer_Addresses.customer_id = customers.customer_id  GROUP BY addresses.state_province_county      "
SELECT director.birth_city FROM director JOIN directed_by ON director.did = T3.did JOIN movie WHERE movie.title = 'The Past'       
SELECT avg( film.Gross_in_dollar) FROM film        
"SELECT min( employees.SALARY), employees.DEPARTMENT_ID FROM employees  GROUP BY employees.DEPARTMENT_ID      "
SELECT captain.Class FROM captain  GROUP BY captain.Class HAVING count( *) > 2     
"SELECT lots.lot_details, lots.investor_id FROM Lots        "
SELECT party.Party_Theme FROM party     ORDER BY party.Number_of_hosts ASC   
SELECT DISTINCT match_season.Position FROM match_season WHERE match_season.College = 'UCLA' or match_season.College = 'Duke'       
SELECT state.capital FROM state JOIN border_info ON state.state_name = border_info.border WHERE border_info.state_name = '1'       
SELECT track.Name FROM track        EXCEPT SELECT track.Name FROM track JOIN race ON track.Track_ID = race.Track_ID WHERE race.Class = 'GT'       
SELECT count( *) FROM GEOGRAPHIC        
"SELECT max( manufacturer.Num_of_Shops), avg( manufacturer.Num_of_Factories) FROM manufacturer WHERE manufacturer.Open_Year < 1990       "
SELECT staff.last_name FROM Staff JOIN Complaints ON staff.staff_id = complaints.staff_id    ORDER BY complaints.date_complaint_raised ASC LIMIT 1    
SELECT river.traverse FROM river WHERE river.river_name = '1'       
SELECT count( *) FROM Addresses        
SELECT river.length FROM river WHERE river.length = (SELECT min( river.length) FROM river        )       
"SELECT student_course_enrolment.student_id, students.middle_name FROM Student_Course_Enrolment JOIN Students ON student_course_enrolment.student_id = students.student_id  GROUP BY student_course_enrolment.student_id HAVING count( *) <= 2     "
SELECT count( *) FROM Songs        
"SELECT count( *), professor.DEPT_CODE FROM PROFESSOR WHERE professor.PROF_HIGH_DEGREE = 'Ph.D.' GROUP BY professor.DEPT_CODE      "
"SELECT DISTINCT author.authorId, paper.paperId FROM author JOIN writes ON author.authorId = writes.authorId JOIN paper ON writes.paperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE author.authorName = '1' and key_phrase.keyphraseName = '1'       "
SELECT party.Location FROM party JOIN party_host ON party.Party_ID = party_host.Party_ID JOIN host ON party_host.Host_ID = host.Host_ID WHERE host.Age > '50'       
SELECT DISTINCT addresses.city FROM Addresses JOIN People_Addresses ON addresses.address_id = T3.address_id JOIN People ON T3.person_id = People.person_id JOIN Students ON People.person_id = students.student_id        
"SELECT avg( movie.Budget_million), max( movie.Budget_million), min( movie.Budget_million) FROM movie WHERE movie.Year < 2000       "
SELECT conference.name FROM conference JOIN publication ON conference.cid = publication.cid JOIN publication_keyword ON publication.pid = publication_keyword.pid JOIN keyword ON publication_keyword.kid = keyword.kid WHERE keyword.keyword = 'Relational Database' GROUP BY conference.name  ORDER BY count( publication.title) DESC LIMIT 1    
"SELECT customers_cards.card_id, customers_cards.customer_id, customers_cards.card_type_code, customers_cards.card_number FROM Customers_Cards        "
"SELECT count( *), projects.Name FROM Scientists JOIN AssignedTo ON scientists.SSN = AssignedTo.Scientist JOIN Projects ON AssignedTo.Project = projects.Code  GROUP BY projects.Name      "
SELECT customer.cust_name FROM customer JOIN bank ON customer.branch_ID = bank.branch_ID  GROUP BY customer.cust_name HAVING count( *) > 1     
SELECT river.river_name FROM river WHERE river.length = (SELECT max( river.length) FROM river        )       
SELECT movie.title FROM genre JOIN classification ON genre.gid = T3.gid JOIN movie  GROUP BY movie.title  ORDER BY count( genre.genre) DESC LIMIT 1    
SELECT activity.activity_name FROM Activity JOIN Faculty_Participates_in ON activity.actid = T3.actid JOIN Faculty ON T3.FacID = faculty.FacID  GROUP BY activity.activity_name  ORDER BY count( *) DESC LIMIT 1    
"SELECT mission.Code, mission.Fate, ship.Name FROM mission JOIN ship ON mission.Ship_ID = ship.Ship_ID        "
SELECT browser.name FROM browser JOIN accelerator_compatible_browser ON browser.id = accelerator_compatible_browser.browser_id JOIN Web_client_accelerator ON accelerator_compatible_browser.accelerator_id = web_client_accelerator.id WHERE web_client_accelerator.name = 'CACHEbox'     INTERSECT SELECT browser.name FROM browser JOIN accelerator_compatible_browser ON browser.id = accelerator_compatible_browser.browser_id JOIN Web_client_accelerator ON accelerator_compatible_browser.accelerator_id = web_client_accelerator.id WHERE web_client_accelerator.name = 'Fasterfox'         
"SELECT weather.zip_code, avg( weather.mean_temperature_f) FROM weather WHERE weather.date like '%1%' GROUP BY weather.zip_code      "
SELECT projects.project_details FROM Projects WHERE projects.project_id NOT IN (SELECT project_outcomes.project_id FROM Project_Outcomes        )       
SELECT class.CRS_CODE FROM CLASS JOIN ENROLL ON class.CLASS_CODE = ENROLL.CLASS_CODE JOIN STUDENT ON ENROLL.STU_NUM = student.STU_NUM WHERE student.STU_LNAME = 'Smithson'       
SELECT sum( payment.amount) FROM payment        
"SELECT actor.first_name, actor.last_name FROM actor  GROUP BY actor.first_name, actor.last_name  ORDER BY count( *) DESC LIMIT 1    "
SELECT weather.zip_code FROM weather  GROUP BY weather.zip_code HAVING avg( weather.mean_visibility_miles) < 10     
SELECT actor.name FROM actor JOIN cast ON actor.aid = cast.aid JOIN movie WHERE cast.role = Alan Turing and movie.title = 'The Imitation Game'       
"SELECT max( wine.Price), max( wine.Score), wine.Year FROM wine  GROUP BY wine.Year      "
SELECT * FROM election        
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId JOIN venue ON paper.venueId = venue.venueId WHERE author.authorName = '1' and venue.venueName = '1'       
SELECT papers.title FROM Papers JOIN Authorship ON papers.paperID = Authorship.paperID JOIN Authors ON Authorship.authID = authors.authID WHERE authors.fname = 'Jeremy' and authors.lname = 'Gibbons'       
SELECT flight.flno FROM flight WHERE flight.distance > 2000       
SELECT avg( order_items.order_quantity) FROM Order_Items        
"SELECT DISTINCT customer.cust_name, customer.credit_score FROM customer JOIN bank ON customer.branch_ID = bank.branch_ID JOIN loan ON bank.branch_ID = T2.branch_ID        "
"SELECT station.Location, sum( station.Number_of_Platforms), sum( station.Total_Passengers) FROM station  GROUP BY station.Location      "
"SELECT individuals.individual_first_name, individuals.individual_middle_name, individuals.individual_last_name FROM Individuals     ORDER BY individuals.individual_last_name ASC   "
SELECT on_call.Nurse FROM On_Call WHERE on_call.BlockFloor = 1 and on_call.BlockCode = 1       
SELECT people.Name FROM people JOIN debate_people ON people.People_ID = debate_people.Negative JOIN debate ON debate_people.Debate_ID = debate.Debate_ID WHERE debate.Num_of_Audience > 200       
SELECT book_club.Publisher FROM book_club        EXCEPT SELECT book_club.Publisher FROM book_club WHERE book_club.Year = 1989       
SELECT publication.title FROM publication WHERE publication.year > 2000       
"SELECT DISTINCT college.state, college.enr FROM College JOIN Tryout ON college.cName = tryout.cName WHERE tryout.decision = '1'       "
SELECT teachers.LastName FROM teachers WHERE teachers.Classroom = 109       
SELECT trip.id FROM trip JOIN weather  GROUP BY trip.id HAVING avg( T2.mean_temperature_f) > 60     
"SELECT county.County_name, count( *) FROM county  GROUP BY county.County_name      "
"SELECT faculty.Phone, faculty.Room, faculty.Building FROM Faculty WHERE faculty.Fname = 'Jerry' and faculty.Lname = 'Prince'       "
SELECT DISTINCT vocals.Type FROM Vocals        
SELECT DISTINCT count(DISTINCT people.Hometown) FROM people        
SELECT member.Country FROM member  GROUP BY member.Country HAVING count( *) > 2     
SELECT vocals.Type FROM Vocals JOIN Band ON vocals.Bandmate = band.Id WHERE band.Lastname = 'Heilo' GROUP BY vocals.Type  ORDER BY count( *) DESC LIMIT 1    
SELECT DISTINCT count(DISTINCT faculty_participates_in.FacID) FROM Faculty_Participates_in        
"SELECT person.name, person.age FROM Person JOIN PersonFriend ON person.name = person_friend.friend WHERE person_friend.friend = 'Dan'     INTERSECT SELECT person.name, person.age FROM Person JOIN PersonFriend ON person.name = person_friend.friend WHERE person_friend.friend = 'Alice'         "
SELECT river.traverse FROM river WHERE river.river_name = '1'       
SELECT count( *) FROM wrestler        
"SELECT reference_document_types.Document_Type_Name, reference_document_types.Document_Type_Description FROM Ref_Document_Types WHERE reference_document_types.Document_Type_Code = 'RV'       "
"SELECT shop.Address, shop.Num_of_staff FROM shop WHERE shop.Shop_ID NOT IN (SELECT happy_hour.Shop_ID FROM happy_hour        )       "
SELECT count( *) FROM Customers WHERE customers.customer_id NOT IN (SELECT customer_payments.customer_id FROM Customer_Payments        )       
"SELECT avg( player.HS), max( player.HS) FROM Player JOIN Tryout ON player.pID = tryout.pID WHERE tryout.decision = 'yes'       "
SELECT musical.Nominee FROM musical  GROUP BY musical.Nominee  ORDER BY count( *) DESC LIMIT 1    
SELECT artwork.Name FROM artwork WHERE artwork.Type != 'Program Talent Show'       
SELECT DISTINCT paper_key_phrase.keyphraseId FROM paperKeyphrase JOIN paper ON paper_key_phrase.paperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId JOIN venue ON paper.venueId = venue.venueId WHERE author.authorName = '1' and venue.venueName = '1'       
SELECT addresses.address_content FROM Addresses JOIN Customer_Addresses ON addresses.address_id = Customer_Addresses.address_id JOIN Customers ON Customer_Addresses.customer_id = customers.customer_id WHERE customers.customer_name = 'Maudie Kertzmann'       
"SELECT station.Name, station.Main_Services FROM station    ORDER BY station.Total_Passengers DESC LIMIT 1    "
SELECT member.Address FROM member        EXCEPT SELECT member.Address FROM member WHERE member.Membership_card = '1'       
SELECT * FROM body_builder        
"SELECT max( song.resolution), min( song.resolution) FROM song JOIN files ON song.f_id = files.f_id WHERE files.duration like '%1%'       "
SELECT highlow.lowest_point FROM highlow WHERE highlow.state_name = '1'       
SELECT avg( market.Number_cities) FROM market JOIN film_market_estimation ON market.Market_ID = film_market_estimation.Market_ID WHERE film_market_estimation.Low_Estimate > 10000       
"SELECT movie.Title, book_club.Book_Title FROM movie JOIN culture_company ON movie.movie_id = culture_company.movie_id JOIN book_club ON culture_company.book_club_id = book_club.book_club_id WHERE culture_company.Incorporated_in = 'China'       "
SELECT musical.Nominee FROM musical  GROUP BY musical.Nominee  ORDER BY count( *) DESC LIMIT 1    
"SELECT DISTINCT authors.fname, authors.lname FROM Authors JOIN Authorship ON authors.authID = Authorship.authID JOIN Inst ON Authorship.instID = institution.instID WHERE institution.name = 'Google'       "
SELECT avg( airport.International_Passengers) FROM airport        
"SELECT race.Name, race.Class, race.Date FROM race        "
"SELECT actor.first_name, actor.last_name, actor.actor_id FROM actor JOIN film_actor ON actor.actor_id = T3.actor_id  GROUP BY T3.actor_id  ORDER BY count( *) DESC LIMIT 1    "
"SELECT reference_service_types.Service_Type_Description, reference_service_types.Service_Type_Code FROM Ref_Service_Types JOIN Services ON reference_service_types.Service_Type_Code = services.Service_Type_Code  GROUP BY services.Service_Type_Code  ORDER BY count( *) DESC LIMIT 1    "
"SELECT station.name, station.lat, station.city FROM station    ORDER BY station.lat ASC LIMIT 1    "
"SELECT movie.title, movie.director FROM Movie WHERE movie.title != '1'    ORDER BY movie.director ASC   "
"SELECT people.Birth_Date, people.Birth_Place FROM people JOIN body_builder ON people.People_ID = body_builder.People_ID    ORDER BY body_builder.Total DESC LIMIT 1    "
SELECT course.title FROM course WHERE course.course_id in (SELECT prerequisite.prereq_id FROM prereq JOIN course ON prerequisite.prereq_id = course.course_id WHERE course.title = 'Mobile Computing'       )       
SELECT DISTINCT paper.paperId FROM paperDataset JOIN dataset JOIN paper WHERE dataset.datasetName = 'WebKB'       
SELECT band.Lastname FROM Band JOIN Performance ON band.Id = performance.Bandmate WHERE performance.StagePosition = '1' GROUP BY band.Lastname  ORDER BY count( *) DESC LIMIT 1    
SELECT staff.nickname FROM Staff WHERE staff.first_name = 'Janessa' and staff.last_name = 'Sawayn'       
"SELECT band.Firstname, band.Lastname FROM Band JOIN Performance ON band.Id = T3.Bandmate JOIN Songs ON T3.SongId = songs.SongId WHERE songs.Title = 'Badlands'       "
SELECT count( *) FROM browser WHERE browser.market_share >= 5       
SELECT course.title FROM course JOIN section ON course.course_id = section.course_id WHERE section.building = 'Chandler' and section.semester = 'Fall' and section.year = 2010       
SELECT avg( election.Votes) FROM election JOIN representative ON election.Representative_ID = representative.Representative_ID WHERE representative.Party = 'Republican'       
"SELECT player.Occupation, count( *) FROM player  GROUP BY player.Occupation      "
SELECT business.name FROM business JOIN review ON business.business_id = review.business_id WHERE review.month = 'April' GROUP BY business.name  ORDER BY count( review.text) DESC LIMIT 1    
SELECT customers.customer_name FROM Customers        EXCEPT SELECT customers.customer_name FROM Customers JOIN Customer_Orders ON customers.customer_id = T3.customer_id        
"SELECT min( county_public_safety.Crime_rate), max( county_public_safety.Crime_rate) FROM county_public_safety        "
"SELECT employees.title, employees.phone, employees.hire_date FROM employees WHERE employees.first_name = 'Nancy' and employees.last_name = 'Edwards'       "
SELECT item.title FROM item     ORDER BY item.title ASC   
"SELECT count( *), airports.country FROM airports  GROUP BY airports.country   ORDER BY count( *) DESC   "
SELECT count( *) FROM state        
SELECT DISTINCT count(DISTINCT video_games.GType) FROM Video_Games        
SELECT avg( products.Price) FROM Products WHERE products.Manufacturer = 2       
SELECT film.Directed_by FROM film JOIN schedule ON film.Film_ID = schedule.Film_ID  GROUP BY film.Directed_by  ORDER BY sum( schedule.Show_times_per_day) DESC LIMIT 1    
SELECT count( *) FROM airports WHERE airports.name like '%International%'       
SELECT faculty.Faculty FROM faculty JOIN Campuses ON faculty.Campus = campuses.Id WHERE faculty.Year = 2002 and campuses.Campus = 'Long Beach State University'       
SELECT count( *) FROM Apartment_Buildings        
SELECT shop.Location FROM shop WHERE shop.Open_Year > 2012     INTERSECT SELECT shop.Location FROM shop WHERE shop.Open_Year < 2008         
SELECT count( *) FROM artist        
SELECT device.Carrier FROM device     ORDER BY device.Carrier ASC   
"SELECT medicine.name, medicine.Trade_Name FROM medicine JOIN medicine_enzyme_interaction ON medicine.id = medicine_enzyme_interaction.medicine_id WHERE medicine_enzyme_interaction.interaction_type = 'inhibitor'     INTERSECT SELECT medicine.name, medicine.Trade_Name FROM medicine JOIN medicine_enzyme_interaction ON medicine.id = medicine_enzyme_interaction.medicine_id WHERE medicine_enzyme_interaction.interaction_type = 'activitor'         "
SELECT salary.salary FROM salary WHERE salary.year = 2001   ORDER BY salary.salary DESC LIMIT 1    
"SELECT count( *), section.semester, section.year FROM course JOIN section ON course.course_id = section.course_id  GROUP BY section.course_id      "
"SELECT sum( manufacturers.Revenue), manufacturers.Founder FROM Manufacturers  GROUP BY manufacturers.Founder      "
"SELECT member.Name, performance.Location FROM member JOIN member_attendance ON member.Member_ID = member_attendance.Member_ID JOIN performance ON member_attendance.Performance_ID = performance.Performance_ID        "
SELECT device.Carrier FROM device     ORDER BY device.Carrier ASC   
SELECT DISTINCT count(DISTINCT user.name) FROM user WHERE user.name = 'Michelle'       
SELECT election.Votes FROM election     ORDER BY election.Votes DESC   
SELECT roller_coaster.Status FROM roller_coaster  GROUP BY roller_coaster.Status  ORDER BY count( *) DESC LIMIT 1    
SELECT journalist.Nationality FROM journalist WHERE journalist.Years_working > 10     INTERSECT SELECT journalist.Nationality FROM journalist WHERE journalist.Years_working < 3         
SELECT publication.title FROM publication JOIN journal ON publication.jid = journal.jid WHERE journal.name = 'PVLDB' and publication.year > 2000   ORDER BY publication.citation_num DESC LIMIT 1    
SELECT state.state_name FROM state WHERE state.density = (SELECT max( state.density) FROM state        )       
SELECT DISTINCT race.Class FROM race        
SELECT documents.document_type_code FROM Documents  GROUP BY documents.document_type_code HAVING count( *) > 2     
SELECT count( *) FROM exhibition JOIN exhibition_record ON exhibition.Exhibition_ID = exhibition_record.Exhibition_ID WHERE exhibition_record.Attendance > 100 or exhibition.Ticket_Price < 10       
SELECT count( *) FROM Claims_Processing_Stages        
"SELECT financial_transactions.account_id, count( *) FROM Financial_Transactions  GROUP BY financial_transactions.account_id      "
SELECT musical.Name FROM musical WHERE musical.Nominee = 'Bob Fosse'       
SELECT count( *) FROM Addresses        
SELECT DISTINCT instructor.salary FROM instructor WHERE instructor.salary < (SELECT max( instructor.salary) FROM instructor        )       
"SELECT rooms.decor, count( *) FROM Rooms WHERE rooms.basePrice > 120 GROUP BY rooms.decor      "
"SELECT artist.Famous_Title, artist.Age FROM artist     ORDER BY artist.Age DESC   "
SELECT DISTINCT count(DISTINCT publication.Publication_Date) FROM publication        
"SELECT DISTINCT paper.journalId, venue.venueId FROM paper JOIN venue ON paper.venueId = venue.venueId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Peter Mertens'       "
SELECT sum( publication.citation_num) FROM publication JOIN conference ON publication.cid = conference.cid WHERE conference.name = 'VLDB' and publication.year = 2005       
SELECT mountain.mountain_name FROM mountain WHERE mountain.mountain_altitude = (SELECT max( mountain.mountain_altitude) FROM mountain WHERE mountain.state_name != '1'       )       
SELECT count( *) FROM artwork        
SELECT ship.Name FROM ship WHERE ship.Nationality = 'United States' or ship.Nationality = 'United Kingdom'       
SELECT state.population FROM state WHERE state.state_name = '1'       
SELECT count( *) FROM Student JOIN Voting_record ON student.StuID = voting_record.Class_Senator_Vote WHERE student.Sex = 'M' and voting_record.Election_Cycle = 'Fall'       
SELECT DISTINCT river.traverse FROM river WHERE river.length = (SELECT DISTINCT min(DISTINCT river.length) FROM river        )       
"SELECT organisations.organisation_id, organisations.organisation_details FROM Organisations JOIN Grants ON organisations.organisation_id = T2.organisation_id  GROUP BY T2.organisation_id HAVING sum( T2.grant_amount) > 6000     "
"SELECT DISTINCT count(DISTINCT paper.paperId), writes.authorId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN venue ON paper.venueId = venue.venueId WHERE venue.venueName = 'ACL' GROUP BY writes.authorId      "
SELECT DISTINCT teachers.LastName FROM teachers JOIN list WHERE list.Grade = 5       
SELECT instructor.dept_name FROM instructor WHERE instructor.name like '%Soisalon%'       
"SELECT DISTINCT author.authorName, paper.paperId FROM author JOIN writes ON author.authorId = writes.authorId JOIN paper ON writes.paperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE author.authorName != '1' and key_phrase.keyphraseName = '1'       "
SELECT customer.cust_name FROM customer JOIN bank ON customer.branch_ID = bank.branch_ID JOIN loan ON bank.branch_ID = loan.branch_ID WHERE loan.amount > 3000       
"SELECT count( *), users.role_code FROM Users  GROUP BY users.role_code      "
SELECT services.Service_name FROM Services JOIN First_Notification_of_Loss ON services.Service_ID = T2.Service_ID  GROUP BY services.Service_name HAVING count( *) > 2     
SELECT student.LName FROM Student WHERE student.Sex = 'F'    ORDER BY student.Age DESC   
SELECT DISTINCT count(DISTINCT member.Level) FROM member        
SELECT sum( order_items.order_quantity) FROM Order_Items JOIN Customer_Orders ON order_items.order_id = Customer_Orders.order_id JOIN Customers ON Customer_Orders.customer_id = customers.customer_id WHERE customers.customer_name = 'Rodrick Heaney'       
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = '1'       
SELECT school.School_Colors FROM school    ORDER BY school.Enrollment DESC LIMIT 1    
SELECT tv_series.title FROM made_by JOIN producer ON T2.pid = producer.pid JOIN tv_series WHERE producer.name = 'Shonda Rhimes'       
"SELECT customers.customer_first_name, customers.customer_last_name, customers.customer_phone FROM Customers JOIN Accounts WHERE accounts.account_name = '162'       "
SELECT county_public_safety.Police_force FROM county_public_safety WHERE county_public_safety.Location = 'East'     INTERSECT SELECT county_public_safety.Police_force FROM county_public_safety WHERE county_public_safety.Location = 'West'         
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN cite ON paper.paperId = T3.citingPaperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Daniel Jurafsky'       
SELECT count( river.river_name) FROM river WHERE river.river_name = '1'       
SELECT avg( student.Age) FROM Student JOIN Member_of_club ON student.StuID = Member_of_club.StuID JOIN Club ON Member_of_club.ClubID = club.ClubID WHERE club.ClubName = 'Hopkins Student Enterprises'       
SELECT count( *) FROM GEOGRAPHIC JOIN RESTAURANT ON geographic.CITY_NAME = restaurant.CITY_NAME WHERE geographic.REGION = '1' and restaurant.NAME = '1'       
SELECT DISTINCT count(DISTINCT station.city) FROM station        
SELECT faculty.Faculty FROM faculty JOIN Campuses ON faculty.Campus = Campuses.Id JOIN degrees ON Campuses.Id = degrees.Campus WHERE faculty.Year = 2002   ORDER BY degrees.Degrees DESC LIMIT 1    
SELECT video_games.GName FROM Video_Games JOIN Plays_Games ON video_games.GameID = T2.GameID  GROUP BY video_games.GName HAVING sum( T2.Hours_Played) >= 1000     
"SELECT min( people.Age), max( people.Age), avg( people.Age) FROM people        "
SELECT DISTINCT person_friend.name FROM PersonFriend JOIN Person ON person_friend.friend = person.name WHERE person.age < (SELECT avg( person.age) FROM Person        )       
"SELECT student.STU_FNAME, student.STU_LNAME FROM STUDENT JOIN ENROLL ON student.STU_NUM = enroll.STU_NUM WHERE enroll.ENROLL_GRADE = '1' or enroll.ENROLL_GRADE = '1'       "
SELECT state.state_name FROM state WHERE state.density = (SELECT max( state.density) FROM state        )       
SELECT characteristics.characteristic_name FROM Characteristics JOIN Product_Characteristics ON characteristics.characteristic_id = Product_Characteristics.characteristic_id JOIN Products ON Product_Characteristics.product_id = products.product_id WHERE products.product_name = 'sesame' and characteristics.characteristic_type_code = 'Grade'       
SELECT author.name FROM author JOIN writes ON author.aid = writes.aid JOIN publication ON writes.pid = publication.pid JOIN journal ON publication.jid = journal.jid WHERE journal.name = 'PVLDB' GROUP BY author.name  ORDER BY count( publication.title) DESC LIMIT 1    
SELECT DISTINCT district.District_name FROM district     ORDER BY district.City_Area DESC   
SELECT publication.title FROM publication JOIN conference ON publication.cid = conference.cid WHERE conference.name = 'VLDB'   ORDER BY publication.citation_num DESC LIMIT 1    
SELECT DISTINCT list.Classroom FROM list WHERE list.Grade = 5       
SELECT ship.Built_Year FROM Ship  GROUP BY ship.Built_Year  ORDER BY count( *) DESC LIMIT 1    
SELECT chip_model.Model_name FROM chip_model        EXCEPT SELECT phone.chip_model FROM phone WHERE phone.Accreditation_type = '1'       
"SELECT DISTINCT author.authorId, paper.paperId FROM author JOIN writes ON author.authorId = writes.authorId JOIN paper ON writes.paperId = paper.paperId JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE author.authorName = '1' and key_phrase.keyphraseName = '1'       "
SELECT people.Name FROM people JOIN entrepreneur ON people.People_ID = T2.People_ID        
"SELECT train.train_number, train.time FROM train WHERE train.origin = 'Chennai' and train.destination = 'Guruvayur'       "
SELECT count( *) FROM airlines        
SELECT entrepreneur.Company FROM entrepreneur     ORDER BY entrepreneur.Money_Requested DESC   
"SELECT home_game.year, avg( home_game.attendance) FROM home_game  GROUP BY home_game.year      "
SELECT section.course_id FROM section WHERE section.semester = 'Fall' and section.year = 2009     INTERSECT SELECT section.course_id FROM section WHERE section.semester = 'Spring' and section.year = 2010         
"SELECT swimmer.name, swimmer.Nationality FROM swimmer JOIN record ON swimmer.ID = record.Swimmer_ID WHERE record.Result = 'Win' GROUP BY record.Swimmer_ID HAVING count( *) > 1     "
"SELECT min( player.HS), tryout.pPos FROM Player JOIN Tryout ON player.pID = tryout.pID  GROUP BY tryout.pPos      "
SELECT city.state_name FROM city WHERE city.city_name = '1'       
SELECT city.Hispanic FROM city WHERE city.Black > 10       
"SELECT students.student_id, count( *) FROM Students JOIN Student_Course_Registrations ON students.student_id = Student_Course_Registrations.student_id JOIN Courses ON Student_Course_Registrations.course_id = courses.course_id  GROUP BY students.student_id      "
SELECT count( *) FROM track        
SELECT company.Headquarters FROM company    ORDER BY company.Sales_in_Billion DESC LIMIT 1    
"SELECT station.Name, station.Location FROM station     ORDER BY station.Annual_entry_exit ASC   "
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and location.STREET_NAME = '1' and restaurant.RATING > 1       "
SELECT accounts.name FROM ACCOUNTS JOIN CHECKING ON accounts.custid = checking.custid    ORDER BY checking.balance ASC LIMIT 1    
SELECT business.name FROM business JOIN category ON business.business_id = category.business_id WHERE business.city = '1' and category.category_name = '1' and category.category_name = '1'       
SELECT organizations.organization_name FROM Organizations    ORDER BY organizations.date_formed DESC LIMIT 1    
"SELECT organisations.organisation_id, organisations.organisation_type, organisations.organisation_details FROM Organisations JOIN Research_Staff ON organisations.organisation_id = research_staff.employer_organisation_id  GROUP BY research_staff.employer_organisation_id  ORDER BY count( *) DESC LIMIT 1    "
"SELECT festival_detail.Festival_Name, festival_detail.Location FROM festival_detail        "
SELECT reference_document_status.document_status_description FROM Ref_Document_Status JOIN Documents ON reference_document_status.document_status_code = documents.document_status_code WHERE documents.document_id = 1       
SELECT basketball_match.Team_Name FROM basketball_match     ORDER BY basketball_match.All_Home DESC   
SELECT volume.Song FROM volume     ORDER BY volume.Song ASC   
"SELECT DISTINCT count(DISTINCT paper.paperId), writes.authorId FROM paper JOIN writes ON paper.paperId = writes.paperId  GROUP BY writes.authorId HAVING count( paper.paperId) >= 5     "
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId JOIN venue ON paper.venueId = venue.venueId WHERE key_phrase.keyphraseName = '1' and paper.year = 1 and venue.venueName = '1'       
"SELECT sum( grants.grant_amount), grants.organisation_id FROM Grants  GROUP BY grants.organisation_id      "
"SELECT min( company.Market_Value), max( company.Market_Value), avg( company.Market_Value) FROM company        "
SELECT candidates.candidate_id FROM Candidates JOIN People ON candidates.candidate_id = people.person_id WHERE people.email_address = 'stanley.monahan@example.org'       
SELECT customers_cards.card_type_code FROM Customers_Cards  GROUP BY customers_cards.card_type_code HAVING count( *) >= 5     
SELECT DISTINCT paper.paperId FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId WHERE key_phrase.keyphraseName = 'Question Answering'       
SELECT pilot.Nationality FROM pilot  GROUP BY pilot.Nationality  ORDER BY count( *) DESC LIMIT 1    
SELECT party.Location FROM party    ORDER BY party.Number_of_hosts DESC LIMIT 1    
"SELECT storm.Name, storm.Max_speed FROM storm JOIN affected_region ON storm.Storm_ID = T3.Storm_ID  GROUP BY T3.Storm_ID  ORDER BY count( *) DESC LIMIT 1    "
"SELECT detention.teacher_id, teachers.last_name FROM Detention JOIN Teachers ON detention.teacher_id = teachers.teacher_id WHERE detention.detention_type_code = 'AFTER' GROUP BY detention.teacher_id  ORDER BY count( *) DESC LIMIT 1    "
"SELECT sum( trip.duration), max( trip.duration) FROM trip WHERE trip.bike_id = 636       "
SELECT member.Name FROM member JOIN round ON member.Member_ID = round.Member_ID     ORDER BY round.Rank_in_Round ASC   
"SELECT student.Fname, student.LName FROM Student JOIN SportsInfo ON student.StuID = sports_info.StuID  GROUP BY sports_info.StuID  ORDER BY count( *) DESC LIMIT 1    "
"SELECT plays_games.GameID, sum( plays_games.Hours_Played) FROM Plays_Games  GROUP BY plays_games.GameID      "
"SELECT appellations.Area, appellations.County FROM appellations        "
"SELECT movie.title, movie.year FROM Movie JOIN Rating ON movie.mID = rating.mID    ORDER BY rating.stars DESC LIMIT 1    "
"SELECT editor.Name, editor.Age FROM editor        "
SELECT sum( entrepreneur.Money_Requested) FROM entrepreneur JOIN people ON entrepreneur.People_ID = people.People_ID WHERE people.Height > 1.85       
SELECT DISTINCT count(DISTINCT employee.City) FROM Employee        
SELECT wine.Appelation FROM wine WHERE wine.Year > 2008       EXCEPT SELECT appellations.Appelation FROM appellations WHERE appellations.Area = 'Central Coast'       
"SELECT nomination.Festival_ID, festival_detail.Festival_Name, count( *) FROM nomination JOIN festival_detail ON nomination.Festival_ID = festival_detail.Festival_ID  GROUP BY nomination.Festival_ID      "
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT DISTINCT count(DISTINCT business.name) FROM business JOIN category ON business.business_id = category.business_id WHERE business.city = '1' and category.category_name = '1' and category.category_name = '1'       
SELECT customers.Customer_Details FROM Customers JOIN Policies ON customers.Customer_ID = Policies.Customer_ID JOIN Claim_Headers ON Policies.Policy_ID = claim_headers.Policy_ID WHERE claim_headers.Amount_Claimed = (SELECT max( claim_headers.Amount_Claimed) FROM Claim_Headers        )       
SELECT sum( transactions.share_count) FROM Transactions        
SELECT services.Service_Type_Code FROM Services     ORDER BY services.Service_Type_Code ASC   
"SELECT club.name, player.Player_ID FROM club JOIN player ON club.Club_ID = player.Club_ID        "
"SELECT DISTINCT key_phrase.keyphraseName, paper.year FROM keyphrase JOIN paperKeyphrase ON key_phrase.keyphraseId = paperKeyphrase.keyphraseId JOIN paper ON paperKeyphrase.paperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'    ORDER BY paper.year DESC   "
SELECT reference_product_categories.unit_of_measure FROM Ref_Product_Categories JOIN Products ON reference_product_categories.product_category_code = products.product_category_code WHERE products.product_name = 'cumin'       
SELECT movie.title FROM movie JOIN keyword JOIN tags WHERE keyword.keyword = '1'       
"SELECT count( *), student.Major FROM Student  GROUP BY student.Major      "
SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name = '1'       
"SELECT avg( employee.salary), max( employee.salary) FROM employee        "
SELECT DISTINCT payments.payment_type_code FROM Payments        
SELECT movie.title FROM directed_by JOIN director ON T2.did = director.did JOIN movie WHERE director.name = 'Jim Jarmusch'   ORDER BY movie.release_year DESC LIMIT 1    
SELECT count( *) FROM venue        
SELECT student.StuID FROM Student WHERE student.Age > 20       
SELECT city.city_name FROM city WHERE city.population > 1       
"SELECT manufacturers.Name, max( manufacturers.Revenue), manufacturers.Headquarter FROM Manufacturers  GROUP BY manufacturers.Headquarter      "
"SELECT aircraft.Aircraft, aircraft.Description FROM aircraft JOIN airport_aircraft ON aircraft.Aircraft_ID = airport_aircraft.Aircraft_ID JOIN airport ON airport_aircraft.Airport_ID = airport.Airport_ID WHERE airport.Total_Passengers > 10000000       "
"SELECT min( employees.SALARY), employees.DEPARTMENT_ID FROM employees  GROUP BY employees.DEPARTMENT_ID      "
SELECT songs.Title FROM Songs JOIN Tracklists ON songs.SongId = Tracklists.SongId JOIN Albums ON Tracklists.AlbumId = albums.AId WHERE albums.Title = 'A Kiss Before You Go: Live in Hamburg'       
"SELECT count( *), accounts.customer_id FROM Accounts  GROUP BY accounts.customer_id      "
SELECT team.Name FROM team WHERE team.Team_id NOT IN (SELECT match_season.Team FROM match_season        )       
SELECT school.Location FROM school WHERE school.School_ID NOT IN (SELECT player.School_ID FROM player        )       
"SELECT airport.id, airport.Country, airport.City, airport.name FROM airport     ORDER BY airport.name ASC   "
SELECT customers.customer_id FROM Customers        EXCEPT SELECT accounts.customer_id FROM Accounts        
SELECT county_public_safety.Case_burden FROM county_public_safety     ORDER BY county_public_safety.Population DESC   
SELECT race.Class FROM race  GROUP BY race.Class HAVING count( *) >= 2     
SELECT avg( products.Price) FROM Products WHERE products.Manufacturer = 2       
SELECT count( *) FROM Customers    ORDER BY count( *) DESC LIMIT 1    
"SELECT maintenance_engineers.first_name, maintenance_engineers.last_name FROM Maintenance_Engineers WHERE maintenance_engineers.engineer_id NOT IN (SELECT engineer_visits.engineer_id FROM Engineer_Visits        )       "
SELECT highlow.highest_point FROM highlow WHERE highlow.highest_elevation = (SELECT max( highlow.highest_elevation) FROM highlow        )       
SELECT state.state_name FROM state WHERE state.state_name NOT IN (SELECT river.traverse FROM river        )       
SELECT phone.Hardware_Model_name FROM phone JOIN chip_model ON phone.chip_model = chip_model.Model_name WHERE chip_model.Launch_year = 2002   ORDER BY chip_model.RAM_MiB DESC LIMIT 1    
SELECT gymnast.Total_Points FROM gymnast     ORDER BY gymnast.Floor_Exercise_Points DESC   
"SELECT count( *), documents.Project_ID FROM Documents WHERE documents.Document_Type_Code = 'BK' GROUP BY documents.Project_ID      "
SELECT DISTINCT paper.paperId FROM paper JOIN venue ON paper.venueId = venue.venueId WHERE paper.year = 1 and venue.venueName = '1'       
SELECT count( city.city_name) FROM city        
SELECT count( *) FROM Customers        
"SELECT avg( exhibition.Ticket_Price), min( exhibition.Ticket_Price), max( exhibition.Ticket_Price) FROM exhibition WHERE exhibition.Year < 2009       "
SELECT department.DEPT_NAME FROM DEPARTMENT JOIN COURSE ON department.DEPT_CODE = course.DEPT_CODE JOIN CLASS ON course.CRS_CODE = T3.CRS_CODE  GROUP BY department.DEPT_NAME  ORDER BY sum( course.CRS_CREDIT) DESC LIMIT 1    
SELECT products_for_hire.product_description FROM Products_for_Hire JOIN Products_Booked ON products_for_hire.product_id = products_booked.product_id WHERE products_booked.booked_amount = 102.76       
SELECT teachers.last_name FROM Teachers        EXCEPT SELECT teachers.last_name FROM Teachers JOIN Detention ON teachers.teacher_id = T3.teacher_id        
"SELECT store.Type, count( *) FROM store  GROUP BY store.Type      "
SELECT state.population FROM state WHERE state.state_name = '1'       
"SELECT address.address, customer.email FROM address JOIN customer ON address.address_id = customer.address_id WHERE customer.first_name = 'LINDA'       "
SELECT count( city.state_name) FROM city WHERE city.city_name = '1'       
SELECT count( *) FROM Course WHERE course.Credits > 2       
SELECT avg( student.Age) FROM Student JOIN Member_of_club ON student.StuID = Member_of_club.StuID JOIN Club ON Member_of_club.ClubID = club.ClubID WHERE club.ClubName = 'Bootup Baltimore'       
SELECT DISTINCT fault_log_parts.fault_status FROM Fault_Log_Parts        
"SELECT rooms.roomName, rooms.basePrice FROM Rooms    ORDER BY rooms.basePrice ASC LIMIT 1    "
SELECT department.DEPT_NAME FROM DEPARTMENT JOIN PROFESSOR ON department.DEPT_CODE = professor.DEPT_CODE  GROUP BY department.DEPT_NAME  ORDER BY count( *) ASC LIMIT 1    
"SELECT station.lat, station.long, station.city FROM trip JOIN station    ORDER BY trip.duration ASC LIMIT 1    "
SELECT marketing_regions.Marketing_Region_Descriptrion FROM Marketing_Regions WHERE marketing_regions.Marketing_Region_Name = 'China'       
"SELECT DISTINCT count(DISTINCT publication.title), publication.year FROM publication JOIN journal ON publication.jid = journal.jid WHERE journal.name = 'PVLDB' GROUP BY publication.year      "
SELECT DISTINCT artist.artist_name FROM artist WHERE artist.country = 'Bangladesh'       EXCEPT SELECT DISTINCT song.artist_name FROM song WHERE song.rating > 7       
SELECT buildings.name FROM buildings WHERE buildings.id NOT IN (SELECT office_locations.building_id FROM Office_locations        )       
SELECT count( *) FROM Customers        
SELECT state.state_name FROM state WHERE state.population = (SELECT max( state.population) FROM state        )       
"SELECT claims.Claim_ID, claims.Date_Claim_Made, claims.Date_Claim_Settled FROM Claims JOIN Settlements ON claims.Claim_ID = T2.Claim_ID  GROUP BY T2.Claim_ID HAVING count( *) = 1     "
SELECT count( *) FROM dependent WHERE dependent.Sex = 'F'       
"SELECT book.Title, publication.Publication_Date FROM book JOIN publication ON book.Book_ID = publication.Book_ID        "
"SELECT employee.EMP_JOBCODE, count( *) FROM EMPLOYEE  GROUP BY employee.EMP_JOBCODE  ORDER BY count( *) DESC LIMIT 1    "
"SELECT team.name, team.team_id, max( salary.salary) FROM salary JOIN team  GROUP BY team.team_id      "
SELECT count( *) FROM school        
SELECT city.City FROM city    ORDER BY city.Regional_Population DESC LIMIT 1    
SELECT authors.lname FROM Authors WHERE authors.fname = 'Amal'       
SELECT vocals.Type FROM Vocals JOIN Band ON vocals.Bandmate = band.Id WHERE band.Firstname = 'Solveig' GROUP BY vocals.Type  ORDER BY count( *) DESC LIMIT 1    
SELECT count( *) FROM party_events        
SELECT DISTINCT paper.journalId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Takashi Matsumoto'       
SELECT aircraft.name FROM aircraft JOIN certificate ON aircraft.aid = certificate.aid WHERE aircraft.distance > 5000 GROUP BY aircraft.name   ORDER BY count( *) ASC   
SELECT sum( bank.no_of_customers) FROM bank WHERE bank.city = 'New York City'       
"SELECT station.local_authority, station.services FROM station        "
SELECT DISTINCT student.Fname FROM Student WHERE student.Fname like '%a%'       
"SELECT department.dept_name, department.building FROM department WHERE department.budget > (SELECT avg( department.budget) FROM department        )       "
"SELECT gas_station.Location, gas_station.Representative_Name FROM gas_station JOIN station_company ON gas_station.Station_ID = station_company.Station_ID JOIN company ON station_company.Company_ID = company.Company_ID    ORDER BY company.Assets_billion DESC LIMIT 1    "
"SELECT count( *), captain.Rank FROM captain WHERE captain.age < '50' GROUP BY captain.Rank      "
"SELECT employee.FirstName, employee.LastName FROM Employee JOIN Customer ON employee.EmployeeId = customer.SupportRepId WHERE customer.FirstName = 'Leonie'       "
SELECT student_course_registrations.course_id FROM Student_Course_Registrations WHERE student_course_registrations.student_id = 121      UNION SELECT student_course_attendance.course_id FROM Student_Course_Attendance WHERE student_course_attendance.student_id = 121        
SELECT products.product_type_code FROM Products  GROUP BY products.product_type_code HAVING avg( products.product_price) > (SELECT avg( products.product_price) FROM Products        )     
SELECT count( *) FROM Statements        
SELECT city.city_name FROM city WHERE city.population > 1 and city.state_name in (SELECT river.traverse FROM river WHERE river.length > 1 and river.river_name = '1'       )       
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
"SELECT museums.Museum_Details, tourist_attractions.Opening_Hours FROM Museums JOIN Tourist_Attractions ON museums.Museum_ID = tourist_attractions.Tourist_Attraction_ID        "
"SELECT sum( course.credits), course.dept_name FROM course  GROUP BY course.dept_name      "
"SELECT products.Product_Name, count( *) FROM Products JOIN Products_in_Events ON products.Product_ID = Products_in_Events.Product_ID JOIN Events ON Products_in_Events.Event_ID = events.Event_ID  GROUP BY products.Product_Name   ORDER BY count( *) DESC   "
SELECT DISTINCT college.Leader_Name FROM college JOIN member ON college.College_ID = member.College_ID WHERE member.Country = 'Canada'       
"SELECT accounts.customer_id, count( *) FROM Accounts  GROUP BY accounts.customer_id  ORDER BY count( *) DESC LIMIT 1    "
"SELECT department.dept_name, department.budget FROM department WHERE department.budget > (SELECT avg( department.budget) FROM department        )       "
SELECT border_info.border FROM border_info WHERE border_info.state_name in (SELECT river.traverse FROM river WHERE river.river_name = '1'       )       
SELECT count( *) FROM Student        
"SELECT stadium.Country, count( *) FROM stadium  GROUP BY stadium.Country      "
SELECT count( *) FROM Activity JOIN Faculty_Participates_in ON activity.actid = Faculty_Participates_in.actid JOIN Faculty ON Faculty_Participates_in.FacID = faculty.FacID WHERE faculty.Fname = 'Mark' and faculty.Lname = 'Giuliano'       
"SELECT flight.flno, flight.distance FROM flight    ORDER BY flight.price DESC LIMIT 1    "
"SELECT products.product_id, products.product_type_code FROM Products    ORDER BY products.product_price ASC LIMIT 1    "
SELECT claims_processing_stages.Claim_Status_Name FROM Claims_Processing_Stages JOIN Claims_Processing  GROUP BY claims_processing_stages.Claim_Status_Name  ORDER BY count( *) DESC LIMIT 1    
"SELECT user_profiles.name, user_profiles.email FROM user_profiles WHERE user_profiles.name like '%Swift%'       "
"SELECT circuits.circuitId, circuits.location FROM circuits WHERE circuits.country = 'France' or circuits.country = 'Belgium'       "
"SELECT avg( dorm.student_capacity), sum( dorm.student_capacity) FROM Dorm WHERE dorm.gender = '1'       "
SELECT DISTINCT writes.paperId FROM writes JOIN paper ON writes.paperId = paper.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'    ORDER BY paper.year DESC   
SELECT count( *) FROM all_star        
SELECT state.capital FROM state WHERE state.state_name = '1'       
SELECT product.product_name FROM Product JOIN Problems ON product.product_id = problems.product_id  GROUP BY product.product_name  ORDER BY count( *) DESC LIMIT 1    
SELECT trip.bike_id FROM trip WHERE trip.zip_code = 94002 GROUP BY trip.bike_id  ORDER BY count( *) DESC LIMIT 1    
SELECT count( *) FROM Inst        
SELECT subjects.subject_name FROM Subjects        
SELECT party_events.Event_Name FROM party_events  GROUP BY party_events.Event_Name HAVING count( *) > 2     
SELECT tourist_attractions.Name FROM Tourist_Attractions JOIN Visits ON tourist_attractions.Tourist_Attraction_ID = Visits.Tourist_Attraction_ID JOIN Visitors ON Visits.Tourist_ID = visitors.Tourist_ID WHERE visitors.Tourist_Details = 'Vincent'     INTERSECT SELECT tourist_attractions.Name FROM Tourist_Attractions JOIN Visits ON tourist_attractions.Tourist_Attraction_ID = Visits.Tourist_Attraction_ID JOIN Visitors ON Visits.Tourist_ID = visitors.Tourist_ID WHERE visitors.Tourist_Details = 'Marcelle'         
SELECT actor.birth_year FROM actor WHERE actor.name = 'Benedict Cumberbatch'       
SELECT publication.title FROM publication JOIN journal ON publication.jid = journal.jid WHERE journal.name = 'PVLDB'   ORDER BY publication.citation_num DESC LIMIT 1    
"SELECT customers.customer_name, customers.customer_phone, customers.customer_email FROM Customers     ORDER BY customers.date_became_customer ASC   "
SELECT addresses.country FROM Addresses JOIN Customers ON addresses.address_id = customers.customer_address_id WHERE customers.first_name = 'Carole' and customers.last_name = 'Bernhard'       
SELECT movie.title FROM Movie WHERE movie.director = 'James Cameron' or movie.year < 1980       
SELECT performance.Date FROM performance    ORDER BY performance.Attendance DESC LIMIT 1    
SELECT submission.College FROM submission  GROUP BY submission.College  ORDER BY count( *) DESC LIMIT 1    
SELECT county.County_name FROM county     ORDER BY county.Population ASC   
SELECT rooms.roomName FROM Rooms WHERE rooms.basePrice < 1 and rooms.beds = 1 and rooms.decor = '1'       
SELECT party.Party_name FROM party WHERE party.Party_ID NOT IN (SELECT member.Party_ID FROM member        )       
"SELECT ship.Type, count( *) FROM ship  GROUP BY ship.Type      "
SELECT ship.Nationality FROM ship  GROUP BY ship.Nationality HAVING count( *) > 2     
SELECT head.born_state FROM head  GROUP BY head.born_state HAVING count( *) >= 3     
"SELECT farm_competition.Year, city.Official_Name FROM farm_competition JOIN city ON farm_competition.Host_city_ID = city.City_ID        "
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paper JOIN paperKeyphrase ON paper.paperId = paperKeyphrase.paperId JOIN keyphrase ON paperKeyphrase.keyphraseId = key_phrase.keyphraseId JOIN venue ON paper.venueId = venue.venueId WHERE key_phrase.keyphraseName = '1' and paper.year = 1 and venue.venueName = '1'       
SELECT checking.balance FROM CHECKING     ORDER BY checking.balance ASC   
"SELECT band.Firstname, band.Lastname FROM Band JOIN Performance ON band.Id = performance.Bandmate JOIN Songs ON performance.SongId = songs.SongId WHERE songs.Title = '1' and performance.StagePosition = '1'       "
"SELECT school.Denomination, count( *) FROM school  GROUP BY school.Denomination      "
"SELECT avg( journalist.Age), avg( journalist.Years_working), news_report.Work_Type FROM journalist JOIN news_report ON journalist.journalist_ID = news_report.journalist_ID  GROUP BY news_report.Work_Type      "
SELECT player.Residence FROM player WHERE player.Gender = 'M'     INTERSECT SELECT player.Residence FROM player WHERE player.Gender = 'F'         
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId JOIN venue ON paper.venueId = venue.venueId WHERE author.authorName = '1' and paper.year = 1 and venue.venueName = '1'       
SELECT DISTINCT apartment_buildings.building_description FROM Apartment_Buildings        
SELECT aircraft.name FROM aircraft JOIN certificate ON aircraft.aid = certificate.aid  GROUP BY aircraft.name  ORDER BY count( *) DESC LIMIT 1    
"SELECT DISTINCT count(DISTINCT paper.paperId), paper.year FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1' GROUP BY paper.year   ORDER BY paper.year ASC   "
SELECT count( *) FROM Apartment_Bookings        
SELECT host.Nationality FROM host WHERE host.Age > '45'     INTERSECT SELECT host.Nationality FROM host WHERE host.Age < '35'         
SELECT DISTINCT paper.venueId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Daniella Coelho'       
SELECT sum( tip.likes) FROM tip JOIN business ON tip.business_id = business.business_id JOIN review ON business.business_id = review.business_id JOIN user ON review.user_id = user.user_id WHERE business.name = 'Cafe Zinho' and user.name = 'Niloofar'       
SELECT DISTINCT flight.Pilot FROM flight JOIN airport ON flight.airport_id = airport.id WHERE airport.Country = 'United States' or airport.name = 'Billund Airport'       
SELECT DISTINCT paper.title FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = '1'       
SELECT competition.Country FROM competition WHERE competition.Competition_type = '1'     INTERSECT SELECT competition.Country FROM competition WHERE competition.Competition_type = '1'         
SELECT bank.state FROM bank  GROUP BY bank.state  ORDER BY sum( bank.no_of_customers) DESC LIMIT 1    
SELECT director.name FROM director JOIN directed_by ON director.did = T3.did JOIN movie WHERE movie.title = 'James Bond'       
SELECT count( *) FROM Products WHERE products.Price >= 180       
"SELECT school.County, count( *), sum( school.Enrollment) FROM School  GROUP BY school.County      "
SELECT count( *) FROM Student JOIN Has_Allergy ON student.StuID = has_allergy.StuID WHERE has_allergy.Allergy = '1'       
SELECT tracks.unit_price FROM tracks WHERE tracks.name = 'Fast As a Shark'       
SELECT submission.College FROM submission WHERE submission.Scores > 90     INTERSECT SELECT submission.College FROM submission WHERE submission.Scores < 80         
"SELECT products.product_type_code, avg( products.product_price) FROM Products  GROUP BY products.product_type_code      "
SELECT count( *) FROM home_game JOIN park ON home_game.park_id = park.park_id WHERE home_game.year = 1907 and park.park_name = 'Columbia Park'       
"SELECT count( *), fault_log.fault_log_entry_id FROM Engineer_Visits JOIN Fault_Log ON engineer_visits.fault_log_entry_id = fault_log.fault_log_entry_id  GROUP BY fault_log.fault_log_entry_id  ORDER BY count( *) DESC LIMIT 1    "
"SELECT photos.id, photos.color, photos.name FROM photos        "
SELECT border_info.border FROM border_info WHERE border_info.state_name = '1'       
SELECT transactions.transaction_type_code FROM Transactions  GROUP BY transactions.transaction_type_code  ORDER BY count( *) DESC LIMIT 1    
SELECT available_policies.Customer_Phone FROM Available_Policies WHERE available_policies.policy_type_code = 'Life Insurance'       
SELECT reference_shipping_agents.shipping_agent_code FROM Ref_Shipping_Agents WHERE reference_shipping_agents.shipping_agent_name = 'UPS'       
SELECT count( *) FROM author        
SELECT sports_info.SportName FROM SportsInfo JOIN Student ON sports_info.StuID = student.StuID WHERE sports_info.OnScholarship = '1' GROUP BY sports_info.SportName  ORDER BY count( *) DESC LIMIT 1    
SELECT customers.customer_name FROM Customers JOIN Customer_Orders ON customers.customer_id = Customer_Orders.customer_id JOIN Order_Items ON Customer_Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = products.product_id WHERE products.product_details = 'Latte'     INTERSECT SELECT customers.customer_name FROM Customers JOIN Customer_Orders ON customers.customer_id = Customer_Orders.customer_id JOIN Order_Items ON Customer_Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = products.product_id WHERE products.product_details = 'Americano'         
SELECT program.Name FROM program     ORDER BY program.Launch ASC   
SELECT student.name FROM student WHERE student.ID in (SELECT takes_classes.ID FROM takes WHERE takes_classes.semester = 'Fall' and takes_classes.year = 2003       )       
SELECT count( *) FROM Employees        
"SELECT people.Name, count( *) FROM people JOIN debate_people ON people.People_ID = debate_people.Negative  GROUP BY people.Name      "
SELECT player.Team FROM player    ORDER BY player.Age DESC LIMIT 1    
SELECT faculty.Building FROM Faculty WHERE faculty.Rank = 'Professor' GROUP BY faculty.Building HAVING count( *) >= 10     
SELECT orders.order_id FROM Orders JOIN Order_Items ON orders.order_id = T2.order_id  GROUP BY orders.order_id  ORDER BY count( *) DESC LIMIT 1    
SELECT customer_orders.Order_Date FROM Customer_Orders JOIN Order_Items ON customer_orders.Order_ID = Order_Items.Order_ID JOIN Products ON Order_Items.Product_ID = products.Product_ID WHERE products.Product_Price > 1000       
SELECT people.Name FROM people JOIN gymnast ON people.People_ID = T2.Gymnast_ID     ORDER BY people.Height ASC   
"SELECT train.Name, train.Time, train.Service FROM train        "
"SELECT max( grade_conversion.gradepoint), min( grade_conversion.gradepoint) FROM Gradeconversion JOIN Enrolled_in ON grade_conversion.lettergrade = Enrolled_in.Grade JOIN Student ON Enrolled_in.StuID = student.StuID WHERE student.city_code = 'NYC'       "
SELECT club.name FROM club WHERE club.Club_ID NOT IN (SELECT player.Club_ID FROM player        )       
SELECT count( *) FROM Tryout WHERE tryout.decision = 'yes'       
"SELECT music_festival.Date_of_ceremony, music_festival.Result FROM music_festival        "
"SELECT artist.artist_name, count( *) FROM artist JOIN song ON artist.artist_name = song.artist_name WHERE song.languages = 'english' GROUP BY artist.artist_name HAVING count( *) >= 1     "
SELECT document_types.document_type_code FROM Document_Types WHERE document_types.document_description like '%Initial%'       
SELECT instructor.dept_name FROM instructor WHERE instructor.name like '%Soisalon%'       
SELECT DISTINCT count(DISTINCT cite.citedPaperId) FROM cite JOIN paper ON cite.citingPaperId = paper.paperId JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Mirella Lapata'       
"SELECT basketball_match.All_Games, university.Location FROM basketball_match JOIN university ON basketball_match.School_ID = university.School_ID WHERE basketball_match.Team_Name = 'Clemson'       "
SELECT DISTINCT writes.authorId FROM writes JOIN paper ON writes.paperId = paper.paperId JOIN venue ON paper.venueId = venue.venueId WHERE venue.venueName = 'NIPS'       
SELECT DISTINCT count(DISTINCT business.name) FROM business JOIN review ON business.business_id = review.business_id JOIN user ON review.user_id = user.user_id WHERE business.city = 'San Diego' and review.year = 2010 and user.name = 'Christine'       
SELECT DISTINCT employees.DEPARTMENT_ID FROM employees  GROUP BY employees.DEPARTMENT_ID HAVING count( employees.EMPLOYEE_ID) >= 4     
"SELECT enzyme.id, enzyme.name FROM enzyme JOIN medicine_enzyme_interaction ON enzyme.id = medicine_enzyme_interaction.enzyme_id WHERE medicine_enzyme_interaction.interaction_type = 'activitor' GROUP BY medicine_enzyme_interaction.enzyme_id  ORDER BY count( *) DESC LIMIT 1    "
SELECT body_builder.Total FROM body_builder JOIN people ON body_builder.People_ID = people.People_ID WHERE people.Birth_Date like '%January%'       
"SELECT DISTINCT count(DISTINCT publication.title), publication.year FROM publication JOIN conference ON publication.cid = conference.cid WHERE conference.name = 'VLDB' GROUP BY publication.year      "
SELECT person.name FROM Person WHERE person.age < 30       
SELECT all_documents.Date_Stored FROM All_Documents WHERE all_documents.Document_Name = 'Marry CV'       
SELECT reference_document_types.Document_Type_Description FROM Ref_Document_Types WHERE reference_document_types.Document_Type_Name = 'Film'       
SELECT staff.first_name FROM Staff JOIN Complaints ON staff.staff_id = complaints.staff_id  GROUP BY staff.first_name  ORDER BY count( *) ASC LIMIT 1    
SELECT count( *) FROM stadium WHERE stadium.Country != 'Russia'       
SELECT member.Member_Name FROM member JOIN party_events ON member.Member_ID = party_events.Member_in_charge_ID  GROUP BY member.Member_Name  ORDER BY count( *) DESC LIMIT 1    
"SELECT max( mountain.Height), avg( mountain.Height) FROM mountain        "
SELECT user_profiles.name FROM user_profiles JOIN tweets ON user_profiles.uid = T2.uid  GROUP BY user_profiles.name HAVING count( *) > 1     
SELECT river.river_name FROM river WHERE river.length = (SELECT max( river.length) FROM river        )       
"SELECT phone.Memory_in_G, phone.Carrier FROM phone        "
"SELECT city.Official_Name, city.Status FROM city    ORDER BY city.Population DESC LIMIT 1    "
SELECT addresses.state_province_county FROM Addresses WHERE addresses.line_1_number_building like '%6862 Kaitlyn Knolls%'       
SELECT river.river_name FROM river WHERE river.traverse = '1'       
"SELECT endowment.donator_name, sum( endowment.amount) FROM endowment  GROUP BY endowment.donator_name   ORDER BY sum( endowment.amount) DESC   "
"SELECT catalog_structure.catalog_level_name, catalog_structure.catalog_level_number FROM Catalog_Structure WHERE catalog_structure.catalog_level_number between 5 AND 10       "
SELECT DISTINCT student.LName FROM Student JOIN Voting_record ON student.StuID = T2.Class_Senator_Vote        EXCEPT SELECT DISTINCT student.LName FROM Student WHERE student.Advisor = 2192       
"SELECT DISTINCT student.Fname, student.LName FROM Student JOIN Voting_record ON student.StuID = T2.Class_Senator_Vote WHERE student.Sex = 'F'       "
SELECT author.name FROM author JOIN writes ON author.aid = writes.aid JOIN publication ON writes.pid = publication.pid JOIN journal ON publication.jid = journal.jid WHERE journal.name = 'PVLDB'       
SELECT count( *) FROM enzyme        
SELECT DISTINCT paper.paperId FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId JOIN venue ON paper.venueId = venue.venueId WHERE author.authorName = '1' and venue.venueName = '1'       
SELECT movie.director FROM Movie  GROUP BY movie.director HAVING count( *) = 1     
"SELECT documents.grant_id, count( *) FROM Documents  GROUP BY documents.grant_id  ORDER BY count( *) DESC LIMIT 1    "
SELECT player.pName FROM Player JOIN Tryout ON player.pID = tryout.pID WHERE tryout.decision = 'yes' and tryout.pPos = 'striker'       
"SELECT track.Name, track.Location, track.Year_Opened FROM track WHERE track.Seating > (SELECT avg( track.Seating) FROM track        )       "
SELECT county_public_safety.Name FROM county_public_safety WHERE county_public_safety.County_ID NOT IN (SELECT city.County_ID FROM city        )       
"SELECT customers.customer_name, customers.customer_address FROM Customers JOIN Customer_Orders ON customers.customer_id = customer_orders.customer_id WHERE customer_orders.order_status_code = 'New'     INTERSECT SELECT customers.customer_name, customers.customer_address FROM Customers JOIN Customer_Orders ON customers.customer_id = customer_orders.customer_id WHERE customer_orders.order_status_code = 'Pending'         "
SELECT count( *) FROM company WHERE company.Headquarters = 'USA'       
SELECT DISTINCT count(DISTINCT person_friend.name) FROM PersonFriend WHERE person_friend.friend NOT IN (SELECT person.name FROM Person WHERE person.city = 'Austin'       )       
SELECT count( *) FROM swimmer        
"SELECT section.building, section.room_number, section.semester, section.year FROM section JOIN course ON section.course_id = course.course_id WHERE course.dept_name = 'Psychology'    ORDER BY course.title ASC   "
SELECT border_info.border FROM border_info WHERE border_info.state_name = '1'       
SELECT count( *) FROM author        
SELECT count( *) FROM artist WHERE artist.country = 'Bangladesh'       
"SELECT settlements.Date_Claim_Made, settlements.Date_Claim_Settled FROM Settlements        "
SELECT people.Weight FROM people JOIN body_builder ON people.People_ID = body_builder.People_ID WHERE body_builder.Snatch > 140 or people.Height > 200       
SELECT products.Product_Type_Code FROM Products  GROUP BY products.Product_Type_Code  ORDER BY count( *) DESC LIMIT 1    
SELECT count( *) FROM circuits        
"SELECT avg( products.Price), manufacturers.Name FROM Products JOIN Manufacturers ON products.Manufacturer = manufacturers.Code  GROUP BY manufacturers.Name      "
SELECT DISTINCT count(DISTINCT tip.text) FROM tip JOIN user ON tip.user_id = user.user_id WHERE user.name = 'Michelle'       
SELECT captain.Rank FROM captain        EXCEPT SELECT captain.Rank FROM captain WHERE captain.Class = '1'       
SELECT state.state_name FROM state WHERE state.area = (SELECT min( state.area) FROM state        )       
SELECT count( *) FROM Physician        
"SELECT apartments.apt_type_code, count( *) FROM Apartments  GROUP BY apartments.apt_type_code   ORDER BY count( *) ASC   "
SELECT state.state_name FROM state WHERE state.population = (SELECT min( state.population) FROM state        )       
"SELECT highlow.highest_point, highlow.state_name FROM highlow WHERE highlow.lowest_elevation = '1'       "
SELECT highlow.highest_point FROM highlow WHERE highlow.state_name in (SELECT border_info.border FROM border_info WHERE border_info.state_name = '1'       )   ORDER BY highlow.highest_elevation DESC LIMIT 1    
SELECT DISTINCT paper.year FROM paper JOIN writes ON paper.paperId = writes.paperId JOIN author ON writes.authorId = author.authorId WHERE author.authorName = 'Pedro Domingos'       
SELECT products.Product_Name FROM Products    ORDER BY products.Product_Price DESC LIMIT 1    
SELECT avg( person.age) FROM Person        
SELECT people.Name FROM people WHERE people.Height > 200 or people.Height < 190       
SELECT count( *) FROM Student WHERE student.city_code = 'HKG' or student.city_code = 'CHI'       
"SELECT student.Fname, student.LName FROM Student JOIN Participates_in ON student.StuID = T3.stuid JOIN Activity ON T3.actid = activity.actid  GROUP BY T3.stuid  ORDER BY count( *) DESC LIMIT 1    "
"SELECT customers.email, customers.phone FROM customers WHERE customers.first_name = 'Astrid' and customers.last_name = 'Gruber'       "
SELECT savings.balance FROM SAVINGS JOIN ACCOUNTS ON savings.custid = accounts.custid WHERE accounts.name in (SELECT accounts.name FROM ACCOUNTS JOIN SAVINGS ON accounts.custid = savings.custid WHERE savings.balance > (SELECT avg( savings.balance) FROM SAVINGS        )       )       
"SELECT customers.first_name, customers.last_name FROM Customers JOIN Customer_Payments ON customers.customer_id = T2.customer_id  GROUP BY T2.customer_id HAVING count( *) > 2     "
"SELECT track.Name, count( *) FROM track JOIN race ON track.Track_ID = race.Track_ID  GROUP BY track.Name      "
SELECT tourist_attractions.Name FROM Tourist_Attractions JOIN Locations ON tourist_attractions.Location_ID = locations.Location_ID WHERE locations.Address = '254 Ottilie Junction' or tourist_attractions.How_to_Get_There = 'bus'       
SELECT count( *) FROM Student JOIN Has_Allergy ON student.StuID = has_allergy.StuID WHERE student.Sex = '1' and has_allergy.Allergy = '1' or has_allergy.Allergy = '1'       
SELECT bank.bname FROM bank WHERE bank.state = 'New York'       
SELECT bank.bname FROM bank JOIN customer ON bank.branch_ID = customer.branch_ID JOIN loan ON bank.branch_ID = T3.branch_ID WHERE customer.credit_score < 100       
SELECT tracks.name FROM tracks JOIN genres ON tracks.genre_id = genres.id JOIN media_types ON tracks.media_type_id = media_types.id WHERE genres.name = '1' or media_types.name = '1'       
SELECT DISTINCT count(DISTINCT certificate.eid) FROM certificate        
"SELECT location.HOUSE_NUMBER, restaurant.NAME FROM LOCATION JOIN GEOGRAPHIC ON location.CITY_NAME = GEOGRAPHIC.CITY_NAME JOIN RESTAURANT ON GEOGRAPHIC.CITY_NAME = restaurant.CITY_NAME WHERE location.CITY_NAME = '1' and location.STREET_NAME = '1' and restaurant.FOOD_TYPE = '1' and restaurant.RATING > 1       "
SELECT artist.Name FROM artist WHERE artist.Artist_ID NOT IN (SELECT exhibition.Artist_ID FROM exhibition        )       
SELECT player.pName FROM Player JOIN Tryout ON player.pID = T2.pID     ORDER BY player.pName ASC   
"SELECT track.Name, track.Location, track.Year_Opened FROM track WHERE track.Seating > (SELECT avg( track.Seating) FROM track        )       "
SELECT circuits.name FROM circuits WHERE circuits.country = 'UK' or circuits.country = 'Malaysia'       
SELECT employee.name FROM employee JOIN certificate ON employee.eid = certificate.eid JOIN aircraft ON certificate.aid = aircraft.aid WHERE aircraft.name = 'Boeing 737-800'       
SELECT highlow.lowest_point FROM highlow WHERE highlow.lowest_elevation = (SELECT min( highlow.lowest_elevation) FROM highlow        )       
SELECT film.Studio FROM film        EXCEPT SELECT film.Studio FROM film WHERE film.Director = 'Walter Hill'       
SELECT branch.Name FROM branch    ORDER BY branch.membership_amount DESC LIMIT 1    
"SELECT DISTINCT drivers.driverId, drivers.nationality FROM drivers JOIN lapTimes ON drivers.driverId = lap_times.driverId WHERE lap_times.milliseconds > 100000       "
SELECT * FROM employees WHERE employees.SALARY between 8000 AND 12000 and employees.COMMISSION_PCT != null or employees.DEPARTMENT_ID != 40       
SELECT rating.rID FROM Rating WHERE rating.stars != 4       
SELECT * FROM airport    ORDER BY airport.International_Passengers DESC LIMIT 1    
SELECT basketball_match.Team_Name FROM basketball_match JOIN university ON basketball_match.School_ID = university.School_ID WHERE university.Enrollment < (SELECT avg( university.Enrollment) FROM university        )       
SELECT match.Match_ID FROM match WHERE match.Competition = '1994 FIFA World Cup qualification'       
SELECT count( *) FROM club JOIN club_rank ON club.Club_ID = club_rank.Club_ID WHERE club_rank.Total < 10       
SELECT track.Year_Opened FROM track WHERE track.Seating between 4000 AND 5000       
"SELECT airports.name, airports.city, airports.country FROM airports    ORDER BY airports.elevation DESC LIMIT 1    "
"SELECT player.name_first, player.name_last, player.player_id FROM player JOIN player_award ON player.player_id = player_award.player_id  GROUP BY player_award.player_id  ORDER BY count( *) DESC LIMIT 1    "
SELECT documents.sent_date FROM Documents JOIN Grants ON documents.grant_id = grants.grant_id JOIN Organisations ON grants.organisation_id = Organisations.organisation_id JOIN Organisation_Types ON Organisations.organisation_type = organisation_types.organisation_type WHERE grants.grant_amount > 5000 and organisation_types.organisation_type_description = 'Research'       
SELECT * FROM employees WHERE employees.SALARY between (SELECT min( employees.SALARY) FROM employees        )       
SELECT staff.Name FROM Staff JOIN Tourist_Attractions ON staff.Tourist_Attraction_ID = tourist_attractions.Tourist_Attraction_ID WHERE tourist_attractions.Name = 'US museum'       
SELECT max( results.fastestLapSpeed) FROM results JOIN races ON results.raceId = races.raceId WHERE races.year = 2008 and races.name = 'Monaco Grand Prix'       
"SELECT employees.FIRST_NAME, employees.LAST_NAME, employees.SALARY FROM employees WHERE employees.COMMISSION_PCT = 1       "
SELECT customer_contact_channels.channel_code FROM Customer_Contact_Channels  GROUP BY customer_contact_channels.channel_code HAVING count( customer_contact_channels.customer_id) < 5     
SELECT count( river.river_name) FROM river WHERE river.traverse = '1'       
"SELECT avg( financial_transactions.transaction_amount), min( financial_transactions.transaction_amount), max( financial_transactions.transaction_amount), sum( financial_transactions.transaction_amount) FROM Financial_Transactions        "
"SELECT rooms.roomName, rooms.bedType FROM Rooms WHERE rooms.decor = '1'       "
SELECT sum( budget.Budgeted) FROM budget JOIN School ON budget.School_id = school.School_id WHERE school.School_name = 'Glenn'       
"SELECT max( airport.Transit_Passengers), min( airport.Transit_Passengers) FROM airport        "
SELECT staff.date_joined_staff FROM Staff WHERE staff.first_name = 'Janessa' and staff.last_name = 'Sawayn'       
SELECT count( *) FROM EMPLOYEE        
SELECT count( *) FROM company        
"SELECT instructor.name, instructor.salary FROM instructor WHERE instructor.salary < (SELECT avg( instructor.salary) FROM instructor WHERE instructor.dept_name = 'Physics'       )       "
SELECT DISTINCT count(DISTINCT paper.paperId) FROM paperDataset JOIN dataset JOIN paper WHERE dataset.datasetName like '%ImageNet%'       
SELECT highlow.highest_point FROM highlow WHERE highlow.highest_elevation = (SELECT max( highlow.highest_elevation) FROM highlow        )       
SELECT city.city_name FROM city WHERE city.population = (SELECT min( city.population) FROM city        )       
"SELECT staff.staff_name, staff_department_assignments.job_title_code FROM Staff JOIN Staff_Department_Assignments ON staff.staff_id = staff_department_assignments.staff_id    ORDER BY staff_department_assignments.date_assigned_to DESC LIMIT 1    "
SELECT teachers.FirstName FROM teachers WHERE teachers.Classroom = 110       
"SELECT manufacturer.Open_Year, manufacturer.Name FROM manufacturer    ORDER BY manufacturer.Num_of_Shops DESC LIMIT 1    "
SELECT count( *) FROM event        
SELECT authors.fname FROM Authors WHERE authors.lname = 'Ueno'       
"SELECT ship.Name, ship.Flag FROM Ship WHERE ship.Ship_ID NOT IN (SELECT captain.Ship_ID FROM captain WHERE captain.Rank = 'Midshipman'       )       "
SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name = '1'       
SELECT match_season.Player FROM match_season JOIN country ON match_season.Country = country.Country_id WHERE country.Country_name = 'Indonesia'       
SELECT city.Name FROM city WHERE city.County_ID in (SELECT county_public_safety.County_ID FROM county_public_safety WHERE county_public_safety.Crime_rate < 100       )       
SELECT county.Zip_code FROM county WHERE county.County_name = 'Howard'       
SELECT count( border_info.border) FROM border_info WHERE border_info.state_name = '1'       
"SELECT invoices.billing_state, count( *) FROM invoices WHERE invoices.billing_country = 'USA' GROUP BY invoices.billing_state  ORDER BY count( *) DESC LIMIT 1    "
SELECT publication.title FROM publication JOIN writes ON publication.pid = writes.pid JOIN author ON writes.aid = author.aid JOIN domain_author ON author.aid = domain_author.aid JOIN domain ON domain_author.did = domain.did JOIN domain_keyword ON domain.did = domain_keyword.did JOIN keyword ON domain_keyword.kid = keyword.kid WHERE author.name = '1' and keyword.keyword = '1'       
SELECT DISTINCT count(DISTINCT products.Name) FROM Products WHERE products.Name NOT IN (SELECT products.Name FROM Products JOIN Manufacturers ON products.Manufacturer = manufacturers.Code WHERE manufacturers.Name = 'Sony'       )       
SELECT phone.Carrier FROM phone    ORDER BY phone.Price DESC LIMIT 1    
SELECT faculty.Lname FROM Faculty JOIN Faculty_Participates_in ON faculty.FacID = Faculty_Participates_in.FacID JOIN Activity ON Faculty_Participates_in.actid = activity.actid WHERE activity.activity_name = 'Canoeing'     INTERSECT SELECT faculty.Lname FROM Faculty JOIN Faculty_Participates_in ON faculty.FacID = Faculty_Participates_in.FacID JOIN Activity ON Faculty_Participates_in.actid = activity.actid WHERE activity.activity_name = 'Kayaking'         
SELECT keyword.keyword FROM keyword JOIN publication_keyword ON keyword.kid = publication_keyword.kid JOIN publication ON publication_keyword.pid = publication.pid JOIN journal ON publication.jid = journal.jid WHERE journal.name = 'PVLDB' GROUP BY keyword.keyword HAVING count( publication.title) > '100'     
SELECT count( *) FROM all_star        
"SELECT airlines.country, count( *) FROM airlines  GROUP BY airlines.country   ORDER BY count( *) DESC   "
SELECT person_friend.friend FROM PersonFriend JOIN Person ON person_friend.friend = person.name WHERE person.name = 'Bob'       
SELECT DISTINCT artist.Country FROM artist        
SELECT count( *) FROM Staff        
"SELECT avg( event.Event_Attendance), max( event.Event_Attendance) FROM event        "
SELECT playlists.name FROM playlists JOIN playlist_tracks ON playlists.id = T2.playlist_id  GROUP BY playlists.name HAVING count( T2.track_id) > 100     
"SELECT projects.Name, scientists.Name FROM Projects JOIN AssignedTo ON projects.Code = AssignedTo.Project JOIN Scientists ON AssignedTo.Scientist = scientists.SSN WHERE projects.Hours = (SELECT min( projects.Hours) FROM Projects        )       "
